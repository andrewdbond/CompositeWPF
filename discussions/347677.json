[
  {
    "Id": "806923",
    "ThreadId": "347677",
    "Html": "\r\n<p>I'm curious if there's any special guidance regarding setting the initial control focus when using Prism. The reason I'm asking, of course, is that I've got some initial focus behavior that can best be described as &quot;mildly psychotic&quot; and I'm digging in to\r\n what I've done wrong.</p>\r\n<p>For example, let's assume I have a shell with two regions and each of those regions has a single UserControl. Each UserControl has a single TextBox. Like this:</p>\r\n<ul>\r\n<li>Shell\r\n<ul>\r\n<li>Region A\r\n<ul>\r\n<li>UserControlFoo\r\n<ul>\r\n<li>TextBox </li></ul>\r\n</li></ul>\r\n</li><li>Region B\r\n<ul>\r\n<li>UserControlBar\r\n<ul>\r\n<li>TextBox </li></ul>\r\n</li></ul>\r\n</li></ul>\r\n</li></ul>\r\n<p>What do I have to do to ensure that the TextBox in UserControlBar has focus when the shell is loaded? What if I remove UserControlBar from the region and add it back? Do I have to do something special to ensure that it gets focus (or doesn't)? What if I\r\n removed UserControlFoo from Region A and replaced it with UserControlBen? How would I specify where I wanted focus?</p>\r\n<p>Thanks!</p>\r\n<p>Greg</p>\r\n",
    "PostedDate": "2012-03-07T08:28:38.207-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "807118",
    "ThreadId": "347677",
    "Html": "<p>Hi Greg,</p>\n<p>As far as I know there is no guidance on this topic in Prism out-of-the-box.</p>\n<p>I believe, a possible approach could be to give focus in the <strong>Loaded </strong> event in the <strong>UserControl </strong>of the element you want to get the focus. This way, if you have many <strong>UserControls</strong>, the last one loaded will be the one that receives the focus. However this approach might not be suitable for all scenarios as it won't give you much control. An example of this could be like the following code snippet:</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> UserControlA()\n        {\n            InitializeComponent();\n            <span style=\"color: blue;\">this</span>.Loaded += <span style=\"color: blue;\">new</span> RoutedEventHandler(UserControlA_Loaded);\n        }\n\n        <span style=\"color: blue;\">void</span> UserControlA_Loaded(<span style=\"color: blue;\">object</span> sender, RoutedEventArgs e)\n        {\n            <span style=\"color: blue;\">this</span>.MyFocusableElement.Focus();\n        }\n</pre>\n</div>\n<p>Also, I believe you might the following threads interesting, where similar discussions are addressed:</p>\n<ul>\n<li><a href=\"http://social.msdn.microsoft.com/Forums/en/wpf/thread/8ceb3994-16db-467a-a86f-080582aa75ec\">PRISM, WPF, Focus, Automatism</a> </li>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/232618\">Recognize active view</a> </li>\n</ul>\n<p>Regards,</p>\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-03-07T12:41:38.707-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "816080",
    "ThreadId": "347677",
    "Html": "<p>Agustin,</p>\r\n<p>Thanks for the pointers. In the end, I used the technique described in your first link and it works like a champ!</p>\r\n<p>For those that may be using the Telerik WPF control suite's RadBusyIndicator (or similar), I also had to implement an attached behavior that would restore focus after the indicator \"stole\" focus when it displayed. The combination of the two behaviors fixed my solution right up.</p>\r\n<p>-Greg</p>",
    "PostedDate": "2012-03-27T06:50:37.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]