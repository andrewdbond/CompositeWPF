[
  {
    "Id": "139562",
    "ThreadId": "42025",
    "Html": "I'm hoping somebody can give me some guidance on consuming ADO.NET Data Services within a Prism application. Specifically, I'm building a Silverlight app using the framework.<br>\r\n<br>\r\nMy plan is to create a Service item in my module that will act as a wrapper for the calls to ADO.NET Data Services via LINQ queries. To illustrate, it would be like implementing a more realistic version of the GetPriceHistory() method in the MarketHistoryService in the StockTraderRI application, in which the method would actually call through to the database via ADO.NET Data Services.<br>\r\n<br>\r\nNow, my questions arise when I consider the fact that the call to the data service will be executed asynchronously, probably using the BeginExecute() method of a DataServiceQuery object - the typical pattern used for Silverlight-to-DataServices. Assuming I'm doing things right up to this point, how do I setup my interaction between my UI/presenter and the GetPriceHistory method to deal with the new asynchronous nature of the query? <br>\r\n<br>\r\nShould I change my GetPriceHistory method to accept a callback method?<br>\r\n<br>\r\nMaybe add an event that fires-off when the query is complete?<br>\r\n<br>\r\nOr should I handle the async stuff internally and force GetPriceHistory to mimic a blocking method while it &quot;polls&quot; for the query to finish and return?<br>\r\n<br>\r\nSurely somebody has already come up with a &quot;best practice&quot; for this, seemingly typical, scenario.\r\n",
    "PostedDate": "2008-12-10T21:36:17.977-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]