[
  {
    "Id": "482295",
    "ThreadId": "224100",
    "Html": "<table>\r\n<tbody>\r\n<tr>\r\n<td width=600>\r\n<p>Just started working on Prism recently. I really like what I see but am finding some simple things to be difficult, among them this...</p>\r\n<p>I started a Prism project, the first thing in the 1st project was the Shell and Bootstrapper. Was able to get it up and running with Views etc. So now I want to modularize by putting <em>each new module in it's own project</em>. Not a problem, was able to do that and to get the Bootstrapper to add to catalog and the &quot;other projects&quot; to load up in shell.\r\n<p><em>My problem is this</em>, how do I create a navigator project which knows about all the other projects and can push Views into shell?</p>\r\n<p>In the CompositeUI samples there is a push example, I've learned from that, that the Navigator Project (Module) must have a way to accept the IUnityContainer as well as the IRegion manager in the default IModule for the Navigator project. Here's the flow:</p>\r\n<h2>Prism Flow for Navigator Project</h2>\r\n<h3>Bootstrapper</h3>\r\n<p>BootStrapper places the Navigator in moduleCatalog...\r\n<pre>moduleCatalog.AddModule(typeof(SITReporterNavigationModule.NavigationModule));</pre>\r\n</p>\r\n<h3>Naviation IModule</h3>\r\n<p>The Navigation Module CTOR is this...</p>\r\n<pre>public NavigationModule(IUnityContainer container, IRegionManager regionManager)</pre>\r\n<p>The Navigation Module Initilize looks like this.... the Naviation module is taking responsibility for loading default Body content and default Navigation content.. The Navigation content is just a set of buttons in a stack panel on right hand side of Shell.</p>\r\n<pre>      public void Initialize()        {\r\n\r\n            RegisterViewsAndServices();\r\n            OtherProject.Views.ViewA sc = this.container.Resolve&lt;OtherProject.Views.ViewA &gt;();\r\n            IRegion mainRegion = this.regionManager.Regions[&quot;Body&quot;];\r\n            mainRegion.Add(sc);\r\n           \r\n            Views.MainNavigation nav = this.container.Resolve&lt;Views.MainNavigation&gt;();\r\n            IRegion navigator = this.regionManager.Regions[&quot;Navigation&quot;];\r\n            navigator.Add(nav);\r\n        }\r\n\r\n        protected void RegisterViewsAndServices()\r\n        {\r\n            this.container.RegisterType&lt;Views.MainNavigation&gt;();\r\n            this.container.RegisterType&lt;OtherProject.Views.ViewA &gt;();\r\n        }\r\n</pre>\r\n<p>The above code works fine as the first two default views are loaded into Shell.</p>\r\n<h3>The Navigator View</h3>\r\n<p>The Navigator View handles the button click which should change the view to any of the other projects I have in this solution. So in the Button Click events of that view, I started working on code like this:</p>\r\n<p>Step 1) Definitely <strong>not best practice</strong>, but I had to get reference to the MainRegion which I stored as <em>static variable in the IModule of the Navigator</em>...</p>\r\n<pre>IRegion mainRegion = NavigationModule._regionManager.Regions[&quot;Body&quot;];\r\n</pre>\r\n<p>Step 2) Get the ViewCollection of Main Region IViewsCollection vc = mainRegion.ActiveViews;</p>\r\n<p>Step 3) Iterate the View collection looking for Views, activate the one you want.</p>\r\n<pre>foreach (var thing in vc)\r\n            {\r\n                if (thing.GetType().Name == &quot;QualityAssuranceView&quot;)\r\n                {                    \r\n                    QAModule.Views.QualityAssuranceView qamod = thing as QAModule.Views.QualityAssuranceView;\r\n                    mainRegion.Activate(qamod);\r\n                    found = true;\r\n                }\r\n                else {\r\n                    //need to new up an instance of view?  Not sure how to do this the Prism way... Remember this Navigator View is just an injected view in the Shell...                \r\n                }\r\n            }\r\n</pre>\r\n<p>So my problem is this: 1) I was able to iterate the view collection and find what I expected, in example above I do fing the QAModule and cast it and activate it. But what I found is that when I do this same thing for another view, the Activate seems to work but I don't see the new module in the Shell...</p>\r\n<p>Seems like a simple thing to do &quot;Change Views using a Navigator within Prism Architecture using mulitple Project Views&quot;, but It's still a mystery to me... Any guidance would be appreaciated.</p>\r\n</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>",
    "PostedDate": "2010-08-19T05:57:35.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "492920",
    "ThreadId": "224100",
    "Html": "<p>We are working on guidance on different types of navigation.&nbsp; Rather than answer your questions&nbsp;directly, I'm going to point you at one of the quickstarts that is in Drop 7.&nbsp; It is currently called the RegionNaviagion Quickstart in the Navigation folder under Quickstarts.&nbsp; This Quickstart uses a different approach than the one you have outlined, where modules register a view in a navigation pane and use a navigation service to hook things up.</p>\r\n<p>There are currently no docs&nbsp;for this&nbsp;as they are still being written, but the code may help you out.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-13T10:46:03.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]