[
  {
    "Id": "131307",
    "ThreadId": "39574",
    "Html": "Hi all,<br>\r\n<br>\r\nFirst, i'd like to say that i'm new with the base concepts of Prism (DI, Containers, ..). That being said, I would like to know what is the best way, using Prism, to share user defined controls with other modules. I obviously do not want to statically link a dll to each and every module composing my application. I was thinking of a module that will hold all of my controls but don't know exactly how to use such a module !<br>\r\n<br>\r\nThank you for your answers.<br>\r\n-jeff.\r\n",
    "PostedDate": "2008-11-10T03:16:45.453-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "131450",
    "ThreadId": "39574",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">To share a user control between different modules without having hard references between them you can do the following:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span><span style=\"font-family:calibri\">1.</span><span style=\"font:7pt 'times new roman'\">       </span></span><span style=\"font-family:calibri\">Create a common Interfaces project to put the interface of your User Control. This project will be referenced by all the modules that want to use the User Control.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span><span style=\"font-family:calibri\">2.</span><span style=\"font:7pt 'times new roman'\">       </span></span><span style=\"font-family:calibri\">Create a module that implements the interface of your User Control. Then, register in the container a type mapping between the interface and the concrete class implementation of your User Control as follows:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;font-family:'courier new'\">container.RegisterType&lt;<span style=\"color:#2b91af\">IMyUserControl</span>, <span style=\"color:#2b91af\">MyUserControl</span>&gt;();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span><span style=\"font-family:calibri\">3.</span><span style=\"font:7pt 'times new roman'\">       </span></span><span style=\"font-family:calibri\">Define a module dependency from the modules that use the User Control to the one that implements it and registers the type mapping. If Module A has the interface and Module B will implement the view, you could write the following in case you were using the Configuration Module Enumerator.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">modules</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">    &lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">module</span> <span style=\"font-size:10pt;color:red;font-family:'courier new'\">assemblyFile</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">=</span><span style=\"font-size:10pt;font-family:'courier new'\">&quot;<span style=\"color:blue\">Modules/ModuleB.dll</span>&quot; <span style=\"color:red\">moduleType</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">ModuleB.ModuleB</span>&quot; <span style=\"color:red\">moduleName</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">ModuleB</span>&quot;<span style=\"color:blue\">&gt;</span>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">      </span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">dependencies</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">        &lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">dependency</span> <span style=\"font-size:10pt;color:red;font-family:'courier new'\">moduleName</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">=</span><span style=\"font-size:10pt;font-family:'courier new'\">&quot;<span style=\"color:blue\">ModuleA</span>&quot;<span style=\"color:blue\">/&gt;</span>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">      &lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">dependencies</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">    &lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">module</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 52.8pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">  &lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'courier new'\">modules</span><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">&gt;</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt 108.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span><span style=\"font-family:calibri\">4.</span><span style=\"font:7pt 'times new roman'\">       </span></span><span style=\"font-family:calibri\">Get an instance of the User Control using the container through the its interface as follows.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 70.8pt\"><span style=\"font-size:10pt;font-family:'courier new'\">container.Resolve&lt;<span style=\"color:#2b91af\">IMyUserControl</span>&gt;();</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">The following articles give some more information about some of the topics mentioned above.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">About type mapping:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://msdn.microsoft.com/en-us/library/cc440951.aspx\"><span style=\"color:#0000ff;font-family:calibri\">Unity Application Block Methods</span></a>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">About module dependencies:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://msdn.microsoft.com/en-us/library/cc707909.aspx\"><span style=\"color:#0000ff;font-family:calibri\">Using the Directory Lookup Module Enumerator</span></a>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://msdn.microsoft.com/en-us/library/cc707897.aspx\"><span style=\"color:#0000ff;font-family:calibri\">Using the Configuration Module Enumerator</span></a>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span></span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n",
    "PostedDate": "2008-11-10T10:40:28.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "132020",
    "ThreadId": "39574",
    "Html": "Thank you for taking the time to anwser me.<br>\r\nI started implementing your solution. And so far so good...<br>\r\n<br>\r\n-jeff.\r\n",
    "PostedDate": "2008-11-12T07:23:17.893-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]