[
  {
    "Id": "688625",
    "ThreadId": "277038",
    "Html": "<p>Hello.</p>\n<p>In my shell, I have a tabcontrol, with region's name defined in xaml inside tabcontrol (&lt;tabcontrol ps:RegionManager.RegionName=\"myTabControl\"...&gt;). A separate xaml (let's say mainplugin.xaml_, containing two content controls with their own regions and region names defined in xaml, just like for the tabcontrol in the shell, is registered via view discovery (...<span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">RegisterViewWithRegion(\"myTabControl\", () =&gt; &lt;MainPlugIn&gt;). There are two more xamls for injecting into those content control - which, in similar fashion, are registered via view discovery (...<span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">RegisterViewWithRegion(\"area1\", () =&gt; &lt;Area1PlugIn&gt;).</span></span></span></span></p>\n<p><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">Now, the problem is - the MainPlugIn does not become active until the tab item is clicked. That is, when I run the program, I see a tab added to the tab control, but the associated view does not become active - and therefore is not displayed - until I actually click on the tab.</span></span></span></span></p>\n<p><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">Any ideas?</span></span></span></span></p>\n<p><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">&nbsp;</span></span></span></span></p>\n<p><span style=\"font-size: x-small; font-family: Consolas;\"><span style=\"font-size: x-small; font-family: Consolas;\">&nbsp;</span></span></p>",
    "PostedDate": "2011-10-24T13:39:22.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689190",
    "ThreadId": "277038",
    "Html": "<p>Hi,</p>\r\n<p>It seems that, when using a <strong>TabControl</strong> in <strong>WPF, </strong>the views are not activated by default when they're added to a region (using either view discovery or view injection). Instead, you need to explicitly activate the view invoking the&nbsp;<strong>Activate</strong> method of the region like this:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>regionManager.Regions[<span style=\"color: #a31515;\">\"myTabControl\"</span>].Activate( mainPlugIn );\r\n</pre>\r\n</div>\r\nWhere <strong>mainPlugIn</strong> is the view injected in the <strong>TabControl region</strong>.</p>\r\n<p>Also, you can activate the first view contained in the <strong>TabControl region</strong> without having an explicit reference to it doing something like this:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>regionManager.Regions[<span style=\"color: #a31515;\">\"myTabControl\"</span>].Activate( regionManager.Regions[<span style=\"color: #a31515;\">\"myTabControl\"</span>].Views.FirstOrDefault() );\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Note that the <strong>Activate </strong>method should be invoked after the view/s had been added to the region.</p>\r\n<p>I hope you find it useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-10-25T12:00:52.677-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689309",
    "ThreadId": "277038",
    "Html": "<p>Thank you Damian. But where would I call this from? Cant call it from the viewmodel - not until my region becomes active, which in turn initializes and activates the viewmodel - seems like a catch-22.</p>",
    "PostedDate": "2011-10-25T14:56:35.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689776",
    "ThreadId": "277038",
    "Html": "<p>Hi,</p>\r\n<p>When and where you should activate the corresponding (or any) view depends mostly of the requirements of your scenario and your personal preferences.</p>\r\n<p>A possible approach to activate a view as soon as it's added to the region could be to implement something like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> MyComponent\r\n    {\r\n        IRegionManager regionManager;\r\n        \r\n        <span style=\"color: blue;\">public</span> MyComponent(IRegionManager regionManager)\r\n        {\r\n            <span style=\"color: blue;\">this</span>.regionManager = regionManager;\r\n            <span style=\"color: blue;\">this</span>.regionManager.Regions.CollectionChanged += Regions_CollectionChanged;\r\n        }\r\n\r\n        <span style=\"color: blue;\">void</span> Regions_CollectionChanged(<span style=\"color: blue;\">object</span> sender, NotifyCollectionChangedEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (e.Action == NotifyCollectionChangedAction.Add)\r\n            {\r\n                <span style=\"color: blue;\">if</span> ((e.NewItems[0] <span style=\"color: blue;\">as</span> IRegion).Name.Equals(<span style=\"color: #a31515;\">\"MainRegion\"</span>))\r\n                {\r\n                    <span style=\"color: blue;\">this</span>.regionManager.Regions[<span style=\"color: #a31515;\">\"MainRegion\"</span>].Views.CollectionChanged += Views_CollectionChanged;\r\n                    <span style=\"color: blue;\">this</span>.regionManager.Regions.CollectionChanged -= Regions_CollectionChanged;\r\n                }\r\n            }\r\n        }\r\n\r\n        <span style=\"color: blue;\">void</span> Views_CollectionChanged(<span style=\"color: blue;\">object</span> sender, NotifyCollectionChangedEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (e.Action == NotifyCollectionChangedAction.Add)\r\n            {\r\n                <span style=\"color: blue;\">object</span> view = e.NewItems[0];\r\n                <span style=\"color: blue;\">this</span>.regionManager.Regions[<span style=\"color: #a31515;\">\"MainRegion\"</span>].Activate( view );\r\n            }\r\n            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span>( e.Action == NotifyCollectionChangedAction.Remove)\r\n            {\r\n                <span style=\"color: blue;\">this</span>.regionManager.Regions[<span style=\"color: #a31515;\">\"MainRegion\"</span>].Activate(<span style=\"color: blue;\">this</span>.regionManager.Regions[<span style=\"color: #a31515;\">\"MainRegion\"</span>].Views.LastOrDefault());\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n</pre>\r\n</div>\r\n<p>This code snippet subscribes to the <strong>CollectionChanged </strong>event of the <strong>Regions </strong>collection of the <strong>RegionManager</strong>. When a region is added, the <strong>Regions_CollectionChanged</strong> method is invoked, which check if the the name of the region added is <em>\"MainRegion.\" </em>If it's, it subscribes to the <strong>CollectionChanged </strong>event of the <strong>Views </strong>collection of the <strong>Region</strong> and unsubscribes for the previous event. This is because the subscription to the <strong>CollectionChanged </strong>event of the <strong>Regions </strong>collection was made only to be able to subscribe to the <strong>CollectionChanged </strong>event of the <strong>Views </strong>collection when the region is available.</p>\r\n<p>Then, when the <strong>Views </strong>collection is changed (like for exampling adding a view) the <strong>Views_CollectionChanged</strong> method is invoked. If a view was added, that view will be selected as the active view and if a view is removed, the last view in the region will be the active one.</p>\r\n<p>This is just an example of how to activate a view, you can implement you own approaches to fulfill the requirements of your scenario.</p>\r\n<p>I hope you find it useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>\r\n<div id=\"_mcePaste\" class=\"mcePaste\" style=\"position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow: hidden;\">\r\n<pre>Regions_CollectionChanged</pre>\r\n</div>",
    "PostedDate": "2011-10-26T10:57:06.67-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689789",
    "ThreadId": "277038",
    "Html": "<p>Yes that's very helpful, thank you. I actually found a way to achieve this by attaching a triggeraction - intercepting tab item added and setting it to selected when count of tab items is 1. But your example will certainly help me with other things. Thanks again!</p>",
    "PostedDate": "2011-10-26T11:19:22.413-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]