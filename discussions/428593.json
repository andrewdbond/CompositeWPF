[
  {
    "Id": "983326",
    "ThreadId": "428593",
    "Html": "\r\n<p>Hi folks</p>\r\n<p>I'm working on an application, have started down the PRISM modular path using Unity for DI and Entity Framework Code First approach for entity/model creation and use. My question is related to modular design concept and where parts fit.</p>\r\n<p>My application is for managing patients in small health care practices.&nbsp;</p>\r\n<p>I have created a WPF application with Shell window, UnityBootsrapper; also a Client module with a structure of:</p>\r\n<ul>\r\n<li>Views &nbsp;containing Usercontrols for displaying/capturing input </li><li>ViewModels containg logic for views </li><li>Interfaces I currently have nothing in these but are there for dependency injection\r\n</li><li>Model contains my entity structures </li><li>Data holds my Client dataContext and initializer </li></ul>\r\n<p>The application will allow a client/patient to be entered. A client can have many referrals from different sources and a referral can have many appointments.&nbsp;</p>\r\n<p>At present my model folder has all the entities I have identified so far for my application but these are not all client specific as I have a referral entity which I believe should be contained in a Referral module? as well as Appointment specific entities\r\n that I think should be in an Appointment module. Where would you place all your entities? Also I am about to start creating a referral module, seeing as a Referral must have a Client, how would my referral module be aware of client/patient data, would the\r\n Client module have a Search method returning a client that the referral module can call upon?</p>\r\n<p>I've gotten in a bit of a muddle with how architecture should look and how modules would interact with each other?</p>\r\n<p>Thanks for any help.</p>\r\n",
    "PostedDate": "2013-01-05T07:22:10.58-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "983833",
    "ThreadId": "428593",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Usually modules are decoupled from each other thanks to the use of interfaces. However, this might not be completely applicable with models, specially if you are using\r\n<strong>Entity Framework</strong> as most models are related to each other.</p>\r\n<p>In my opinion, I would move all the models (<strong>Clients</strong>, <strong>\r\nReferrals</strong>, <strong>Appointments</strong>, etc.) to a separate project. This project would not be a\r\n<strong>Prism </strong>module but a common .<strong>NET </strong>project that could be referenced by the corresponding modules. For example, the application could be structured like this:</p>\r\n<ul>\r\n<li><strong>Shell </strong>- Has a reference to <strong>Models </strong>with <strong>\r\nCopyLocal = true</strong>. </li><li><strong>DataAccessLayerModule </strong>- Has a reference to <strong>Models </strong>\r\nwith <strong>CopyLocal = false</strong>. It could export services to interact with the\r\n<strong>DB </strong>and populate models. </li><li><strong>ClientsModule </strong>- Has a reference to <strong>Models </strong>with\r\n<strong>CopyLocal = false</strong>. It contains the views/view models regarding clients, etc.\r\n</li><li><strong>ReferralsModule</strong> - Has a reference to <strong>Models </strong>\r\nwith <strong>CopyLocal = false</strong>. It contains the views/view models regarding referrals, etc.\r\n</li><li><strong>AppointementsModule </strong>- Has a reference to <strong>Models </strong>\r\nwith <strong>CopyLocal = false</strong>. It contains the views/view models regarding appointments, etc.\r\n</li><li><strong>Models </strong>- A simple project (not a <strong>Prism </strong>module) containing the\r\n<strong>Models </strong>used in the application. </li></ul>\r\n<p>Like this, the <strong>Models </strong>can keep their relationships between each other inside a common project referenced by any module that needs them. However, take into account that this is only a possible approach and you might need to structure your\r\n application differently depending on the requirements of your scenarios or according to your personal preferences.</p>\r\n<p>I hope you find my opinion useful,</p>\r\n<p>Damian Cherubini<br>\r\n<a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>\r\n",
    "PostedDate": "2013-01-07T10:18:12.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]