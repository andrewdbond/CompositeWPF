[
  {
    "Id": "573289",
    "ThreadId": "247881",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I have a view where I host a windows forms control using WindowsFormsHost. The control needs parameters which are provided by the ViewModel, and are made available through an EventAggregator event (= not set on init). If the needed paramter values are set,\r\n a method on the windows forms control must be called to get it working.</p>\r\n<p>So acutally I have a method in my _View_ to set/call the Windows Form control. The problem is, that the needed parameters are not available immediatelly from the ViewModel, but when the event subscription in the VM fires the specific event which brings the\r\n data with it. Right after that I have to call the View's method. But how to know inside the View when the needed data is available?&nbsp;<br>\r\n<br>\r\nI think thats a little bit against PRISM/MVVM concepts, but how to work around that?</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-28T07:29:57.777-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "573417",
    "ThreadId": "247881",
    "Html": "<p>Hi,</p>\r\n<p>You might find the Interaction Request mechanisms useful to achieve your scenario. You can read about them in the <a href=\"http://msdn.microsoft.com/en-us/library/gg405494%28PandP.40%29.aspx\">Advanced MVVM Scenarios</a> chapter in the Prism MSDN documentation.</p>\r\n<p>Additionally, you might find the <a href=\"http://msdn.microsoft.com/en-us/library/gg430869%28PandP.40%29.aspx\">MVVM QuickStart</a> useful, as it portrays the use of such mechanisms in a sample application.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-02-28T11:22:23.167-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "575058",
    "ThreadId": "247881",
    "Html": "<p>Thanks Guido, in the end it got it working without using Interaction Request. Just used a controller to keep the viewmodels synchronized and passing the needed data.&nbsp;</p>\n<p>Now I just have one problem left: The view which contains a windows form control is just loaded when an item in my application is opened (button click). This needs some time on the first time (part creation shared, keepalive true), since the Windows Forms  Control is pretty complex. Is it possible to <strong>preload </strong>that view (which contains the winforms control) invisible/in background&nbsp;on application startup to make even the first item open action smooth and without wait time? Is that possible?</p>\n<p>&nbsp;</p>\n<p>Update: I've tried to create a instance of the winforms control in the Module Initialize() method, and export it using Mef. In the View's default constructor I import the control and add it to the WindowsFormsHost. Now it slows down the app startup, but seems to work.. Is that the right approach, or is there a better way??</p>",
    "PostedDate": "2011-03-03T07:16:22.023-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "575100",
    "ThreadId": "247881",
    "Html": "<p>Hi,</p>\n<p>There is no guidance in Prism regarding how to manage the preload of components that are slow to load. The approach you've mentioned seems a valid possibility to address your requirement.</p>\n<p>You might find the following thread useful, where a similar concern is treated (related to a whole module which has a long initialization time):</p>\n<p><a href=\"http://compositewpf.codeplex.com/discussions/247980\"><span>LoadModule Unity WPF</span></a></p>\n<p>I hope you find this helpful.</p>\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-03T08:16:21.027-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]