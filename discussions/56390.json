[
  {
    "Id": "190543",
    "ThreadId": "56390",
    "Html": "<p>Hello,</p>\r\n<p>I have a few fights for seperating the modules in our group. :) When should we consider creating another module?</p>\r\n<p>Based on my understanding, we should create another module if it has some business values.</p>\r\n<p>For example:</p>\r\n<p>1. Creating Module that run without depending on other and that module can be sold to customer without any other module.</p>\r\n<p>E.g. We can create Sale Module, Purchase Module so that we can sell the individual module to customer.</p>\r\n<p>2. Creating Module as a addon for existing module.</p>\r\n<p>E.g. We can create Promotion Management Module as a addon for Sale Module. That module won't be able to run without Sale Module but we can sell that module as addon to customers who bought our Sale Module. So, it has buz value.</p>\r\n<p>What do you think about those two facts?</p>\r\n<p>Some people used to create the module based on User Story. I think this is wrong approach. What do you think?</p>\r\n<p>Some people says that one module shouldn't have more than 20 Views. So, they make different modules even there is no business value.&nbsp; I'm not sure whether they are right or not. I don't think it's good idea to have one BIG module with a lot of views as well. But not sure whether we should have Module A and Module B even we can't sell those modules individually.</p>",
    "PostedDate": "2009-05-14T21:00:13.023-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "191582",
    "ThreadId": "56390",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Michael,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">In my personal opinion, this questions does not have just ONE right answer. A module, as a technical concept, is a technology asset that will help you compose your application.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Modules will help you build a modular design, but how to map this technical asset (modules) to application requirements depends on your particular scenario.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">Taken from the Prism-v2 documentation, </span><a href=\"http://msdn.microsoft.com/en-us/library/dd458911.aspx\"><span style=\"font-size:small;font-family:Calibri\">Module Technical Concept</span></a><span style=\"font-size:small\"><span style=\"font-family:Calibri\"> :</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><em><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>A common usage of a module is to represent different portions of the system. The following are some examples of modules:</span></em></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-size:12pt;font-family:Symbol\" lang=EN-US><span style=\"\">&middot;<span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><em><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>A module that contains a specific application feature such as news </span></em></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-size:12pt;font-family:Symbol\" lang=EN-US><span style=\"\">&middot;<span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><em><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>A module that contains a specific subsystem, such as purchasing, invoicing, or general ledger </span></em></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-size:12pt;font-family:Symbol\" lang=EN-US><span style=\"\">&middot;<span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><em><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>A module that contains infrastructure services, such as logging and authorization services or Web services </span></em></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-size:12pt;font-family:Symbol\" lang=EN-US><span style=\"\">&middot;<span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><em><span style=\"font-size:12pt;font-family:'Times New Roman','serif'\" lang=EN-US>A module that contains services that invoke line-of-business (LOB) systems, such as Siebel CRM and SAP, in addition to other internal systems </span></em></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">It's a very common practice to have modules mapped to business structure (such as sales, purchasing, etc). But it's also common to have modules mapping a specific functionality (such as transferring money between accounts, paying bills).</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><em><span style=\"color:#1f497d\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></em></strong></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>Perhaps in your scenario, separating the modules by how you can &ldquo;sell&rdquo; them is the best approach. Other ISVs may have just one customer who will consume all the modules, and they choose to separate modules in order to increase the maintainability of the application (i.e. based on User Stories, or based on the distribution of the development team, or the frequency of updates of a particular feature, etc). On the other hand, you might also create a new module when you believe you can reuse a particular functionality across different applications.</span><span style=\"\" lang=EN-US></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 17.4pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">You should keep in mind that (Prism-v2 documentation, </span><a href=\"http://msdn.microsoft.com/en-us/library/dd490825.aspx\"><span style=\"font-size:small;font-family:Calibri\">Modularity Design Concept</span></a><span style=\"font-size:small\"><span style=\"font-family:Calibri\">):</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Modules are independent of one another but can communicate with each other in a loosely coupled fashion. </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">A module represents a set of related concerns.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">So, as you said, tackling module separation by the amount of views it contains could not always be the best approach. Usually the views contained in the module will depend on its particular functionality.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>Hope it helps!</span><span style=\"font-size:10pt;font-family:'Courier New'\" lang=EN-US></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Matias Bonaventura</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">http://blogs.southworks.net/matiasb</span></span></a><span style=\"\" lang=EN-US></span></p>",
    "PostedDate": "2009-05-18T11:49:59.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]