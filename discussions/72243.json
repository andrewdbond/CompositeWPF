[
  {
    "Id": "246631",
    "ThreadId": "72243",
    "Html": "<p>If I use an event to show my popup by way of a factory class, would it makes sense to use another event to get the data back from the popup?</p>",
    "PostedDate": "2009-10-16T10:13:16.827-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "246724",
    "ThreadId": "72243",
    "Html": "<p id=3fb9e4c0-9cc9-012c-49be-12313b005981>Hi</p>\r\n<p id=3fb9efc0-9cc9-012c-49bf-12313b005981>How to implement the scenario above depends on your solution specifics.</p>\r\n<p id=3fb9fc50-9cc9-012c-49c0-12313b005981>If the Popup is in a different module than the component that should get the data back (so there are no references between them), using Event Aggregator events would be the way to go, but if the Popup is in the same module as the component it could get the data back you can use common .NET events.</p>\r\n<p id=3fba0e70-9cc9-012c-49c1-12313b005981>Another possible scenario could be responding to user&rsquo;s input, so a command might be best suiting.</p>\r\n<p id=3fba1f50-9cc9-012c-49c2-12313b005981>Assuming the event to create the Popup is and <strong>EventAggregator</strong> event, you should take into account that the second action (the response to get the data) should not be meant as a <em>response</em><em>.</em>&nbsp; You can read more about that <a href=\"http://msdn.microsoft.com/en-us/library/dd458878.aspx\">here</a> (Event Aggregation section).</p>\r\n<p id=3fba35a0-9cc9-012c-49c3-12313b005981>Below you can find another forum thread related to communication:</p>\r\n<ul>\r\n<li><a href=\"View.aspx?ThreadId=59875\">Guidance on when to use different communication patterns</a> </li>\r\n</ul>\r\n<p id=3fba4b80-9cc9-012c-49c4-12313b005981>Please let me know if this helps.</p>\r\n<p id=3fba6160-9cc9-012c-49c5-12313b005981>Damian Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-10-16T14:38:41.74-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]