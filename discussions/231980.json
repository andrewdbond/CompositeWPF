[
  {
    "Id": "511171",
    "ThreadId": "231980",
    "Html": "\r\n<p>This isn't so much a specific question as a concept question.</p>\r\n<p>We are creating a Silverlight app and I am looking at Prism4. Our app has what we call a &quot;dashboard&quot; which allows the user to specify various &quot;snapins&quot; that they want displayed on it.&nbsp;</p>\r\n<p>Basically one of the pages in our app is what we call a &quot;dashboard&quot;. We have about 30 views, we call them &quot;snap-ins&quot; that are candidates to be displayed on the dashboard.&nbsp;The dashboard needs to be user definable in that the positions of the &quot;snapins&quot;\r\n and the page of the dashboard is configurable. Think of the iGoogle home page...&nbsp;</p>\r\n<p>Currently, I have a &quot;dashboard.xaml&quot; form with a tabcontrol in the root grid. In the dashboard codebehind I call a RIA service to get the users dashboard setup information. First I dynamically add the users defined pages/tabs to the tabcontrol and each page\r\n gets a canvas control added to it. I then dynamically add the snap-ins that the user has defined adding them to the canvas. I also store the position of the snap-in and the page. The snap-ins can be dragged around by the user.</p>\r\n<p>In reading the doc on regions is seems like they are defined ahead of time and the view is loaded into a region. Would it be possible to create the regions on the fly and locate them on a pageframe with a canvas in each page.&nbsp;</p>\r\n<p>Bottom line, can I create an iGoogle like page (this would only be one page of the whole app) with regions that are positioned at runtime to load the views into? Am I really gaining anything buy using regions/views here over just adding the snapin's (which\r\n are user controls) to the canvas in the page?</p>\r\n<p>Bottom line, can I create an iGoogle like page (this would only be one page of the whole app) with regions that are positioned at runtime to load the views into? Am I really gaining anything buy using regions/views here over just adding the snapin's (which\r\n are user controls) to the canvas in the page?</p>\r\n<p>I am looking at prism and while the MVVM stuff I will certainly use, I wonder if there is any benefit to using the regions and view loading provided or just stick with the in built silverlight navigation. I'm not sure I see the benefit?&nbsp;</p>\r\n<p>I know this is a very general question... but I figured I P&amp;P is the place to get some &quot;guidance&quot;</p>\r\n<p>BOb</p>\r\n",
    "PostedDate": "2010-10-22T09:13:23.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "511299",
    "ThreadId": "231980",
    "Html": "\r\n<p>Hi Bob,</p>\r\n<p>Nice to see that you started using Prism in your application. Regarding to your question, as\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921086%28PandP.20%29.aspx\">the documentation</a> mentioned you would need to think in the container composition and regions when developing Composite Application using Prism.<br>\r\n<br>\r\nFrom the MSDN documentation: <em>You will be creating either a window, page, or user controls that will contain both fixed content and dynamic content. The fixed content will consist of the overall structure of the containing UI element, and the dynamic content\r\n will be what is placed inside a region.</em><br>\r\n<br>\r\nFor example, you could design a view (these are what your called &quot;snap-ins&quot;) with a Canvas control. Then you could dynamically add instances of this view (snap-in) to the MainRegion (dashboard) of your application.\r\n<br>\r\n<br>\r\nAdditionally, as the content placed in the Canvas control is something decided at run-time, I would recommend you to expose this Canvas as a region by creating a\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921129%28PandP.20%29.aspx\">Custom Region Adapter</a>. This way, you could compose the Canvas control by adding content (views) dynamically.</p>\r\n<p>If you opt to do not use region, you will lose the <a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.20%29.aspx\">\r\nUI Composition</a> ability, since the regions are a main component for achieving this when using\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921076%28PandP.20%29.aspx\">View Injection</a> or\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921103%28PandP.20%29.aspx\">View Discovery</a>.</p>\r\n<p>You could also find interesting the following documentation section on MSDN: <a href=\"http://msdn.microsoft.com/en-us/library/ff921166%28PandP.20%29.aspx\">\r\nXAML Guidelines for Creating a Composite UI</a></p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n<p>&nbsp;</p>\r\n<p><em><br>\r\n</em></p>\r\n<p><em><br>\r\n</em></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-10-22T13:38:05.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "514030",
    "ThreadId": "231980",
    "Html": "\r\n<p>Thanks for your reply.&nbsp;</p>\r\n<p>&gt;For example, you could design a view (these are what your called &quot;snap-ins&quot;) with a Canvas control. Then you could dynamically add instances of this view (snap-in) to the MainRegion (dashboard) of your application.&nbsp;</p>\r\n<p>Can I position them in MainRegion somehow? Or perhaps I should ask, how are the views positioned when added to this MainRegion?</p>\r\n<p>This sounds like what I would need to do. The snap-ins don't need/use a canvas. I use a canvas in the dashboard so I can position the views (snap-ins) dynamically. So, would I need to add some type of container/control that had a region in it to my dashboard.\r\n Then that container would be dynamically positioned it it could load the view that was specified with view discovery?</p>\r\n<p>Can I use Prism for bootstraping/module loading/MVVM communication without using regions for navigation and just using the built in frame controls for navigation?</p>\r\n<p>I'm still a bit unsure what benfit using the Prism navigation with regions offers over the built in SL navigation with frames. &nbsp;Does the Prism region navigation allow for&nbsp;caching&nbsp;views as the SL navigation framework does?</p>\r\n<p>Thanks for any advice you can provide.</p>\r\n<p>BOb</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-10-28T08:36:53.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "519470",
    "ThreadId": "231980",
    "Html": "\r\n<p>Hi BOb,</p>\r\n<p>Based on my understanding, you will need to expose a Canvas control (Dashboard) as a region. So it requires you to create a custom RegionAdapter for this control. The adapter might provide the necessary logic for positioning views when they are added.</p>\r\n<p>In Prism you could access to the ViewCollection from a particular region. This collection implements\r\n<strong>INotifyCollectionChanged</strong>, so you could subscribe to this and when a views are added, you could position them from the handler method. So your\r\n<strong>Adapt </strong>method might be similar to the following (pseudo-code):</p>\r\n<pre><span style=\"color:blue\">protected override void </span>Adapt(IRegion region, ContentControl canvas)<br>{<br>    ...<br>    region.Views.CollectionChanged &#43;=<br>        (sender, e) =&gt;<br>        {<br>            <span style=\"color:blue\">if </span>(e.Action == NotifyCollectionChangedAction.Add)<br>            {<br>                <strong>OrganizeNewSnapIns</strong>(e.NewItems, canvas);<br>            }<br>        };<br>}</pre>\r\n<p>Then in the <strong>OrganizeNewSnapIns</strong> method, you could provide the necessary logic.</p>\r\n<p>There is not guidance on how to implement a solution without Regions in Prism out-of-the-box. But you should be able to use only the necessary mechanism/techniques/guidance in your application. If you decide to do not use Regions in your application, please\r\n take into account that you will lose the UI-Composition ability. It means that you will not be able to use View Discovery or View Injection.</p>\r\n<p>I think that you can find the following Karl Shifflett's blog post interesting:\r\n<a href=\"http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx\">\r\nIntegrating Prism v4 Region Navigation with Silverlight Frame Navigation</a></p>\r\n<p>Navigation in Prism provides you a Journal, so you can go forward as well as go back. Additionally, it is integrated with the design/technical concepts managed by Prism</p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n",
    "PostedDate": "2010-11-09T10:30:15.447-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]