[
  {
    "Id": "113808",
    "ThreadId": "34298",
    "Html": "Hi<br>\r\n<br>\r\nTo dynamically load a menu, from a menu event I use a code like this (found the example on this forum)<br>\r\n<br>\r\n&nbsp; // This handles the load module command logic<br>\r\n&nbsp; void LoadModule(string moduleName) {<br>\r\n&nbsp; &nbsp; ModuleInfo[] moduleInfo = _container.Resolve&lt;IModuleEnumerator&gt;().GetModule(&quot;ModuleName&quot;);<br>\r\n&nbsp;&nbsp;&nbsp; _container.Resolve&lt;IModuleLoader&gt;().Initialize(moduleInfo);<br>\r\n&nbsp; }<br>\r\n<br>\r\nI would like to load this module into a specific region. How do I accomplish this???&nbsp; <br>\r\n<br>\r\nAlso,, is there a way to unload the module view from the region to it was added ???<br>\r\n<br>\r\n<br>\r\n//lasse\r\n",
    "PostedDate": "2008-08-26T07:12:31.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114425",
    "ThreadId": "34298",
    "Html": "Am I the only person who would like to load a Module &quot;on demand&quot;,,, and&nbsp;would like to be able to control&nbsp;to which region the View of the module should be added?????&nbsp;<br>\r\n<br>\r\n//lasse\r\n",
    "PostedDate": "2008-08-28T07:32:36.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114445",
    "ThreadId": "34298",
    "Html": "Hi Lassel,&nbsp; you actually don't load a module into a region; a&nbsp;module contains the view that you will load into a region.&nbsp; The information you require is beyond the scope of a message thread.&nbsp;&nbsp;Fortunately!&nbsp;the P&amp;P team did a great job on the documentation; I trust that once you read the following topics that not only will your questions be answered but you'll a better understanding of the infrastructure:<br>\r\n<br>\r\n<ul>\r\n    <li>Development Activities\r\n    <ul>\r\n        <li>How to: Dynamically Load Modules\r\n        <ul>\r\n            <li>How to: Using the Configuration Module Enumerator (has load on demand configuration)</li>\r\n        </ul>\r\n        </li>\r\n        <li>How to: Load Modules on Demand</li>\r\n        <li>How to: Show a View in a Shell Region</li>\r\n    </ul>\r\n    </li>\r\n</ul>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2008-08-28T08:22:03.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114596",
    "ThreadId": "34298",
    "Html": "Hi and thanks for your answer.<br>\r\nFirst, I am not a proffersional SW developer so that I am aware that my way to express myself is restricted, both in knowledge and language.<br>\r\n<br>\r\nI have read how to &quot;Load Modules&quot; on demand. In all exemples I have found, it seems like the module is aware in advance into which region it will show its view. It looks like ...&nbsp;&nbsp;<br>\r\n<br>\r\n.........<br>\r\n// First dynamically load the module, this is typically done from a Menu Item....................<br>\r\nModuleInfo[] moduleInfo = moduleEnumerator.GetModule(&quot;ModuleName&quot;); moduleLoader.Initialize(moduleInfo);<br>\r\n.....<br>\r\n// This code belongs to the Module, and used for showing the view.<br>\r\n// (This is cut and paste from the manual.....)<br>\r\npublic Module(IRegionManager regionManager)<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.regionManager = regionManager;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IRegion mainRegion = this.regionManager.Regions[&quot;MainRegion&quot;]; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View view = new View(); &nbsp;&nbsp;&nbsp;&nbsp;mainRegion.Add(view);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mainRegion.Activate(view); <br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n....<br>\r\n<br>\r\n/<br>\r\n<br>\r\nMy question is,,,,, is there a way to change &quot;MainRegion&quot; to different values ???<br>\r\n<br>\r\n<br>\r\n//lasse\r\n",
    "PostedDate": "2008-08-28T23:35:02.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114641",
    "ThreadId": "34298",
    "Html": "[Lassel]&nbsp;First, I am not a proffersional SW developer so that I am aware that my way to express myself is restricted, both in knowledge and language.<br>\r\n<br>\r\nActually Lassel you did good, it was me that didn't closely read what you were asking&nbsp;;)&nbsp; Above you wrote &quot;which region <strong><span style=\"text-decoration:underline\">the View of the module</span></strong> should be added?????&nbsp;&quot;<br>\r\n<br>\r\n[Lassel]&nbsp; &quot;is there a way to change &quot;MainRegion&quot; to different values ???&quot;.<br>\r\n<br>\r\nYes, but I'm unsure in what context, i.e., do you want to load a module's view to a different region or change the name of &quot;MainRegion&quot; to something different.&nbsp; If you could provide a simple scenario&nbsp;(use case) on how you want to apply it I'll be glad to create you sample code to meet the requirement; this may prevent some round trips in message content.<br>\r\n",
    "PostedDate": "2008-08-29T05:00:06.807-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114749",
    "ThreadId": "34298",
    "Html": ".. I would like to add a module's view to different regions.....<br>\r\n<br>\r\nI am trying to move a wpf application into prism. <br>\r\nBasically I have a view displaying &quot;persons&quot; (using a listbox). I have defined this as a Module named PersonCollectionModule. To be able to add/modify/remove persons from the list a have defined another module called PersonCrudModule. The reason I have defined a separate module for this, is that same functions (crud) also is required from other parts of my application (defined in other modules). The PersonCollectionView contains a region to which a would like to add the PersonCrudView. <br>\r\nFor different reasons I would like to avoid to have a fixed name on the region to which I will add the&nbsp;PersonCollectionView.<br>\r\n<br>\r\nI don't know if I somehow breaks the ideas behind prism,,,,,,, but it would make my life easier ,,, porting my application.<br>\r\n<br>\r\n//lasse\r\n",
    "PostedDate": "2008-08-29T11:39:28.257-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "114920",
    "ThreadId": "34298",
    "Html": "For my <a href=\"http://www.CodePlex.com/SDMS\">http://www.CodePlex.com/SDMS</a> project I started creating my interface with you in mind.&nbsp; It will have a Visual Studio Style inteface with&nbsp;a Tools |&nbsp;Options |&nbsp;&nbsp;RSS Feed configuration&nbsp;module/view where you can configure the&nbsp;pane that the RSS feed module/view should be placed in (dynamically).&nbsp;&nbsp;&nbsp;I should have this done in a few days.<br>\r\n<br>\r\nWhere it &quot;may&quot; get tough is that&nbsp;I'm going to implement the <a href=\"http://www.Codeplex.com/CLRAddins\">http://www.Codeplex.com/CLRAddins</a> so that the modules can be loaded and <strong><span style=\"text-decoration:underline\">unloaded</span> </strong>in the main region.&nbsp; I'm currently studying the <a href=\"http://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=clraddins&ReleaseId=9454\">WPF Calculator </a>which shows how powerful this feature is;&nbsp; I'll code it in a manner consistent with the&nbsp;requirements to make it available as a Contrib project which may slow me down further&nbsp;however I'll let you know as soon as I have a &quot;functional&quot; prototype (hopefully by this time next week).<br>\r\n<br>\r\nThe above should cover your requirements.&nbsp;&nbsp;(Shameless plug for my SDMS project ;) In addition... I feel a wee bit cramped having my MDI interface taken away with WPF (I know it can be done&nbsp;but I am&nbsp;going to&nbsp;stay away from WinForms on this solution) so I plan on also providing the ability to load an Add-in within a new window (as a child of my main shell).&nbsp; When this infrastructure is completed I should have all the freedom required to implement the UI as required and will move on to TDD of my data layer (NHibernate). <br>\r\n<br>\r\nEdited: Flash demo of Visual Studio style interface&nbsp;is show in this&nbsp;<a href=\"http://www.global-webnet.net/BlogEngine/post/2008/08/31/SDMS-Using-the-Logger-(TraceTool)-to-aid-development.aspx\">BLOG</a>\r\n",
    "PostedDate": "2008-08-30T11:44:58.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "115327",
    "ThreadId": "34298",
    "Html": "Tanks for the links. I will look into them.<br>\r\n//lasse\r\n",
    "PostedDate": "2008-09-02T04:54:33.497-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "115538",
    "ThreadId": "34298",
    "Html": "I have the first part of the demo done for you - this should cover all of the bases on loading modules (on demand) and updating regions with Views.&nbsp; The demo displays a&nbsp;RSS Feed listbox which you can change&nbsp;from one region to another with the click of a button - see flash <a href=\"http://www.global-webnet.net/flash/ClickMe.htm\">DEMO HERE</a>.&nbsp;&nbsp; Disclaimer: I took &quot;a lot&quot; of shortcuts, e.g.,&nbsp;threw code in code-behind and am using Smart Client Software Factory subscription/publish event handling since this is throw-away code (for the sake of this demo).&nbsp;&nbsp; This is practical because CodePlex saves change sets so it will be available as I move on. <br>\r\n<br>\r\n<ol>\r\n    <li>The SDMSMain \\ MainModule.cs will load MainView.xaml into the MainRegion of the MainShell.\r\n    <li>The MainView.xaml takes over from there and is the main layout/design for the demo\r\n    <li>The SDMSMain and RSSFeed are separate projects </li>\r\n</ol>\r\nMainShell project - has a reference to SDMSMain and RSSFeed projects (nothing else to see here for this topic)<br>\r\n<br>\r\nSDMSMain \\ VPC \\ <strong>MainView.xaml</strong> has new UseCaseRegion, RssFeedRegion and MainWorkspace for this demo<br>\r\nSDMSMain \\ VPC \\&nbsp;<strong>MainController.cs</strong> has &quot;throw-away&quot; code (done for the purpose of this demo)&nbsp;<br>\r\nRSSFeed \\ <strong>RssFeedModule</strong>.<strong>cs</strong> - On-Demand module loaded by the Menu | Tools | Options menu click in MainController.cs<br>\r\nRSSFeed \\ <strong>RSSFeedView</strong>.<strong>cs</strong> - Listbox view that will have blog list (from my blog)<br>\r\nRSSFeed \\ <strong>RSSViewer</strong>.<strong>cs</strong> - loaded in the MainWorkspace (displays blog contents in Frame)<br>\r\n<br>\r\n<a href=\"http://www.CodePlex.com/SDMS\">Http://www.CodePlex.com/SDMS</a>&nbsp; - source code<br>\r\n<br>\r\nLines 113-120 load the RSSFeed module On-Demand, Lines 93-112 processes the [Click Me] button<br>\r\n<br>\r\n<div style=\"font-size:8pt;background:white;color:black;font-family:Courier New\">\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;88</span>&nbsp;<span style=\"color:#008000\">//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;89</span>&nbsp;<span style=\"color:#008000\">// THROW-AWAY CODE FOLLOWS - for demo purposes....</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;90</span>&nbsp;<span style=\"color:#008000\">//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;91</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;92</span>&nbsp;<span style=\"color:#008000\">// Move the RSS Feed window in RSSFeedView.xaml.cs</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;93</span>&nbsp;<span style=\"color:#0000ff\">if</span> (subFactoryKey.Equals(<span style=\"color:#a31515\">&quot;ClickME&quot;</span>))</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;94</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;95</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">IRegion</span> useCaseRegion = RegionManager.Regions[<span style=\"color:#a31515\">&quot;UseCaseRegion&quot;</span>];</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;96</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">IRegion</span> rssFeedRegion = RegionManager.Regions[<span style=\"color:#a31515\">&quot;RssFeedRegion&quot;</span>];</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;97</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;98</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">object</span> rssView = rssFeedRegion.GetView(<span style=\"color:#a31515\">&quot;RssFeed&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;99</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">object</span> useCaseView = useCaseRegion.GetView(<span style=\"color:#a31515\">&quot;RssFeed&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;100</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;101</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">if</span> (rssView != <span style=\"color:#0000ff\">null</span>)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;102</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;103</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; rssFeedRegion.Remove(rssView);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;104</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; useCaseRegion.Add(rssView,<span style=\"color:#a31515\">&quot;RssFeed&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;105</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;106</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">else</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;107</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;108</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; useCaseRegion.Remove(useCaseView);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;109</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; rssFeedRegion.Add(useCaseView, <span style=\"color:#a31515\">&quot;RssFeed&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;110</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;111</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;112</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;113</span>&nbsp;<span style=\"color:#008000\">// Dynamically load the RSS module</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;114</span>&nbsp;<span style=\"color:#0000ff\">if</span> (subFactoryKey.Equals(<span style=\"color:#a31515\">&quot;mnuOptions&quot;</span>))</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;115</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;116</span>&nbsp;&nbsp;&nbsp;&nbsp; ModuleLoader.Initialize(<span style=\"color:#0000ff\">new</span> <span style=\"color:#2b91af\">ModuleInfo</span>[] </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;117</span>&nbsp;&nbsp;&nbsp;&nbsp; { </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;118</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ModuleEnumerator.GetModule(<span style=\"color:#a31515\">&quot;RSSFeedModule&quot;</span>) </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;119</span>&nbsp;&nbsp;&nbsp;&nbsp; });</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;120</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;121</span>&nbsp;<span style=\"color:#0000ff\">else</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;122</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">if</span> (!<span style=\"color:#0000ff\">string</span>.IsNullOrEmpty(subFactoryKey.ToString()))</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;123</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">MessageBox</span>.Show(subFactoryKey.ToString());</p>\r\n</div>\r\n<br>\r\nRSSFeedModule.cs code follows (On-Demand module)<br>\r\n<br>\r\n<div style=\"font-size:8pt;background:white;color:black;font-family:Courier New\">\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;14</span>&nbsp;[<span style=\"color:#2b91af\">Module</span>(ModuleName = <span style=\"color:#a31515\">&quot;RSSFeedModule&quot;</span>, StartupLoaded = <span style=\"color:#0000ff\">false</span>)]</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;15</span>&nbsp;<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">class</span> <span style=\"color:#2b91af\">RSSFeedModule</span> : <span style=\"color:#2b91af\">ModuleBase</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;16</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;17</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;18</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> Injection Constructor</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;19</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;20</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param name=&quot;regionManager&quot;&gt;</span><span style=\"color:#008000\">Registered IRegionManager</span><span style=\"color:#808080\">&lt;/param&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;21</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param name=&quot;container&quot;&gt;</span><span style=\"color:#008000\">Registered IUnityContainer</span><span style=\"color:#808080\">&lt;/param&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;22</span>&nbsp;<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param name=&quot;presenter&quot;&gt;</span><span style=\"color:#008000\">Registered IMainPresenter</span><span style=\"color:#808080\">&lt;/param&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;23</span>&nbsp;<span style=\"color:#0000ff\">public</span> RSSFeedModule(<span style=\"color:#2b91af\">IRegionManager</span> regionManager,</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;24</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">IUnityContainer</span> container)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;25</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;26</span>&nbsp;&nbsp;&nbsp;&nbsp; RegionManager = regionManager;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;27</span>&nbsp;&nbsp;&nbsp;&nbsp; Container = container;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;28</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;29</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;30</span>&nbsp;<span style=\"color:#0000ff\">protected</span> <span style=\"color:#0000ff\">override</span> <span style=\"color:#0000ff\">void</span> RegisterViewsAndServices()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;31</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;32</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">base</span>.RegisterViewsAndServices();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;33</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;34</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;35</span>&nbsp;<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">override</span> <span style=\"color:#0000ff\">void</span> Initialize()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;36</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;37</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">base</span>.Initialize();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;38</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;39</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// Add view to region</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;40</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">IRegion</span> mainRegion = RegionManager.Regions[<span style=\"color:#a31515\">&quot;RssFeedRegion&quot;</span>];</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;41</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;42</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// Name it so we can move it later in MainController.cs</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;43</span>&nbsp;&nbsp;&nbsp;&nbsp; mainRegion.Add(Container.Resolve&lt;<span style=\"color:#2b91af\">RSSFeedView</span>&gt;(),<span style=\"color:#a31515\">&quot;RssFeed&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;44</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;45</span>&nbsp;}</p>\r\n</div>\r\n<br>\r\nRSSFeedView.xaml.cs<br>\r\n<br>\r\n<div style=\"font-size:8pt;background:white;color:black;font-family:Courier New\">\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;23</span>&nbsp;<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">partial</span> <span style=\"color:#0000ff\">class</span> <span style=\"color:#2b91af\">RSSFeedView</span> : <span style=\"color:#2b91af\">UserControl</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;24</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;25</span>&nbsp;&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">Publishes</span>(<span style=\"color:#a31515\">&quot;OnRssSelected&quot;</span>)]</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;26</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">event</span> <span style=\"color:#2b91af\">EventHandler</span> OnRssSelected; </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;27</span>&nbsp;&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">Dependency</span>]</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;28</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#2b91af\">IUnityContainer</span> Container { <span style=\"color:#0000ff\">get</span>; <span style=\"color:#0000ff\">set</span>; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;29</span>&nbsp;&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">Dependency</span>]</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;30</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#2b91af\">IRegionManager</span> RegionManager { <span style=\"color:#0000ff\">get</span>; <span style=\"color:#0000ff\">set</span>; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;31</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;32</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> RSSFeedView()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;33</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;34</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; InitializeComponent();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;35</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;36</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;37</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">private</span> <span style=\"color:#0000ff\">void</span> listBox1_SelectionChanged(<span style=\"color:#0000ff\">object</span> sender, </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;38</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">SelectionChangedEventArgs</span> e)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;39</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;40</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">IRegion</span> mainRegion = RegionManager.Regions[<span style=\"color:#a31515\">&quot;MainWorkspace&quot;</span>];</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;41</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">RSSViewer</span> view = (<span style=\"color:#2b91af\">RSSViewer</span>)mainRegion.GetView(<span style=\"color:#a31515\">&quot;Viewer&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;42</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;43</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">if</span> (view == <span style=\"color:#0000ff\">null</span>)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;44</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// If we want to remove the View we'll need to name it</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;45</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; mainRegion.Add(Container.Resolve&lt;<span style=\"color:#2b91af\">RSSViewer</span>&gt;(), <span style=\"color:#a31515\">&quot;Viewer&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;46</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;47</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// If OnRssSelected is subscribed to then notify</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;48</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">if</span> (OnRssSelected != <span style=\"color:#0000ff\">null</span>)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;49</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; OnRssSelected(<span style=\"color:#0000ff\">this</span>, e);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;50</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;51</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;52</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;</span></p>\r\n</div>\r\nRSSViewer.xaml.cs code follows:<br>\r\n<br>\r\n<div style=\"font-size:8pt;background:white;color:black;font-family:Courier New\">\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;21</span>&nbsp;<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">partial</span> <span style=\"color:#0000ff\">class</span> <span style=\"color:#2b91af\">RSSViewer</span> : <span style=\"color:#2b91af\">UserControl</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;22</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;23</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> RSSViewer()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;24</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;25</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; InitializeComponent();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;26</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;27</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;28</span>&nbsp;&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">SubscribesTo</span>(<span style=\"color:#a31515\">&quot;OnRssSelected&quot;</span>)]</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;29</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">void</span> RssSelected(<span style=\"color:#0000ff\">object</span> sender, <span style=\"color:#2b91af\">EventArgs</span> e)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;30</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;31</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">SelectionChangedEventArgs</span> args = e <span style=\"color:#0000ff\">as</span> <span style=\"color:#2b91af\">SelectionChangedEventArgs</span>;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;32</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">ListBox</span> listBox = args.Source <span style=\"color:#0000ff\">as</span> <span style=\"color:#2b91af\">ListBox</span>;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;33</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; lstRSSFeeds.SelectedIndex = listBox.SelectedIndex;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;34</span>&nbsp;&nbsp;&nbsp;&nbsp; } </p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;35</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;36</span>&nbsp;}</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;<br>\r\n<br>\r\n</span></p>\r\n</div>\r\nI cheat above...&nbsp; The RSSView's binding is sync'd with a &quot;collapsed&quot; (hidden) listbox.&nbsp; I simply publish the event and set the hidden listbox to the visible listbox's SelectedIndex.<br>\r\n",
    "PostedDate": "2008-09-02T20:47:57.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]