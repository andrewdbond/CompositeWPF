[
  {
    "Id": "967310",
    "ThreadId": "415190",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I am using a Silverlight Navigation project with Prism. I am loading a module for a page and another module within the page. Everything works fine except for one thing.</p>\r\n<p>If I set the Navigation Cache Mode to Enabled, the project works properly when I switch to the page. Everything loads and all modules are fully functional. I can switch to other pages in the application and back to the Prism Module page.</p>\r\n<p>The problem is that I do not want to enable the page cache for the page. If I set the cache to disabled, then a white page appears instead of the module page. There are no errors and I have single-stepped through the code and it looks like everything is\r\n functioning properly.</p>\r\n<p>Any ideas as to what might be wrong? I am assumming that page cache disabled is valid for Prism. Is this assumption correct? I have not found anything to the contrary on the Internet.</p>\r\n<p>Thanks, Warren</p>\r\n",
    "PostedDate": "2012-12-21T17:06:39.037-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "976968",
    "ThreadId": "415190",
    "Html": "\r\n<p>Hi Warren,</p>\r\n<p>Based on my understanding of the aforementioned scenario, I believe that a possible cause of your problem could be that if you set the\r\n<strong>NavigationCacheMode </strong>to <strong>Disabled</strong>, a new instance of the page will be created for each visit to the page and if this page contains a\r\n<strong>Prism </strong>region defined in it, an exception may occur when navigating to it as\r\n<strong>Prism </strong>doesn't allow to register the same region more than once.</p>\r\n<p>As a starting point I believe you could subscribe to the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.frame.navigationfailed%28v=vs.95%29.aspx\">\r\nFrame NavigationFailed Event</a> to check if an exception is being swallow. By checking the\r\n<strong>EventArgs </strong>passed in the event handler you could find more information if an exception is being thrown, which could be helpful to find the cause of this behavior.</p>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2012-12-26T09:34:01.273-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "980841",
    "ThreadId": "415190",
    "Html": "\r\n<div>\r\n<p>Hello <span style=\"font-size:9.0pt; font-family:\">Agustin,</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\"></span></p>\r\n<p>Thanks for your assistance. I have already subscribed to the ContentFrame_NavigationFailed method in the Shell. The failure does behave like an exception has occurred, but I have not been able to trap the event in my try/catch blocks.</p>\r\n<p></p>\r\n<p>I do have two levels of Prism modules being loaded in this case. After the main prism module for the page is loaded, 1 of N sub-modules is conditionally loaded based upon user choices that occur prior to loading the main prism module.</p>\r\n<p></p>\r\n<p>Is setting the NavigationCacheMode to Disabled not supported with Prism? In other words, is the Module Manager incapable of dealing with my stated two-tier module Page scenario by design?\r\n</p>\r\n<p></p>\r\n<p>If the above configuration is not supported in Prism, then the second issue, no visible exception thrown, is probably a mute point. Although, I would like to figure out what is masking the apparent exception which produces the white screen of death.</p>\r\n<p></p>\r\n<p>Thanks, Warren</p>\r\n<p></p>\r\n</div>\r\n",
    "PostedDate": "2012-12-27T06:32:19.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "980869",
    "ThreadId": "415190",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\">Agustin,</span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\">I did some additional testing and I have a guess as to what is happening. Can you please confirm or reject my hypothesis.</span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\">I normally have the following code inline with the module load code.</span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas; color:blue\">if</span><span style=\"font-size:9.5pt; font-family:Consolas\"> (module !=\r\n<span style=\"color:blue\">null</span> && module.State == <span style=\"color:#2B91AF\">\r\nModuleState</span>.NotStarted)</span></p>\r\n<p style=\"text-indent:.5in; text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">moduleManager.LoadModule(moduleToLoad);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">The second time the page is loaded, the module state is initialized, which means the module will not be loaded due to the conditional logic above. If the page is not cached,\r\n then it appears that the Silverlight Navigation page does not know what to load so it is blank.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">When I altered the above code to the following, the result is the same.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas; color:blue\">if</span><span style=\"font-size:9.5pt; font-family:Consolas\"> (module !=\r\n<span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"text-indent:.5in; text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">moduleManager.LoadModule(moduleToLoad);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">It appears that the module manager is smart enough to know that the module is already loaded and initialize, hence it does nothing (i.e., does not load a module or throw an exception).\r\n It would appear that it does not think anything is wrong.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">The page load result is the same in that the Navigation template has nothing to display because nothing is loaded.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\">Does this possibly explain what is happening. I.e., things are actually working correctly?</span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\">Thanks, Warren</span></p>\r\n<p><span style=\"font-size:9.5pt; font-family:Consolas\"></span></p>\r\n</div>\r\n",
    "PostedDate": "2012-12-27T08:11:09.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "980911",
    "ThreadId": "415190",
    "Html": "\r\n<p>Hi Warren,</p>\r\n<p>Based on your additional information, it seems that the fact you are trying to load a module more than once could be related to your problem. Take into account that in\r\n<strong>Prism </strong>modules are not intended to be loaded more than once (you could find more information about this in the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28v=pandp.40%29.aspx\">Modular Application Development Chapter</a> of the documentation).</p>\r\n<p>As you mentioned calling the <strong>LoadModule </strong>method for the second time won't throw an exception, neither it will call the Initialize method again. However, after you have loaded a module, the view and all the components defined in it will be\r\n available to the main application. Therefore you may have to define some logic to react accordingly in case your module has already been loaded, and perform the necessary updates as required (like changing the state of your views). This can be achieved in\r\n several ways, for example in my opinion a possible approach could be by using the\r\n<strong>Event Aggregator</strong>. This way once you ensure the module has been loaded, you could publish an event that was subscribed in it, and define the necessary logic in the handler of this event to perform the updates, for example injecting a view in\r\n the corresponding region, allowing to reuse this logic without depending on the modules'\r\n<strong>Initialize </strong>method.</p>\r\n<p>Additionally, if you are interested, you could find more information on how to publish and subscribe to events using the\r\n<strong>Event Aggregator</strong> in the following chapter:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921122%28v=pandp.40%29.aspx\">Communicating Between Loosely Coupled Components</a>\r\n</li></ul>\r\n<p>I hope this helps,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2012-12-27T10:22:23.44-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "981246",
    "ThreadId": "415190",
    "Html": "\r\n<div>\r\n<p>Hello Agustin,</p>\r\n<p></p>\r\n<p>Thanks for your tips. </p>\r\n<p></p>\r\n<p>It looks like all that is required is to detect when the module in ‘Initialized’ and then to drop in the appropriate initialization and view visibility code. Something like the following:</p>\r\n<p></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas; color:blue\">if</span><span style=\"font-size:9.5pt; font-family:Consolas\"> (module !=\r\n<span style=\"color:blue\">null</span> && module.State == <span style=\"color:#2B91AF\">\r\nModuleState</span>.NotStarted)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">moduleManager.LoadModule(moduleToLoad);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas; color:blue\">else</span><span style=\"font-size:9.5pt; font-family:Consolas\">\r\n<span style=\"color:blue\">if</span>(module != <span style=\"color:blue\">null</span> && module.State ==\r\n<span style=\"color:#2B91AF\">ModuleState</span>.Initialized)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">Initialization and visibility code here…</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:9.5pt; font-family:Consolas\">}</span></p>\r\n<p></p>\r\n<p>I have already implemented a common event service to allow inter-module/code block communication. I was able to get an instance of the page/module view and set its visibility attribute, which eliminated the white screen. It works just like the cache is enable.\r\n I have not implemented the publish/subscribe initialization event yet, but that should be straight forward through my existing messaging/event system.</p>\r\n<p></p>\r\n<p>I appreciated your help. </p>\r\n<p></p>\r\n<p>Warren</p>\r\n<p></p>\r\n</div>\r\n",
    "PostedDate": "2012-12-28T04:45:49.74-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]