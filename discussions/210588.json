[
  {
    "Id": "435570",
    "ThreadId": "210588",
    "Html": "<p>Hi,</p>\r\n<p>I followed the StockTrader RI to created another applicaion with just one moudle and try to populate the region associated like below</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">controls</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">AnimatedTabControl</span>\r\n                    <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MainRegion</span><span style=\"color:black\">&quot;</span>\r\n                    <span style=\"color:red\">SelectedIndex</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">0</span><span style=\"color:black\">&quot;</span>  \r\n                    <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\r\n                    <span style=\"color:red\">ItemContainerStyle</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource ShellTabItemStyle}</span><span style=\"color:black\">&quot;</span> \r\n                    <span style=\"color:red\">Background</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource headerBarBG}</span><span style=\"color:black\">&quot;</span> \r\n                    <span style=\"color:red\">cal:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{x:Static infrastructure:RegionNames.MainRegion}</span><span style=\"color:black\">&quot;</span>\r\n                    <span style=\"color:red\">AutomationProperties.AutomationId</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">CPVTab</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">controls</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">AnimatedTabControl</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>However, the content of the module is not shown when I run the application.</p>\r\n<p>If i just normal tabcontrol, the content of the module will show correctly.</p>\r\n<p>&nbsp;</p>\r\n<p>Is there anything specialy I missed to configure the AnimatedTabControl?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>",
    "PostedDate": "2010-04-26T09:33:11.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "435833",
    "ThreadId": "210588",
    "Html": "<p>Hi, from what I can find so far is,</p>\r\n<p>in the StockTraderRI, if we&nbsp;add only one module with views by commented out the others like below in StockTraderRIBootstrapper.cs and the run the application, we can see the POSITION menu. However, the view of POSITION module is not displayed. It seems we have to add at least two modules with views so that the customized AnimatedTabcontrol could work as expected.</p>\r\n<p>Is it designed to work in that way? (Requires at least two mdoules with views?)</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> IModuleCatalog GetModuleCatalog()\r\n        {\r\n            <span style=\"color:blue\">var</span> catalog = <span style=\"color:blue\">new</span> ModuleCatalog();\r\n            catalog.AddModule(<span style=\"color:blue\">typeof</span>(MarketModule))\r\n                .AddModule(<span style=\"color:blue\">typeof</span>(PositionModule), <span style=\"color:#a31515\">&quot;MarketModule&quot;</span>);\r\n                <span style=\"color:green\">//.AddModule(typeof(WatchModule), &quot;MarketModule&quot;)</span>\r\n                <span style=\"color:green\">//.AddModule(typeof(NewsModule));</span>\r\n\r\n            <span style=\"color:blue\">return</span> catalog;\r\n        }\r\n</pre>\r\n</div>",
    "PostedDate": "2010-04-27T01:27:16.05-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "442167",
    "ThreadId": "210588",
    "Html": "<p id=5d33c7b0-4019-012d-f9b2-12313d013db1>Hi,</p>\r\n<p id=5d33d230-4019-012d-f9b3-12313d013db1>Sorry for the delayed response. I have taken a look at the RI code and was able to reproduce the behavior you described. I found that a possible way to get around it was updating the <strong>OnSelectionChanged</strong> method of the <strong>AnimatedTabControl</strong> as follows:</p>\r\n<p id=5d340950-4019-012d-f9b8-12313d013db1><span style=\"font-family:Consolas;font-size:x-small\">&nbsp;</span></p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnSelectionChanged(SelectionChangedEventArgs e) \r\n        { \r\n            <span style=\"color:blue\">if</span> (e.AddedItems.Count &gt; 0 &amp;&amp; e.RemovedItems.Count == 0) \r\n            { \r\n                <span style=\"color:blue\">base</span>.OnSelectionChanged(e); \r\n            } \r\n\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (e.RemovedItems.Count &gt; 0) \r\n            { \r\n                <span style=\"color:blue\">this</span>.RaiseSelectionChangingEvent(); \r\n\r\n                <span style=\"color:blue\">this</span>.StopTimer(); \r\n                <span style=\"color:blue\">this</span>.lastArgs = e; \r\n\r\n                <span style=\"color:blue\">this</span>.timer = <span style=\"color:blue\">new</span> DispatcherTimer \r\n                { \r\n                    Interval = <span style=\"color:blue\">new</span> TimeSpan(0, 0, 0, 0, 500) \r\n                }; \r\n\r\n                <span style=\"color:blue\">this</span>.timer.Tick += <span style=\"color:blue\">this</span>.Timer_Tick; \r\n                <span style=\"color:blue\">this</span>.timer.Start(); \r\n            } \r\n        }\r\n</pre>\r\n</div>\r\n<p>Take into account that the <strong>AnimatedTabControl</strong>&nbsp; was not thought as a reusable component and that is was specifically designed to be used in the <strong>StockTrader RI</strong>.<strong> </strong>In addition, I only tried the workaround in the RI, so it might not work in all scenarios.</p>\r\n<p id=5d342130-4019-012d-f9ba-12313d013db1>Please let me know if this helps.</p>\r\n<p id=5d342d20-4019-012d-f9bb-12313d013db1>Damian Schenkelman <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2010-05-12T10:29:14.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]