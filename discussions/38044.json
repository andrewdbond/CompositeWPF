[
  {
    "Id": "126217",
    "ThreadId": "38044",
    "Html": "Has anyone had any luck creating a delegate command where the parameter is an enum? I get an exception when I try to do this and was hoping someone had already coming up with a solution to this?<br>\r\n<br>\r\nCheers<br>\r\n<br>\r\nJustin<br>\r\n",
    "PostedDate": "2008-10-19T23:06:56.79-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "126364",
    "ThreadId": "38044",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Hi,</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Hereâ€™s an example of how to implement it. This example has a module (<i>MyModule</i>) containing a view (<i>MyView</i>) with an interface (<i>IMyView</i>) and a presenter (<i>MyViewPresenter</i>). These are the steps:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">1- Create the enumeration in MyModule, for example:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">namespace</span><span style=\"font-size:10pt;font-family:'Courier New'\"> Example.MyModule</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">enum</span> <span style=\"color:#4bacc6\">MyEnum</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; One,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Two,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Three</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">}</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">2- Define a method in the interface of the view to set an instance of the command in the view, as follows:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">public</span><span style=\"font-size:10pt;font-family:'Courier New'\"> <span style=\"color:blue\">interface</span> <span style=\"color:#4bacc6\">IMyView</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">void</span> SetEnumerationCommand(<span style=\"color:#4bacc6\">ICommand</span> enumerationCommand);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">}</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">3- Define a property of type <b>DelegateCommand&lt;MyEnum&gt;</b> in the code behind of the view, and implement the <b>SetEnumerationCommand</b> method of IMyView, so that the presenter can set the property with a new instance of the command:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">public</span><span style=\"font-size:10pt;font-family:'Courier New'\"> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> <span style=\"color:#4bacc6\">MyView</span> : <span style=\"color:#4bacc6\">UserControl</span>, <span style=\"color:#4bacc6\">IMyView</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:#4bacc6\">DelegateCommand</span>&lt;<span style=\"color:#4bacc6\">MyEnum</span>&gt; EnumerationCommand { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">#region</span> IMyView Members</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> SetEnumerationCommand(<span style=\"color:#4bacc6\">ICommand</span> enumerationCommand)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>.EnumerationCommand = enumerationCommand <span style=\"color:blue\">as</span> <span style=\"color:#4bacc6\">DelegateCommand</span>&lt;<span style=\"color:#4bacc6\">MyEnum</span>&gt;;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">this</span>.DataContext = EnumerationCommand;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">#endregion</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">}</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">4- Define, in the <b>Presenter</b> of the view, the <b>CanExecute</b> and <b>Execute</b> methods, and create a new instance of the command with these two methods:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">public</span><span style=\"font-size:10pt;font-family:'Courier New'\"> <span style=\"color:blue\">class</span> <span style=\"color:#4bacc6\">MyViewPresenter</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> MyViewPresenter(<span style=\"color:#4bacc6\">MyView</span> view)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;View = view;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;View.SetEnumerationCommand(<span style=\"color:blue\">new</span> <span style=\"color:#4bacc6\">DelegateCommand</span>&lt;<span style=\"color:#4bacc6\">MyEnum</span>&gt;(GetNumber, CanGetNumber));</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:#4bacc6\">IMyView</span> View { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanGetNumber(<span style=\"color:#4bacc6\">MyEnum</span> arg)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#00b050\">//provide here the necessary code to make the command enabled or disabled.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> GetNumber(<span style=\"color:#4bacc6\">MyEnum</span> num)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#00b050\">//your code goes here.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">}</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">5- Finally, in the XAML of the view, you should add the namespace of MyModule in order to use MyEnum in the <b>CommandParameter</b> property. I.e.:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">&lt;</span><span style=\"font-size:10pt;color:#c00000;font-family:'Courier New'\">UserControl </span><span style=\"font-size:10pt;color:red;font-family:'Courier New'\">x</span><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">:</span><span style=\"font-size:10pt;color:red;font-family:'Courier New'\">Class</span><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">=&quot;Example.MyModule.MyView&quot;</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:red\">xmlns</span><span style=\"color:blue\">=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"><span style=\"color:#0000ff\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span></a>&quot;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:red\">xmlns</span><span style=\"color:blue\">:</span><span style=\"color:red\">x</span><span style=\"color:blue\">=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\"><span style=\"color:#0000ff\">http://schemas.microsoft.com/winfx/2006/xaml</span></a>&quot;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:red\">xmlns</span><span style=\"color:blue\">:</span><span style=\"color:red\">myModule</span><span style=\"color:blue\">=&quot;clr-namespace:Example.MyModule</span>&quot;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:red\">Height</span><span style=\"color:blue\">=&quot;300&quot;</span> <span style=\"color:red\">Width</span><span style=\"color:blue\">=&quot;300&quot;&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">&lt;</span><span style=\"color:#c00000\">Grid</span><span style=\"color:blue\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">&lt;</span><span style=\"color:#c00000\">Button </span><span style=\"color:red\">Content</span><span style=\"color:blue\">=&quot;Click for two&quot; </span><span style=\"color:red\">Command</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#c00000\">Binding</span><span style=\"color:blue\">}&quot; </span><span style=\"color:red\">CommandParameter</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#c00000\">x</span><span style=\"color:blue\">:</span><span style=\"color:#c00000\">Static </span><span style=\"color:red\">myModule</span><span style=\"color:blue\">:</span><span style=\"color:red\">MyEnum</span><span style=\"color:blue\">.Two}&quot; /&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">&lt;/</span><span style=\"color:#c00000\">Grid</span><span style=\"color:blue\">&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">&lt;/</span><span style=\"font-size:10pt;color:#c00000;font-family:'Courier New'\">UserControl</span><span style=\"font-size:10pt;color:blue;font-family:'Courier New'\">&gt;</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">If you want to send the parameter via code and not through XAML, you must call the <b>Execute</b> method of the command, as follows:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\">EnumerationCommand.Execute(<span style=\"color:#4bacc6\">MyEnum</span>.Two);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Please, let me know if this helps.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Ignacio Baumann Fonay</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><a href=\"http://blogs.southworks.net/ibaumann/\"><span><span style=\"color:#0000ff;font-family:Calibri\">http://blogs.southworks.net/ibaumann/</span></span></a> </p>\r\n</span></span></span></span></span></span></span></span></span></span></span></span></span>\r\n",
    "PostedDate": "2008-10-20T12:55:06.597-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "126410",
    "ThreadId": "38044",
    "Html": "&lt;style&gt;\r\n&lt;/style&gt;\r\n&lt;link id=&quot;RADEDITORSTYLESHEET0&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/WebResource.axd?d=fnoTs0l3l_ZndIzAraVVQrrG1nwB_npClj6qlQs68DG_3_1fo1b02gpIoo4_J3Ww8MwggLk07wFThXdb5sSU1yNjF1potX6_HMMalzQHiRM1&amp;t=633577871800000000&quot;&gt;\r\n&lt;link id=&quot;RADEDITORSTYLESHEET1&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://i1.codeplex.com/css/StyleSheet.ashx?css=RadEditorBody&amp;v=13635&quot;&gt;Here's a more specific example of what my issues was<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public enum TestEnum<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value1,<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value2<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\nThen, in the Constructor for a Window I wanted to do.<br>\r\n<blockquote><br>\r\nDelegateCommand&lt;TestEnum&gt; delegateCommand= new DelegateCommand&lt;TestEnum&gt;(ExecuteMethod, CanExecute );<br>\r\nButton b = new Button;<br>\r\nb.Command = delegateCommand;<br>\r\nb.CommandParameter = TestEnum.Value1;<br>\r\n<br>\r\nMethods are as follows<br>\r\n</blockquote><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ExecuteMethod(TestEnum selectedValue)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //do some work<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool CanExecute(TestEnum selectedValue)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\nTrying to do this fails every time.<br>\r\n<br>\r\nThe reason, as I discovered, is that you need to set the CommandParameter FIRST, so we change it to<br>\r\n<br>\r\nButton b = new Button;<br>\r\nb.CommandParameter = TestEnum.Value1;<br>\r\nb.Command = delegateCommand;<br>\r\n<br>\r\nthis is because CanExecute will get called when the command is assigned to the button in code. Since there is no parameter assigned, CanExecute will be passed a null value, triggering an exception. This seems like a generally poor design descision to me, but now I know about it I can work around it.<br>\r\n<br>\r\nThanks for taking the time to post the example code Ignacio.<br>\r\n<br>\r\nRegards<br>\r\n<br>\r\nJustin<br>\r\n",
    "PostedDate": "2008-10-20T16:23:54.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "680403",
    "ThreadId": "38044",
    "Html": "<p>Hi,</p>\r\n<p>I found this discussion while hit an error when I try to create DelegateCommand&lt;MyEnum&gt;(OnExecute). The error says \"T for DelegateCommand&lt;T&gt; is not an object nor Nullable. (System.InvalidCastException). I'm using Prism4 and is DelegateCommand still working with Enum type as parameter?</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2011-10-05T11:24:30.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "680562",
    "ThreadId": "38044",
    "Html": "<p>Hi Julie,</p>\r\n<p>Last time I checked this still worked fine. Can you paste an example of the XAML you are using that is creating the error? It sounds like you're running in to the problem I was having where your initial value is not set and so casting to an enum fails (enums obviously can't be null).</p>\r\n<p>Cheers</p>\r\n<p>JT</p>",
    "PostedDate": "2011-10-05T15:48:07.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "680615",
    "ThreadId": "38044",
    "Html": "<p>It dosn't seem like the problem in Xaml. It didn't like this line (ProcessStepCategory is the enum)</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>SetDemProcessStepsCommand = <span style=\"color: blue;\">new</span> DelegateCommand&lt;ProcessStepCategory&gt;(OnSetExecuted);\r\n</pre>\r\n<pre>Does the default need to be set at this point?</pre>\r\n<pre>Thanks!</pre>\r\n</div>",
    "PostedDate": "2011-10-05T19:10:50.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "680778",
    "ThreadId": "38044",
    "Html": "<p>Hi,</p>\r\n<p>Unlike in Prism v2, the implementation of the <strong>DelegateCommand </strong>in Prism v4 checks  that the associated parameter is a <strong>nullable </strong>type. This was probably made to  avoid this <a href=\"http://compositewpf.codeplex.com/workitem/3222\">issue</a>.</p>\r\n<p>One possible approach to use an <strong> enum </strong>type as the parameter type for your command would be to wrap your enum type  in the <strong>Nullable</strong>&lt;T&gt; struct. This way, the command should work  correctly.</p>\r\n<p>You will find more information about this in the following  blog post from Brian Noyes:</p>\r\n<ul>\r\n<li><a href=\"http://briannoyes.net/2010/11/26/CommandChangesInPrism4.aspx\">Command Changes in Prism 4</a></li>\r\n</ul>\r\n<p>I hope you find this helpful.</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-10-06T06:45:00.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "683437",
    "ThreadId": "38044",
    "Html": "<p>Julie,</p>\r\n<p>Did you end up getting this sorted out or is it still giving you grief?</p>\r\n<p>Cheers</p>\r\n<p>JT</p>",
    "PostedDate": "2011-10-12T16:22:02.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "683737",
    "ThreadId": "38044",
    "Html": "<p>Yes.</p>\r\n<p>I defined the command this way and it worked:</p>\r\n<p>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><font face=\"Consolas\" size=\"2\">\r\n<p>SetProcessCommand = <span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> </span></span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">DelegateCommand</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&lt;</span></span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Nullable</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&lt;</span></span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">ProcessType</span></span></span></p>\r\n</font></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&gt;&gt;(OnSetProcessCommand);</span></span></span></span></span></p>\r\n</p>\r\n<p>Thanks.</p>",
    "PostedDate": "2011-10-13T07:53:40.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]