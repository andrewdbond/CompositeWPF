[
  {
    "Id": "128012",
    "ThreadId": "38593",
    "Html": "Why does the ConfigurationStore class look for a modules section i all .config files in the application directory?<br>\r\n<br>\r\nIf you have multiple applications (and config files) in the same directory, this will not work as you don't know what config file the applications will use.<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\nRegards,<br>\r\nPer K. Jensen\r\n",
    "PostedDate": "2008-10-27T07:32:22.42-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "128340",
    "ThreadId": "38593",
    "Html": "<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">As you said, the <b>ConfigurationStore</b> class iterates through all the files with <b>.config</b> extension in the application base directory and retrieves the first module configuration section found. This allows you to have the enumeration of your modules in a separated file of the <b>App.config</b> without having to specify the complete name of the file.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">If you want to have multiple Composite WPF Applications in the same directory that use the <b>ConfigurationModuleEnumerator</b> class to enumerate the modules, you could use a different base directory for each of your applications where the <b>ConfigurationStore</b> class will search for <b>*.config</b> files:</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">protected</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">override</span> <span style=\"color:#2b91af\">IModuleEnumerator</span> GetModuleEnumerator()</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:#2b91af\">ConfigurationStore</span> store = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">ConfigurationStore</span>(<span style=\"color:#a31515\">&quot;MyApplication1&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">ConfigurationModuleEnumerator</span>(store);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">If you use this approach you must ensure that your configuration file is copied to the base directory.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Another approach could be creating a class that inherits from the <b>ConfigurationStore</b> class and override the <b>RetrieveModuleConfigurationSection</b> method to retrieve the module configuration section from a determined configuration file. A possible implementation of the <b>CustomConfigurationStore</b> class could be as follows:</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">using</span><span style=\"font-size:10pt;font-family:'courier new'\"> System;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">using</span><span style=\"font-size:10pt;font-family:'courier new'\"> System.IO;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">using</span><span style=\"font-size:10pt;font-family:'courier new'\"> System.Configuration;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">using</span><span style=\"font-size:10pt;font-family:'courier new'\"> Microsoft.Practices.Composite.Modularity;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">public</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">class</span> <span style=\"color:#2b91af\">CustomConfigurationStore</span> : <span style=\"color:#2b91af\">ConfigurationStore</span>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> <span style=\"color:blue\">string</span> _configFilePath;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">public</span> CustomConfigurationStore(<span style=\"color:blue\">string</span> configFile)</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    {</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        _configFilePath = <span style=\"color:#2b91af\">Path</span>.Combine(<span style=\"color:#2b91af\">AppDomain</span>.CurrentDomain.BaseDirectory, configFile ?? <span style=\"color:#a31515\">&quot;App.config&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    }</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:#2b91af\">ModulesConfigurationSection</span> RetrieveModuleConfigurationSection()</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    {</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:#2b91af\">Configuration</span> configuration = GetConfiguration(_configFilePath);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:#2b91af\">ModulesConfigurationSection</span> section = (<span style=\"color:#2b91af\">ModulesConfigurationSection</span>)configuration.GetSection(<span style=\"color:#a31515\">&quot;modules&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:blue\">if</span> (section != <span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">return</span> section;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:blue\">return</span> <span style=\"color:blue\">null</span>;</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    }</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> <span style=\"color:#2b91af\">Configuration</span> GetConfiguration(<span style=\"color:blue\">string</span> configFilePath)</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    {</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:#2b91af\">ExeConfigurationFileMap</span> map = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">ExeConfigurationFileMap</span> { ExeConfigFilename = configFilePath };</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        <span style=\"color:blue\">return</span> <span style=\"color:#2b91af\">ConfigurationManager</span>.OpenMappedExeConfiguration(map, <span style=\"color:#2b91af\">ConfigurationUserLevel</span>.None);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    }</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span><span style=\"font-family:calibri\">             </span></p>\r\n<p style=\"margin:0in 0in 0pt -0.6pt\"><span style=\"font-family:calibri\">Then, in the <b>GetModuleEnumerator</b> method of your application’s Bootstrapper, use the <b>CustomConfigurationStore</b> class like this:</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">protected</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">override</span> <span style=\"color:#2b91af\">IModuleEnumerator</span> GetModuleEnumerator()</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:#2b91af\">ConfigurationStore</span> store = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">CustomConfigurationStore</span>(<span style=\"color:#a31515\">&quot;MyApplication1.config&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    <span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">ConfigurationModuleEnumerator</span>(store);</span></p>\r\n<p style=\"margin:0in 0in 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt -0.6pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0in 0in 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt -0.6pt\"><span style=\"font-family:calibri\">Mariano Converti</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/mconverti\">http://blogs.southworks.net/mconverti</a></span></span></p>\r\n",
    "PostedDate": "2008-10-28T09:33:22.653-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]