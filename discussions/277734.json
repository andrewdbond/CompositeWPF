[
  {
    "Id": "691532",
    "ThreadId": "277734",
    "Html": "\r\n<p>I dunno why&nbsp;my DelegateCommand not working.</p>\r\n<ul>\r\n<li>I adopt viewModel-1st design. </li><li>View is being registerType into container at module loading </li></ul>\r\n<p>my ViewModel:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">abstract</span> <span style=\"color:blue\">class</span> ViewModelBase&lt;TIView ....\r\n  {\r\n...\r\n        <span style=\"color:blue\">public</span> ViewModelBase(... TIView view)\r\n        {\r\n...\r\n            view.DataContext = <span style=\"color:blue\">this</span>;\r\n            View = view;\r\n        }\r\n</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> MyViewModel : ViewModelBase&lt;IMyView ...\r\n{\r\n        <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; TabClickedCommand { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n        <span style=\"color:blue\">public</span> MyViewModel(... Views.IMyView view)\r\n            : <span style=\"color:blue\">base</span>(... view)\r\n        {\r\n            view.ViewModelBase = <span style=\"color:blue\">this</span>;\r\n\r\n            <span style=\"color:blue\">this</span>.TabClickedCommand = <span style=\"color:blue\">new</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt;(<span style=\"color:blue\">this</span>.TabClicked, <span style=\"color:blue\">this</span>.CanTabClick);\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> CanTabClick(<span style=\"color:blue\">object</span> data) ...\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> TabClicked(<span style=\"color:blue\">object</span> data) ...\r\n}\r\n</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>This is my View:</pre>\r\n<pre>    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ctk</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">DockPanel</span> <span style=\"color:red\">...</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Border</span> <span style=\"color:red\">...</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n...\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Button</span> <span style=\"color:red\">...</span> <span style=\"color:red\">prism:Click.Command</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding TabClickedCommand}</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n\r\nI have debug into the view, it's DataContext is referencing the correct and expected VM instance, but the DelegateWork is never worked.</pre>\r\n<pre>What am I missing?</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-10-31T03:01:10.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691569",
    "ThreadId": "277734",
    "Html": "<p>Hi,</p>\r\n<p>In case the command binding is placed inside a data template, you might find <a href=\"http://compositewpf.codeplex.com/discussions/242032\">this thread</a> useful, where the problem is discussed, along with possible solutions to it.</p>\r\n<p>Otherwise, it would be helpful if you could provide us with a repro sample application that portrays this problem.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-10-31T04:49:58.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691945",
    "ThreadId": "277734",
    "Html": "<p>I did further testing, I can get it work, if I explicitly set the binding on the ui control at the view loaded event:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: blue;\">void</span> MyView_Loaded(<span style=\"color: blue;\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            System.Windows.Data.Binding z = <span style=\"color: blue;\">new</span> System.Windows.Data.Binding();\r\n            z.Source = <span style=\"color: blue;\">this</span>.DataContext;\r\n            z.Path = <span style=\"color: blue;\">new</span> PropertyPath(<span style=\"color: #a31515;\">\"TabClickedCommand\"</span>);\r\n\r\n            <span style=\"color: blue;\">this</span>.btn1.SetBinding(Microsoft.Practices.Prism.Commands.Click.CommandProperty, z);\r\n\r\n</pre>\r\n</div>\r\n<p>So, code behind worked, but xaml not. I guess its somekind of timing/sync design issue.</p>\r\n<p>How can I fixed this without the need to explicitly bind at code behind?</p>",
    "PostedDate": "2011-10-31T20:29:44.647-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691947",
    "ThreadId": "277734",
    "Html": "<p>i think its properly about the Source.</p>\r\n<p>Which I explicit set in code behind, but not in XAML. But I dunno the proper syntax doing it in XAML.</p>\r\n<p>I tried prism:Click.Command=\"{Binding TabClickedCommand, Source=DataContext}\" won't work either. properly need to lookup resource something like that.</p>\r\n<div id=\"_mcePaste\" class=\"mcePaste\" style=\"position: absolute; width: 1px; height: 1px; overflow: hidden; top: 0px; left: -10000px;\">ï»¿</div>",
    "PostedDate": "2011-10-31T20:33:38.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691989",
    "ThreadId": "277734",
    "Html": "<p>ok, i figured this out. I didn't raise property changed event.</p>\r\n<p>fixed by:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>            <span style=\"color: blue;\">this</span>.TabClickedCommand = <span style=\"color: blue;\">new</span> DelegateCommand&lt;<span style=\"color: blue;\">object</span>&gt;(<span style=\"color: blue;\">this</span>.TabClicked, <span style=\"color: blue;\">this</span>.CanTabClick);\r\n            NotifyPropertyChanged(<span style=\"color: #a31515;\">\"TabClickedCommand\"</span>);\r\n\r\n</pre>\r\n</div>",
    "PostedDate": "2011-11-01T01:35:16.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "692070",
    "ThreadId": "277734",
    "Html": "<p>Hi,</p>\r\n<p>Thank you for sharing your findings with the rest of the community.</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-11-01T05:27:38.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]