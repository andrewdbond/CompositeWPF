[
  {
    "Id": "889294",
    "ThreadId": "387854",
    "Html": "\r\n<p><span style=\"font-size:10pt\">Tabitem1 in my shell.xaml is opening a View1 which is a tab control and has a region that points to view2. Multiple Views of view2 are being added to the TabControl in View1 using a Controller class.</span></p>\r\n<p><span style=\"font-size:10pt\">In the Controller class it adds the view2 to the Tab control in view1.</span></p>\r\n<p><span style=\"font-size:10pt\">The code in my View1 controller classs is as follows:</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp; </span><span style=\"color:#2b91af; font-size:10pt\">View2\r\n</span><span style=\"color:black; font-size:10pt\">&nbsp;</span><span style=\"font-size:10pt\">view2 =\r\n</span><span style=\"color:blue; font-size:10pt\">&nbsp;new</span><span style=\"color:black; font-size:10pt\">&nbsp;</span><span style=\"font-size:10pt\">\r\n</span><span style=\"color:#2b91af; font-size:10pt\">&nbsp;View2&nbsp;</span><span style=\"color:black; font-size:10pt\">&nbsp;</span><span style=\"font-size:10pt\">();\r\n</span></p>\r\n<p><span style=\"color:black; font-size:10pt\">view2.View2ViewModel = _serviceLocator.GetInstance&lt; View2ViewModel&gt;();\r\n</span></p>\r\n<p><span style=\"color:black; font-size:10pt\">view2.PatientViewModel.Model = p;</span></p>\r\n<p><span style=\"color:black; font-size:10pt\">_regionManager.Regions[</span><span style=\"color:#2b91af; font-size:10pt\">RegionNames</span><span style=\"font-size:10pt\">&nbsp;.View2TabsRegion].Add(view2, p.pGUID.ToString(),\r\n</span><span style=\"color:blue; font-size:10pt\">false</span><span style=\"font-size:10pt\">);\r\n</span></p>\r\n<p><span style=\"color:black; font-size:10pt\">_regionManager.Regions[</span><span style=\"color:#2b91af; font-size:10pt\">RegionNames</span><span style=\"font-size:10pt\">&nbsp;</span><span style=\"font-size:10pt\"> . View2TabsRegion].Activate(view2);</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;&nbsp;In View2 in one of the Wpf grid I have another content control with regions that opens up view3. View3 has a tab control in which one of the tab items region is view4.</span></p>\r\n<p><span style=\"font-size:10pt\">View3 calls another controller class with the following signature:</span></p>\r\n<p><span style=\"font-size:10pt\">[</span><span style=\"color:#2b91af; font-size:10pt\">ImportingConstructor]</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">public</span><span style=\"font-size:10pt\"> View3Controller(</span><span style=\"color:#2b91af; font-size:10pt\">IRegionManager</span><span style=\"font-size:10pt\"> regionManager,\r\n</span><span style=\"color:#2b91af; font-size:10pt\">IServiceLocator</span><span style=\"font-size:10pt\"> serviceLocator,\r\n</span><span style=\"color:#2b91af; font-size:10pt\">IEventAggregator</span><span style=\"font-size:10pt\"> eventAggregator)\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">_eventAggregator = eventAggregator;</span></p>\r\n<p><span style=\"font-size:10pt\">_serviceLocator = serviceLocator;</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;_regionManager = regionManager;</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"font-size:10pt\">_eventAggregator.GetEvent&lt;</span><span style=\"color:#2b91af; font-size:10pt\">NewForm</span><span style=\"font-size:10pt\">&gt;().Subscribe(</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.AddNewForm,\r\n</span><span style=\"color:#2b91af; font-size:10pt\">ThreadOption</span><span style=\"font-size:10pt\">.UIThread, t</span><span style=\"color:blue; font-size:10pt\">rue</span><span style=\"font-size:10pt\">);\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;}</span></p>\r\n<p><span style=\"font-size:10pt\">&#65279;</span><span style=\"font-size:10pt\">This is how i am Adding the RegistredViews</span></p>\r\n<p><span style=\"color:blue; font-size:10pt\">private</span><span style=\"font-size:10pt\">\r\n</span><span style=\"color:blue; font-size:10pt\">void </span><span style=\"font-size:10pt\">AddRegisteredViews()\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">if</span><span style=\"font-size:10pt\"> (</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.Region !=\r\n</span><span style=\"color:blue; font-size:10pt\">null</span><span style=\"font-size:10pt\">)\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">foreach</span><span style=\"font-size:10pt\"> (</span><span style=\"color:blue; font-size:10pt\">var</span><span style=\"font-size:10pt\"> viewEntry\r\n</span><span style=\"color:blue; font-size:10pt\">in</span><span style=\"font-size:10pt\">\r\n</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.RegisteredViews)\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">if</span><span style=\"font-size:10pt\"> (viewEntry.Metadata.RegionName ==\r\n</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.Region.Name)\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">Var\r\n</span><span style=\"font-size:10pt\">view = viewEntry.Value; </span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">if</span><span style=\"font-size:10pt\"> (!</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.Region.Views.Contains(view))\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">{</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span><span style=\"color:blue; font-size:10pt\">this</span><span style=\"font-size:10pt\">.Region.Add(view);\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">}</span></p>\r\n<p><span style=\"font-size:10pt\">}</span></p>\r\n<p><span style=\"font-size:10pt\">}</span></p>\r\n<p><span style=\"font-size:10pt\">}</span></p>\r\n<p><span style=\"font-size:10pt\">}</span></p>\r\n<p><span style=\"font-size:10pt\">Here is my problem now.</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span></p>\r\n<p><span style=\"font-size:10pt\">&nbsp;</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-07-23T13:54:04.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "889649",
    "ThreadId": "387854",
    "Html": "<p>Hi,</p>\r\n<p>It would be helpful, if you could provide us with a little more information about the problem you are experiencing, for example if the application is throwing an exception, etc.</p>\r\n<p>So far, based on my understanding of your scenario, I found that you were adding several instances of \"view2\" to a region. And as this view has its own region, the second registration of this view could produce an error, as the <strong>RegionManager </strong>allows only uniquely named regions. If this is your problem, you could try using scoped region managers to avoid it.</p>\r\n<p>If this is your case, you could find more information about it in the following section of the <strong>Prism </strong>documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098(v=pandp.40)#sec42\">Chapter 7: Composing the User Interface,Creating Multiple Instances of a Region</a></li>\r\n</ul>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-07-24T05:36:06.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "889808",
    "ThreadId": "387854",
    "Html": "<p>@Adami,</p>\r\n<p>Yes i am getting the error that View is already registered for the second tab that i open.</p>\r\n<p>I did go through the article but i am not registering my views to the regions in my code and i cannot do so as per my code above since the regions are being described in XAML and not code behind.&nbsp;So is there any possible alternative?</p>",
    "PostedDate": "2012-07-24T09:55:52.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "890029",
    "ThreadId": "387854",
    "Html": "<p>Hi,</p>\r\n<p>I believe, I'm not understanding your scenario completely, it would be helpful if you could provide us with more information on how you are implementing this.</p>\r\n<p>So far, as mentioned before if the exception thrown is this: <em>\"Region with the given name is already registered:\"</em>, as far as I know using scoped region managers will be the recommended approach.</p>\r\n<p>Also, take into account that by default in <strong>Prism </strong>when a view or control is added to the visual tree as a child of another control or region, any region defined in the control should be registered in the <strong>RegionManager </strong>of the parent control. The <strong>RegionManagerRegistrationBehavior</strong>, is responsible of this behavior and for making sure that the region is registered to the correct <strong>RegionManager </strong>automatically.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-07-24T13:32:32.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "891140",
    "ThreadId": "387854",
    "Html": "\r\n<p>Aadami,</p>\r\n<p>Here is my problem. When i use the following code</p>\r\n<p><span style=\"color:black; font-size:10pt\">_regionManager.Regions[</span><span style=\"color:#2b91af; font-size:10pt\">RegionNames</span><span style=\"font-size:10pt\">&nbsp;.View2TabsRegion].Add(view2, p.pGUID.ToString(),\r\n</span><span style=\"color:blue; font-size:10pt\">true</span><span style=\"font-size:10pt\">);\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">I can create multiple tabs of view2 in View1, because this creates a local manager scope. View2 has a region manager that opens up View3. View3 has a tab control that needs to add mutiple tabs of View4.</span></p>\r\n<p><span style=\"font-size:10pt\">By using the above line of code the global region manager does not recognise the View3 region in View2 because it now belongs in a local scoped region manager but i cannot access the local region manager at View3 level because\r\n the view is being generated in XAML and not in code. </span></p>\r\n<p><span style=\"font-size:10pt\">If i set the </span></p>\r\n<p><span style=\"color:black; font-size:10pt\">_regionManager.Regions[</span><span style=\"color:#2b91af; font-size:10pt\">RegionNames</span><span style=\"font-size:10pt\">&nbsp;.View2TabsRegion].Add(view2, p.pGUID.ToString(),\r\n</span><span style=\"color:blue; font-size:10pt\">false</span><span style=\"font-size:10pt\">);&nbsp; the global region manager does read all the regions upto View4.</span></p>\r\n<p><span style=\"font-size:10pt\">which i what i want but now i cannot add multiple tabs of View2 to View1. The exception that it gives me at this point is: &quot;</span>Update Region Exception was unhandled by user code&quot; and the message is:</p>\r\n<p>An exception occurred while trying to create region objects. <br>\r\n&nbsp;&nbsp;&nbsp; - The most likely causing exception was: 'System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; Microsoft.Practices.Prism.Regions.UpdateRegionsException: An exception occurred while\r\n trying to create region objects. <br>\r\n&nbsp;&nbsp;&nbsp; - The most likely causing exception was: 'System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred\r\n while creating a region with name 'View4Region'. The exception was: System.ArgumentException: Region with the given name is already registered: View4Region<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehavior.Attach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorCollection.Add(String key, IRegionBehavior regionBehavior)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).&nbsp; ---&gt; System.ArgumentException: Region with the given name is already registered: View4Region<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehavior.Attach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorCollection.Add(String key, IRegionBehavior regionBehavior)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle.InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvokeImpl(Object[] args)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvoke(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.<br>\r\n&nbsp;&nbsp;&nbsp; But also check the InnerExceptions for more detail or call .GetRootException().&nbsp; ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred while creating a region with name 'View4Region'. The\r\n exception was: System.ArgumentException: Region with the given name is already registered: View4Region<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehavior.Attach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorCollection.Add(String key, IRegionBehavior regionBehavior)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).&nbsp; ---&gt; System.ArgumentException: Region with the given name is already registered: View4Region<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehavior.Attach()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorCollection.Add(String key, IRegionBehavior regionBehavior)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnUpdatingRegions(Object sender, EventArgs e)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle.InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvokeImpl(Object[] args)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvoke(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.<br>\r\n&nbsp;&nbsp;&nbsp; But also check the InnerExceptions for more detail or call .GetRootException().</p>\r\n",
    "PostedDate": "2012-07-25T06:14:59.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "891246",
    "ThreadId": "387854",
    "Html": "\r\n<p>Hi,</p>\r\n<p>As far as I know, if you want to use multiple instances of the same view which contains a region, you will have to use scoped region managers to avoid this error. Take into account that when using scoped region manager you may have to define a custom logic\r\n to retain the new <strong>RegionManager </strong>instance (which is returned by the<strong> Region.Add</strong> method) in order to have further access to the regions defined inside this scope as the regions in views added this way won't be available in the\r\n global region manager. Note that this implementation will depend on your personal preferences and the requirements of your scenario.</p>\r\n<p>For example, a possible approach could be to implement a <strong>shared service</strong> which keeps a reference to all the created scoped region managers and defines a logic to access them. This way every time that you create an scoped region, you should\r\n register the new region manager in this service. Then in your controller classes you could consume this service, to locate the corresponding\r\n<strong>RegionManager </strong>and access the inner regions.</p>\r\n<p>You could find more information about <strong>shared services</strong> in the following chapter of the\r\n<strong>Prism </strong>documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921122%28v=pandp.40%29\">Chapter 9: Communicating Between Loosely Coupled Components</a>\r\n</li></ul>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2012-07-25T09:36:30.05-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]