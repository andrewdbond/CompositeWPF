[
  {
    "Id": "131376",
    "ThreadId": "39595",
    "Html": "I have implemented something similar to the UIComposition Quickstart use of EmployeeDetailsView switching for a View/Edit scenerio in a project.  I don't really like it (it just smells bad), because I have a named view for &quot;View-{Id}&quot; and an &quot;Edit-{Id}&quot;.  That said, it does work.<br>\r\n<br>\r\nI feel the &quot;Edit-&quot; prefix is a bad remnant of the fact that the Region for Edit and View <em>could</em> be the same.  I say could, because I have a designer that is working on a few layouts and one shows the edit screen as kind of a modal control floating in the center of the screen with a darkened background overlaying everything else (a-la the UAC popup).<br>\r\n<br>\r\nThe Region names are defined as follows:<br>\r\n    class RegionNames { <br>\r\n        public const string ViewRegion = &quot;ViewRegion&quot;;<br>\r\n        public const string EditRegion = ViewRegion;<br>\r\n    }<br>\r\n<br>\r\nIn that case, we would have the EditRegion named differently and likely use a Load Routed event to do the UI glitz.<br>\r\n<br>\r\nMy question is, how would you guys organize both this composite view and the controller/presenter interactions?\r\n",
    "PostedDate": "2008-11-10T07:34:32.117-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]