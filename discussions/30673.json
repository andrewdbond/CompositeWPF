[
  {
    "Id": "102078",
    "ThreadId": "30673",
    "Html": "Have anyone tried to define a TabControl as a region in shell and add TabItems to the TabControl (region) as Composite WPF modules?\r\n",
    "PostedDate": "2008-07-02T00:17:58.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102108",
    "ThreadId": "30673",
    "Html": "I am interested too in this topic. I need to dynamic compose every tab of a ribbon-like tabcontrol, loading autonomous modules (each module is a tab).\r\n",
    "PostedDate": "2008-07-02T03:40:19.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102150",
    "ThreadId": "30673",
    "Html": "<p>I have done it, but it took some spelunking in the stock trader RI to understand what they were doing.<br>\r\n<br>\r\nFirst notice that the Stock Trader RI uses a TabControl as a region at the bottom of the shell.xaml<br>\r\n<br>\r\nTake a look at the XAML in StockTraderRI/Resources/TabItemResource.xaml, this defines the template for the TabItems.<br>\r\n<br>\r\nNotice the line in the template that sets the &quot;Header&quot; property in the template to&nbsp;<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">Binding</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Content</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">.</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\">DataContext</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">.HeaderInfo,</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> RelativeSource</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">={</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">RelativeSource</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Self</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">}}<br>\r\n<p>&nbsp;</p>\r\n<p>The header property is used by the TabControlItem as the text or visual in the tab.&nbsp; <br>\r\n<br>\r\nIn the views put into the region (&nbsp;StockTraderRI.Modules.Position.PositionSummary.PositionSummaryView.xaml&nbsp;) they set their data&nbsp;context to the PresentationModel.</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>The Content.DataContext.HeaderInfo says, in english, to call the method HeaderInfo on the DataContext of the view used for the Tab to get the header.&nbsp; In the presentation model ( PositionSummaryPresentationModel.cs ) it has a method called HeaderInfo that returns a string.&nbsp; Because the model is set as the DataContext on the view, this method is called by the TabItemControl template via the binding shown above.<br>\r\n<br>\r\nSo all of that is a round about way of allowing each view that is loaded into the region to set the header for&nbsp;a tab.<br>\r\n<br>\r\nI am not sure if this make sense to you, but all you have to do is to load a view into the TabControl region.&nbsp; It goes in no problem.&nbsp; The problem is the header.&nbsp; You have to come up with a convention for your app that allows each view to specify the header.&nbsp; What I described above is how they did it in the RI.&nbsp; You dont have to do it that way, but you can.<br>\r\n<br>\r\nPaul</p>\r\n",
    "PostedDate": "2008-07-02T07:17:52.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102160",
    "ThreadId": "30673",
    "Html": "<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:#aaa 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:#aaa 0.1em dotted;font-style:italic\"><br>\r\nkiarz wrote:<br>\r\nHave anyone tried to define a TabControl as a region in shell and add TabItems to the TabControl (region) as Composite WPF modules? <br>\r\n<br>\r\n</div>\r\n<p>One other thing that helped me a lot was to go through an example of how to style and template a tab control.&nbsp; Once I had that down, then finding how they did it in the StockTraderRI was much easier.</p>\r\n<p>Here is one that was easy to follow.<br>\r\n<br>\r\n<a href=\"http://blog.paranoidferret.com/index.php/2008/01/18/the-wpf-tab-control-inside-and-out/\">http://blog.paranoidferret.com/index.php/2008/01/18/the-wpf-tab-control-inside-and-out/</a></p>\r\n",
    "PostedDate": "2008-07-02T07:47:31.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102353",
    "ThreadId": "30673",
    "Html": "Hi guys, I've done this but in a bit of a different way, basically what I've done is create my own document controller, the document controller basically requires that a view model be provided that implements a document contract which simply has a header and a view, both of which are FrameworkElement. This is dead simple to bind to within the UI as you can create DataTemplates for the manager.<br>\r\n<br>\r\nTake a look at my samples <a title=\"Composite WPF - Samples\" href=\"http://code.google.com/p/cwpfsamples/\">here</a> to see how I've done it, be sure to check out the source from svn as there's a bit more in it than the last build I made. Have a look at LateNight.Infrastructure/DocumentModel for my implementation.<br>\r\n<br>\r\nI'm putting together an example that works with a customer, and has multiple tab detail items for the customer that child modules can register into, this is a similar use-case to the SCSF bank branch RI with the map etc. Currently I've done this using a Progress App-Server with their sample (sports2000) DB and I can't make it part of the source, will be converting this to a SQL server equivelant so I can put it into the app :)<br>\r\n<br>\r\nI hope this helps you out.<br>\r\n-Brett<br>\r\n",
    "PostedDate": "2008-07-03T01:25:53.507-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102394",
    "ThreadId": "30673",
    "Html": "<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:#aaa 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:#aaa 0.1em dotted;font-style:italic\"><br>\r\n<br>\r\n&nbsp;</div>\r\nAnd once y'all have all of that working, go grab the dll from the Transitionals project ( <a href=\"http://www.codeplex.com/Transitionals\">www.codeplex.com/Transitionals</a> ) and then read what this guy did with the TabControl ( <a href=\"http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals\">http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals</a>&nbsp;).&nbsp; You end up with a tab control, that doesn't have to look anything like a tab control, filled from dynamically loaded Prism Modules, who's content does a 3d rotational transition&nbsp;to become visible.<br>\r\n<br>\r\nWhat a country, what a product.&nbsp; Anybody who says vista sucks, has no clue of the potential of wpf.&nbsp; This stuff is staggering and I am in awe of the thought that went into it. <br>\r\n<br>\r\nPaul<br>\r\n",
    "PostedDate": "2008-07-03T04:12:02.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102569",
    "ThreadId": "30673",
    "Html": "Nice, I'll try putting the transitionals concept into my samples. Some comments on your statement though. What a country? I'm from Australia :P And I've upgraded to XP, I couldn't stand vista, especially the windows file explorer, that's no longer keyboard friendly *gruff*<br>\r\n<br>\r\n-Brett.<br>\r\n<div style=\"border-style:dotted none;border-color:rgb(170, 170, 170) -moz-use-text-color;border-width:0.1em medium;margin:1em 0em 2.5em 3em;padding:0.2em;font-style:italic\"><br>\r\npmont wrote:<br>\r\n<br>\r\nAnd once y'all have all of that working, go grab the dll from the Transitionals project ( <a href=\"http://www.codeplex.com/Transitionals\">www.codeplex.com/Transitionals</a> ) and then read what this guy did with the TabControl ( <a href=\"http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals\">http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals</a>&nbsp;).&nbsp; You end up with a tab control, that doesn't have to look anything like a tab control, filled from dynamically loaded Prism Modules, who's content does a 3d rotational transition&nbsp;to become visible.<br>\r\n<br>\r\nWhat a country, what a product.&nbsp; Anybody who says vista sucks, has no clue of the potential of wpf.&nbsp; This stuff is staggering and I am in awe of the thought that went into it. <br>\r\n<br>\r\nPaul<br>\r\n<br>\r\n<br>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2008-07-03T14:37:14.807-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102700",
    "ThreadId": "30673",
    "Html": "<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:#aaa 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:#aaa 0.1em dotted;font-style:italic\"><br>\r\nbrettryan wrote:<br>\r\nNice, I'll try putting the transitionals concept into my samples. Some comments on your statement though. What a country? I'm from Australia :P And I've upgraded to XP, I couldn't stand vista, especially the windows file explorer, that's no longer keyboard friendly *gruff*<br>\r\n<br>\r\n-Brett.<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:rgb(170,170,170) 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:0.1em dotted;font-style:italic\"><br>\r\npmont wrote:<br>\r\n<br>\r\nAnd once y'all have all of that working, go grab the dll from the Transitionals project ( <a href=\"http://www.codeplex.com/Transitionals\">www.codeplex.com/Transitionals</a> ) and then read what this guy did with the TabControl ( <a href=\"http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals\">http://www.hardcodet.net/2008/05/wpf-tab-effects-with-transitionals</a>&nbsp;).&nbsp; You end up with a tab control, that doesn't have to look anything like a tab control, filled from dynamically loaded Prism Modules, who's content does a 3d rotational transition&nbsp;to become visible.<br>\r\n<br>\r\nWhat a country, what a product.&nbsp; Anybody who says vista sucks, has no clue of the potential of wpf.&nbsp; This stuff is staggering and I am in awe of the thought that went into it. <br>\r\n<br>\r\nPaul<br>\r\n<br>\r\n<br>\r\n</div>\r\n<br>\r\n<br>\r\n<br>\r\n</div>\r\n<br>\r\n<br>\r\n&gt;&gt; What a Country<br>\r\n<br>\r\n<a href=\"http://en.wikipedia.org/wiki/Yakov_Smirnoff\">http://en.wikipedia.org/wiki/Yakov_Smirnoff</a>&nbsp; A common expression by a comedian that was popular in America for a while.<br>\r\n<br>\r\n&gt;&gt; What a product - Vista<br>\r\n<br>\r\nIt has worked wonderfully for me.&nbsp; I was more commenting on the work that has been done on WPF, and WCF and WF, and all of the &quot;W&quot;'s by MS.&nbsp; I am staggered by the amount of thought and attention to detail that I constantly see in WPF.<br>\r\n<br>\r\nTransitionals is an easy way to get that &quot;WOW&quot; factor that is sometimes needed in apps that you demo to upper managment.&nbsp; The fact that it easily plugs into Prism is very very nice.<br>\r\n<br>\r\nPaul&nbsp; ( The next couple of days are a holiday for me )\r\n",
    "PostedDate": "2008-07-04T05:31:32.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "103206",
    "ThreadId": "30673",
    "Html": "<p>Does anyone have a good model for create closeable tab items using regions?</p>\r\n<p>I'm new to WPF and Prism so correct me if I'm missing something.</p>\r\n<p>The example above for adding metadata such as a tabItem header is simple enough,<br>\r\nbut what if I want a view to be closed when a button on the tab item header is clicked?</p>\r\n<p>The CAB was easy because the workspace knew about the items it hosted, but Prism workspaces don't, they're managed, and the control (or Shell)&nbsp;can't get its IRegion.<br>\r\nEven the collection that is bound to the TabControl doesn't give me access to modify its collection.</p>\r\n<p>How do I wire up this logic with only defining the close button in XAML and keep my code clean?<br>\r\n<br>\r\nOr is it better for me to use the LateNight strategy and not use regions?</p>\r\n",
    "PostedDate": "2008-07-07T16:52:51.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "105604",
    "ThreadId": "30673",
    "Html": "<p>There's a couple of things that you can do to get this scenario working:</p>\r\n<ol>\r\n    <li>Modify the headertemplate of a tabitem to show a close button. </li>\r\n    <li>Hook up the click event and retrieve the instance of the tabcontrol on which the tabitem that is the parent of the button is hosted.</li>\r\n    <li>Retrieve the region name by invoking RegionManager.GetRegionName(tabControl)</li>\r\n    <li>Remove the view from the found region</li>\r\n</ol>\r\n<p>This should do it.</p>\r\n",
    "PostedDate": "2008-07-18T02:52:01.87-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "116154",
    "ThreadId": "30673",
    "Html": "I'm dissecting the StockTrader RI to figure out how to use tab controls and loading views into tabs. I'm looking for a simpler example of how to&nbsp;load a view&nbsp;into a tab item and a) add it if it's not there or b) activate it if it already is.<br>\r\n<br>\r\nI can spend the night building my own spike and trying to figure out how to do this with the RI but there must be an easier way? Creating a TabControl with a region name added to it just creates a new tab anytime your module is loaded (and there's the question of how to set the header). Is there a simple example out there to do this? Any links here talk about it, but I'm missing something in what they actually do.\r\n",
    "PostedDate": "2008-09-04T13:41:39.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "116213",
    "ThreadId": "30673",
    "Html": "<span style=\"font-family:'Segoe UI';font-size:13px\">Hi bsimser, earlier in this post I mentioned a way of achieving this through my samples project found <a title=\"Composite WPF - Samples\" href=\"http://code.google.com/p/cwpfsamples/\" style=\"text-decoration:underline;color:rgb(62, 98, 166)\">here</a>. While this doesn't use a region manager it does show of a way to create modular tab components with ease. Basically it works as a document model where each document is rendered as a tab item, the header is then taken from the document header.</span><span style=\"font-family:'Segoe UI';font-size:13px\"></span>$0<span style=\"font-family:'Segoe UI';font-size:13px\">$0</span>$0$0<span style=\"font-family:'Segoe UI';font-size:13px\">I have been very busy on other projects and haven't had a chance to get back to the samples to create more examples of how to do things with WPF and CompositeUI. I appologize for this and hope to do more on this soon.</span>$0$0$0$0$0<span style=\"font-family:'Segoe UI';font-size:13px\">-Brett</span>$0$0<span style=\"font-family:'Segoe UI';font-size:13px\">$0</span>$0",
    "PostedDate": "2008-09-04T18:30:19.587-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "249040",
    "ThreadId": "30673",
    "Html": "<p>I have followed this approach to the letter and although it results in TabItems being added for each view I inject into the region, I don't get any content on my TabItems. My (very simple) view simply has a TextBox and an Image on it, but these don't show up in the Tab Control.</p>\r\n<p>Any ideas?</p>\r\n<p>Region Definition:</p>\r\n<pre><code><span><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Controls</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">TabControl</span> \r\n    <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MainRegion</span><span style=\"color:Black\">&quot;</span> \r\n    <span style=\"color:Red\">cal:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Static Infrastructure:RegionNames.TabRegion}</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">ItemContainerStyle</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource ShellTabItemStyle}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\r\n</pre>\r\n</div>\r\nStyle Definition:<br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ShellTabItemStyle</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type TabItem}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Header</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<br><br></span></code></pre>",
    "PostedDate": "2009-10-23T09:25:43.393-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "569905",
    "ThreadId": "30673",
    "Html": "<p>Just to make it clear, here is the code I used to get this to work (taken from the Prism StockTrader RI and adapted). The key is to have the Setter for the Header property in the TabItem Style have a value bound to the HeaderInfo property of the Content's DataContext. (In my code, the View's DataContext is set to the ViewModel, which has a HeaderInfo property.)</p>\r\n<p>XAML:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Window</span> <span style=\"color: red;\">x:Class</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">ModularityWithMef.Desktop.Shell</span><span style=\"color: black;\">\"</span>\r\n        <span style=\"color: red;\">xmlns</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color: black;\">\"</span>\r\n\t<span style=\"color: red;\">xmlns:x</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color: black;\">\"</span>\r\n\t<span style=\"color: red;\">xmlns:Regions</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:Microsoft.Practices.Prism.Regions;assembly=Microsoft.Practices.Prism</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Window</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Window.Resources</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: green;\">&lt;!-- TabItem --&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type TabItem}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Black</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Header</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Template</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type TabItem}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Border</span> <span style=\"color: red;\">BorderThickness</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">BorderBrush</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Gray</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Padding</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">2</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ContentPresenter</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Content</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ContentSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Header</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">RecognizesAccessKey</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Border</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate.Triggers</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Trigger</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">IsSelected</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">true</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">TargetName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Content</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Opacity</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Trigger</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Trigger</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">IsSelected</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">false</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">TargetName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Content</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Opacity</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">0.5</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Trigger</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate.Triggers</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Window.Resources</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">TabControl</span> <span style=\"color: red;\">Regions:RegionManager.RegionName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">ContentRegion</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">TabItem</span> <span style=\"color: red;\">Header</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">HeaderInXaml</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">TabControl</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Window</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>My module (that goes in as a TabItem):</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">namespace</span> ModuleB\r\n{<div style=\"color: black; background-color: white;\"><pre>    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> ModuleBView\r\n    {\r\n        <span style=\"color: blue;\">public</span> ModuleBView()\r\n        {\r\n            InitializeComponent();\r\n            DataContext = <span style=\"color: blue;\">new</span> ModuleBViewModel();\r\n        }\r\n    }\r\n\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> ModuleBViewModel\r\n    {\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">const</span> <span style=\"color: blue;\">string</span> _title = <span style=\"color: #a31515;\">\"Module B\"</span>;\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> HeaderInfo { <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> _title; } }\r\n    }\r\n\r\n    [ModuleExport(<span style=\"color: blue;\">typeof</span>(ModuleB), InitializationMode = InitializationMode.WhenAvailable)]\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> ModuleB : IModule\r\n    {\r\n        [Import(AllowRecomposition = <span style=\"color: blue;\">false</span>)]\r\n        <span style=\"color: blue;\">private</span> IRegionManager _regionManager;\r\n\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Initializes a new instance of the &lt;see cref=\"ModuleB\"/&gt; class.</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: blue;\">public</span> ModuleB()\r\n        {\r\n        }\r\n\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\r\n        <span style=\"color: gray;\">///</span><span style=\"color: green;\"> Notifies the module that it has be initialized.</span>\r\n        <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Initialize()\r\n        {\r\n            _regionManager.RegisterViewWithRegion(<span style=\"color: #a31515;\">\"ContentRegion\"</span>, () =&gt; <span style=\"color: blue;\">new</span> ModuleBView());\r\n        }\r\n    }</pre>\r\n</div>\r\n</pre>\r\n<pre>}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-02-21T15:39:13.03-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "628577",
    "ThreadId": "30673",
    "Html": "<p>Hi pckujawa,</p>\r\n<p>How about your shell project? did you code anything there? I'd do exactly the same thing as yours but could not make it work (The Tab's header is Empty).And I found that the datacontext of the Tabcontrol in the shell is null, is there anything I missed? How should I bind the Tabcontrol's datacontext to ModuleB?&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you.</p>",
    "PostedDate": "2011-06-16T02:24:44.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]