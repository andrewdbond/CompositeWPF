[
  {
    "Id": "170527",
    "ThreadId": "50888",
    "Html": "I have a OrderView and displays this view in a separate window by using RegionPopupBehaviors.cs (from StockTraderRI).<br>\r\nThis is my code, using a scoped region:<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_ShellRegion.Add(view, null, true);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_ShellRegion.Activate(view);<br>\r\n(the shellRegion is of type RegionPopupBehaviours)<br>\r\nThis works fine, but I am not able display multiple windows at the same time.<br>\r\nDoes anybody know how ?<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-22T04:43:07.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172456",
    "ThreadId": "50888",
    "Html": "<span style=\"font-size:10pt;font-family:'courier new'\">\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:calibri\">Hi </span><a href=\"http://www.codeplex.com/site/users/view/larserik\"><span style=\"color:windowtext;font-family:calibri;text-decoration:none;text-underline:none\">larserik</span></a><span style=\"font-family:calibri\">, </span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Unfortunately the <b>RegionPopupBehavior </b>was designed to show only one popup window at a time. Whenever you change the active view to another the previous window is closed and a new one is opened. You can verify this looking at the <b>DialogActivationBehavior (StockTraderRI.Infrastructure.Behaviors. DialogActivationBehavior) </b>implementation<b> :</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-family:calibri\"> </span></b></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">            private</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">void</span> ActiveViews_CollectionChanged(<span style=\"color:blue\">object</span> sender, NotifyCollectionChangedEventArgs e)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">if</span> (e.Action == NotifyCollectionChangedAction.Add)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.CloseContentDialog();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.PrepareContentDialog(e.NewItems[0]);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (e.Action == NotifyCollectionChangedAction.Remove)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.CloseContentDialog();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">So to be able to show multiple windows at the same time you will need to create a new behavior. I'll try to point out how to do it modifying the existing <b>RegionPopupBehavior </b>and<b> DialogActivationBehavior </b>classes. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">First you should modify the <b>DialogActivationBehavior</b> class. Change the <b>ActiveViews_CollectionChanged </b>method<b> </b>not to close the active window when adding new elements and when removing elements we need to specify which window to close. The method should look like this (in <b>bold</b> code modified):</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">      </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">        private</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">void</span> ActiveViews_CollectionChanged(<span style=\"color:blue\">object</span> sender, NotifyCollectionChangedEventArgs e)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">if</span> (e.Action == NotifyCollectionChangedAction.Add)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:green\">//this.CloseContentDialog();</span></span></b></p>\r\n<span style=\"font-size:10pt;font-family:'courier new'\">\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.PrepareContentDialog(e.NewItems[0]);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (e.Action == NotifyCollectionChangedAction.Remove)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <b><span style=\"color:blue\">this</span>.CloseContentDialog(((FrameworkElement)e.OldItems[0]).Parent <span style=\"color:blue\">as</span> Window);</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Something similar should be done with the <b>ContentDialogClosed</b> method:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">        protected</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ContentDialogClosed(<span style=\"color:blue\">object</span> sender, System.<span style=\"color:#2b91af\">EventArgs</span> e)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <b>Window window = sender <span style=\"color:blue\">as</span> Window;</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">if</span> (window != <span style=\"color:blue\">null</span>)</span></b></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></b></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.Region.Deactivate(window.Content);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <span style=\"color:blue\">this</span>.CloseContentDialog(window);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <b>}</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }<span style=\"color:blue\">     </span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">You will also need to modify the <b>CloseContentDialog</b></span> <span style=\"font-family:calibri\">method to receive the window to close:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">        protected</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">void</span> CloseContentDialog(<b>Window contentDialog</b>)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">if</span> (contentDialog != <span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                contentDialog.Closed -= <span style=\"color:blue\">this</span>.ContentDialogClosed;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                contentDialog.Close();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                contentDialog.Content = <span style=\"color:blue\">null</span>;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                contentDialog.Owner = <span style=\"color:blue\">null</span>;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }      </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Finally you should modify the<b> RegisterNewPopupRegion </b>method of the<b> </b> <b>RegionPopupBehaviors </b>class<b> </b>to use a <b>Region</b> instead of a <b>SingleActiveRegion</b>. The code should look as follows (changed code in <b>bold</b>) </span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">       public</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> RegisterNewPopupRegion(DependencyObject owner, <span style=\"color:blue\">string</span> regionName)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:green\">// Creates a new region and registers it in the default region manager.</span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:green\">// Another option if you need the complete infrastructure with the default region behaviors</span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:green\">// is to extend DelayedRegionCreationBehavior overriding the CreateRegion method and create an </span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:green\">// instance of it that will be in charge of registering the Region once a RegionManager is</span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:green\">// set as an attached property in the Visual Tree.</span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            IRegionManager regionManager = ServiceLocator.Current.GetInstance&lt;IRegionManager&gt;();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <span style=\"color:blue\">if</span> (regionManager != <span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                <b>IRegion region = <span style=\"color:blue\">new</span> Region();</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                DialogActivationBehavior behavior;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">#if</span><span style=\"font-size:10pt;font-family:'courier new'\"> SILVERLIGHT</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:gray;font-family:'courier new'\">                behavior = new PopupDialogActivationBehavior();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">#else</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                behavior = <span style=\"color:blue\">new</span> WindowDialogActivationBehavior();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">#endif</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                behavior.HostControl = owner;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                region.Behaviors.Add(DialogActivationBehavior.BehaviorKey, behavior);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                regionManager.Regions.Add(regionName, region);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#1f497d;font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hope it helps!</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Matias Bonaventura</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"font-family:calibri\">http://blogs.southworks.net/matiasb</span></a> </p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></span>\r\n",
    "PostedDate": "2009-03-26T12:15:06.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "212123",
    "ThreadId": "50888",
    "Html": "<p>Hi all,</p>\r\n<p>Matias,</p>\r\n<p>&nbsp;</p>\r\n<p>I tried your solution but it doesn't work, the mother &quot;window&quot; is always closed when a child is opened. Is there any fix to this ?</p>\r\n<p>&nbsp;</p>\r\n<p>BR</p>",
    "PostedDate": "2009-07-15T06:57:37.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "212806",
    "ThreadId": "50888",
    "Html": "<p>Hi Br,&nbsp;</p>\r\n<p>I repeated those steps and it worked for me. Its opening several popups and even new popups from within other popups.&nbsp;&nbsp;</p>\r\n<p>I uploaded a solution based on the HelloWorld Quickstart with this new beheavior so that you can compare with your scenario.<br>You can download the solution here (the code is &quot;as is&quot; , just show this behavior and by no means demonstrate good practices) : <a href=\"http://blogs.southworks.net/matiasb/files/2009/07/multiplepopupsdesktop.zip\">http://blogs.southworks.net/matiasb/files/2009/07/multiplepopupsdesktop.zip</a></p>\r\n<p><span style=\"font-size:10pt\" lang=EN-US>&nbsp;</span></p>\r\n<p>Hope it helps!&nbsp;</p>\r\n<p>Matias Bonaventura<br><a href=\"http://blogs.southworks.net/matiasb\">http://blogs.southworks.net/matiasb</a></p>",
    "PostedDate": "2009-07-16T15:48:43.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "680033",
    "ThreadId": "50888",
    "Html": "<p>Hi Matias!<br /><br />After two years your solution remains actual!<br /><br />It was helpful for me, thank you!<br /><br />Regards,<br /><br />Mykola</p>",
    "PostedDate": "2011-10-04T15:14:24.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "700005",
    "ThreadId": "50888",
    "Html": "<p>Great solution, it helped me a lot!</p>\n<p>I've modified the solution further as two of the StockTrader unit tests fails</p>\n<p>The unit test doesn't have a parent Window (using a MockWindow and does not get its parent set with the modification) in this line:</p>\n<p><span style=\"color: #ff0000;\">this.CloseContentDialog(((FrameworkElement)e.OldItems[0]).Parent as Window);</span></p>\n<p>I investigated this further and came up with this solution (the commented lines refer to the above example)</p>\n<p>In <span style=\"color: #ff0000;\">DialogActivationBehaviour.cs</span></p>\n<div style=\"background-color: white; color: black;\">\n<div style=\"background-color: white; color: black;\">\n<pre><div style=\"background-color: white; color: black;\"><pre>            <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (e.Action == NotifyCollectionChangedAction.Remove)\r\n            {\r\n                <span style=\"color: blue;\">var</span> viewContent = ((FrameworkElement)e.OldItems[0]);\r\n\r\n                <span style=\"color: blue;\">var</span> contentWindow = FindContentWindow(viewContent);\r\n\r\n                <span style=\"color: green;\">//this.CloseContentDialog(((FrameworkElement)e.OldItems[0]).Parent as Window);</span>\r\n                <span style=\"color: blue;\">this</span>.CloseContentDialog(contentWindow);\r\n            }</pre>\n</div>\n<div style=\"background-color: white; color: black;\">\n<pre>        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> CloseContentDialog(IWindow contentWindow)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (contentWindow != <span style=\"color: blue;\">null</span>)\r\n            {\r\n                contentWindow.Closed -= <span style=\"color: blue;\">this</span>.ContentDialogClosed;\r\n                contentWindow.Close();\r\n                contentWindow.Content = <span style=\"color: blue;\">null</span>;\r\n                contentWindow.Owner = <span style=\"color: blue;\">null</span>;\r\n\r\n                contentWindows.Remove(contentWindow);\r\n            }\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> CloseContentDialog(Window window)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (window != <span style=\"color: blue;\">null</span>)\r\n            {\r\n                window.Closed -= <span style=\"color: blue;\">this</span>.ContentDialogClosed;\r\n                window.Close();\r\n                window.Content = <span style=\"color: blue;\">null</span>;\r\n                window.Owner = <span style=\"color: blue;\">null</span>;\r\n            }\r\n        }\r\n</pre>\n<pre><div style=\"background-color: white; color: black;\"><pre>        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> ContentDialogClosed(<span style=\"color: blue;\">object</span> sender, System.EventArgs e)\r\n        {\r\n            Window window = sender <span style=\"color: blue;\">as</span> Window;\r\n\r\n            <span style=\"color: blue;\">if</span> (window != <span style=\"color: blue;\">null</span>)\r\n            {\r\n                <span style=\"color: blue;\">this</span>.Region.Deactivate(window.Content);\r\n                <span style=\"color: blue;\">this</span>.CloseContentDialog(window);\r\n            }\r\n\r\n            IWindow contentWindow = sender <span style=\"color: blue;\">as</span> IWindow;\r\n\r\n            <span style=\"color: blue;\">if</span> (contentWindow != <span style=\"color: blue;\">null</span>)\r\n            {\r\n                <span style=\"color: blue;\">this</span>.Region.Deactivate(contentWindow.Content);\r\n                <span style=\"color: blue;\">this</span>.CloseContentDialog(contentWindow);\r\n            }\r\n        }\r\n</pre>\n</div>\n</pre>\n</div>\n</pre>\n</div>\n</div>\n<div style=\"background-color: white; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> IWindow FindContent(<span style=\"color: blue;\">object</span> usercontrol)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> contentWindows.FirstOrDefault(w =&gt; w.Content == usercontrol);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</div>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> PrepareContentDialog(<span style=\"color: blue;\">object</span> view)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IWindow window = <span style=\"color: blue;\">this</span>.CreateWindow();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window = <span style=\"color: blue;\">this</span>.CreateWindow();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.Content = view;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.Owner = <span style=\"color: blue;\">this</span>.HostControl;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.Closed += <span style=\"color: blue;\">this</span>.ContentDialogClosed;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.Style = <span style=\"color: blue;\">this</span>.GetStyleForView();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contentWindows.Add(window);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.Show();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">   private</span> IList&lt;IWindow&gt; contentWindows = <span style=\"color: blue;\">new</span> List&lt;IWindow&gt;();</pre>\n</div>",
    "PostedDate": "2011-11-17T23:01:36.987-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]