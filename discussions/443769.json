[
  {
    "Id": "1043984",
    "ThreadId": "443769",
    "Html": "Hi,<br />\nI'm trying to build Visual Studio like interface for my LOB application which is based on Prism 4 and MEF. so i used the following region adapters as per sample called Central :<br />\n1-AnchorableRegionAdapter <br />\n<pre><code>[Export(typeof(AnchorableRegionAdapter))]\n    [PartCreationPolicy(CreationPolicy.NonShared)]\n    public class AnchorableRegionAdapter : RegionAdapterBase&lt;LayoutAnchorable&gt;\n    {\n        [ImportingConstructor]\n        public AnchorableRegionAdapter(IRegionBehaviorFactory regionBehaviorFactory)\n            : base(regionBehaviorFactory)\n        {\n        }\n\n        protected override void Adapt(IRegion region, LayoutAnchorable regionTarget)\n        {\n            if (regionTarget == null)\n                throw new ArgumentNullException(&quot;regionTarget&quot;);\n\n            if (regionTarget.Content != null)\n            {\n                throw new InvalidOperationException();\n            }\n\n            region.ActiveViews.CollectionChanged += delegate\n            {\n                regionTarget.Content = region.ActiveViews.FirstOrDefault();\n            };\n\n            region.Views.CollectionChanged +=\n                (sender, e) =&gt;\n                {\n                    if (e.Action == NotifyCollectionChangedAction.Add &amp;&amp; region.ActiveViews.Count() == 0)\n                    {\n                        region.Activate(e.NewItems[0]);\n                    }\n                };\n        }\n\n        protected override IRegion CreateRegion()\n        {\n            return new SingleActiveRegion();\n        }\n    }</code></pre>\n\n2-DocumentRegionAdapter<br />\n<pre><code>[Export(typeof(DocumentRegionAdapter))]\n    [PartCreationPolicy(CreationPolicy.NonShared)]\n    public class DocumentRegionAdapter : RegionAdapterBase&lt;LayoutDocument&gt;\n    {\n        [ImportingConstructor]\n        public DocumentRegionAdapter(IRegionBehaviorFactory regionBehaviorFactory)\n            : base(regionBehaviorFactory)\n        {\n        }\n\n        protected override void Adapt(IRegion region, LayoutDocument regionTarget)\n        {\n            if (regionTarget == null)\n                throw new ArgumentNullException(&quot;regionTarget&quot;);\n\n            if (regionTarget.Content != null)\n            {\n                throw new InvalidOperationException();\n            }\n\n            region.ActiveViews.CollectionChanged += delegate\n            {\n                regionTarget.Content = region.ActiveViews.FirstOrDefault();\n            };\n\n            region.Views.CollectionChanged +=\n                (sender, e) =&gt;\n                {\n                    if (e.Action == NotifyCollectionChangedAction.Add &amp;&amp; region.ActiveViews.Count() == 0)\n                    {\n                        region.Activate(e.NewItems[0]);\n                    }\n                };\n        }\n\n        protected override IRegion CreateRegion()\n        {\n            return new SingleActiveRegion();\n        }</code></pre>\n\n3-AvalonDockRegion<br />\n<pre><code>[Export(typeof(AvalonDockRegion))]\n    public class AvalonDockRegion : DependencyObject\n    {\n        #region Name\n\n        /// &lt;summary&gt;\n        /// Name Attached Dependency Property\n        /// &lt;/summary&gt;\n        public static readonly DependencyProperty NameProperty =\n            DependencyProperty.RegisterAttached(&quot;Name&quot;, typeof(string), typeof(AvalonDockRegion),\n                new FrameworkPropertyMetadata((string)null,\n                    new PropertyChangedCallback(OnNameChanged)));\n\n        /// &lt;summary&gt;\n        /// Gets the Name property.  This dependency property\n        /// indicates the region name of the layout item.\n        /// &lt;/summary&gt;\n        public static string GetName(DependencyObject d)\n        {\n            return (string)d.GetValue(NameProperty);\n        }\n\n        /// &lt;summary&gt;\n        /// Sets the Name property.  This dependency property\n        /// indicates the region name of the layout item.\n        /// &lt;/summary&gt;\n        public static void SetName(DependencyObject d, string value)\n        {\n            d.SetValue(NameProperty, value);\n        }\n\n        /// &lt;summary&gt;\n        /// Handles changes to the Name property.\n        /// &lt;/summary&gt;\n        private static void OnNameChanged(DependencyObject s, DependencyPropertyChangedEventArgs e)\n        {\n            CreateRegion(s, (string)e.NewValue);\n        }\n\n        #endregion Name\n\n        private static void CreateRegion(object element, string regionName)\n        {\n            if (element == null)\n                throw new ArgumentNullException(&quot;element&quot;);\n\n            //If I'm in design mode the main window is not set\n            if (Application.Current == null ||\n                Application.Current.MainWindow == null)\n                return;\n\n            try\n            {\n                if (ServiceLocator.Current == null)\n                    return;\n\n                // Build the region\n                var mappings = ServiceLocator.Current.GetInstance&lt;RegionAdapterMappings&gt;();\n                if (mappings == null)\n                    return;\n                IRegionAdapter regionAdapter = mappings.GetMapping(element.GetType());\n                if (regionAdapter == null)\n                    return;\n\n                regionAdapter.Initialize(element, regionName);\n            }\n            catch (Exception ex)\n            {\n                throw new RegionCreationException(string.Format(&quot;Unable to create region {0}&quot;, regionName), ex);\n            }\n        }</code></pre>\n\n4-DockingManagerRegionAdapter<br />\n<pre><code> [Export(typeof(DockingManagerRegionAdapter))]\n    [PartCreationPolicy(CreationPolicy.NonShared)]\n    public class DockingManagerRegionAdapter : RegionAdapterBase&lt;DockingManager&gt;\n    {\n        [ImportingConstructor]\n        public DockingManagerRegionAdapter(IRegionBehaviorFactory regionBehaviorFactory)\n            : base(regionBehaviorFactory)\n        {\n        }\n\n        protected override void Adapt(IRegion region, DockingManager regionTarget)\n        {\n        }\n\n        protected override IRegion CreateRegion()\n        {\n            return new Region();\n        }\n\n        protected override void AttachBehaviors(IRegion region, DockingManager regionTarget)\n        {\n            if (region == null)\n                throw new System.ArgumentNullException(&quot;region&quot;);\n\n            // Add the behavior that syncs the items source items with the rest of the items\n            region.Behaviors.Add(DockingManagerDocumentsSourceSyncBehavior.BehaviorKey, new DockingManagerDocumentsSourceSyncBehavior\n            {\n                HostControl = regionTarget\n            });\n\n            base.AttachBehaviors(region, regionTarget);\n        }</code></pre>\n\nand Here is the part of  XAML of my ShellWindow that contains AvalonDock:<br />\n<pre><code>&lt;avalonDock:DockingManager x:Name=&quot;dockingManager&quot;&gt;\n            &lt;avalonDock:LayoutRoot&gt;\n                &lt;avalonDock:LayoutPanel Orientation=&quot;Horizontal&quot;&gt;\n                    &lt;!--Control Panel--&gt;\n                    &lt;avalonDock:LayoutAnchorablePaneGroup DockWidth=&quot;150&quot; Orientation=&quot;Vertical&quot;&gt;\n                        &lt;avalonDock:LayoutAnchorablePane&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Systems&quot;  regAdapters:AvalonDockRegion.Name=&quot;{x:Static inf:RegionNames.SubsystemRegion}&quot;&gt;\n                                &lt;!--&lt;TextBox/&gt;--&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Piping&quot; regAdapters:AvalonDockRegion.Name=&quot;{x:Static inf:RegionNames.TestPackRegion}&quot;&gt;\n                                &lt;!--&lt;TextBox/&gt;--&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Equipment&quot; regAdapters:AvalonDockRegion.Name=&quot;{x:Static inf:RegionNames.EquipmentListRegion}&quot;&gt;\n                                &lt;!--&lt;TextBox/&gt;--&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                        &lt;/avalonDock:LayoutAnchorablePane&gt;\n                        &lt;avalonDock:LayoutAnchorablePane&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 3&quot;&gt;\n                             &lt;/avalonDock:LayoutAnchorable&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 4&quot;&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                        &lt;/avalonDock:LayoutAnchorablePane&gt;\n                    &lt;/avalonDock:LayoutAnchorablePaneGroup&gt;\n                    &lt;!--Main Pane--&gt;\n                    &lt;avalonDock:LayoutDocumentPane &gt;\n                                                &lt;avalonDock:LayoutDocument regAdapters:AvalonDockRegion.Name=&quot;{x:Static inf:RegionNames.MainRegion}&quot;/&gt;\n\n                    &lt;/avalonDock:LayoutDocumentPane&gt;\n                    &lt;!--Auxilary Panes--&gt;\n                    &lt;avalonDock:LayoutAnchorablePaneGroup DockWidth=&quot;150&quot; Orientation=&quot;Vertical&quot;&gt;\n                        &lt;avalonDock:LayoutAnchorablePane&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 1&quot;&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 2&quot;&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                        &lt;/avalonDock:LayoutAnchorablePane&gt;\n                        &lt;avalonDock:LayoutAnchorablePane&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 3&quot;&gt;\n                                \n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                            &lt;avalonDock:LayoutAnchorable Title=&quot;Tool 4&quot;&gt;\n                            &lt;/avalonDock:LayoutAnchorable&gt;\n                        &lt;/avalonDock</code></pre>\n\nand here is the override of RegionAdapterMappings in the Bootstrapper<br />\n<br />\nplease see next because it is limited by 1000 letter<br />\n",
    "PostedDate": "2013-05-15T09:54:45.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1043986",
    "ThreadId": "443769",
    "Html": "<pre><code> protected override RegionAdapterMappings ConfigureRegionAdapterMappings()\n        {\n            base.ConfigureRegionAdapterMappings();\n\n            var regionAdapterMappings = ServiceLocator.Current.GetInstance&lt;RegionAdapterMappings&gt;();\n            if (regionAdapterMappings != null)\n            {\n                regionAdapterMappings.RegisterMapping(typeof(DockingManager),\n                        ServiceLocator.Current.GetInstance&lt;DockingManagerRegionAdapter&gt;());\n                regionAdapterMappings.RegisterMapping(typeof(LayoutAnchorable),\n                        ServiceLocator.Current.GetInstance&lt;AnchorableRegionAdapter&gt;());\n                regionAdapterMappings.RegisterMapping(typeof(LayoutDocument),\n                        ServiceLocator.Current.GetInstance&lt;DocumentRegionAdapter&gt;());\n            }\n\n            return regionAdapterMappings;\n        }</code></pre>\n\nNow when i run i get this exception:<br />\n",
    "PostedDate": "2013-05-15T09:57:40.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1044088",
    "ThreadId": "443769",
    "Html": "Hi jivara,\r<br />\n<br />\nIt seems that the exception message was not posted. Please, edit the post to include it so that we can help you with it. Also, it would be helpful if you could also provide us a description of the error you are experiencing, as well as which behavior or component is throwing the exception.\r<br />\n<br />\nRegards,\r<br />\n<br />\nDamian Cherubini\r<br />\n<a href=\"http://blogs.southworks.net/dcherubini\" rel=\"nofollow\">http://blogs.southworks.net/dcherubini</a><br />\n",
    "PostedDate": "2013-05-15T13:12:02.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1051510",
    "ThreadId": "443769",
    "Html": "Hi,\r<br />\n<br />\nDid you get it working? if yes the can you please share the sample app code. I am also evaluating AvalongDoc for building LOB apps where your each view will load as tab in the document pane. \r<br />\n<br />\nThanks and regards,\r<br />\nMilind Yande<br />\n",
    "PostedDate": "2013-06-01T04:34:55.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]