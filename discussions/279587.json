[
  {
    "Id": "698723",
    "ThreadId": "279587",
    "Html": "\r\n<p>Similar to this post&nbsp;<a href=\"http://social.msdn.microsoft.com/Forums/en/wpf/thread/d10de84c-bef1-46ed-8127-7ad19b8eec37\">http://social.msdn.microsoft.com/Forums/en/wpf/thread/d10de84c-bef1-46ed-8127-7ad19b8eec37</a></p>\r\n<p>I have finally worked out how to load WPF window from a class library as needed for a Addin application I'm building.</p>\r\n<p>Now I'd like to use Prism however I'm not sure how to show the shell via the bootstrapper.</p>\r\n<p>eg for running outside the addin (dll) I change from class to windows application so i need to launch the shell / bootstrapper form the static class Program &gt;&nbsp;Main() entry point.</p>\r\n<p>Is this possible? How?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks.</p>\r\n",
    "PostedDate": "2011-11-15T17:03:35.11-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "698778",
    "ThreadId": "279587",
    "Html": "<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> DependencyObject CreateShell()\r\n        {\r\nWindow win = loaded-<span style=\"color: blue;\">from</span>-your-dll;\r\n\r\n            Application.Current.RootVisual = win;\r\n\r\n            <span style=\"color: blue;\">return</span> win;\r\n        }\r\n</pre>\r\n</div>",
    "PostedDate": "2011-11-15T22:06:50.137-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "698858",
    "ThreadId": "279587",
    "Html": "<p>Thanks but I'm still lost on this 1... Im not sure what&nbsp;code to put in \"loaded-<span style=\"color: blue;\">from</span>-your-dll; value? RootVisual is not part of Application.Current... <a href=\"http://stackoverflow.com/questions/2216917/wpf-equivalent-to-silverlight-rootvisual\">http://stackoverflow.com/questions/2216917/wpf-equivalent-to-silverlight-rootvisual</a></p>\n<p>and where the Bootstrapper runs from... I tried may things and could not make it work...</p>\n<p>Maybe you could advise how I can change rthe code I have that is working in WPF app just not from windows or a dll:</p>\n<p>&nbsp;</p>\n<pre><div style=\"background-color: white; color: black;\"><pre> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">class</span> Program\r\n    {\r\n        [STAThread]\r\n        <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Main()\r\n        {\r\n\t\t<span style=\"color: green;\">// entry point to run from</span>\r\n        }\r\n    }\r\n</pre>\n</div>\n&nbsp;</pre>\n<p>Bootstrapper?</p>\n<pre style=\"background-color: white; color: black;\"><pre> <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> Bootstrapper : UnityBootstrapper\r\n    {\r\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> DependencyObject CreateShell()\r\n        {\r\n            <span style=\"color: blue;\">return</span> Container.Resolve();\r\n        }\r\n\r\n\r\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\r\n        {\r\n            <span style=\"color: blue;\">base</span>.InitializeShell();\r\n\r\n            Application.Current.MainWindow = (Window)Shell;\r\n            Application.Current.MainWindow.Show();\r\n        }\r\n\r\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ConfigureModuleCatalog()\r\n        {\r\n            <span style=\"color: blue;\">base</span>.ConfigureModuleCatalog();\r\n\r\n            <span style=\"color: blue;\">var</span> moduleCatalog = (ModuleCatalog)ModuleCatalog;\r\n            moduleCatalog.AddModule(<span style=\"color: blue;\">typeof</span>(FamilyBrowserModule));\r\n        }\r\n\r\n    }</pre>\n</pre>\n<pre><br />&nbsp;App.xaml.cs</pre>\n<pre> </pre>\n<pre style=\"background-color: white; color: black;\"><pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> App : Application\r\n    {\r\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> OnStartup(StartupEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">base</span>.OnStartup(e);\r\n\r\n            Bootstrapper bootstrapper = <span style=\"color: blue;\">new</span> Bootstrapper();\r\n            bootstrapper.Run();\r\n        }\r\n    }\r\n</pre>\n</pre>\n<pre>&nbsp;</pre>\n<pre>Thanks&nbsp;</pre>\n<p>&nbsp;</p>",
    "PostedDate": "2011-11-16T02:35:18.737-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699051",
    "ThreadId": "279587",
    "Html": "<p>Hi,</p>\n<p>Based on my understanding, in WPF you can show a <strong>Window </strong>in the <strong>Main</strong> method using the following code:</p>\n<div style=\"color: black; background-color: white;\">\n<pre>[STAThread]\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Main()\n{\n      Application app = <span style=\"color: blue;\">new</span> Application();\n      Window myWindow = <span style=\"color: blue;\">new</span> Window();\n      myWindow.Show();\n      app.Run(myWindow);\n}\n</pre>\n</div>\n<p>Knowing this, you might be possible that you could use a bootstrapper, for example, creating a property in your <strong>Bootstrapper </strong>class that accepts an <strong>Application </strong> object and in the <strong>InitializeShell </strong>method show the <strong>Shell </strong> like above:</p>\n<div style=\"color: black; background-color: white;\">\n<pre>[STAThread]\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Main()\n{\n      Application app = <span style=\"color: blue;\">new</span> Application();\n      MyBootstrapper bootstrapper = <span style=\"color: blue;\">new</span> MyBootstrapper();\n      bootstrapper.CurrentApplication = app;\n      bootstrapper.Run();\n}\n\n...\n\n<span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\n{\n      <span style=\"color: blue;\">base</span>.InitializeShell();\n\n      <span style=\"color: blue;\">if</span>( <span style=\"color: blue;\">this</span>.CurrentApplication != <span style=\"color: blue;\">null</span> )\n      {\n            Window shell = <span style=\"color: blue;\">this</span>.Shell <span style=\"color: blue;\">as</span> Window;\n            shell.Show();\n            <span style=\"color: blue;\">this</span>.CurrentApplication.Run(shell);\n      }\n}\n</pre>\n</div>\n<p>(<strong>Note:</strong> We have not tested this code and we cannot guarantee that it won't cause an unexpected behavior in your application)</p>\n<p>However, the implementation details depends mostly of your personal preferences and the requirements of your scenario.</p>\n<p>I hope you find this useful,</p>\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-11-16T09:04:01.043-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699380",
    "ThreadId": "279587",
    "Html": "<p>Hey&nbsp;Damian, thanks getting a bit closer with this...</p>\r\n<p>The following does not get to the&nbsp;Module for&nbsp;regionManager etc</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\r\n{\r\n      <span style=\"color: blue;\">base</span>.InitializeShell();\r\n\r\n      <span style=\"color: blue;\">if</span>( <span style=\"color: blue;\">this</span>.CurrentApplication != <span style=\"color: blue;\">null</span> )\r\n      {\r\n            Window shell = <span style=\"color: blue;\">this</span>.Shell <span style=\"color: blue;\">as</span> Window;\r\n            shell.Show();\r\n            <span style=\"color: blue;\">this</span>.CurrentApplication.Run(shell);\r\n      }\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>I tried the following which makes it to&nbsp;regionManager and shows the window however the Region is not injected into the view. Any ideas</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre> <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\r\n        {\r\n            <span style=\"color: blue;\">base</span>.InitializeShell();\r\n\r\n            <span style=\"color: blue;\">if</span> (CurrentApplication != <span style=\"color: blue;\">null</span>)\r\n            {\r\n                \r\n                CurrentApplication.MainWindow = (Window)Shell;\r\n                CurrentApplication.MainWindow.ShowDialog();\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Maybe something needs to happen in the App OnStartup as the Bootstrapper cannot run from here...?</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre> <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> App : Application\r\n    {\r\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> OnStartup(StartupEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">base</span>.OnStartup(e);\r\n\r\n            <span style=\"color: green;\">//Bootstrapper bootstrapper = new Bootstrapper();</span>\r\n            <span style=\"color: green;\">//bootstrapper.Run();</span>\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p>Any help&nbsp;appreciated. Thanks.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-11-16T23:52:00.64-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699814",
    "ThreadId": "279587",
    "Html": "<p>Hi,</p>\r\n<p>We were able to run the <strong>HelloWorld QuickStart </strong>from a <strong>Console Application</strong> project following these steps:</p>\r\n<ul>\r\n<li>Open the <strong>HelloWorld QuickStart</strong> and create a new Console Application project.</li>\r\n<li>In this project add a reference to the following dlls: <strong>WindowsBase.dll</strong>, <strong>System.Xaml.dll</strong> and <strong>PresentationFramework.dll</strong>.</li>\r\n<li>In the same project add a reference to the <strong>HelloWorld.Desktop</strong> project.</li>\r\n<li>In the <strong>App.xaml.cs</strong> file of the <strong>HelloWorld.Desktop</strong> project, define the following method. This is done so that the <strong>Run </strong>method can be invoked in the <strong>Console Application</strong> project.</li>\r\n</ul>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">int</span> Run()\r\n        {\r\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">base</span>.Run();\r\n        }\r\n</pre>\r\n</div>\r\n<ul>\r\n<li>Define the <strong>Main </strong>method in the <strong>Console Application</strong> project like this, where <strong>App </strong>is the <strong>App </strong>class in the <strong>HelloWorld.Desktop</strong> project. However,</li>\r\n</ul>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        [STAThread]\r\n        <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Main(<span style=\"color: blue;\">string</span>[] args)\r\n        {\r\n            App application = <span style=\"color: blue;\">new</span> App();\r\n            application.Run();\r\n        }\r\n</pre>\r\n</div>\r\n<p>Doing this, when the <strong>Run </strong>method is invoked the <strong>OnStartup </strong>method will be invoked too, which will instantiate and run the <strong>Bootstrapper</strong>.</p>\r\n<p>Based on this you, you could implement you own approach for your scenario according to your requirements and preferences. However, take into account that as the host application is a <strong>Console Application</strong>, there might be some scenarios where the aforementioned approach could cause and undesired behavior in you application.</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-11-17T12:52:06.887-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699851",
    "ThreadId": "279587",
    "Html": "<p>I did try something similar however it would not run in Revit (the software I am creating the addin for) I think because the app was being run from a separate dll or domain maybe.</p>\r\n<p>Prism is becoming a bit hard to use in the&nbsp;scenario&nbsp;I going to have a look at&nbsp;<a href=\"http://simplemvvmtoolkit.codeplex.com/\">http://simplemvvmtoolkit.codeplex.com/</a></p>",
    "PostedDate": "2011-11-17T13:50:49.55-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]