[
  {
    "Id": "1017298",
    "ThreadId": "437105",
    "Html": "I'm really new to Prism and trying to understand the proper way to remove a view from a region. I have written a simple WPF MVVM Prism application that has one region (MainRegion) with two buttons (Button A and Button B) in Shell view. \r<br />\n<br />\nBasically when clicking the Button A it will navigate to ViewA. The same way for the Button B, it will navigate to ViewB when it's clicked. These two views are populated in MainRegion. Here is what I register them in IUnityContainer in Initialize():<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Class</span> MainModule\n    <span style=\"color:Blue;\">Implements</span> IModule\n\n    <span style=\"color:Blue;\">Private</span> <span style=\"color:Blue;\">ReadOnly</span> _container <span style=\"color:Blue;\">As</span> IUnityContainer\n\n    <span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Sub</span> <span style=\"color:Blue;\">New</span>(container <span style=\"color:Blue;\">As</span> IUnityContainer)\n        <span style=\"color:Blue;\">Me</span>._container = container\n    <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\n\n    <span style=\"color:Blue;\">Public</span> <span style=\"color:Blue;\">Sub</span> Initialize() <span style=\"color:Blue;\">Implements</span> Microsoft.Practices.Prism.Modularity.IModule.Initialize\n        _container.RegisterType(Of <span style=\"color:Blue;\">Object</span>, View)(<span style=\"color:#A31515;\">&quot;ViewA&quot;</span>)\n        _container.RegisterType(Of <span style=\"color:Blue;\">Object</span>, View)(<span style=\"color:#A31515;\">&quot;ViewB&quot;</span>)\n\n    <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\n<span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Class</span>\n\r\n</pre></div>Here are codes when clicking Button A and Button B<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n    <span style=\"color:Blue;\">Sub</span> ButtonACommandClicked()\n        RemoveViews() <span style=\"color:Green;\">&#39;To review all views before navigating</span>\n        <span style=\"color:Blue;\">Dim</span> regionManager = ServiceLocator.Current.GetInstance(Of IRegionManager)()\n\n        <span style=\"color:Blue;\">Dim</span> listUri = <span style=\"color:Blue;\">New</span> Uri(<span style=\"color:#A31515;\">&quot;ViewA&quot;</span>, UriKind.Relative)\n        regionManager.RequestNavigate(<span style=\"color:#A31515;\">&quot;MainRegion&quot;</span>, listUri, <span style=\"color:Blue;\">AddressOf</span> NavigationToViewA)\n    <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\n\n    <span style=\"color:Blue;\">Sub</span> ButtonBCommandClicked()\n        RemoveViews() <span style=\"color:Green;\">&#39;To review all views before navigating</span>\n        <span style=\"color:Blue;\">Dim</span> regionManager = ServiceLocator.Current.GetInstance(Of IRegionManager)()\n\n        <span style=\"color:Blue;\">Dim</span> listUri = <span style=\"color:Blue;\">New</span> Uri(<span style=\"color:#A31515;\">&quot;ViewB&quot;</span>, UriKind.Relative)\n        regionManager.RequestNavigate(<span style=\"color:#A31515;\">&quot;MainRegion&quot;</span>, listUri, <span style=\"color:Blue;\">AddressOf</span> NavigationToViewB)\n    <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\n\n    <span style=\"color:Blue;\">Private</span> <span style=\"color:Blue;\">Sub</span> RemoveViews()\n        <span style=\"color:Blue;\">Dim</span> regionManager = ServiceLocator.Current.GetInstance(Of IRegionManager)()\n        <span style=\"color:Blue;\">Dim</span> views = regionManager.Regions(<span style=\"color:#A31515;\">&quot;MainRegion&quot;</span>).Views\n\n        <span style=\"color:Blue;\">For</span> <span style=\"color:Blue;\">Each</span> view <span style=\"color:Blue;\">In</span> views\n            regionManager.Regions(<span style=\"color:#A31515;\">&quot;MainRegion&quot;</span>).Remove(view)\n        <span style=\"color:Blue;\">Next</span>\n    <span style=\"color:Blue;\">End</span> <span style=\"color:Blue;\">Sub</span>\r\n</pre></div>Is this the right way to remove the view? If I don't call RemoveView(), the new view that is being navigated will be appended to the existing view loaded before.\r<br />\n<br />\nPlease advise.\r<br />\n<br />\nThanks,\r<br />\nBrew<br />\n",
    "PostedDate": "2013-03-18T13:17:38.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1017794",
    "ThreadId": "437105",
    "Html": "Hi,\r<br />\n<br />\nAs far as I know, there are two possible ways to remove a view from your Region, both of which are correct:<br />\n<ul>\n<li>Use the <strong>Remove</strong> method on a Region passing the view you want to remove as a parameter (as you are already doing)</li>\n<li>\nMake your views implement <strong>IRegionMemberLifetime</strong> and change the <strong>KeepAlive</strong> property to return false. This way, next time you want to remove a view, you could call the Deactivate method instead, so your view will be first deactivated and then, since <strong>KeepAlive</strong> is set to return false, removed.<br />\n</li>\n</ul>\nNevertheless, taking into account the context of your application, the commonly used method is to implement <strong>IRegionMemberLifetime</strong> on your Views/ViewModels. Basically, when you navigate to a view, the previous activated view will be automatically deactivated and therefore removed thanks to the <strong>IRegionMemberLifetime</strong>, without the need to do it manually.\r<br />\n<br />\nYou could find more information about this in the following section of the Prism documentation:<br />\n<ul>\n<li>\n<a href=\"http://msdn.microsoft.com/en-us/library/gg430861(v=pandp.40).aspx#sec9\" rel=\"nofollow\">Chapter 8: Navigation - View and ViewModel Participation in Navigation</a><br />\n</li>\n</ul>\nHope this helps,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a><br />\n",
    "PostedDate": "2013-03-19T09:55:16.277-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1022193",
    "ThreadId": "437105",
    "Html": "Hi fmartinez,\r<br />\n<br />\nI implemented IRegionMemberLifttime in views and set the breakpoint, but the KeepAlive property did not get called. Any idea?\r<br />\n<br />\nThanks,\r<br />\nBrew<br />\n",
    "PostedDate": "2013-03-27T20:03:17.337-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1022857",
    "ThreadId": "437105",
    "Html": "Finally I got it working with some confusions. The problem why the KeepAlive property did not get called was because I used ItemControl as the region container. Then I changed to use ContenControl. The KeepAlive property got called and the view got removed when navigating. However, since the ContentControl is being used for the region container, I'm curious that if none of views (or view models) implement IRegionMemberLifetime, would removing a view still work? The result is that it's still working without IRegionMemberLifetime. <br />\n<pre><code>      - Is this the prism behavior by default?\n      - What controls for the region container are applicable to the KeepAlive property? For my experiences, ItemControl does not work. Only ContentControl works.\n</code></pre>\n\nThanks,\r<br />\nBrew<br />\n",
    "PostedDate": "2013-03-29T03:52:37.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1025028",
    "ThreadId": "437105",
    "Html": "Hi Brew,\r<br />\n<br />\nBasically, <strong>Prism's Regions</strong> work differently depending on the control they are being adapted to. In this particular case, we have two different regions types: the <strong>SingleActiveRegion</strong> (for <strong>ContentControls</strong>) and the <strong>AllActiveRegion</strong> (for <strong>ItemsControls</strong>). \r<br />\n<br />\nWhen you where using an <strong>ItemsControl</strong>, you had an <strong>AllActiveRegion</strong>, which basically is a region that never deactivates its views, and therefore, all its views will be considered active. In such scenario, the <strong>IRegionMemberLifetime</strong> will not work, as it's only used when a view in the region is deactivated (which never happens in an <strong>AllActiveRegion</strong>).\r<br />\n<br />\nThen, when you changed to a <strong>ContentControl</strong>, you had a <strong>SingleActiveRegion</strong>, which is a region that only allows one view to be active at the same time; all the rest of the views in the control are deactivated. In this case, the &quot;visible&quot; view in the control will be the active one, meaning the deactivated views will not be shown (but will be stored inside the region instance). In this scenario, the <strong>IRegionMemberLifetime</strong> is used when a view is injected or activated as the previous one will be automatically deactivated.\r<br />\n<br />\nTake into account that the default behavior in <strong>Prism</strong> for views / view models that do not implement the <strong>IRegionMemberLifetime</strong> interface or attribute is to keep the view alive (as if they had the <strong>KeepAlive</strong> property set to <strong><em>true</em></strong>). Hence, in a <strong>ContentControl</strong>, when injecting such a view, the previous view will not be visible but will be kept alive in the region, consuming resources. If those views / view models had the <strong>KeepAlive</strong> property set to <strong><em>false</em></strong>, they would not only be removed from the control but also from the region completely upon deactivation.\r<br />\n<br />\nI hope this helps,\r<br />\n<br />\nDamian Cherubini\r<br />\n<a href=\"http://blogs.southworks.net/dcherubini\" rel=\"nofollow\">http://blogs.southworks.net/dcherubini</a><br />\n",
    "PostedDate": "2013-04-03T11:40:25.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1025180",
    "ThreadId": "437105",
    "Html": "Hi Damian,\r<br />\nThis is really helpful and makes me more understanding about prism. \r<br />\n<br />\nThank you for both of you (Damian and Federico)!<br />\n",
    "PostedDate": "2013-04-03T19:17:50.863-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]