[
  {
    "Id": "210123",
    "ThreadId": "61896",
    "Html": "<p>OK, so I've got an existing Prism v1 app that we're looking ahead to see if things will work OK on .NET 4, Prism v2, and VS2010. I can run this &quot;Hello World&quot; Prism v2 application by <a href=\"http://www.tanguay.info/\">Edward Tanguay</a> (http://www.tanguay.info/web/index.php?pg=howtos&amp;id=15&amp;layout=print) targeted to on .NET 4 and VS2010 just fine, but when I apply the necessary changes to migrate our existing application to the newer tools it fails to instantiate the Shell correctly. As a last ditch effort, I gutted the existing project and added a new shell called Shell2 which is identical to the Hello World application and even that empty shell fails. I'm thinking there must be a problem with my project settings... I've triple checked the references to make sure everything is pointed to the new prism assemblies that I built (targeted also to .NET 4, in case that matters) and everything seels to be identical to the working Hello World application.&nbsp;</p>\r\n<p>I can step through the entire user code from the beginning of my App.xaml.cs and everything proceeds exactly the same way as Edward's Hello World app&nbsp; every other Prism v2 app, right up until it tries to create my shell.</p>\r\n<p>The exception I'm getting when the bootstrapper calls CreateShell() is the following:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> DependencyObject CreateShell()\r\n{\r\n    Shell2 shell2 = <span style=\"color:Blue\">new</span> Shell2(); <span style=\"color:Green\">// exception thrown here</span>\r\n    shell2.Show();\r\n    <span style=\"color:Blue\">return</span> shell2;\r\n}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Resolution of the dependency failed, type = &quot;Microsoft.Practices.ServiceLocation.IServiceLocator&quot;, name = &quot;&quot;. Exception message is: The current build operation (build key Build Key[Microsoft.Practices.Composite.UnityExtensions.UnityServiceLocatorAdapter, null]) failed: ReadOnlyPermissionSet objects may not be modified. (Strategy type BuildPlanStrategy, index 3)</p>\r\n<p>Drilling down into the inner exception gives the error occurring at line 6 column 20 of Shell2.xaml, given below</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Window</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">TimerShell.Shell2</span><span style=\"color:Black\">&quot;</span>\r\n        <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span>\r\n        <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span>\r\n        <span style=\"color:Red\">xmlns:cal</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://www.codeplex.com/CompositeWPF</span><span style=\"color:Black\">&quot;</span>\r\n        <span style=\"color:Red\">Title</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Hello World</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ItemsControl</span>  <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MainRegion</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">cal:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MainRegion</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Window</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Interesting fact, if I switch the positions of the attributes in ItemsControl, the exception follows the Name=&quot;MainRegion&quot; statement (from column 20 to column 62 or some such). But, of course if I remove that attribute then of course any modules I try to load fail since the MainRegion doesn't exist anymore :) In any case, it seems to be having problems with my naming the ItemsControl.&nbsp;</p>\r\n<p>My question is: Are there any known issues with migrating from .NET 3.5 and Prism v1 to .NET 4 and Prism v2 that would cause this exception? At this point I'm ready to try recreating the solution project-by-project, module-by-module starting with the working Hello World prism v2 code and adding my modules one at a time.</p>\r\n<p>Thanks!</p>\r\n<p>Steve</p>",
    "PostedDate": "2009-07-08T12:25:23.55-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]