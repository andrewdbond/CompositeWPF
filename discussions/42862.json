[
  {
    "Id": "142470",
    "ThreadId": "42862",
    "Html": "Guys,<br>\r\nWhy doesn't ModuleManager.LoadModule try to activate an already initialized module? Can this be done? <br>\r\nThanks\r\n",
    "PostedDate": "2008-12-22T14:50:32.383-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "142562",
    "ThreadId": "42862",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The<b> ModuleManager.LoadModule</b>(“moduleName”) method is used to load modules on demand. Executing this method calls the Initialize method of the module you are trying to load and any modules that it has dependencies on.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">What do you mean by “activate a module”? </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">If you want to call the Initialize method more than once, I would not recommend you to do this. The purpose of it is to be called only once during the module's loading process, to perform module configuration and set up. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">If your purpose is performing a certain functionality of your module, what you could do is have your on demand modules’ initializers classes subscribe to an event in the <b>EventAggregator</b>. Then you can publish that same event in the event aggregator to perform your action.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">The Composite Application Library provides several ways to implement loosely coupled communication among different modules. The following sections in the <b>Prism-v2</b> documentation give some more light on these:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>How to: Create and Publish Events\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>How to: Subscribe and Unsubscribe to Events\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>How to: Create Globally Available Commands\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>How to: Create Locally Available Commands\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">For more information about module loading you can the following sections in the help of <b>Prism-v2</b>:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>Module: Technical Concept\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>Modularity Quickstarts for Silverlight/WPF\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>How To: Load Modules on Demand\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></span></span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n",
    "PostedDate": "2008-12-23T04:22:32.203-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "142615",
    "ThreadId": "42862",
    "Html": "Hi Damian,<br>\r\nThanks for your answer. <br>\r\nAssume a ContentControl having 1 region in which modules are supposed to be displayed. When the Initialize method of a Module A is executed, it is then activated and Module A's view is shown in the region. If you then initialize Module B and activate it in the same region, it automatically deactivates Module A and shows Module B (that's when you have a ContentControl). However, if after that you do a LoadModule(&quot;ModuleA&quot;) again, nothing will happen, because Initialize() has already been executed. <br>\r\n<br>\r\nMy question was: why can't LoadModule(&quot;ModuleA&quot;) activate Module A, when I call this method the second time, after Module A has already been initialized?<br>\r\n<br>\r\nThanks<br>\r\n- Gustavo<br>\r\n<br>\r\nEdit: I understand that the app pool behavior is inherent to .Net and not limitation of Prism.<br>\r\n",
    "PostedDate": "2008-12-23T09:11:19.13-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]