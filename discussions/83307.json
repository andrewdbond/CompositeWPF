[
  {
    "Id": "286438",
    "ThreadId": "83307",
    "Html": "<p>Is there any way to subscribe to private/protected/internal method in EventAggregator?</p>\r\n<p>Seems a bit dummy making all event-handling methods public.</p>\r\n<p>Thank you.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-02-05T15:01:07.147-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289818",
    "ThreadId": "83307",
    "Html": "<p id=54c2f870-f972-012c-05ee-12313b019911>Hi,</p>\r\n<p id=54c302c0-f972-012c-05ef-12313b019911>Prism&rsquo;s <strong>EventAggregator</strong> uses <a href=\"http://msdn.microsoft.com/en-us/library/74x8f551(VS.95).aspx\">this  method</a> to create a delegate (which is called when the event is  published) if you are subscribing to the event using a weak reference.  As the aforementioned document from MSDN explains, a <strong>MethodAccessException</strong> will be thrown if the caller does not have access to the <em>method</em>.  As this is done in a class (and assembly) that is not the one where the  <em>method</em> is declared, the <em>method</em> must be public to get  this working correctly.</p>\r\n<p id=9beab2b0-f976-012c-0637-12313b019911>If you use a strong reference  you can use subscribe with private methods. You can find information  about how to subscribe to the event with weak/strong references <a href=\"http://msdn.microsoft.com/en-us/library/dd458904.aspx\">here</a>.</p>\r\n<p id=9beacd90-f976-012c-0638-12313b019911>Please let me know if  this helps.</p>\r\n<p id=54c329b0-f972-012c-05f1-12313b019911>Damian  Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2010-02-11T12:07:57.36-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]