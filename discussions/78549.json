[
  {
    "Id": "268879",
    "ThreadId": "78549",
    "Html": "<p>Hi,</p>\r\n<p>&nbsp;&nbsp;As you may be aware there is issue with using ComboBoxes with MVVM design pattern (see: <a href=\"http://social.msdn.microsoft.com/forums/en-US/wpf/thread/30a45233-dc01-40ca-9ead-fa816c395697/\">http://social.msdn.microsoft.com/forums/en-US/wpf/thread/30a45233-dc01-40ca-9ead-fa816c395697/</a>)</p>\r\n<p>So I found an example of how to solve this issue, but I am not sure how to implement this in Prism using DelegateCommand. I have the following ViewModel (which works as intended)</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> ProductCategoriesViewModel : DependencyObject\r\n\t{\r\n\t\t<span style=\"color:Blue\">#region</span> Fields\r\n\r\n\t\t<span style=\"color:Blue\">private</span> PopUpCollection&lt;ProductCategory&gt; categoryList =\r\n\t\t\t<span style=\"color:Blue\">new</span> PopUpCollection&lt;ProductCategory&gt;();\r\n\t\t<span style=\"color:Blue\">#endregion</span>\r\n        ICommand ItemSelectedCommand { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> SelectCategory(<span style=\"color:Blue\">object</span> parameter)\r\n        {\r\n            ViewModel.ProductCategory selectedCategory = parameter <span style=\"color:Blue\">as</span> ViewModel.ProductCategory;\r\n            MessageBox.Show(<span style=\"color:#A31515\">&quot;Selected Category: &quot;</span> + selectedCategory.Name);\r\n        }\r\n\t\t<span style=\"color:Blue\">public</span> ProductCategoriesViewModel()\r\n\t\t{\r\n     <span style=\"color:Green\">//       ItemSelectedCommand = new DelegateCommand&lt;int&gt;(this.SelectCategory);</span>\r\n            SetValue(ShowMessageCommandProperty, <span style=\"color:Blue\">new</span> ShowMessageBoxCommand(<span style=\"color:Blue\">this</span>));\r\n            SetValue(ItemCommandProperty, <span style=\"color:Blue\">new</span> ItemSelectedCommand(<span style=\"color:Blue\">this</span>));\r\n           <span style=\"color:Green\">// SetValue(ItemCommandProperty, ItemSelectedCommand);</span>\r\n            AdvWorksDataContext db = <span style=\"color:Blue\">new</span> AdvWorksDataContext();\r\n            <span style=\"color:Blue\">var</span> res = (<span style=\"color:Blue\">from</span> pc <span style=\"color:Blue\">in</span> db.ProductCategories\r\n                      <span style=\"color:Blue\">select</span> <span style=\"color:Blue\">new</span> ProductCategory\r\n                      {\r\n                          Name = pc.Name,\r\n                          ModifiedDate = pc.ModifiedDate,\r\n                      }).ToList&lt;ProductCategory&gt;();\r\n\r\n         \r\n\r\n\t\t\t<span style=\"color:Green\">//Load popup friendly list.</span>\r\n            <span style=\"color:Blue\">foreach</span> (<span style=\"color:Blue\">var</span> pc <span style=\"color:Blue\">in</span> res)\r\n                categoryList.Add(pc);\r\n\r\n \r\n\t\t\tcategoryList[2].IsSelected = <span style=\"color:Blue\">true</span>;<span style=\"color:Green\">//select a category</span>\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t<span style=\"color:Blue\">public</span> Additional.PopUpCollection&lt;ProductCategory&gt; CategoryList\r\n\t\t{\r\n\t\t\t<span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> categoryList; }\r\n\t\t}\r\n\r\n        \r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty ItemCommandProperty =\r\n            DependencyProperty.Register(<span style=\"color:#A31515\">&quot;ItemCommand&quot;</span>, <span style=\"color:Blue\">typeof</span>(ItemSelectedCommand), <span style=\"color:Blue\">typeof</span>(ProductCategoriesViewModel));\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> </span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Green\">//public ItemSelectedCommand ItemCommand</span>\r\n        <span style=\"color:Green\">//{</span>\r\n        <span style=\"color:Green\">//    get</span>\r\n        <span style=\"color:Green\">//    {</span>\r\n        <span style=\"color:Green\">//        return GetValue(ItemCommandProperty) as ItemSelectedCommand;</span>\r\n        <span style=\"color:Green\">//    }</span>\r\n        <span style=\"color:Green\">//    set</span>\r\n        <span style=\"color:Green\">//    {</span>\r\n        <span style=\"color:Green\">//        SetValue(ItemCommandProperty, value);</span>\r\n        <span style=\"color:Green\">//    }</span>\r\n        <span style=\"color:Green\">//}</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty ShowMessageCommandProperty =\r\n            DependencyProperty.Register(<span style=\"color:#A31515\">&quot;ShowMessageCommand&quot;</span>, <span style=\"color:Blue\">typeof</span>(ShowMessageBoxCommand), <span style=\"color:Blue\">typeof</span>(ProductCategoriesViewModel));\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> </span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> ShowMessageBoxCommand ShowMessageCommand\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> GetValue(ShowMessageCommandProperty) <span style=\"color:Blue\">as</span> ShowMessageBoxCommand;\r\n            }\r\n            <span style=\"color:Blue\">set</span>\r\n            {\r\n                SetValue(ShowMessageCommandProperty, value);\r\n            }\r\n        }\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>My view is declared as follows:</p>\r\n<p>&nbsp;</p>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Window</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">derek.kowald.PopUpSelector.CategorizedProductCollectionView</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:local</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:derek.kowald.PopUpSelector</span><span style=\"color:Black\">&quot;</span>\r\n\t\t<span style=\"color:Red\">xmlns:vm</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:derek.kowald.PopUpSelector.ViewModel</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">Title</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">PopUp Selection Demo</span><span style=\"color:Black\">&quot;</span>\r\n\t\t<span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">130</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Window.Resources</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ObjectDataProvider</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Data</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ObjectType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type vm:ProductCategoriesViewModel}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type StackPanel}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Margin</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">3</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type ComboBoxItem}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\t<span style=\"color:Green\">&lt;!-- Sync the lists selected item with the ViewModel IsSelected--&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">IsSelected</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=IsSelected, Mode=TwoWay}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span> <span style=\"color:Red\">DataType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type vm:ProductCategory}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Name}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Window.Resources</span><span style=\"color:Blue\">&gt;</span>\r\n\t\r\n\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span> <span style=\"color:Red\">Orientation</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Vertical</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">DataContext</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource Data}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span> <span style=\"color:Red\">Orientation</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Horizontal</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span><span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span> <span style=\"color:Red\">Orientation</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Horizontal</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Popup Collection</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ComboBox</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=CategoryList}</span><span style=\"color:Black\">&quot;</span>\r\n\t\t\t\t\t\t\t\t<span style=\"color:Red\">IsSynchronizedWithCurrentItem</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span>\r\n                                <span style=\"color:Red\">local:ItemSelectedBehavior.ItemSelected</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path = ItemCommand}</span><span style=\"color:Black\">&quot;</span>\r\n\t\t\t\t\t\t\t\t<span style=\"color:Red\">SelectedValue</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=CategoryList.SelectedValue, Mode=TwoWay}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\r\n\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Window</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\nThe ItemSelectedBehavior is declared as follows:</pre>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">class</span> ItemSelectedBehavior\r\n    {\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> DependencyProperty ItemSelectedProperty =\r\n            DependencyProperty.RegisterAttached(<span style=\"color:#A31515\">&quot;ItemSelected&quot;</span>,\r\n                <span style=\"color:Blue\">typeof</span>(ICommand),\r\n                <span style=\"color:Blue\">typeof</span>(ItemSelectedBehavior),\r\n                <span style=\"color:Blue\">new</span> FrameworkPropertyMetadata(<span style=\"color:Blue\">null</span>, <span style=\"color:Blue\">new</span> PropertyChangedCallback(ItemSelectedBehavior.ItemSelectedChanged)));\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> SetItemSelected(DependencyObject target, ICommand value)\r\n        {\r\n            target.SetValue(ItemSelectedBehavior.ItemSelectedProperty, value);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> ItemSelectedChanged(DependencyObject target, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Selector element = target <span style=\"color:Blue\">as</span> Selector;\r\n\r\n            <span style=\"color:Blue\">if</span> (element != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                <span style=\"color:Green\">// If we're putting in a new command and there wasn't one already</span>\r\n                <span style=\"color:Green\">// hook the event</span>\r\n                <span style=\"color:Blue\">if</span> ((e.NewValue != <span style=\"color:Blue\">null</span>) &amp;&amp; (e.OldValue == <span style=\"color:Blue\">null</span>))\r\n                {\r\n                    element.SelectionChanged += element_SelectionChanged;\r\n                }\r\n                <span style=\"color:Green\">// If we're clearing the command and it wasn't already null</span>\r\n                <span style=\"color:Green\">// unhook the event</span>\r\n                <span style=\"color:Blue\">else</span> <span style=\"color:Blue\">if</span> ((e.NewValue == <span style=\"color:Blue\">null</span>) &amp;&amp; (e.OldValue != <span style=\"color:Blue\">null</span>))\r\n                {\r\n                    element.SelectionChanged -= element_SelectionChanged;\r\n                }\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> element_SelectionChanged(<span style=\"color:Blue\">object</span> sender, System.Windows.Controls.SelectionChangedEventArgs e)\r\n        {\r\n            Selector element = sender <span style=\"color:Blue\">as</span> Selector;\r\n            <span style=\"color:Blue\">if</span> (element != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                ICommand command = (ICommand)element.GetValue(ItemSelectedBehavior.ItemSelectedProperty);\r\n                command.Execute(element.SelectedItem);\r\n            }\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\nThe ItemSelectedCommand is as follows;</pre>\r\n<pre><pre>public class ItemSelectedCommand : ICommand\r\n        {\r\n            private ProductCategoriesViewModel _ViewModel;\r\n      \r\n            public ItemSelectedCommand(ProductCategoriesViewModel view_model)\r\n            {\r\n                _ViewModel = view_model;\r\n            }\r\n            #region ICommand Members\r\n\r\n            public bool CanExecute(object parameter)\r\n            {\r\n                return true;\r\n            }\r\n\r\n       \r\n            public event EventHandler CanExecuteChanged;\r\n\r\n          \r\n            public void Execute(object parameter)\r\n            {\r\n               \r\n                _ViewModel.SelectCategory(parameter);\r\n               // MessageBox.Show(&quot;selected category:&quot; + slected.Name);\r\n            }\r\n\r\n            #endregion\r\n        }</pre>\r\nI have uploaded the sample project at <a href=\"http://cid-9e01849c63c42126.skydrive.live.com/browse.aspx/AdvWorksPrism?uc=1\">http://cid-9e01849c63c42126.skydrive.live.com/browse.aspx/AdvWorksPrism?uc=1</a></pre>\r\n<pre></pre>\r\n<pre><a href=\"http://cid-9e01849c63c42126.skydrive.live.com/browse.aspx/AdvWorksPrism?uc=1\"></a>If anyone guide me how to change the above implementation using DelegateCommand, it would really help.</pre>\r\n<pre></pre>\r\n<pre>regards</pre>\r\n<pre>Arun\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t&lt;Setter Property=&quot;Margin&quot; Value=&quot;3&quot; /&gt;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t&lt;!-- Sync the lists selected item with the ViewModel IsSelected--&gt;\r\n\t\t\t&lt;Setter Property=&quot;IsSelected&quot; Value=&quot;{Binding Path=IsSelected, Mode=TwoWay}&quot; /&gt;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">public class ProductCategoriesViewModel : DependencyObject</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>#region Fields</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private Additional.PopUpCollection&lt;ProductCategory&gt; categoryList =</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>new Additional.PopUpCollection&lt;ProductCategory&gt;();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>#endregion</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;ICommand ItemSelectedCommand { get; set; }</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;public void SelectCategory(object parameter)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ViewModel.ProductCategory selectedCategory = parameter as ViewModel.ProductCategory;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;MessageBox.Show(&quot;Selected Category: &quot; + selectedCategory.Name);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>public ProductCategoriesViewModel()</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; // &nbsp; &nbsp; &nbsp; ItemSelectedCommand = new DelegateCommand&lt;int&gt;(this.SelectCategory);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SetValue(ShowMessageCommandProperty, new ShowMessageBoxCommand(this));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SetValue(ItemCommandProperty, new ItemSelectedCommand(this));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // SetValue(ItemCommandProperty, ItemSelectedCommand);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AdvWorksDataContext db = new AdvWorksDataContext();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var res = (from pc in db.ProductCategories</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;select new ProductCategory</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name = pc.Name,</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ModifiedDate = pc.ModifiedDate,</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}).ToList&lt;ProductCategory&gt;();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>//Load popup friendly list.</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;foreach (var pc in res)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;categoryList.Add(pc);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>categoryList[2].IsSelected = true;//select a category</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span></div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>public Additional.PopUpCollection&lt;ProductCategory&gt; CategoryList</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>get { return categoryList; }</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;public static readonly DependencyProperty ItemCommandProperty =</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;DependencyProperty.Register(&quot;ItemCommand&quot;, typeof(ItemSelectedCommand), typeof(ProductCategoriesViewModel));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;/// &lt;summary&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;///&nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;/// &lt;/summary&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;//public ItemSelectedCommand ItemCommand</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;//{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;get</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp; &nbsp; &nbsp;return GetValue(ItemCommandProperty) as ItemSelectedCommand;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;set</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp; &nbsp; &nbsp;SetValue(ItemCommandProperty, value);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;//}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;public static readonly DependencyProperty ShowMessageCommandProperty =</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;DependencyProperty.Register(&quot;ShowMessageCommand&quot;, typeof(ShowMessageBoxCommand), typeof(ProductCategoriesViewModel));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;/// &lt;summary&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;///&nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;/// &lt;/summary&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;public ShowMessageBoxCommand ShowMessageCommand</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;get</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return GetValue(ShowMessageCommandProperty) as ShowMessageBoxCommand;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;set</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SetValue(ShowMessageCommandProperty, value);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-12-18T04:44:05.37-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]