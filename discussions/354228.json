[
  {
    "Id": "831051",
    "ThreadId": "354228",
    "Html": "\r\n<p>I'm developing a PRISM-Module (MyModule) that should list all available Modules found in the ModuleCatalog and upon user request load the selected module by using a ModuleManager.&nbsp;</p>\r\n<p>I'm using a MefBootstrapper and MyModule has an [Import] on the IModuleManager-interface but I get an exception when MEF is trying to compose the ModuleManager.&nbsp;I've seen a similar issue here:&nbsp;<a href=\"http://compositewpf.codeplex.com/discussions/258960\">http://compositewpf.codeplex.com/discussions/258960</a>&nbsp;and\r\n it indeed seems like an issue that the IModuleInitializer not has been composed when trying to get the IModuleManager from the container.</p>\r\n<p><strong>My Question is:</strong>&nbsp;<em>How can I import the IModuleManager during composition without getting an exception?</em></p>\r\n<p>I've made a simple project to test this and the Module that should should list all available modules looks like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\t[ModuleExport(<span style=\"color:blue\">typeof</span>(MyModule))]\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> MyModule : IModule\r\n\t{\r\n\t\t[Import]\r\n\t\t<span style=\"color:blue\">public</span> IModuleManager ModuleManager { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n\t\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Initialize()\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>and my Bootstrapper:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Bootstrapper : MefBootstrapper\r\n\t{\r\n\t\t<span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureAggregateCatalog()\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">base</span>.ConfigureAggregateCatalog();\r\n\t\t\tAggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(Assembly.GetExecutingAssembly()));\r\n\t\t\tAggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(<span style=\"color:blue\">typeof</span>(MyModule.MyModule).Assembly));\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> DependencyObject CreateShell()\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">return</span> ServiceLocator.Current.GetInstance&lt;Shell&gt;();\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> InitializeShell()\r\n\t\t{\r\n\t\t\tApplication.Current.MainWindow = (Window)Shell;\r\n\t\t\tApplication.Current.MainWindow.Show();\r\n\t\t}\r\n\t}</pre>\r\n</div>\r\n<p>The exception looks like this:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>Microsoft.Practices.Prism.Modularity.ModuleInitializeException was unhandled <span style=\"color:blue\">by</span> user code\r\n  Message=An exception occurred <span style=\"color:blue\">while</span> initializing module <span style=\"color:#a31515\">'MyModule'</span>. \r\n    - The exception message was: GetExportedValue cannot be called before prerequisite import <span style=\"color:#a31515\">'Microsoft.Practices.Prism.MefExtensions.Modularity.MefModuleManager..ctor (Parameter=&quot;moduleInitializer&quot;, ContractName=&quot;Microsoft.Practices.Prism.Modularity.IModuleInitializer&quot;)'</span> has been <span style=\"color:blue\">set</span>.\r\n    Check the InnerException property of the exception <span style=\"color:blue\">for</span> more information. If the exception occurred \r\n    <span style=\"color:blue\">while</span> creating an <span style=\"color:blue\">object</span> <span style=\"color:blue\">in</span> a DI container, you can exception.GetRootException() to help locate the \r\n    root cause of the problem. \r\n  Source=Microsoft.Practices.Prism\r\n  ModuleName=MyModule\r\n  StackTrace:\r\n       at Microsoft.Practices.Prism.Modularity.ModuleInitializer.HandleModuleInitializationError(ModuleInfo moduleInfo, String assemblyName, Exception exception) <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism\\Modularity\\ModuleInitializer.cs:line 111\r\n       at Microsoft.Practices.Prism.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism\\Modularity\\ModuleInitializer.cs:line 70\r\n       at Microsoft.Practices.Prism.Modularity.ModuleManager.InitializeModule(ModuleInfo moduleInfo) <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism\\Modularity\\ModuleManager.cs:line 322\r\n       at Microsoft.Practices.Prism.Modularity.ModuleManager.LoadModulesThatAreReadyForLoad() <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism\\Modularity\\ModuleManager.cs:line 209\r\n       at Microsoft.Practices.Prism.MefExtensions.Modularity.MefModuleManager.OnImportsSatisfied() <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism.MefExtensions\\Modularity\\MefModuleManager.cs:line 113\r\n       at System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart.NotifyImportSatisfied()\r\n  InnerException: System.InvalidOperationException\r\n       Message=GetExportedValue cannot be called before prerequisite import <span style=\"color:#a31515\">'Microsoft.Practices.Prism.MefExtensions.Modularity.MefModuleManager..ctor (Parameter=&quot;moduleInitializer&quot;, ContractName=&quot;Microsoft.Practices.Prism.Modularity.IModuleInitializer&quot;)'</span> has been <span style=\"color:blue\">set</span>.\r\n       Source=System.ComponentModel.Composition\r\n       StackTrace:\r\n            at System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart.EnsureGettable()\r\n            at System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart.GetExportedValue(ExportDefinition definition)\r\n            at System.ComponentModel.Composition.Hosting.CompositionServices.GetExportedValueFromComposedPart(ImportEngine engine, ComposablePart part, ExportDefinition definition)\r\n            at System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue(ComposablePart part, ExportDefinition export, Boolean isSharedPart)\r\n            at System.ComponentModel.Composition.Hosting.CatalogExportProvider.CatalogExport.GetExportedValueCore()\r\n            at System.ComponentModel.Composition.Primitives.Export.get_Value()\r\n            at System.ComponentModel.Composition.ReflectionModel.ImportingItem.Cast(Type type, Export export)\r\n            at System.ComponentModel.Composition.ReflectionModel.ImportingItem.CastSingleExportToImportType(Type type, Export export)\r\n            at System.ComponentModel.Composition.ReflectionModel.ImportingItem.CastExportsToSingleImportType(Export[] exports)\r\n            at System.ComponentModel.Composition.ReflectionModel.ImportingItem.CastExportsToImportType(Export[] exports)\r\n            at System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart.SetImport(ImportingItem item, Export[] exports)\r\n            at System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart.SetImport(ImportDefinition definition, IEnumerable`1 exports)\r\n            at System.ComponentModel.Composition.Hosting.ImportEngine.PartManager.TrySetImport(ImportDefinition import, IEnumerable`1 exports)\r\n            at System.ComponentModel.Composition.Hosting.ImportEngine.TrySatisfyImportSubset(PartManager partManager, IEnumerable`1 imports, AtomicComposition atomicComposition)\r\n            at System.ComponentModel.Composition.Hosting.ImportEngine.TrySatisfyImportsStateMachine(PartManager partManager, ComposablePart part)\r\n            at System.ComponentModel.Composition.Hosting.ImportEngine.TrySatisfyImports(PartManager partManager, ComposablePart part, Boolean shouldTrackImports)\r\n            at System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(ComposablePart part)\r\n            at System.ComponentModel.Composition.Hosting.CompositionServices.GetExportedValueFromComposedPart(ImportEngine engine, ComposablePart part, ExportDefinition definition)\r\n            at System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue(ComposablePart part, ExportDefinition export, Boolean isSharedPart)\r\n            at System.ComponentModel.Composition.Hosting.CatalogExportProvider.CatalogExport.GetExportedValueCore()\r\n            at System.ComponentModel.Composition.Primitives.Export.get_Value()\r\n            at System.ComponentModel.Composition.ExportServices.GetExportedValueFromLazy[T](Export export)\r\n            at System.ComponentModel.Composition.ExportServices.&lt;&gt;c__DisplayClass4`2.&lt;CreateStronglyTypedExportOfTM&gt;b__1()\r\n            at System.Lazy`1.CreateValue()\r\n            at System.Lazy`1.LazyInitValue()\r\n            at System.Lazy`1.get_Value()\r\n            at Microsoft.Practices.Prism.MefExtensions.Modularity.MefModuleInitializer.CreateModule(ModuleInfo moduleInfo) <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism.MefExtensions\\Modularity\\MefModuleInitializer.cs:line 117\r\n            at Microsoft.Practices.Prism.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) <span style=\"color:blue\">in</span> c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism\\Modularity\\ModuleInitializer.cs:line 65\r\n       InnerException: \r\n\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-05-02T05:10:06.197-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "831789",
    "ThreadId": "354228",
    "Html": "<p>Hi,</p>\r\n<p>We could verify this behavior and as mentioned before, this seems to be caused by a timing issue when composing the <strong>IModuleInitializer </strong>composable part.</p>\r\n<p>So far, we found that this exception seems to appear only with <strong>MEF </strong>and when registering modules in Code through the <strong>AggregateCatalog </strong>like in your case. For example when we registered the module using a <strong>Configuration File</strong> we didn't experience this behavior.</p>\r\n<p>Also no error appears when importing the <strong>IModuleManager </strong>instance, e.g. from the <strong>Shell </strong>Window (as shown in the <a href=\"http://msdn.microsoft.com/en-us/library/ff921068%28v=pandp.40%29.aspx\">ModularityWithMef QuickStart</a>) or in a view model.</p>\r\n<p>Additionally, we didn't encounter this error if the modules' <strong>InitializationMode </strong>was set to <strong>OnDemand </strong>and it was loaded after the application was initialized.</p>\r\n<p>Similar to this approach we found that when adding the module's assembly after the bootstrapper process (using the <strong>AggregateCatalog </strong>class and <strong>InitializationMode </strong>set to<strong>&nbsp;WhenAvailable</strong>) the error was not thrown.</p>\r\n<p>Also we created a <a href=\"http://compositewpf.codeplex.com/workitem/9374\">work item</a> in the issue tracker reporting this behavior, so that the team is aware of it.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-05-03T10:51:43.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "832088",
    "ThreadId": "354228",
    "Html": "<p>Thanks for your answer aadami, and thanks for adding this as an issue. :)</p>\r\n<p>Now this issue is pretty easy to work around (lazy loading of the IModuleManager for example)&nbsp;but I wanted to verify that I didn't do anything wrong on my side.</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2012-05-04T02:46:33.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]