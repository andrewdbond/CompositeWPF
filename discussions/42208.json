[
  {
    "Id": "140223",
    "ThreadId": "42208",
    "Html": "Hello,<br>\r\n<br>\r\n#1. <br>\r\n<br>\r\nIs there any way to share the generated proxy classes between WPF and Silverlight? I'm exposing the WCF service with basic-http binding. I will consume that WCF service from Desktop project and Silverlight. But i don't like to have the seperated projects so I'm looking for a way to share those generated proxy classes between WPF and Silverlight.<br>\r\n<br>\r\nNote: I tried to do that but I got a lot of problems since the namespace and class structure of WPF and Silverlight have some differences. <br>\r\n<br>\r\n#2. Can I share the classs that invoke the proxy class if this #1 requirement is not possible? <br>\r\n<br>\r\nFor example: <br>\r\n<br>\r\n[Desktop]<br>\r\n<br>\r\n-----MyProject.ClientEntities.Desktop<br>\r\n----------------MyEntityClass [Link from Silverlight] <br>\r\n-----MyProject.Manager.Desktop&nbsp; ( We are doing the translation from Service Entity to Client Entity.)<br>\r\n----------------MyServiceManager [Link from Silverlight??&nbsp;&nbsp; ]&nbsp; <br>\r\n----MyProject.ServiceProxy.Desktop<br>\r\n----------------MyWCFProxy [Can I use it as a link? OR Should it be an actually class?]<br>\r\n[Silverlight]<br>\r\n<br>\r\n-----MyProject.ClientEntities<br>\r\n----------------MyEntityClass [Actual File] <br>\r\n-----MyProject.Manager.Desktop&nbsp; <br>\r\n----------------MyServiceManager [ Actual File]&nbsp; <br>\r\n----MyProject.ServiceProxy.Desktop<br>\r\n----------------MyWCFProxy [&nbsp; Actual File.]<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-12T23:26:29.837-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "141343",
    "ThreadId": "42208",
    "Html": "I will answer my own questions.. <br>\r\n<br>\r\n#1. It's not possible to share the ServiceClients at this moment but it shouldn't be a problem since the only things that the developer need to do is &quot;Updating the service&quot;..<br>\r\n<br>\r\n#2. Yes. but you will need to reference System.ServiceModel and System.Runtime.Serialization assemblies. <br>\r\n<br>\r\nHope it helps for other people. If you are facing any problem with this approach, please email me or drop a comment in my blog. I will get back you as soon as I can. <br>\r\n",
    "PostedDate": "2008-12-17T07:41:01.603-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]