[
  {
    "Id": "545243",
    "ThreadId": "240806",
    "Html": "\r\n<p>Hi</p>\r\n<p>I am creating an outlook like applications which have 3 modules</p>\r\n<p>1. Contacts</p>\r\n<p>2. Mail items</p>\r\n<p>3. Appointments</p>\r\n<p>On the left side I am going to display a tree view of the folder structure for each module</p>\r\n<p>Only one folder is displayed at a given point of time.</p>\r\n<p>Each module implements IFoldersView interface.</p>\r\n<p>The tree view is part of a different module named &ldquo;Infrastructure&rdquo;.</p>\r\n<p>What is a correct approach to call the active IFoldersView in order to get the folder structure</p>\r\n<p>For the active module?</p>\r\n<p>Should the active module register or replace(each time it become active)&nbsp;the concrete implementation of IFoldersView in the</p>\r\n<p>unity container So the &ldquo;Infrastructure&rdquo; can call him?</p>\r\n<p>Thanks in advance</p>\r\n",
    "PostedDate": "2011-01-06T23:45:53.217-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "545399",
    "ThreadId": "240806",
    "Html": "\r\n<p>Hi,</p>\r\n<p>If I understood your scenario correctly, you need to display information from your modules in a separate view (of a separate module). In order to achieve that, you could use any of the mechanisms for\r\n<a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=240800\">communication between loosely coupled components</a>. For example, you could publish an event through the Event Aggregator with the information you need to display as the payload, and\r\n subscribe to that event from the component in your application that displays the folder structure.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-07T06:59:39.087-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]