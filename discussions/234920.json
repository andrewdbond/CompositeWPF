[
  {
    "Id": "522788",
    "ThreadId": "234920",
    "Html": "\r\n<p>We have a scenario where we are looking to intake about 40 data items from a user. These items could be split up as 8 views with 5 items each. Basically the scenario is flexible data input.</p>\r\n<p>There are multiple domain models in play e.g. the first 2 views may only be concerned with personal contact details the next 2 views with current product preferences the next with financial history, a view could contain data from more than one domain e.g.\r\n a mix of questions display on the same view.</p>\r\n<p>It should be possible to go backwards and forwards between the views but not exit the process (ignore the possibility of the browser being killed) until all questions have been satisfied.</p>\r\n<p>What would you recommend as an approach for this scenario using Prism?</p>\r\n",
    "PostedDate": "2010-11-16T09:27:35.18-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "522828",
    "ThreadId": "234920",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Based on my understanding, your scenario requires to create an only one instance of a ViewModel and it will be assigned to many Views. First of all, there is not guidance on this topic in Prism out-of-the-box.</p>\r\n<p>That said, in general the context of views is assigned with its own ViewModel(s) after creating the those views. But it is not something impossible to achieve, since you could use the ViewModel-First pattern (this is mentioned as a possible approach\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921174%28PandP.40%29.aspx\">here</a>). In this separated presentation patterns the ViewModel will be responsible for creating the view/views and binding itself to the view/views. For more information on this\r\n topic, you could take a look at Rob Eisenberg's presentation at MIX: <a href=\"http://live.visitmix.com/MIX10/Sessions/EX15\">\r\nBuild your own MVVM Framework</a>.</p>\r\n<p>Regarding to back and forward navigation, it is something supported by Prism Navigation using the Journal. For more information on this topic, you could take a look at the following documentation section on MSDN:\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28PandP.40%29.aspx\" target=\"_top\">\r\nChapter 8: Navigation</a>, see the <em>Using the Navigation Journal</em> section.</p>\r\n<p>If you need more guidance on this topic, you could check the <a href=\"http://msdn.microsoft.com/en-us/library/gg430881%28PandP.40%29.aspx\" target=\"_top\">\r\nView-Switching Navigation QuickStart</a>.</p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n",
    "PostedDate": "2010-11-16T10:26:06.74-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]