[
  {
    "Id": "995900",
    "ThreadId": "431841",
    "Html": "Hi, I'm using Microsoft Prism.<br />\nI'm using the .NET 4.5 build, however I think this is irrelevant to my problem.<br />\n<br />\nModule1 uses a file called MyDll.dll which has a version number of 1.<br />\nModule2 uses a file called MyDll.dll which has a version number of 2.<br />\n<br />\nThese modules can be built and tested individually with no problems.<br />\n<br />\nHowever, when I want to use these two modules in a single Prism application, how can I have the filename MyDll.dll in the final executing folder, when I need them both at the same time?<br />\n<br />\nThank-you.<br />\n",
    "PostedDate": "2013-02-03T18:07:55.927-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996261",
    "ThreadId": "431841",
    "Html": "Hi,<br />\n<br />\nAs far as I know, the scenario of loading different version of an specific assemblies in your modules is currently not supported by <em>Prism</em>, as when loading those modules, different versions of the assembly will be also be loaded which may result in a version conflict error. In my opinion, as mentioned in this <a href=\"http://compositewpf.codeplex.com/discussions/351107\" rel=\"nofollow\">related thread</a>, usually it's expected that all the modules consumed by the application are compatible between each other and the shell application itself, and that the versions of the assemblies they share are the same.<br />\n<br />\nRegards,<br />\n<br />\nAgustin Adami<br />\n<a href=\"http://blogs.southworks.net/aadami\" rel=\"nofollow\">http://blogs.southworks.net/aadami</a><br />\n",
    "PostedDate": "2013-02-04T10:20:22.63-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]