[
  {
    "Id": "148113",
    "ThreadId": "44504",
    "Html": "I was wondering if someone could shed some light on the differences between these 2 frameworks.<br>\r\nFor instance, can / should they ever be used together. If so, is there a lot of similar concerns addressed by both, or do they really address a unique set of concerns.<br>\r\n<br>\r\nThanks,<br>\r\n<br>\r\nJeff\r\n",
    "PostedDate": "2009-01-18T11:52:35.977-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "148182",
    "ThreadId": "44504",
    "Html": "I learned a long time ago it doesn't pay to get off the Microsoft's &quot;Yellow Brick Road&quot;; 3rd parties are just not going to be able to keep up with the technologies (so you get locked out of cool new stuff).   The CompositeWPF/Prism is supported by a Microsoft Practices &amp; Patterns team which is going to be very difficult to compete with.   With Multi-targeting (support for both Silverlight and Desktop) and a the notion that a future release could have MEF and MAF integrated into it suggest you would have to be real careful about going elsewhere; when that package comes out you will have a very powerful infrastructure that is tied into the next version of .NET.  <br>\r\n<br>\r\nBill\r\n",
    "PostedDate": "2009-01-18T18:50:14.537-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149540",
    "ThreadId": "44504",
    "Html": "Bill,<br>\r\n  Thanks for the reply.<br>\r\n  Yeah, I'm defnitely on board with Composite WPF, but just wanted to throw the question out there to see if someone who has had experience with both can shed any light on whether or not there are aspects of Caliburn that might be worth using with Composite WPF.\r\n",
    "PostedDate": "2009-01-21T19:59:24.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]