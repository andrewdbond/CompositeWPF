[
  {
    "Id": "201962",
    "ThreadId": "59649",
    "Html": "<p>Hi,</p>\r\n<p>I am trying to use the Event Pattern provided by Prism for my application. Unfortunately, I didn't succeed to subscribe to an event yet.</p>\r\n<p>I am using singleton for my ViewModel (perhaps isn't a good thing for this stuff) but it seems that my eventAggregator knows that there is one event published but he couldn't catch it.</p>\r\n<p>Here is my part of code :</p>\r\n<p><strong>&lt;ViewModel&gt;</strong></p>\r\n<p>&nbsp;&nbsp; private MemberViewModel(IEventAggregator eventAggregator)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Model = new Member();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _eventAggregator = eventAggregator;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static MemberViewModel Instance <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (instance == null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; instance = new MemberViewModel(new EventAggregator());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return instance;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;public void SelectionChanged(int? id)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _eventAggregator.GetEvent&lt;MemberSelectedEvent&gt;().Publish(id);<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p><strong>&lt;XAML.cs &gt;</strong></p>\r\n<p>&nbsp; private void ListMember_SelectionChanged(object sender, SelectionChangedEventArgs e)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mVM.SelectionChanged(((Member)this.ListMember.SelectedItem).MemberId);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>And in another module :</p>\r\n<p>&nbsp; private ContratViewModel(IEventAggregator eventAggregator)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _eventAggregator = eventAggregator; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; ...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _eventAggregator.GetEvent&lt;MemberSelectedEvent&gt;().Subscribe(MemberSelected);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static ContratViewModel Instance <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (instance == null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; instance = new ContratViewModel( new EventAggregator());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return instance;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; private void MemberSelected(int? Id)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&quot; some Stuff&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p><strong>&lt;Infrastructure&gt; //My event<br></strong></p>\r\n<p>&nbsp;public class MemberSelectedEvent : CompositePresentationEvent&lt;int?&gt;<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>I don't know where I made a mistake.</p>\r\n<p>Thanks in advance for your helps, BR</p>\r\n<p>Nicolas</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-16T03:44:59.22-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "202625",
    "ThreadId": "59649",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Nicolas,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">I do not know your exact scenario, but I might be able to provide some ideas for this. If you are obtaining your MemberView&rsquo;s <strong>ViewModel </strong>reference used<strong> </strong>to call this method:<br></span></span><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>private void ListMember_SelectionChanged(object sender, SelectionChangedEventArgs e)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mVM.SelectionChanged(((Member)this.ListMember.SelectedItem).MemberId);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">From here:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>public static MemberViewModel Instance </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (instance == null)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; instance = new MemberViewModel(new EventAggregator());</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return instance;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">You are getting <span style=\"color:#1f497d\">a </span>new instance of the <strong>EventAggregator</strong> service (which might not be a good idea since services are usually singletons, so you should be sure that a new instance is required by your application). When you fire the event with that <strong>EventAggregator</strong>, there are no events subscribed. Something similar could be happening with the <strong>ContractView</strong>.<strong><em> </em></strong>When publishing/subscribing events, you should make sure that you are using the same instance of the <strong>EventAggregator</strong> service that is registered in the container.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></strong></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">You can achieve this in two different ways (that I can currently think of).</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><span style=\"text-decoration:underline\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Use the ServiceLocator to get the EventAggregator singleton instance</span></span></span></span></strong></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 35.4pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">1.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Add a reference to the Microsoft.Practices.ServiceLocationAssembly. It is located in the <strong>~DecompressionFolder\\LIB\\Desktop\\CommonServiceLocation </strong>path.</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 35.4pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">2.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Modify the line that creates a new instance of each of your view models for the following:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>instance = new ContratViewModel(ServiceLocator.Current.GetService(typeof(IEventAggregator)) as IEventAggregator);</span></p>\r\n<p style=\"text-indent:35.4pt;margin:0cm 0cm 0pt\"><strong><span style=\"text-decoration:underline\"><span style=\"\" lang=EN-US><span style=\"text-decoration:none\"><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></span></span></strong></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><span style=\"text-decoration:underline\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Register your ViewModels as a singleton in the container</span></span></span></span></strong></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 35.4pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">1.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">Register your ViewModel as a singleton in the UnityContainer. You can check </span><a href=\"http://msdn.microsoft.com/en-us/library/dd203242.aspx\"><span style=\"font-family:Calibri;font-size:small\">this article</span></a><span style=\"font-size:small\"><span style=\"font-family:Calibri\"> for information on how to achieve this.</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 35.4pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">2.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">In your views, you can resolve your singleton ViewModel through Unity&rsquo;s resolve method.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>ViewModel vm = container.Resolve&lt;ViewModel&gt;();</span></p>\r\n<p style=\"text-indent:35.4pt;margin:0cm 0cm 0pt\"><span style=\"color:#1f497d\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">You can check the following article from the documentation which might provide more insight:</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458915.aspx\"><span style=\"font-family:Calibri;font-size:small\">Event Aggregator</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">You can also check out some of the following solutions that come with the Guidance, which use <strong>EventAggregator</strong>:</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458918.aspx\"><span style=\"font-family:Calibri;font-size:small\">Event Aggregation QuickStart</span></a></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458919.aspx\"><span style=\"font-family:Calibri;font-size:small\">Stock Trader Reference Implementation</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>",
    "PostedDate": "2009-06-17T12:32:19.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]