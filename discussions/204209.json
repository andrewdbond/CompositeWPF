[
  {
    "Id": "415518",
    "ThreadId": "204209",
    "Html": "<p>Hello,</p>\r\n<p>&nbsp;</p>\r\n<p>I know there is not such thing like &quot;single developer projects&quot; but I'm wondering if is it worth to learn/use the Composite WPF framework for projects that normally involves two/three developers maximum during the entire development/support cycle... or would it actually affect productivity and rapid development in this case.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>",
    "PostedDate": "2010-03-08T09:11:26.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "416385",
    "ThreadId": "204209",
    "Html": "<p id=5fe24cc0-0dc8-012d-907f-1231390ab951>Hi,</p>\r\n<p id=5fe25680-0dc8-012d-9080-1231390ab951>Although a multiple-developer project  is a scenario that makes great use of Prism&rsquo;s capabilities, Prism provides other  <a href=\"http://msdn.microsoft.com/en-us/library/dd458906.aspx\">benefits</a> apart from that one. You can find an explanation of the most common problems the  Composite Application Guidance helps to address in <a href=\"http://msdn.microsoft.com/en-us/library/dd490815.aspx\">this document</a>.  For guidance on whether Prism suits your project, you can check <a href=\"http://msdn.microsoft.com/en-us/library/dd458894.aspx\">this  document</a>.</p>\r\n<p id=5fe26630-0dc8-012d-9081-1231390ab951>You can find some examples of the  modularity, extensibility and reusability you gain by using Prism in the  following threads:</p>\r\n<ul>\r\n<li><a href=\"View.aspx?ThreadId=63350\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=63350</a> </li>\r\n<li><a title=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=85778\" href=\"View.aspx?ThreadId=85778\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=85778</a></li>\r\n</ul>\r\n<p id=5fe29870-0dc8-012d-9084-1231390ab951>In my opinion, using Prism could add  value to your project since, for example, it helps you maintain different  aspects of the development more isolated, which reduces the risk of issues in  one section from spreading and halting the development of your entire  application. Also, the extensibility you gain from following the Composite  approach might be of help if your application grows bigger and more complex. The  aforementioned benefits have the potential to boost productivity regardless of  the size of the team involved in the development.</p>\r\n<p id=5fe2b500-0dc8-012d-9085-1231390ab951>I hope you find this answer  helpful.</p>\r\n<p id=5fe2d0e0-0dc8-012d-9086-1231390ab951>Guido Leandro Maliandi <br><a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2010-03-10T06:36:22.07-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]