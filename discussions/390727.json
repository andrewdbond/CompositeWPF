[
  {
    "Id": "896991",
    "ThreadId": "390727",
    "Html": "\r\n<p>I'm using SL 5 and Prism v4.1.</p>\r\n<p>I have two Modules in two regions.</p>\r\n<p>CustomersModule (LeftRegion) shows Customers and OrdersModule (RightRegion) shows the orders of the selected customer in the left region.</p>\r\n<p>I have a EventAggregator that handles the communication between these two modules. This EventAggregator uses the SelectedCustomer method.</p>\r\n<p>In the SelectedCustomer method I try to get a handle to the RightRegion in order to inject the OrdersView but I get this exception that says &quot;<span lang=\"EN-US\" style=\"line-height:115%; font-family:'Calibri','sans-serif'; font-size:11pt\">Region with the\r\n given name is already registered: RightRegion</span>&quot;.</p>\r\n<p><img src=\"http://s18.postimage.org/u8mywk8w9/Sin_t_tulo.jpg\" alt=\"\" width=\"607\" height=\"217\"></p>\r\n<p>As you can see, I'm not trying to register the region, just getting a handle to the region for a latter use.</p>\r\n<p>The complete CustomerSelected methos is:</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CustomerSelected(Customer currCustomer) {\r\n    <span style=\"color:blue\">if</span> (currCustomer == <span style=\"color:blue\">null</span>)\r\n        <span style=\"color:blue\">return</span>;\r\n\r\n    IRegion rightRegion = <span style=\"color:blue\">this</span>.regionManager.Regions[<span style=\"color:#a31515\">&quot;RightRegion&quot;</span>];\r\n    <span style=\"color:blue\">if</span> (rightRegion == <span style=\"color:blue\">null</span>)\r\n        <span style=\"color:blue\">return</span>;\r\n\r\n    CustomersSummaryView view = rightRegion.GetView(<span style=\"color:#a31515\">&quot;CustomersSummaryView&quot;</span>) <span style=\"color:blue\">as</span> CustomersSummaryView;\r\n    <span style=\"color:blue\">if</span> (view == <span style=\"color:blue\">null</span>) {\r\n        <span style=\"color:green\">// Create a new instance of the EmployeeDetailsView using the Unity container.</span>\r\n        view = <span style=\"color:blue\">this</span>.container.Resolve&lt;CustomersSummaryView&gt;();\r\n\r\n        <span style=\"color:green\">// Add the view to the main region. This automatically activates the view too.</span>\r\n        rightRegion.Add(view, <span style=\"color:#a31515\">&quot;CustomersSummaryView&quot;</span>);\r\n    }\r\n    <span style=\"color:blue\">else</span> {\r\n        <span style=\"color:green\">// The view has already been added to the region so just activate it.</span>\r\n        rightRegion.Activate(view);\r\n    }\r\n\r\n    CustomersSummaryViewModel viewModel = view.DataContext <span style=\"color:blue\">as</span> CustomersSummaryViewModel;\r\n    <span style=\"color:blue\">if</span> (viewModel != <span style=\"color:blue\">null</span>) {\r\n        viewModel.CurrentCustomer = currCustomer;\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>I'm placing this CustomerSelected method inside the OrdersModule class, here's that class:</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> OrdersModule : IModule {\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> IEventAggregator eventAggregator;\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> IUnityContainer container;\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> IRegionManager regionManager;\r\n\r\n    <span style=\"color:blue\">public</span> OrdersModule(IUnityContainer container, IRegionManager regionManager, IEventAggregator eventAggregator) {\r\n        <span style=\"color:blue\">this</span>.container = container;\r\n        <span style=\"color:blue\">this</span>.regionManager = regionManager;\r\n        <span style=\"color:blue\">this</span>.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Initialize() {\r\n<span style=\"text-decoration:underline\"><strong>        <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;CustomerSelectedEvent&gt;().Subscribe(CustomerSelected, <span style=\"color:blue\">true</span>);\r\n</strong></span>\r\n        <span style=\"color:blue\">this</span>.regionManager.RegisterViewWithRegion(<span style=\"color:#a31515\">&quot;RightRegion&quot;</span>,\r\n                                                    () =&gt;\r\n                                        <span style=\"color:blue\">this</span>.container.Resolve&lt;OrdersView&gt;());\r\n    }\r\n\r\n<em>    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CustomerSelected(Customer currCustomer) {\r\n        <span style=\"color:blue\">if</span> (currCustomer == <span style=\"color:blue\">null</span>)\r\n            <span style=\"color:blue\">return</span>;\r\n\r\n    ...\r\n    }\r\n</em>}\r\n</pre>\r\n</div>\r\n<div style=\"background-color:white; color:black\">(Note that I'm subscribing to the event in the Initialize method)</div>\r\n<p>Here is the Shell that defines the regions:</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span> <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">LayoutRoot</span><span style=\"color:black\">&quot;</span>\r\n        <span style=\"color:red\">Background</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">White</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid.RowDefinitions</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">RowDefinition</span> <span style=\"color:red\">Height</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">50</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">RowDefinition</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid.RowDefinitions</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid.ColumnDefinitions</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ColumnDefinition</span> <span style=\"color:red\">Width</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">700</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ColumnDefinition</span> <span style=\"color:red\">Width</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">3*</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid.ColumnDefinitions</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">My Prism Solution</span><span style=\"color:black\">&quot;</span>\r\n                <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">36</span><span style=\"color:black\">&quot;</span>\r\n                <span style=\"color:red\">TextAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Left</span><span style=\"color:black\">&quot;</span>\r\n                <span style=\"color:red\">HorizontalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Center</span><span style=\"color:black\">&quot;</span>\r\n                <span style=\"color:red\">Grid.ColumnSpan</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">2</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Border</span> <span style=\"color:red\">Grid.Row</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ContentControl</span> <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">LeftRegion</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">prism:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">LeftRegion</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">VerticalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">HorizontalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Border</span><span style=\"color:blue\">&gt;</span>\r\n\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Border</span> <span style=\"color:red\">Grid.Column</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1</span><span style=\"color:black\">&quot;</span>\r\n            <span style=\"color:red\">Grid.Row</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1</span><span style=\"color:black\">&quot;</span>\r\n            <span style=\"color:red\">Grid.RowSpan</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">2</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ContentControl</span> <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MainRegion</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">prism:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">RightRegion</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">VerticalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">HorizontalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ContentControl</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Border</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>The method that publishes the event is Customers_CurrentChanged located in CustomersViewModel in CustomersModule.</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">void</span> Customers_CurrentChanged(<span style=\"color:blue\">object</span> sender, EventArgs e) {\r\n    Customer currCustomer = <span style=\"color:blue\">this</span>.Customers.CurrentItem <span style=\"color:blue\">as</span> Customer;\r\n    <span style=\"color:blue\">if</span> (currCustomer != <span style=\"color:blue\">null</span>) {\r\n        <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;CustomerSelectedEvent&gt;().Publish(currCustomer);\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>The whole structure of the solution is:</p>\r\n<p><img src=\"http://s15.postimage.org/lstq3w6qj/Sin_t_tulo.jpg\" alt=\"\" width=\"252\" height=\"636\"></p>\r\n<p>Hope you can detect the problem with this information, but if you need more, just tell me what...</p>\r\n<p>My best regards</p>\r\n<p>Rafael</p>\r\n",
    "PostedDate": "2012-08-08T07:48:59.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "897133",
    "ThreadId": "390727",
    "Html": "<p>Hi Rafael,</p>\r\n<p>So far we were unable to find the reason behind this problem within the code snippets you provided.</p>\r\n<p>There have been reports of similar problems in the past which were mainly related to how the <strong>region behaviors</strong> and the <strong>region manager</strong> works. However, this is the first time we see this error with a region declared in the shell.</p>\r\n<p>It would be helpful if you could provide us with a repro-sample application, so that we can check it in further detail and help you find the cause behind this problem. You can upload your repro-sample application, for example, in <a href=\"https://skydrive.live.com/\">SkyDrive</a> or in any other file hosting service of your preference and post the link here.</p>\r\n<p>Thanks,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-08-08T11:19:00.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "897777",
    "ThreadId": "390727",
    "Html": "\r\n<p>Hi Damian:</p>\r\n<p>I already loaded my project (along with a backup of the database) into SkyDrive, but I don't know how to allow you to open it.</p>\r\n<p>Could you please tell me how to do it?., I'm trying to receive answer from a Windows forum, but I don't get it.</p>\r\n",
    "PostedDate": "2012-08-09T13:48:10.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898024",
    "ThreadId": "390727",
    "Html": "<p>Hi Rafael,</p>\r\n<p>Once you uploaded the project to your SkyDrive account, you could copy the <strong>URL </strong>from your browser when navigating your files inside the account, and then paste the <strong>URL </strong>in the thread as a text or as a link, so you can share your files with other people.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-08-10T05:51:26.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898035",
    "ThreadId": "390727",
    "Html": "\r\n<p>Hi Agustin:</p>\r\n<p>The URL I see once in my accountin in front of the rar file&nbsp;is: <a href=\"https://skydrive.live.com/#cid=228822BB183339A9&id=228822BB183339A9%21234\">\r\nhttps://skydrive.live.com/#cid=228822BB183339A9&amp;id=228822BB183339A9%21234</a></p>\r\n<p>When I try this address SkyDrive asks for the Windows Live ID, I don't know how to suppress this behavior.</p>\r\n<p>There's a &quot;Share&quot; option for each file in the drive, but it asks for an email address.</p>\r\n<p>My best regards,</p>\r\n<p>Rafael</p>\r\n",
    "PostedDate": "2012-08-10T06:23:29.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898080",
    "ThreadId": "390727",
    "Html": "<p>Hi,</p>\r\n<p>In order to allow other people to see your file you will have to change the permissions of the folder containing the file. Based on my understanding, this can be achieved in the details pane on the right, (if it is collapsed, expand it), then for example in the <strong>Get a link </strong>option, you could choose the <strong>Public </strong>option.</p>\r\n<p>Also, you could find more information about how to set this configuration in the following article:</p>\r\n<ul>\r\n<li><a href=\"http://windows.microsoft.com/en-US/skydrive/change-access-permissions-faq\">Share files and folders and change permissions</a></li>\r\n</ul>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-08-10T07:54:30.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898229",
    "ThreadId": "390727",
    "Html": "<p>Ok Agustin.</p>\r\n<p>It's public, now you can use it.</p>\r\n<p>Thank you for your patience.</p>\r\n<p>My best regards,</p>\r\n<p>Rafael</p>",
    "PostedDate": "2012-08-10T13:13:05.89-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898646",
    "ThreadId": "390727",
    "Html": "\r\n<p>Hi Agustin:</p>\r\n<p>I made some tests with UICompositionQuickStart.</p>\r\n<p>I ran it and it went well, then I just deleted the Prism references in the solution explorer and re-added them again, when I ran it, I got an exception.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-08-12T22:40:48.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898901",
    "ThreadId": "390727",
    "Html": "<p>Hi Rafael,</p>\r\n<p>After checking your application we found that the reason behind this problem is that you are actually defining a \"<strong>RightRegion</strong>\" in two different places, one in the <strong>Shell </strong>and one in the <strong>CustomersSummaryView</strong>. As a <strong>RegionManager </strong>cannot have two regions with the same name, the exception is thrown.</p>\r\n<p>This problem can be solved changing the name of the inner region to be different from the name of the <strong>Shell</strong>'s <strong>RightRegion </strong>or adding the <strong>CustomersSummaryView </strong>with a scoped region manager, doing something like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>rightRegion.Add(view, <span style=\"color: #a31515;\">\"CustomersSummaryView\"</span>, <span style=\"color: blue;\">true</span>);\r\n</pre>\r\n</div>\r\n<p>You can find more information about this in the following chapter of the Prism documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28v=pandp.40%29\">Chapter 7 - Composing the User Interface</a></li>\r\n</ul>\r\n<p>Usually, when adding a view that contains a region with an existing name, this exception is thrown in the <strong>Add </strong>method of the region. However, it seems that due to how the view is added, the <strong>RegionManager </strong>didn't know the \"inner region\" until you requested for a \"<strong>RightRegion</strong>\" again. Due the this and that we didn't know that the <strong>CustomersSummaryView</strong> also had a <strong>RightRegion</strong>, we initially supposed that this was related to other issue.</p>\r\n<p>I hope this helps,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-08-13T13:12:40.357-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "898938",
    "ThreadId": "390727",
    "Html": "<p>Thanks a lot Damian!!!</p>",
    "PostedDate": "2012-08-13T15:57:14.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]