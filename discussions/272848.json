[
  {
    "Id": "672772",
    "ThreadId": "272848",
    "Html": "\r\n<p></p>\r\n<div><span id=\"internal-source-marker_0.3048929281067103\">I&rsquo;m fairly new to prism, and I&rsquo;m currently re-writing one of our existing applications using prism as a proof of concept project.</span><br>\r\n<br>\r\n<span>The application uses MVVM with a<strong> View</strong></span><strong>Model</strong><span><strong> first</strong> approach: Our ViewModel is resolved by the container, and an IViewResolver service figures out what view it should be wired up to (Using name\r\n conventions amongst other things)</span><br>\r\n<br>\r\n<span>The code (to add a view to a tab control) at the moment looks something like this:</span><br>\r\n<br>\r\n<span>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> vm = (..<span style=\"color:blue\">get</span> ViewModel <span style=\"color:blue\">from</span> somewhere)\r\nIRegion reg = _regionManager.Regions[<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>];\r\n<span style=\"color:blue\">var</span> vw = _viewResolver.FromViewModel(vm); <span style=\"color:green\">// Spins up a view and sets its DataContext</span>\r\nreg.Add(vw);\r\nreg.Activate(vw);\r\n</pre>\r\n</div>\r\n<br>\r\n</span><br>\r\n<span>..which all works fine, however I&rsquo;d really like to use the Prism navigation framework to do all this stuff for me, so I could do something like:</span><br>\r\n<br>\r\n<span>_regionManager.RequestNavigate(&ldquo;MainRegion&rdquo;, new Uri(&ldquo;NameOfMyViewModel&rdquo;, UriKind.Relative));</span><br>\r\n<br>\r\n<span>and have Prism spin up the view model &#43; view, set the DataContext and Inject the view. I&rsquo;ve had some success by creating DataTemplates referencing the ViewModel types</span><br>\r\n<br>\r\n<span>ie:</span></div>\r\n<div></div>\r\n<div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ResourceDictionary</span> <span style=\"color:red\">xmlns</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:black\">&quot;</span>\r\n<span style=\"color:red\">xmlns:x</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:black\">&quot;</span>\r\n<span style=\"color:red\">xmlns:local</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">clr-namespace:Module01</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span> <span style=\"color:red\">DataType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{x:Type local:TestViewModel}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">local</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">TestView</span> <span style=\"color:blue\">/&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ResourceDictionary</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</div>\r\n<div><br>\r\n<span>...and have the module add the relevant resource dictionary into the applications resources when the module is initialized, but that seems a bit rubbish.</span><br>\r\n<br>\r\n<span>Is there a way to effectively take over view creation from Prism, so that when a view is requested I can supply one? There&rsquo;s an overload of RegionManager.RegisterViewWithRegion that takes a delegate that allows you to supply a view yourself, and\r\n I guess I&rsquo;m after something like that.</span><br>\r\n<br>\r\n<span>I think I might need to supply my own IRegionBehaviorFactory, but unsure what&rsquo;s involved (or even if I&rsquo;m on the right path!)</span><br>\r\n<br>\r\n<span>Any help appreciated!</span></div>\r\n<p></p>\r\n",
    "PostedDate": "2011-09-16T08:34:45.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "672852",
    "ThreadId": "272848",
    "Html": "<p>Hi,</p>\n<p>As far as I know, a common possibility to support the view model first approach is using <strong>DataTemplates</strong>. A <strong>DataTemplate </strong>allows you to \"pair\" a view model with a view and still keep them decoupled. This can be done because neither of them <em>know </em>each other; they are only related through a <strong>DataTemplate</strong> defined in the module.</p>\n<p>In the approach that you suggest, the \"view resolver\" would need to <em>know </em> which view model correspond to each view, therefore, the views and view models would not be completely decoupled. If you wish, you could implement an extension method that accepts a delegate with a view model as a parameter. Internally, that extension method  could obtain the corresponding view for the view model, set the data context of the view and then, invoke a common method using that view as a parameter. However, this is not a usual approach when using the view model first approach.</p>\n<p>For more information about the view model first approach you might find the following links useful:</p>\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28v=PandP.40%29.aspx\">Chapter 8: Navigation in MSDN</a> </li>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/250936\">Region navigation to ViewModel in CodePlex</a> </li>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/267584\">How to use view-model first approach with the region feature?</a></li>\n</ul>\n<p>I hope you find this useful,</p>\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-09-16T11:16:55.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "672910",
    "ThreadId": "272848",
    "Html": "<p>&nbsp;</p>\r\n<div><span id=\"internal-source-marker_0.39773906813934445\">Thanks for the reply - I can kinda get it working using data templates, but if the DataTemplate is defined in a module (which it almost always will be) then I&rsquo;d have to have something in the Apps resource file referencing that modules resource dictionary (creating a dependency between the application and the modules it&rsquo;s hosting) which isn&rsquo;t ideal.</span><br /><br /><span>The view locator service doesn&rsquo;t introduce any coupling between our viewmodels and their views - most of it happens using either naming conventions (ie, given a viewmodel of type &lsquo;TestViewModel&rsquo; it&rsquo;ll try to find a &lsquo;TestView&rsquo; type from a series of registered locations, starting with the container)</span><br /><br /><span>Presumably (and I&rsquo;m new to Prism so forgive me if I&rsquo;m wrong!) when you do something like .RequestNavigate() passing a Uri, something takes that Uri and spins up a view based on that (using the name it was registered with the container by the look of it)</span><br /><br /><span>Is there no way to override that bit of functionality?</span></div>",
    "PostedDate": "2011-09-16T13:24:47.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "673688",
    "ThreadId": "272848",
    "Html": "<p>For anyone else looking for this sort of functionality, <a href=\"http://msdn.microsoft.com/en-us/library/microsoft.practices.prism.regions.iregionnavigationcontentloader(v=PandP.40).aspx\">IRegionNavigationContentLoader</a> is the way to go. See <a href=\"http://stackoverflow.com/questions/7453157/prism-requestnavigate-can-i-take-implement-my-own-view-resolution-service\">here</a></p>",
    "PostedDate": "2011-09-19T07:41:55.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "673729",
    "ThreadId": "272848",
    "Html": "<p>Hi,</p>\r\n<p><span style=\"font-size: 11pt;\" lang=\"EN-US\">Thanks for sharing this with the rest of the community, as it might be useful for other users pursuing this scenario.</span></p>\r\n<p><span style=\"font-size: 11pt;\" lang=\"EN-US\">Regards,</span></p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-09-19T09:16:39.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]