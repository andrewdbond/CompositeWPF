[
  {
    "Id": "104560",
    "ThreadId": "31464",
    "Html": "Hi,<br>\r\n<br>\r\nAs I'm currently investigating Composite WPF I found out that the eventing system from CAB using event topic names has been replaced by using specific &quot;CompositeWpfEvent&quot;-derived classes. Often I just want to raise a simple event without data in a service which is then received in a presenter. The event is just a normal .NET event. In CAB this was quite easy by just adding a publisher and subscriber attribute to the service and the presenter and the whole connecting was done by CAB. Is there also a way in Composite WPF to use such a event system based on id's instead of creating event classes for each specific event? I think this mechanism is really not required for most use cases.<br>\r\n<br>\r\nThanks for your feedback.<br>\r\n<br>\r\nRegards,<br>\r\nTschaena<br>\r\n",
    "PostedDate": "2008-07-14T08:28:17.377-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "112900",
    "ThreadId": "31464",
    "Html": "Hi tschaena<br>\r\n<br>\r\nI posted an approach along with sample code on how you can do this here...<br>\r\n<br>\r\n<a href=\"http://codebetter.com/blogs/glenn.block/archive/2008/08/22/firing-generic-events-with-eventaggregator.aspx\">http://codebetter.com/blogs/glenn.block/archive/2008/08/22/firing-generic-events-with-eventaggregator.aspx</a><br>\r\n<br>\r\nLet me know if it works for you.<br>\r\n<br>\r\nRegards<br>\r\nGlenn\r\n",
    "PostedDate": "2008-08-22T03:17:05.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]