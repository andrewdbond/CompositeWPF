[
  {
    "Id": "603035",
    "ThreadId": "255322",
    "Html": "\r\n<p>Hi folks,</p>\r\n<p>I originally posted this question in the entlib forum to no avail. I was told I might have better luck here because it involves Prism/Unity MVVM:</p>\r\n<p>I'm having a problem using the Ent5 logging block with WPF Designtime data. The applications work perfectly, but after I 'tacked on' the logging block,&nbsp;when I try to open the WPF form in the designer (the form uses design time data), the logging block\r\n can't be instanciated. The designer throws the exception &quot;The type LogWriter cannot be constructed. You must configure the container to supply this value.&quot;. Fine, it's probably because the designer can't find the entlib config used by my main app (app.config).\r\n So I tried creating an app.config for the MVVM module I'm working on (copied the entlib config items to it from the main app.config) and still no joy. I know the problem is coming from my designtime class constructor as shown below (the ExtendedLogger class):</p>\r\n<p style=\"padding-left:30px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public CornerPadDtViewModel() : base(new RegionManager(), new UnityContainer(), new ExtendedLogger())<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CornerPadVm = new UserInput<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SalesOrder = &quot;XXXX1234567&quot;, blah, blah...<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;};<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"padding-left:30px\">I'm not even sure how to mock it, because I'm not too sure why it's not finding my new 'local' app.config in the module I'm working on in the first place. The app runs great, logging is slick, it's just the design time data issue.\r\n (sigh)</p>\r\n<p style=\"padding-left:30px\">Soooo... how in the world can I get my designtime class back if I'm using the logging block in the MVVM module and it uses constructor injection?</p>\r\n<p style=\"padding-left:30px\">Thanks for any help here.</p>\r\n",
    "PostedDate": "2011-04-26T09:53:09.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "603133",
    "ThreadId": "255322",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, you need to register your logger class in the <strong>Unity containter</strong>. This is done in the bootstrapper&acute;s <strong>ConfigureContainer</strong> method.</p>\r\n<p>By registering the logger in the container you could try to resolve it in your view model class like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> CornerPadDtViewModel(ILoggerExtended logger)\r\n{\r\n     <span style=\"color: blue;\">this</span>.MyLogger = logger;\r\n}\r\n</pre>\r\n</div>\r\n<p>Take into account that <em>CornerPadDtViewModel</em> is not actually resolving it dependencies with Unity, since you are creating a new instance of the logger class. Also you don&acute;t need to create a new instance of the <strong>RegionManager</strong> in the view model, since it is already registered in the container you run the application for the first time.</p>\r\n<p>Additionally, you can read <a href=\"http://msdn.microsoft.com/en-us/library/ff921140(PandP.40).aspx\">Chapter 3: Managing Dependencies Between Components</a> where container topics are covered.</p>\r\n<p>Also if you continue experiencing this issue, it could be helpful if you could provide us with a repro sample of your solution, so that we can help you to identify the cause of your problem.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-04-26T12:22:25.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "603190",
    "ThreadId": "255322",
    "Html": "<p>Thanks for the reply. Perhaps I did'nt make my situation too clear. Allow me to clarify.</p>\r\n<p>The class <em>CornerPadDtViewModel</em> is derived from my runtime class <em>CornerPadViewModel</em> which has this signature:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public CornerPadViewModel(IRegionManager regionManager, IUnityContainer container, IExtendedLogger logger)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_logger = logger;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_container = container;</p>\r\n<p>...</p>\r\n<p>The logger class <strong><em>is</em></strong> registered in Unity Container, because it resolves perfectly at runtime.</p>\r\n<p>The class <em>CornerPadDtViewModel</em> is <strong>derived</strong> from CornerPadViewModel for design time purposes only. This allows me to instanciate the view model class so the design time values can be bound to the controls. In order to do this, I must instanciate it in this manner:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public CornerPadDtViewModel() : base(new RegionManager(), new UnityContainer(), new ExtendedLogger())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CornerPadVm = new UserInput<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SalesOrder = \"XXXX1234567\",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CustomerName = \"012345678901234567890123456789\",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QtyPerBale = 9999,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QtyCornerPadsToPrint = 4,</p>\r\n<p><br />Paying specific attention to the <strong>base(new.. . </strong>Since Unity is not available to resolve any of the base class constructor parameters, I have to <strong>NEW </strong>them up. This works fine, until I get to new ExtendedLogger(). I can't use the syntax <em><strong>ILoggerExtended logger </strong></em>here because the IDE throws a warning of \"<em>Interface name is not valid at this point</em>\".</p>\r\n<p>Unless there is another way of creating a design time class based on my run time class...</p>\r\n<p>Thanks, if you need more code, I would be happy to provide it.</p>\r\n<p>-John</p>",
    "PostedDate": "2011-04-26T13:46:40.457-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "603604",
    "ThreadId": "255322",
    "Html": "<p>Hi John,</p>\r\n<p>Based on my understanding of your scenario, you could create a dummy Extended Logger, which must implement the <em><strong>ILoggerExtended</strong> </em>interface, so that you can pass it as a parameter to the constructor of your design time ViewModel<em>, </em>thus avoiding the errors that arise from creating the default <strong>ExtendedLogger </strong>in design time.</p>\r\n<p>Additionally, you might find the <a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.40%29.aspx#sec63\">Blendability section</a> in the UI Composition chapter of the Prism MSDN documentation useful, as it provides alternative strategies and information for design time support in Prism.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-04-27T07:42:55.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "604094",
    "ThreadId": "255322",
    "Html": "<p>Using the logger in the Designer mode is not a good practice. Looks like you use the constructor injection, you may consider property injection for the Models.</p>\r\n<p>Before using Log, it should be null checked or if it is in designer mode, do not log anything..</p>\r\n<p>You have less luck with Bootstapper to configure the extended log for design time, since Bootstrapper is called for the application but not for the design time.</p>\r\n<p>My advice would be fix the code which uses log in the designer mode than adding design-time extensions..</p>\r\n<p>Thanks,</p>\r\n<p>Gopalakrishnan Subramani</p>\r\n<p>http://streamlined.in</p>",
    "PostedDate": "2011-04-28T05:56:22.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "604118",
    "ThreadId": "255322",
    "Html": "<p>Thanks Guido,</p>\r\n<p>Your suggestion worked perfectly. Why I didn't think of that before, I don't know. I added a simple dummy class as you suggested that inherits from IExtended Logger and does nothing and Presto!,&nbsp;I have my design time data back.</p>\r\n<p>Thank you for 'waking me up'. It was too simple. :-)</p>\r\n<p>-John</p>",
    "PostedDate": "2011-04-28T07:00:24.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]