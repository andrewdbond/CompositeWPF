[
  {
    "Id": "252238",
    "ThreadId": "73767",
    "Html": "<p>Hi,</p>\r\n<p>Here's my working model for the PRISM work I've been doing.</p>\r\n<p><a title=\"source code\">http://cid-9fdb2a0b191b39e2.skydrive.live.com/self.aspx/Public/PrismTab.Shell.zip</a></p>\r\n<p>This works (all the files required are included in the zip file and the password for the login screen is 'test').</p>\r\n<p>The data is set to show as a list (after the login screen). I want it to show as TabControl something like below:</p>\r\n<p>Tab Header: Name Tab<br>Tab Content: &lt;value in Name&gt;</p>\r\n<p>Tab Header: Word Tab<br>Tab Content: &lt;value in Word&gt;</p>\r\n<p>Tab Header: Time Tab<br>Tab Content: &lt;value in Time&gt;</p>\r\n<p>The data for each of the tab content will be completely different from the other. So I cannot just write a style for this that gets repeated across all tabs. How do I get this done?</p>\r\n<p>If possible, please have a look at the source code and give me insights.</p>\r\n<p>Thanks<br>Arun</p>",
    "PostedDate": "2009-11-01T18:45:03.56-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252430",
    "ThreadId": "73767",
    "Html": "<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">\r\n<p>Just create different views and add them to your tab region.</p>\r\n</span></span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">TabControl</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Regions</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">RegionManager.RegionName</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;TabRegion&quot;</span></span><span style=\"font-size:x-small\">&nbsp;</span></p>\r\n<p><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">HorizontalAlignment</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;Stretch&quot;</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">BorderBrush</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;{</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">x</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">Null</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">}&quot;</span></span></p>\r\n<p><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">Regions</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">TabControlRegionAdapter.ItemContainerStyle</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;{</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">StaticResource</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> WhateverTabStyle</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">}&quot;</span></span><span style=\"font-size:x-small\"> </span></p>\r\n</p>\r\n<p><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">VerticalAlignment</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;Stretch&quot;</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"> /&gt;</span></span></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-02T07:08:41.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252445",
    "ThreadId": "73767",
    "Html": "<p>Robb, do you have a snippet for this?</p>",
    "PostedDate": "2009-11-02T07:51:55.977-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252455",
    "ThreadId": "73767",
    "Html": "<p>You create&nbsp;your tab region in the shell&nbsp;and add the views in&nbsp;a module&nbsp;to the&nbsp;tab region</p>\r\n<p>&nbsp;&nbsp;&nbsp; public class WhateverModule : IModule <br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private readonly IUnityContainer _container;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private readonly IRegionManager _regionManager;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public WhateverModule(IUnityContainer container, IRegionManager regionManager)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _container = container;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _regionManager = regionManager;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region IModule Members</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Initialize()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegisterViewsAndServices();</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IRegion tabRegion = this._regionManager.Regions[&quot;TabRegion&quot;];</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View1 view1 = this._container.Resolve&lt;View1&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tabRegion.Add(view1, &quot;View1&quot;);</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View2 view2 = this._container.Resolve&lt;View2&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tabRegion.Add(view2, &quot;View2&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected void RegisterViewsAndServices()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion<br>&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2009-11-02T08:19:14.703-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252461",
    "ThreadId": "73767",
    "Html": "<p>Thanks Robb, makes sense now. I'll give this a try.</p>\r\n<p>Thanks again<br>Arun</p>",
    "PostedDate": "2009-11-02T08:41:06.937-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252667",
    "ThreadId": "73767",
    "Html": "<p>Robb,</p>\r\n<p>Things have changed slightly on my end.</p>\r\n<p>Instead of using different views, I've decided to put all the content in Accordion control. It looks like below:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>&lt;controls:Accordion x:Name=&quot;AccordionPane&quot; Grid.Row=&quot;0&quot; Grid.Column=&quot;0&quot;&gt;\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">controls</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">AccordionItem</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Word&quot;</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Name&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">controls</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">AccordionItem</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Word&quot;</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Word&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">controls</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">AccordionItem</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Time&quot;</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Blue\">&quot;Time&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">controls</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Accordion</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Now, when I set the DataContext of the MetricsView.xaml class to a view model, I'm doing that in the constructor like this:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> MetricsView(ServiceViewModel viewModel)\r\n{\r\n    InitializeComponent();\r\n    DataContext = viewModel;\r\n}\r\n</pre>\r\n</div>\r\n<p>My view model contains a property called MetricsItems of type List&lt;MetricsItem&gt;. The class MetricsItem is defined below:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> MetricsItem\r\n{\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> Name { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> Word { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> Time { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>How do I write the binding code to make sure these properties are set to the content of the AccordionItem?</p>\r\n<p>Thanks<br>Arun</p>",
    "PostedDate": "2009-11-02T23:02:38.113-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252840",
    "ThreadId": "73767",
    "Html": "<p>&nbsp;&nbsp;&nbsp; It would be something like this.</p>\r\n<p>&nbsp;&nbsp;&nbsp; Bind to the ItemSource<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; &lt;controls:Accordion ItemsSource=&quot;{StaticResource MetricsItemCollection}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--customize content appearance--&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;controls:Accordion.ContentTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Border Background=&quot;Red&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Text=&quot;{Binding Content}&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Border&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/controls:Accordion.ContentTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--customzie header appearance--&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;controls:Accordion.ItemContainerStyle&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style TargetType=&quot;controls:AccordionItem&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;HeaderTemplate&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Border Background=&quot;Azure&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Text=&quot;{Binding Header}&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Border&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/controls:Accordion.ItemContainerStyle&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/controls:Accordion&gt;</p>\r\n<p><br>&nbsp;&nbsp;&nbsp; Add this to your viewmodel</p>\r\n<p>&nbsp;&nbsp;&nbsp; private MetricsItems metricsItemsCollection;<br>&nbsp;&nbsp;&nbsp; public MetricsItems MetricsItemsCollection<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return this.metricsItemsCollection; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.metricsItemsCollection = value;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.OnPropertyChanged(&quot;MetricsItemsCollection&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;<br>&nbsp;&nbsp;&nbsp; private void SomeMethod()<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MetricsItems.AddItem(header, view)<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp; Create a seperate class</p>\r\n<p>&nbsp;&nbsp;&nbsp; public class MetricsItems : ObservableCollection&lt;MetricsItem&gt;<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public MetricsItems() { }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void AddItem(string header, FrameworkElement content)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Add(new MetricsItem { RequestId = requestId, Content = content});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp; public class MetricsItem <br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public event PropertyChangedEventHandler PropertyChanged;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public MetricsItem(string header, FrameworkElement content) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Header = header;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Content = content; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string Header { get; set; };<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private FrameworkElement Content { get; set; }</p>\r\n<p>&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2009-11-03T07:14:20.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252904",
    "ThreadId": "73767",
    "Html": "<p>Robb,</p>\r\n<p>Thanks a lot for your help.</p>\r\n<p>Arun</p>",
    "PostedDate": "2009-11-03T09:27:34.923-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]