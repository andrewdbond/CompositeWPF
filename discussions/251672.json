[
  {
    "Id": "588317",
    "ThreadId": "251672",
    "Html": "\r\n<p>Scenario:</p>\r\n<p>Standard Prism application (Shell &#43; ModuleA) with MefBootstrapper. <br>\r\n<br>\r\nModuleCatalog.xaml describes ModuleInfo like this:<br>\r\n<br>\r\n&#65279;<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\">InitializationMode</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">OnDemand</span><span style=\"color:black\">&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\">Ref</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA.xap</span><span style=\"color:black\">&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\">ModuleName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA</span><span style=\"color:black\">&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\">ModuleType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA.ModuleDefinitions.ModuleA, ModuleA, Version=1.0.0.0</span><span style=\"color:black\">&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">&gt;</span><br>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span><span style=\"color:blue\">&gt;</span></p>\r\n<p>ModuleA.cs<br>\r\n&nbsp;[ModuleExport(<span style=\"color:blue\">typeof</span>(ModuleA))] <span style=\"color:blue\">\r\npublic</span> <span style=\"color:blue\">class</span> ModuleA : IModule<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span>\r\n<span style=\"color:blue\">readonly</span> IRegionManager _RegionManager;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> IModuleCatalog _Container;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [ImportingConstructor]<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> ModuleA(IModuleCatalog container, IRegionManager regionManager)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">\r\nthis</span>._Container = container;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">\r\nthis</span>._RegionManager = regionManager;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">void</span> Initialize()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RegionManager.RegisterViewWithRegion(<span style=\"color:#a31515\">&quot;ModuleARegion&quot;</span>,\r\n<span style=\"color:blue\">typeof</span>(ModuleAView));<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>ModuleA is loaded OnDemand from Shell using&nbsp; ModuleManager.LoadModule(<span style=\"color:#a31515\">&quot;ModuleA&quot;</span>);.... Everything is nice...</p>\r\n<p>Now, rename &#65279;&#65279;ModuleName in ModuleCatalog.xaml to something else, for example like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span> </pre>\r\n<pre><span style=\"color:red\">InitializationMode</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">OnDemand</span><span style=\"color:black\">&quot;</span> </pre>\r\n<pre><span style=\"color:red\">Ref</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA.xap</span><span style=\"color:black\">&quot;</span> </pre>\r\n<pre><span style=\"color:red\">ModuleName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA<strong>AAAA</strong></span><span style=\"color:black\">&quot;</span></pre>\r\n<pre><span style=\"color:red\">ModuleType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleA.ModuleDefinitions.ModuleA, ModuleA, Version=1.0.0.0</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">&gt;</span> </pre>\r\n<pre><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span><span style=\"color:blue\">&gt;</span></pre>\r\n</div>\r\n<p>and load moduleAAAAA again in code, or just set InitializationMode = WhenAvailabe... Boom Crash...Exception: &#65279;</p>\r\n<pre>Unable to locate the module with type 'ModuleA.ModuleDefinitions.ModuleA, ModuleA, Version=1.0.0.0' among the exported modules. Make sure the module name in the module catalog matches that specified on ModuleExportAttribute for the module type.</pre>\r\n<pre>Only name of the module was changed in config...I found that ModuleName should match  [ModuleExport(typeof(ModuleA))]  in ModuleA class....</pre>\r\n<pre>Bug?</pre>\r\n<pre>With Unity ModuleName can have any value - everything works fine....</pre>\r\n<pre>BUG -((</pre>\r\n",
    "PostedDate": "2011-03-29T09:40:45.843-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588346",
    "ThreadId": "251672",
    "Html": "<p>Hi,</p>\r\n<p>The behavior you're mentioning is by design; the <strong>MefModuleManager</strong> and <strong>MefModuleInitializer </strong>use the <strong>ModuleExport </strong>attribute to identify the modules that will be loaded and initialized using MEF. Therefore, the name in the <strong>ModuleExport </strong>attribute must match the name given to the module in the module catalog.</p>\r\n<p>If you consider this behavior is unappropriate for you, you could create a work item in the Issue Tracker and explain your reasons, for the matter to be reconsidered on future versions of Prism.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-29T10:28:49.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588350",
    "ThreadId": "251672",
    "Html": "<p>Aha..</p>\r\n<p>I think that ModuleInfo.ModuleName should not have any relation to Type of Module ...At least in prism.</p>\r\n<p>I think it will make sense to create work item...<br />Thanks.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-03-29T10:39:49.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588360",
    "ThreadId": "251672",
    "Html": "<p>Take into account that the <strong>ModuleName </strong>must match the name provided in the <strong>ModuleExport</strong>, but not necessarily the <strong>Type</strong>.</p>\n<p>If you don't provide a name in the <strong>ModuleExport </strong>attribute, the <strong>ModuleType </strong>will be used as its name.</p>\n<p>You could try setting the <strong>ModuleExport </strong>attribute like this:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>[ModuleExport(<span style=\"color: #a31515;\">\"ModuleAAAAA\"</span>,<span style=\"color: blue;\">typeof</span>(ModuleA))]\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>I hope you find this helpful.</p>\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-29T10:54:34.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588376",
    "ThreadId": "251672",
    "Html": "<p>thats right. This is what i faced in my code.</p>\r\n<p>Idea is to name module in external xaml file, not in module export attribute... same as unity does</p>",
    "PostedDate": "2011-03-29T11:38:46.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]