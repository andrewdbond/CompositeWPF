[
  {
    "Id": "1405020",
    "ThreadId": "622044",
    "Html": "Good Day Everyone,\r<br />\n<br />\nI have a question that I hope I can get an answer for.  I am building an application with WPF that uses another project/solution and I want to be able to use Prism/Unity for both applications/solutions.\r<br />\n<br />\nIn other words, I have a library project that deals with connecting to physical devices and I want to keep it separate from the application that will use it.  I want to use Prism/Unity in both projects and I don't know if there will be any integration issues between the two different projects.\r<br />\n<br />\nAny information would be greatly appreciated.\r<br />\n<br />\nThank You,\r<br />\n<br />\nTim Savage<br />\n",
    "PostedDate": "2015-04-11T23:27:01.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1405276",
    "ThreadId": "622044",
    "Html": "Hi Tim,\r<br />\nIt is very common to factor out common shared code into a class library that gets reused across modules and the shell within the same app or across apps. The main consideration would be whether that shared functionality can be constrained to only being used within a WPF or full .NET framework app, or whether it also needs to be portable to other XAML platforms like WinRT or Windows Phone or Xamarin. The latter constrains you a lot more. I'd recommend you check out our new version that is in work at <a href=\"http://github.com/prismlibrary/\" rel=\"nofollow\">http://github.com/prismlibrary/</a> - we have refactored as much as possible into a single PCL for the Prism.Core stuff and then have platform specific variants for the other XAML platforms.\r<br />\n<br />\nBottom line as long as the shared functionality is going to be used only in WPF or full .NET framework apps, you should have no problem. <br />\n",
    "PostedDate": "2015-04-12T06:38:59.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]