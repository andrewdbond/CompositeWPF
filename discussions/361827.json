[
  {
    "Id": "856833",
    "ThreadId": "361827",
    "Html": "\r\n<p>I'm programming a View with it's ViewModel. The View creates an instance of the ViewModel from xaml.</p>\r\n<p>It just doesn't compile.</p>\r\n<p>This particular project is a remake of the UICompositionQuickStart but with a few changes,\r\n<strong>RIA Services </strong>(Northwind Database), ViewModels declared from xaml, and some others. Just to resemble one of my projects.</p>\r\n<p><img src=\"http://i48.tinypic.com/2uzw9br.jpg\" alt=\"a\" width=\"259\" height=\"522\"></p>\r\n<p><img src=\"http://i49.tinypic.com/axi1zr.jpg\" alt=\"b\" width=\"688\" height=\"211\"></p>\r\n<p>&nbsp;Here is the ViewModel:</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> EmployeeListViewModel : INotifyPropertyChanged {\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> IEventAggregator eventAggregator;\r\n\r\n    <span style=\"color:blue\">public</span> EmployeeListViewModel() {\r\n        <span style=\"color:blue\">this</span>.eventAggregator = ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;();\r\n        <span style=\"color:blue\">this</span>.Employees.CurrentChanged &#43;= <span style=\"color:blue\">new</span> EventHandler(<span style=\"color:blue\">this</span>.SelectedEmployeeChanged);\r\n    }\r\n\r\n    <span style=\"color:blue\">public</span> ICollectionView Employees {\r\n        <span style=\"color:blue\">get</span>;\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>;\r\n    }\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> SelectedEmployeeChanged(<span style=\"color:blue\">object</span> sender, EventArgs e) {\r\n        Employee employee = <span style=\"color:blue\">this</span>.Employees.CurrentItem <span style=\"color:blue\">as</span> Employee;\r\n        <span style=\"color:blue\">if</span> (employee != <span style=\"color:blue\">null</span>) {\r\n            <span style=\"color:green\">// Publish the EmployeeSelectedEvent event.</span>\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;EmployeeSelectedEvent&gt;().Publish(employee);\r\n        }\r\n    }\r\n\r\n    <span style=\"color:blue\">#region</span> INotifyPropertyChanged Members\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">event</span> PropertyChangedEventHandler PropertyChanged;\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> NotifyPropertyChanged(<span style=\"color:blue\">string</span> propertyName) {\r\n        <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.PropertyChanged != <span style=\"color:blue\">null</span>) {\r\n            <span style=\"color:blue\">this</span>.PropertyChanged(<span style=\"color:blue\">this</span>, <span style=\"color:blue\">new</span> PropertyChangedEventArgs(propertyName));\r\n        }\r\n    }\r\n\r\n    <span style=\"color:blue\">#endregion</span>\r\n}</pre>\r\n</div>\r\n<p>Apparently the problem is creating the new EventHandler...</p>\r\n",
    "PostedDate": "2012-07-03T07:44:09.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "856848",
    "ThreadId": "361827",
    "Html": "\r\n<p>I solved the problem using DesignerProperties in the ViewModel's constructor:</p>\r\n<div style=\"background-color:white; color:black\">\r\n<pre><span style=\"color:blue\">public</span> EmployeeListViewModel() {\r\n    <span style=\"color:blue\">if</span> (!DesignerProperties.IsInDesignTool) {\r\n        <span style=\"color:blue\">this</span>.eventAggregator = ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;();\r\n        <span style=\"color:blue\">this</span>.Employees.CurrentChanged &#43;= <span style=\"color:blue\">new</span> EventHandler(<span style=\"color:blue\">this</span>.SelectedEmployeeChanged);\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-07-03T08:06:00.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]