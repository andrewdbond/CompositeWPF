[
  {
    "Id": "119719",
    "ThreadId": "36071",
    "Html": "Hi,<br>\r\nI keep getting strange exception during deserialization.<br>\r\nIn onclick event in one of default model views i invoke a method of a other class (included in class library PhotosTool.Model - module has reference to it) which performs deserialization:<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (!File.Exists(FullFileName))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; photoCollection = new PhotosToolPhotoCollection();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream fileStream = new FileStream(FullFileName, FileMode.Open);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryFormatter formatter = new BinaryFormatter();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; photoCollection = (PhotosToolPhotoCollection)formatter.Deserialize(fileStream);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream.Close();<br>\r\n<br>\r\n<br>\r\nSimple stuff. <br>\r\nSerialization looks like this:<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; FileStream fileStream = new FileStream(FullFileName, FileMode.Create);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryFormatter formatter = new BinaryFormatter();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; formatter.Serialize(fileStream, photoCollection);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream.Close();<br>\r\n<br>\r\n<br>\r\nIf i invoke those methods from a project of any kind (or just unit tests) it works just perfect, <br>\r\nbut when i serialize and then deserialize it back in default view of one of modules line<br>\r\n<br>\r\nphotoCollection = (PhotosToolPhotoCollection)formatter.Deserialize(fileStream);<br>\r\n<br>\r\nthrows an exception:<br>\r\nUnable to find assembly 'PhotosTool.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.<br>\r\n<br>\r\nI have no idea what to do with it.<br>\r\n",
    "PostedDate": "2008-09-19T16:22:50.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "119767",
    "ThreadId": "36071",
    "Html": "I've created a sample solution showing the problem<br>\r\n<br>\r\nhttp://www.drivehq.com/file/df.aspx/publish/serializationproblem/PublicFolder/SampleToolSolution.zip<br>\r\n<br>\r\nit is based on quick startups.<br>\r\n<br>\r\nthere is a single module that trys to save and then load collection (when you push &quot;Go&quot; button).<br>\r\nIn Load method an exception occures.<br>\r\n<br>\r\nAs alternative i created Console application which has reference to my model. It does exactly the same as <br>\r\nWPF composite App but there is no exception and it works correctly.<br>\r\n<br>\r\nI would appreciate any help. :)<br>\r\n<br>\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////<br>\r\n<strong>\r\nModuleAView.xaml.cs</strong><br>\r\n...<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private string FullFileName = &quot;coll.dat&quot;;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private void btnGo_Click(object sender, RoutedEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SampleObjectCollection coll = new SampleObjectCollection();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll.Add(new SampleObject {Name = &quot;name&quot;});<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Save(coll);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SampleObjectCollection coll2 = Load();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Save(SampleObjectCollection collection)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream fileStream = new FileStream(FullFileName, FileMode.Create);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryFormatter formatter = new BinaryFormatter();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; formatter.Serialize(fileStream, collection);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream.Close();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public SampleObjectCollection Load()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SampleObjectCollection coll;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!File.Exists(FullFileName))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll = new SampleObjectCollection();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return coll;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream fileStream = new FileStream(FullFileName, FileMode.Open);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryFormatter formatter = new BinaryFormatter();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll = (SampleObjectCollection)formatter.Deserialize(fileStream); <strong>//this throws exception</strong><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileStream.Close();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return coll;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n...<br>\r\n<br>\r\n<br>\r\n<strong>\r\nSampleObject.cs</strong><br>\r\n...<br>\r\n&nbsp;&nbsp;&nbsp; [Serializable]<br>\r\n&nbsp;&nbsp;&nbsp; public class SampleObject<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Name { get; set; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int otherThing { get; internal set; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n...<br>\r\n<strong><br>\r\nSampleObjectCollection.cs</strong><br>\r\n...<br>\r\n&nbsp;&nbsp;&nbsp; [Serializable]<br>\r\n&nbsp;&nbsp;&nbsp; public class SampleObjectCollection:List&lt;SampleObject&gt;<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n...\r\n",
    "PostedDate": "2008-09-20T05:49:59.76-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "119997",
    "ThreadId": "36071",
    "Html": "Hi,<br>\r\n<br>\r\nThe CLR's serialization runtime will attempt to resolve assemblies from the default context (ie. assemblies loaded with Assembly.Load) but Prism loads assemblies in a different context (by way of Assembly.LoadFrom). I believe that is why you're seeing failures, and also explains why your unit tests work since your assemblies are loaded into the default context there.<br>\r\n<br>\r\nOne way of getting around this is to attach a handler to AppDomain.AssemblyResolve and help the CLR out when attempting to deserialize.<br>\r\n<br>\r\nHTH,<br>\r\nKent<br>\r\n",
    "PostedDate": "2008-09-22T05:08:44.62-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121269",
    "ThreadId": "36071",
    "Html": "Hi,<br>\r\nThanks for the answer. I used this piece of code:<br>\r\n<table style=\"border-width:0px;margin:2px 0px;width:99%;border-collapse:collapse;background-color:rgb(255, 255, 255)\" cellpadding=0 cellspacing=0>\r\n    <tbody>\r\n        <tr>\r\n            <td><span style=\"font-size:11px\">&nbsp;AppDomain.CurrentDomain.AssemblyResolve&nbsp;+=&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:rgb(247, 247, 247)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">delegate</span><span style=\"font-size:11px\">(</span><span style=\"color:blue\">object</span><span style=\"font-size:11px\">&nbsp;sender,&nbsp;ResolveEventArgs&nbsp;args)&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:rgb(247, 247, 247)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">foreach</span><span style=\"font-size:11px\">&nbsp;(var&nbsp;asm&nbsp;</span><span style=\"color:blue\">in</span><span style=\"font-size:11px\">&nbsp;AppDomain.CurrentDomain.GetAssemblies())&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span><span style=\"font-size:11px\">&nbsp;(asm.FullName&nbsp;==&nbsp;args.Name)&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:rgb(247, 247, 247)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">return</span><span style=\"font-size:11px\">&nbsp;asm;&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">return</span><span style=\"font-size:11px\">&nbsp;</span><span style=\"color:blue\">null</span><span style=\"font-size:11px\">;&nbsp;</span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:rgb(247, 247, 247)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};&nbsp;</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\nposted on MSDN forum and it solved the problem.<br>\r\n<br>\r\nRegards,<br>\r\nPK<br>\r\n",
    "PostedDate": "2008-09-26T17:35:20.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]