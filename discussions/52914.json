[
  {
    "Id": "177973",
    "ThreadId": "52914",
    "Html": "<p>I have a module with a Presenter, a View and a Controller<br>\r\n<br>\r\n<span style=\"text-decoration:underline\">View<br>\r\n</span><br>\r\nIPresenter Model<br>\r\n<br>\r\n<span style=\"text-decoration:underline\">Presenter : IPresenter</span><br>\r\n<br>\r\nICommand AddAnagraficaCommand<br>\r\n<br>\r\n<span style=\"text-decoration:underline\">Controller : IController</span><br>\r\n<br>\r\nDelegateCommand&lt;AnagraficaEntity&gt; AddAnagraficaCommand = new DelegateCommand &lt;AnagraficaEntity&gt;(OnAddEnagraficaExecuted)<br>\r\n<br>\r\npublic void OnAddEnagraficaExecuted(AnagraficaEntity parameter)<br>\r\n{<br>\r\n    ......<br>\r\n}<br>\r\n<br>\r\n<br>\r\nWhen I show the View I get this error &quot;Unable to cast object of type 'System.String' to type 'EdilManager.Database.Entities.AnagraficaEntity'.&quot;<br>\r\n<br>\r\nat <span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>ICommand.CanExecute(</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> parameter)\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>in Composite.Presentation.Commands.DelegateCommand class, the parameter is a string &quot;001&quot;, before DelegateCommand got a string as parameter.<br>\r\n<br>\r\nComposite ver. 2.0<br>\r\n<br>\r\nThanks to everyone<br>\r\n<br>\r\nArmando</p>\r\n",
    "PostedDate": "2009-04-10T09:09:55.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "179191",
    "ThreadId": "52914",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Armando, </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I was able to reproduce the error you mention. I don't know your scenario exactly (where are you setting the command parameter?) but I guess the problem is the way you instantiate the <b>DelegateCommand</b> combined with the command parameter you use.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"><b>DelegateCommand</b> is a generic class used to delegate execution to two methods (the <b>executeMethod</b> and the <b>canExecuteMethod</b>). The type of the parameters for these two method is defined by the generic type of the DelegateCommand class.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">So when the you try to check if the command can execute the <b>ICommand.CanExecute</b> method is called. In the case of <b>DelegateCommand</b> class the CanExecute method is implemented in the following way:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">        bool ICommand.CanExecute(object parameter)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">            return CanExecute((T)parameter);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">        }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">In your case the T type is <b>AnagraficaEntity</b> (as you define in it in the <b>DelegateCommand</b>  instantiation), so if <b>parameter </b>is of type <b>String</b> the error you mention will occur (.NET is unable to cast <b>String</b> into <b>AnagraficaEntity)</b>.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-family:calibri\">Possible solutions:</span></b></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>Use an instance of <b>AnagraficaEntity</b> as the <b>CommandParameter </b>instead of a String.\r\n<p style=\"margin:0cm 0cm 0pt 72.6pt\"><span style=\"font-family:calibri\">o<span style=\"font:7pt 'times new roman'\">   </span>Make sure the View is passing a value that is of this class instead of “001” which is a string. You may use a binding Converter to turn a string into a AnagraficaEntity if there is a way to convert to it from “001”.\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font:7pt 'times new roman'\">         </span>Create the <b>DelegateCommand </b>using an object as parameter, and make the conversion to <b>AnagraficaEntity</b> inside the <b>OnAddEnagraficaExecuted</b> method<b>: </b>\r\n<p style=\"margin:0cm 0cm 0pt\"><b><span style=\"font-family:calibri\">                                </span></b><span style=\"font-size:9.5pt;color:#30332d;font-family:'segoe ui','sans-serif'\">new DelegateCommand &lt;<b>object</b>&gt;(OnAddEnagraficaExecuted)</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hope it helps!</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Matias Bonaventura</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"font-family:calibri\">http://blogs.southworks.net/matiasb</span></a></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n",
    "PostedDate": "2009-04-14T13:03:26.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]