[
  {
    "Id": "691325",
    "ThreadId": "277694",
    "Html": "<p>Hi</p>\n<p>I&rsquo;m using the Navigation framework and I reached a point where I need to toggle between multiple views within a single screen. It seems more appropriate to use SubRegions as opposed to toggling between UserControls&nbsp;(in theory :)</p>\n<p>Has anyone faced such scenario and&nbsp;kind to share some possible pitfalls?</p>\n<p>I already noticed that the RegionContext can be bound only to Controls in the host region (e.g Dependency Property sources) and I think I can live with that.&nbsp;</p>\n<p>However, my concern is&nbsp;about how SubRegions play with the Navigation Infrastructure</p>\n<p>(e.g RequestNavigate(RegionNames.SubRegion &hellip; ??)</p>\n<p>Thanks,</p>\n<p>-Itai</p>",
    "PostedDate": "2011-10-30T09:41:17.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691432",
    "ThreadId": "277694",
    "Html": "<p>Yes. Subregion navigations works the same way. You can pass parameters to your sub views using the query parameters, if you are no comfortable using RegionContext.</p>",
    "PostedDate": "2011-10-30T20:40:05.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "691909",
    "ThreadId": "277694",
    "Html": "<p>Thanks! I'll give it a try.</p>",
    "PostedDate": "2011-10-31T17:32:29.077-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "692010",
    "ThreadId": "277694",
    "Html": "<p>Hmm.. didn&rsquo;t work for me.<br /><br />I registered the sub views in the container (like the other views), and put the designated sub region content control within the hosting view.<br /><br />_RegionManager.RequestNavigate(RegionNames.SubContentRegion, \"MySubView\", (x) =&gt; { return; });&nbsp;&nbsp;&nbsp;resulted in \"System.Object\" being displayed, so it appears that the hosting region is not created automatically..<br /><br />Is this the correct usage?<br /><br />Thanks,<br /><br />-Itai</p>",
    "PostedDate": "2011-11-01T02:35:23.53-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]