[
  {
    "Id": "180205",
    "ThreadId": "53539",
    "Html": "Hi there,<div><br></div><div>I've been working through the examples in the latest screen cast on Channel 9 (<a href=\"http://channel9.msdn.com/posts/akMSFT/Creating-a-modular-application-using-Prism-v2-Screencast-44--Decoupled-Communication/\">http://channel9.msdn.com/posts/akMSFT/Creating-a-modular-application-using-Prism-v2-Screencast-44--Decoupled-Communication/</a>) which is really very helpful, thanks.</div><div><br></div><div>However, when hooking up a Pub/Sub setup with the EventAggregator between two modules, the system stops recieving events on the subscribe side at a seemingly random inverval.  Sometimes it'll fires successfuly 10 times, sometines once only, sometimes 0.</div><div><br></div><div>I was figuring that something might have been getting garbage collected (hence the random interval of working) and then was no longer available to fire the events (total speculation, I have no idea).</div><div><br></div><div>Anyhow, the wierd thing is when I was trying to debug this theory, I put a force GC.Collect() in the subscribing module [see code below] and the problem disappears.  I wonder if anyone can point out what I'm doing wrong [see code below], or is this a bug in the framework ?</div><div><br></div><div>Context:</div><div>- WPF</div><div>- Modules loaded via config file.</div><div>(I can post more of the sample project if necessary)</div><div><br></div><div>--------------------- Publishing Module ---------------------</div><div><div>        private readonly IEventAggregator eventAggregator;</div><div><br></div></div><div><div>        public ChildTwoViewModel(IChild2View view, IChild2Model model, IEventAggregator eventAggregator)</div><div>        {</div><div>            ....</div><div>            this.eventAggregator = eventAggregator;<br></div><div>            PublishEventCommand = new DelegateCommand&lt;string&gt;(param =&gt; OnPublishEvent(), param =&gt; true);<br></div><div>        }<br></div><div><br></div><div><div>        private void OnPublishEvent()</div><div>        {</div><div>            var value = SelectedString;</div><div>            if (string.IsNullOrEmpty(value)) value = &quot;&lt;Nothing Selected&gt;&quot;;</div><div>            eventAggregator.GetEvent&lt;SelectionEvent&gt;().Publish(value);</div><div>        }<br></div><div><br></div></div></div><div><br></div><div><div>--------------------- Subscribing Module ---------------------</div><div></div></div><div><div>        public ChildOnePresenter(IChild1View view, IChild1Service model, IEventAggregator eventAggregator)</div><div>        {</div><div><div>            ....</div><div>            eventAggregator.GetEvent&lt;SelectionEvent&gt;().Subscribe(HandleSubscribedEvent);<br></div></div><div><br></div><div>            GC.Collect(); //TEMP - when garbage is collected events work consistently, when not then drop randomly after 1 - 15 invokations.</div><div>        }<br></div><div><br></div><div><div>        public void HandleSubscribedEvent(string value)</div><div>        {</div><div>            Debug.WriteLine(&quot;Subscribed Event Recieved&quot;);</div><div>        }<br></div><div><br></div></div></div><div>--------------</div><div>Thanks a lot!</div><div><br></div><div><br></div><div><br></div>",
    "PostedDate": "2009-04-16T09:51:55.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "180684",
    "ThreadId": "53539",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I have tried to reproduce your issue with no success. However, a possible scenario where this could happen is if <b>Child1View</b>  does not hold any strong reference to the presenter. If that is the case the presenter could be being Garbage Collected and thus the events wouldn’t be handled. Writing the GC.Collect(); could be doing something different in different environments/applications, so that is why the Garbage Collector might be preventing the presenter to be collected in your environment.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">To workaround this scenario you could hold a reference to your presenter in your view or modify your presenter to be a ViewModel (hence keeping a reference to it from the View by design).</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></span>\r\n",
    "PostedDate": "2009-04-17T14:34:24.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "180685",
    "ThreadId": "53539",
    "Html": "Thanks Damian - I'll check that out, and report back if it's not the weak-reference to the presenter issue.<div>Really appreciate you taking the time to look at this!</div>",
    "PostedDate": "2009-04-17T14:36:51.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]