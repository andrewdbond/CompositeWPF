[
  {
    "Id": "479405",
    "ThreadId": "223278",
    "Html": "<p>Hi all I created a attached behavior command to handle the textchanged event for the Autocompletebox control.&nbsp; Alot of people have been interested in this since it seems quite silly that the default Autocomplete control does not facilitate the Re-binding of its itemsource when the text is changed.&nbsp; That in my mind is a normal requirement for LOB apps since the defualt control expects you to return the entire list of data and in my and most LOB cases it could be hundreds of thousands of records.&nbsp; Anyways here is the code for the attached behavior as well as the Xaml for control.&nbsp;</p>\r\n<p><strong>*HELP</strong>*One strange issue i have noticed however is that when you have more than one item in your dropdown list, when you click on one instead of selecting the item you picked it replaces the value with the prefix text.&nbsp; I.e I selected Minneapolis from the list and the Value displayed is M ?!&nbsp; I can't figure this out, what i did notice is what happens is the selectedItem property (in mycase selectedcity) is re-fired when i re-bind the list since i guess just selected an item from the list is considered a Textchanged event.&nbsp; I can think of some sordid and unscruptilous work arounds but I am reather new to PRISIM so if anyone else has any ideas on this bug I would be apreciative.&nbsp; I do have a work around but its pretty bad.</p>\r\n<p>Other than that Enjoy !&nbsp; ( PS it took me a week to figure out how to do this , most code samples are in C# and again I am new to MVVM as well as prisim so bear with me on bad practices and stuff )</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"text-decoration:underline\">Attached behavior code :</span></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">Imports</span> System.Windows.Controls\r\n<span style=\"color:blue\">Imports</span> System.Windows.Input\r\n<span style=\"color:blue\">Imports</span> Microsoft.Practices.Composite.Presentation.Commands\r\n<span style=\"color:blue\">Imports</span> System.Windows\r\n\r\n\r\n\r\n\r\n<span style=\"color:blue\">Public</span> <span style=\"color:blue\">NotInheritable</span> <span style=\"color:blue\">Class</span> TextChanged\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> <span style=\"color:blue\">New</span>()\r\n\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\r\n\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">ReadOnly</span> BehaviorNameCommandBehaviorProperty <span style=\"color:blue\">As</span> DependencyProperty = DependencyProperty.RegisterAttached(<span style=\"color:#a31515\">&quot;TextChangedBehavior&quot;</span>, <span style=\"color:blue\">GetType</span>(AutoCompleteBoxTextChangedCommandBehavior), <span style=\"color:blue\">GetType</span>(TextChanged), <span style=\"color:blue\">Nothing</span>)\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">ReadOnly</span> CommandProperty <span style=\"color:blue\">As</span> DependencyProperty = DependencyProperty.RegisterAttached(<span style=\"color:#a31515\">&quot;Command&quot;</span>, <span style=\"color:blue\">GetType</span>(ICommand), <span style=\"color:blue\">GetType</span>(TextChanged), <span style=\"color:blue\">New</span> PropertyMetadata(<span style=\"color:blue\">New</span> PropertyChangedCallback(<span style=\"color:blue\">AddressOf</span> OnSetCommandCallback)))\r\n\r\n    <span style=\"color:green\">'  Public Shared ReadOnly CommandProperty2 As DependencyProperty = DependencyProperty.Register(&quot;Command&quot;, GetType(ICommand), GetType(CommandReference), New PropertyMetadata(New PropertyChangedCallback(AddressOf OnCommandChanged)))</span>\r\n\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">ReadOnly</span> CommandParameterProperty <span style=\"color:blue\">As</span> DependencyProperty = DependencyProperty.RegisterAttached(<span style=\"color:#a31515\">&quot;CommandParameter&quot;</span>, <span style=\"color:blue\">GetType</span>(<span style=\"color:blue\">Object</span>), <span style=\"color:blue\">GetType</span>(TexTChanged), <span style=\"color:blue\">New</span> PropertyMetadata(<span style=\"color:blue\">New</span> PropertyChangedCallback(<span style=\"color:blue\">AddressOf</span> OnSetCommandParameterCallback)))\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Function</span> GetCommand(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox) <span style=\"color:blue\">As</span> ICommand\r\n        <span style=\"color:blue\">Return</span> TryCast(control.GetValue(CommandProperty), ICommand)\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Function</span>\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Sub</span> SetCommand(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox, <span style=\"color:blue\">ByVal</span> command <span style=\"color:blue\">As</span> ICommand)\r\n        control.SetValue(CommandProperty, command)\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Sub</span> SetCommandParameter(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox, <span style=\"color:blue\">ByVal</span> parameter <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>)\r\n        control.SetValue(CommandParameterProperty, parameter)\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Function</span> GetCommandParameter(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox) <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>\r\n        <span style=\"color:blue\">Return</span> control.GetValue(CommandParameterProperty)\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Function</span>\r\n\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Sub</span> OnSetCommandCallback(<span style=\"color:blue\">ByVal</span> dependencyObject <span style=\"color:blue\">As</span> DependencyObject, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> DependencyPropertyChangedEventArgs)\r\n        <span style=\"color:blue\">Dim</span> control <span style=\"color:blue\">As</span> AutoCompleteBox = TryCast(dependencyObject, AutoCompleteBox)\r\n        <span style=\"color:blue\">If</span> control <span style=\"color:blue\">IsNot</span> <span style=\"color:blue\">Nothing</span> <span style=\"color:blue\">Then</span>\r\n            <span style=\"color:blue\">Dim</span> behavior <span style=\"color:blue\">As</span> AutoCompleteBoxTextChangedCommandBehavior = GetOrCreateBehavior(control)\r\n            behavior.Command = TryCast(e.NewValue, ICommand)\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Sub</span> OnSetCommandParameterCallback(<span style=\"color:blue\">ByVal</span> dependencyObject <span style=\"color:blue\">As</span> DependencyObject, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> DependencyPropertyChangedEventArgs)\r\n        <span style=\"color:blue\">Dim</span> control <span style=\"color:blue\">As</span> AutoCompleteBox = TryCast(dependencyObject, AutoCompleteBox)\r\n        <span style=\"color:blue\">If</span> control <span style=\"color:blue\">IsNot</span> <span style=\"color:blue\">Nothing</span> <span style=\"color:blue\">Then</span>\r\n            <span style=\"color:blue\">Dim</span> behavior <span style=\"color:blue\">As</span> AutoCompleteBoxTextChangedCommandBehavior = GetOrCreateBehavior(control)\r\n            behavior.CommandParameter = e.NewValue\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Shared</span> <span style=\"color:blue\">Function</span> GetOrCreateBehavior(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox) <span style=\"color:blue\">As</span> AutoCompleteBoxTextChangedCommandBehavior\r\n        <span style=\"color:blue\">Dim</span> behavior <span style=\"color:blue\">As</span> AutoCompleteBoxTextChangedCommandBehavior = TryCast(control.GetValue(BehaviorNameCommandBehaviorProperty), AutoCompleteBoxTextChangedCommandBehavior)\r\n        <span style=\"color:blue\">If</span> behavior <span style=\"color:blue\">Is</span> <span style=\"color:blue\">Nothing</span> <span style=\"color:blue\">Then</span>\r\n            behavior = <span style=\"color:blue\">New</span> AutoCompleteBoxTextChangedCommandBehavior(control)\r\n            control.SetValue(BehaviorNameCommandBehaviorProperty, behavior)\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n        <span style=\"color:blue\">Return</span> behavior\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Function</span>\r\n<span style=\"color:blue\">End</span> <span style=\"color:blue\">Class</span>\r\n\r\n<span style=\"color:blue\">Public</span> <span style=\"color:blue\">Class</span> AutoCompleteBoxTextChangedCommandBehavior\r\n    <span style=\"color:blue\">Inherits</span> CommandBehaviorBase(Of AutoCompleteBox)\r\n    <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Sub</span> <span style=\"color:blue\">New</span>(<span style=\"color:blue\">ByVal</span> control <span style=\"color:blue\">As</span> AutoCompleteBox)\r\n        <span style=\"color:blue\">MyBase</span>.<span style=\"color:blue\">New</span>(control)\r\n        <span style=\"color:blue\">AddHandler</span> control.TextChanged, <span style=\"color:blue\">AddressOf</span> OnEventName\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n    <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> OnEventName(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> RoutedEventArgs)\r\n        ExecuteCommand()\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n<span style=\"color:blue\">End</span> <span style=\"color:blue\">Class</span>\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p><span style=\"text-decoration:underline\">Here is the XAML code for my view complete with my namespace declarations :&nbsp; My namespace for is Inferstrcuture.&nbsp; </span></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre> xmlns:infastructure=&quot;clr-namespace:Infastructure;assembly=Infastructure&quot; \r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:#800000\">&lt;sdk:AutoCompleteBox </span> Grid.Row=&quot;4&quot; Grid.Column=&quot;2&quot; Height=&quot;23&quot; Grid.ColumnSpan=&quot;2&quot;    Margin=&quot;45,0,0,0&quot;                            \r\n        Name=&quot;AutoCompleteBox1&quot;  Width=&quot;120&quot;                   \r\n                    FilterMode=&quot;StartsWith&quot;                   \r\n                           IsTextCompletionEnabled=&quot;True&quot; \r\n                    MinimumPrefixLength=&quot;0&quot;  MinimumPopulateDelay=&quot;100&quot; \r\n                    MaxDropDownHeight=&quot;150&quot;      \r\n                    <span style=\"color:#800000\">ItemsSource=&quot;{Binding Path=CityList}&quot; SelectedItem=<span style=\"color:#0000ff\">&quot;{Binding Path=SelectedCity}&quot; \r\n</span>                    Text=<span style=\"color:#0000ff\">&quot;{Binding Path=SelectedCity, Mode=TwoWay,ValidatesOnDataErrors=True, NotifyOnValidationError=True}&quot; \r\n</span>                    ValueMemberBinding=<span style=\"color:#0000ff\">&quot;{Binding City}&quot;</span> \r\n                    infastructure:TextChanged.Command=</span><span style=\"color:#0000ff\">&quot;{Binding Command1}&quot;\r\n</span><span style=\"color:#800000\">                    infastructure:TextChanged.CommandParameter=<span style=\"color:#0000ff\">&quot;{Binding Path=SelectedCity}&quot;      \r\n</span></span>                              &gt;                   \r\n                    &lt;sdk:AutoCompleteBox.ItemTemplate&gt;\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span> <span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">StackPanel</span> <span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;{Binding Path=City}&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">StackPanel</span><span style=\"color:blue\">&gt;</span>\r\n                   <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>               \r\n                   &lt;/sdk:AutoCompleteBox.ItemTemplate&gt;   \r\n  <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">sdk</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">AutoCompleteBox</span><span style=\"color:blue\">&gt;</span> \r\n<br><br>Here is my ViewModel Code (Just the relevant bits) p.s THe parameter passed is the prefix text to search the database for the city with<div style=\"color:black;background-color:white\"><pre>   <span style=\"color:green\">' Initialize this ViewModel's command.</span>\r\nCommand1 = <span style=\"color:blue\">New</span> DelegateCommand(Of <span style=\"color:blue\">String</span>)(<span style=\"color:blue\">AddressOf</span> ExecuteCommand1, <span style=\"color:blue\">AddressOf</span> CanExecuteCommand1)\r\n\r\n\r\n\r\n<span style=\"color:blue\">#Region</span> <span style=\"color:#a31515\">&quot;Command1&quot;</span>\r\n        <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Property</span> Command1() <span style=\"color:blue\">As</span> DelegateCommand(Of <span style=\"color:blue\">String</span>)\r\n            <span style=\"color:blue\">Get</span>\r\n                <span style=\"color:blue\">Return</span> m_command1\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Get</span>\r\n            <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Set</span>(<span style=\"color:blue\">ByVal</span> value <span style=\"color:blue\">As</span> DelegateCommand(Of <span style=\"color:blue\">String</span>))\r\n                m_command1 = value\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Set</span>\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Property</span>\r\n        <span style=\"color:blue\">Private</span> m_command1 <span style=\"color:blue\">As</span> DelegateCommand(Of <span style=\"color:blue\">String</span>)\r\n\r\n<br>        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> ExecuteCommand1(<span style=\"color:blue\">ByVal</span> commandParameter <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>)\r\n             <span style=\"color:green\">When something is selected, the value is used to populate the second combobox </span>\r\n            <span style=\"color:blue\">Dim</span> strCountryName <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span> = Replace(SelectedCountry, <span style=\"color:#a31515\">&quot; &quot;</span>, <span style=\"color:#a31515\">&quot;&quot;</span>) <span style=\"color:green\">'trim out any spaces if needed</span>\r\n            <span style=\"color:green\">'populates second combobox     i.e citys         </span>\r\n            <span style=\"color:green\">'load the cities</span>\r\n            RaisePropertyChanged(<span style=\"color:#a31515\">&quot;CityList&quot;</span>)\r\n                     <span style=\"color:green\">'clear previous list of cities from the data context</span>\r\n            _newPostalDataService.CityLists.Clear()\r\n                       <span style=\"color:green\">'load the new list of cities</span>\r\n            <span style=\"color:blue\">Dim</span> loadOperationCityList <span style=\"color:blue\">As</span> LoadOperation(Of Dating.Server.Data.CityList) = _newPostalDataService.Load(Of Dating.Server.Data.CityList) _\r\n              (_newPostalDataService.GetCityListDynamicQuery(strCountryName, commandParameter, <span style=\"color:#a31515\">&quot;&quot;</span>))\r\n            <span style=\"color:blue\">AddHandler</span> loadOperationCityList.Completed, <span style=\"color:blue\">AddressOf</span> CityLoadisCompleted\r\n\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Function</span> CanExecuteCommand1(<span style=\"color:blue\">ByVal</span> commandParameter <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>) <span style=\"color:blue\">As</span> <span style=\"color:blue\">Boolean</span>\r\n            <span style=\"color:green\">' Command is only enabled when there is a country selected</span>\r\n            <span style=\"color:blue\">Return</span> <span style=\"color:blue\">True</span>\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Function</span>\r\n<span style=\"color:blue\">#End Region</span>\r\n\r\n<span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> CityLoadisCompleted(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> EventArgs)\r\n            <span style=\"color:blue\">Dim</span> loadOperation = <span style=\"color:blue\">DirectCast</span>(sender, LoadOperation)\r\n\r\n            <span style=\"color:blue\">If</span> loadOperation.IsComplete <span style=\"color:blue\">AndAlso</span> <span style=\"color:blue\">Not</span> loadOperation.IsCanceled <span style=\"color:blue\">AndAlso</span> <span style=\"color:blue\">Not</span> loadOperation.HasError <span style=\"color:blue\">Then</span>\r\n              \r\n                CityList() = <span style=\"color:blue\">New</span> ObservableCollection(Of Dating.Server.Data.CityList)(_newPostalDataService.CityLists)\r\n\r\n                RaisePropertyChanged(<span style=\"color:#a31515\">&quot;CityList&quot;</span>)\r\n\r\n\r\n            <span style=\"color:blue\">Else</span> <span style=\"color:green\">'this will be handled to the server as a database or log file error in prod</span>\r\n                System.Windows.MessageBox.Show(loadOperation.<span style=\"color:blue\">Error</span>.ToString, <span style=\"color:#a31515\">&quot;Load Error&quot;</span>, System.Windows.MessageBoxButton.OK)\r\n                loadOperation.MarkErrorAsHandled()\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n        <span style=\"color:blue\">Private</span> m_CityList <span style=\"color:blue\">As</span> <span style=\"color:blue\">New</span> System.Collections.ObjectModel.ObservableCollection(Of Dating.Server.Data.CityList)\r\n        <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Property</span> CityList() <span style=\"color:blue\">As</span> System.Collections.ObjectModel.ObservableCollection(Of Dating.Server.Data.CityList)\r\n\r\n            <span style=\"color:blue\">Get</span>\r\n                <span style=\"color:blue\">Return</span> m_CityList\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Get</span>\r\n\r\n            <span style=\"color:blue\">Set</span>(<span style=\"color:blue\">ByVal</span> value <span style=\"color:blue\">As</span> System.Collections.ObjectModel.ObservableCollection(Of Dating.Server.Data.CityList))\r\n                m_CityList = value\r\n                RaisePropertyChanged(<span style=\"color:#a31515\">&quot;CityList&quot;</span>)\r\n\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Set</span>\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Property</span>\r\n\r\n\r\n        <span style=\"color:blue\">Private</span> <span style=\"color:blue\">Sub</span> SelectedItemChanged(<span style=\"color:blue\">ByVal</span> sender <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span>, <span style=\"color:blue\">ByVal</span> e <span style=\"color:blue\">As</span> EventArgs)\r\n            <span style=\"color:green\">' Update the command status.</span>\r\n            Command1.RaiseCanExecuteChanged()\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n\r\n\r\n        <span style=\"color:green\">'Selection, Seccond COmbobox</span>\r\n        <span style=\"color:blue\">Private</span> m_SelectedCity <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>\r\n        <span style=\"color:blue\">Public</span> <span style=\"color:blue\">Property</span> SelectedCity() <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>\r\n            <span style=\"color:blue\">Get</span>\r\n\r\n                <span style=\"color:blue\">Return</span> m_SelectedCity\r\n           \r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Get</span>\r\n            <span style=\"color:blue\">Set</span>(<span style=\"color:blue\">ByVal</span> value <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>)\r\n                m_SelectedCity = value\r\n                RaisePropertyChanged(<span style=\"color:#a31515\">&quot;SelectedCity&quot;</span>)\r\n            <span style=\"color:blue\">End</span> <span style=\"color:blue\">Set</span>\r\n        <span style=\"color:blue\">End</span> <span style=\"color:blue\">Property</span>\r\n\r\n</pre>\r\n</div>\r\n<br></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre>                     \r\n                    \r\n                        \r\n                    \r\n                        \r\n                    \r\n                                  \r\n                      \r\n           </pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-08-11T15:18:20.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479407",
    "ThreadId": "223278",
    "Html": "<p>You may want to see if the folks who run the Prism Contrib project (<a href=\"http://compositewpfcontrib.codeplex.com/\">http://compositewpfcontrib.codeplex.com/</a>) are interested in adding this to the community supported extensions to Prism.</p>\r\n<p>Thanks,<br>Michael Puleio</p>",
    "PostedDate": "2010-08-11T15:25:12.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "479409",
    "ThreadId": "223278",
    "Html": "<p>sure thing</p>",
    "PostedDate": "2010-08-11T15:40:43.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]