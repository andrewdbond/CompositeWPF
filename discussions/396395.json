[
  {
    "Id": "915694",
    "ThreadId": "396395",
    "Html": "\r\n<p>hi,&nbsp;</p>\r\n<p>I am creating a sample project with using esri silverlight api. I created a click command but an error occuring following code.</p>\r\n<p></p>\r\n<pre><div style=\"color:black; background-color:white\"><pre>&lt;UserControl x:Class=&quot;GIS.Views.MapView&quot;\r\n    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\r\n    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\r\n    xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;\r\n    xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;\r\n             xmlns:esri=&quot;clr-namespace:ESRI.ArcGIS.Client;assembly=ESRI.ArcGIS.Client&quot;\r\n             xmlns:cmd=&quot;clr-namespace:Infrastructure.Commands;assembly=Infrastructure&quot;\r\n    mc:Ignorable=&quot;d&quot;\r\n             VerticalAlignment=&quot;Stretch&quot;\r\n             HorizontalAlignment=&quot;Stretch&quot;\r\n    d:DesignHeight=&quot;300&quot; d:DesignWidth=&quot;400&quot;&gt;\r\n    \r\n    &lt;Grid x:Name=&quot;LayoutRoot&quot; Background=&quot;White&quot;&gt;\r\n        &lt;esri:Map x:Name=&quot;MyMap&quot; \r\n                  VerticalAlignment=&quot;Stretch&quot; \r\n                  HorizontalAlignment=&quot;Stretch&quot; \r\n                  <strong>cmd:MouseClick.Command=&quot;{Binding Map_Click}&quot;</strong>&gt;\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">esri</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ArcGISDynamicMapServiceLayer</span> <span style=\"color:red\">ID</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;MyLayer&quot;</span> <span style=\"color:red\">Url</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;http://serverapps.esri.com/ArcGIS/rest/services/California/MapServer&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">esri</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">Map</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">UserControl</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\nMouseClick event code is following</pre>\r\n<pre><div style=\"color:black; background-color:white\"><pre>   <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> MouseClick\r\n    {\r\n         <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> ICommand GetCommand(Map map)\r\n         {\r\n             <span style=\"color:blue\">return</span> (ICommand) map.GetValue(CommandProperty);\r\n         }\r\n         <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> SetCommand(Map map, ICommand value)\r\n         {\r\n             map.SetValue(CommandProperty, value);\r\n         }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">readonly</span> DependencyProperty CommandProperty =\r\n            DependencyProperty.RegisterAttached(<span style=\"color:#a31515\">&quot;Command&quot;</span>,\r\n            <span style=\"color:blue\">typeof</span> (ICommand),\r\n            <span style=\"color:blue\">typeof</span> (MouseClick),\r\n            <span style=\"color:blue\">new</span> PropertyMetadata(OnSetCommandCallback));\r\n        \r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">readonly</span> DependencyProperty MouseClickCommandBehaviorProperty =\r\n            DependencyProperty.RegisterAttached(\r\n            <span style=\"color:#a31515\">&quot;ClickCommandBehavior&quot;</span>,\r\n            <span style=\"color:blue\">typeof</span>(MouseClickBehavior),\r\n            <span style=\"color:blue\">typeof</span>(MouseClick),\r\n            <span style=\"color:blue\">null</span>);\r\n        \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">object</span> GetCommandParameter(DependencyObject obj)\r\n        {\r\n            <span style=\"color:blue\">return</span> obj.GetValue(CommandParameterProperty);\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> SetCommandParameter(DependencyObject obj, <span style=\"color:blue\">object</span> value)\r\n        {\r\n            obj.SetValue(CommandParameterProperty, value);\r\n        }\r\n\r\n        <span style=\"color:green\">// Using a DependencyProperty as the backing store for CommandParameter.  This enables animation, styling, binding, etc...</span>\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">readonly</span> DependencyProperty CommandParameterProperty =\r\n            DependencyProperty.RegisterAttached(<span style=\"color:#a31515\">&quot;CommandParameter&quot;</span>,\r\n            <span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">object</span>),\r\n            <span style=\"color:blue\">typeof</span>(MouseClick),\r\n            <span style=\"color:blue\">new</span> PropertyMetadata(OnSetCommandParameterCallback));\r\n\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> OnSetCommandParameterCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Map map = dependencyObject <span style=\"color:blue\">as</span> Map;\r\n            <span style=\"color:blue\">if</span> (map != <span style=\"color:blue\">null</span>)\r\n            {\r\n                MouseClickBehavior behavior = GetOrCreateBehavior(map);\r\n                behavior.CommandParameter = e.NewValue;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> OnSetCommandCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Map map = dependencyObject <span style=\"color:blue\">as</span> Map;\r\n            <span style=\"color:blue\">if</span> (map != <span style=\"color:blue\">null</span>)\r\n            {\r\n                MouseClickBehavior behavior = GetOrCreateBehavior(map);\r\n                behavior.Command = e.NewValue <span style=\"color:blue\">as</span> ICommand;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> MouseClickBehavior GetOrCreateBehavior(Map map)\r\n        {\r\n            MouseClickBehavior behavior = map.GetValue(MouseClickCommandBehaviorProperty) <span style=\"color:blue\">as</span> MouseClickBehavior;\r\n            \r\n            <span style=\"color:blue\">if</span> (behavior == <span style=\"color:blue\">null</span>)\r\n            {\r\n                behavior = <span style=\"color:blue\">new</span> MouseClickBehavior(map);\r\n                map.SetValue(MouseClickCommandBehaviorProperty, behavior);\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> behavior;\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\nAnd MapViewModel is here</pre>\r\n<pre>\r\n    <div style=\"color:black; background-color:white\"><pre>   <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> MapViewModel : IViewModel, IMapViewModel\r\n    {\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">double</span> y;\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">double</span> x;\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> dpi;\r\n        <span style=\"color:blue\">private</span> Size mapSize;\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Y\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> y; }\r\n            <span style=\"color:blue\">set</span>\r\n            {\r\n                y = value;\r\n                NotifyChange(<span style=\"color:#a31515\">&quot;Y&quot;</span>);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> X\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> x; }\r\n            <span style=\"color:blue\">set</span>\r\n            {\r\n                x = value;\r\n                NotifyChange(<span style=\"color:#a31515\">&quot;X&quot;</span>);\r\n            }\r\n        }\r\n        \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> Dpi\r\n        {\r\n            <span style=\"color:blue\">get</span>\r\n            {\r\n                <span style=\"color:blue\">return</span> dpi;\r\n            }\r\n            <span style=\"color:blue\">set</span>\r\n            {\r\n                dpi = value;\r\n                NotifyChange(<span style=\"color:#a31515\">&quot;Dpi&quot;</span>);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">readonly</span> MapClickEvent mapClick;\r\n\r\n        <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; Map_Click{ <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n        <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; Size_Change { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n        <span style=\"color:blue\">public</span> MapViewModel(IEventAggregator eventAggregator)\r\n        {\r\n            Dpi = 96;\r\n            mapClick = eventAggregator.GetEvent&lt;MapClickEvent&gt;();\r\n            Map_Click = <span style=\"color:blue\">new</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt;(OnClickCommand);\r\n            Size_Change = <span style=\"color:blue\">new</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt;(OnSizeChangedCommand);\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnClickCommand(<span style=\"color:blue\">object</span> obj)\r\n        {\r\n            Map.MouseEventArgs eventArgs = (Map.MouseEventArgs)obj;\r\n            MapClickPayload payload = <span style=\"color:blue\">new</span> MapClickPayload\r\n                                          {\r\n                                              X = eventArgs.MapPoint.X,\r\n                                              Y = eventArgs.MapPoint.Y,\r\n                                              MinX = eventArgs.MapPoint.Extent.XMin,\r\n                                              MinY = eventArgs.MapPoint.Extent.YMin,\r\n                                              MaxX = eventArgs.MapPoint.Extent.XMax,\r\n                                              MaxY = eventArgs.MapPoint.Extent.YMax,\r\n                                              Screen = mapSize,\r\n                                              Dpi = dpi\r\n                                          };\r\n            mapClick.Publish(payload);\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnSizeChangedCommand(<span style=\"color:blue\">object</span> obj)\r\n        {\r\n            MapInfo info = obj <span style=\"color:blue\">as</span> MapInfo;\r\n\r\n            <span style=\"color:blue\">if</span> (info != <span style=\"color:blue\">null</span>) \r\n                mapSize = info.MapSize;\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n</pre>\r\nwhen I click the Map object,&nbsp;\r\n<p></p>\r\n<pre>OnClickCommand(<span>object</span> obj) paramaeter obj is coming null.</pre>\r\n<pre><br></pre>\r\n<pre>I mean is that true way?</pre>\r\n",
    "PostedDate": "2012-09-21T06:41:29.297-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "915832",
    "ThreadId": "396395",
    "Html": "<p>Hi,</p>\r\n<p>As far as I know, in this case receiving a <strong>null </strong>value as the parameter in your <strong>OnClickCommand </strong>method is the expected behavior.</p>\r\n<p>For example, when you define a <strong>DelegateCommand </strong>like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>DelegateCommand&lt;<span style=\"color: blue;\">int</span>&gt; SampleCommand { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>: }\r\n</pre>\r\n</div>\r\n<p>You are defining a <strong>DelegateCommand </strong>that expects a <strong>CommandParameter </strong>of type <strong>int</strong>. Then, when using this command in a button, you could do something like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Button</span> <span style=\"color: red;\">Command</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding SampleCommand}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">CommandParameter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n</pre>\r\n</div>\r\n<p>And when the button is clicked the <strong>OnClickCommand </strong>method would receive <strong>1</strong> as the parameter.</p>\r\n<p>I believe this is similar to your scenario. As it can be seen in the code snippets you posted, the <strong>MouseClick </strong>class defines a <strong>CommandParameter </strong>property, which (based on my understanding) is used to define the parameter to be passed to the command. However, you are never setting a <strong>MouseClick.CommandParameter</strong> property in your code and, as the command doesn't have any parameter defined, the <strong>OnClickCommand </strong>receives a <strong>null </strong>value.</p>\r\n<p>On a side note, it's important to note that events and commands are different things, and that a command parameter is not the argument of an event. Therefore, what your <strong>OnClickCommand </strong>method is receiving is not the <strong>MouseEventArgs </strong>of the <strong>Map </strong>control.</p>\r\n<p>If you wish to pass the arguments of an event as a parameter to a command, I believe you could find the <strong>EventToCommand </strong>action of the <strong>MVVM Light Toolkit</strong> useful:</p>\r\n<ul>\r\n<li><a href=\"http://mvvmlight.codeplex.com/\">MVVM Light Toolkit on CodePlex</a></li>\r\n</ul>\r\n<p>I hope this helps,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-09-21T10:46:00.653-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]