[
  {
    "Id": "180673",
    "ThreadId": "53673",
    "Html": "Hi All,<br>\r\n<br>\r\nI'm just writing some tests for my CAL based app and I'm having a few problems.&nbsp; I'm using Moq to produce the mock objects.&nbsp; The main issue I'm having is creating a class that subscribes to an event.&nbsp; The constructor signature on the class is:<br>\r\n<pre>public DriveInfoManager(IUnityContainer container, IEventAggregator eventAggregator)</pre>\r\nSo when I mock this I have the following code:<br>\r\n<pre>var mockContainer = new Mock&lt;IUnityContainer&gt;();<br>var mockEventAggregator = new Mock&lt;IEventAggregator&gt;();<br>DriveInfoManager driveInfoManager = new DriveInfoManager(mockContainer as IUnityContainer, mockEventAggregator as IEventAggregator); </pre>\r\nAll is working fine until during the class initialisation it fails (with a helpful disassemble dialog from xUnit) on this line:<br>\r\n<pre>_eventAggregator.GetEvent&lt;MonitorDrivesEvent&gt;().Subscribe(OnMonitorDrivesChanged, ThreadOption.UIThread, false); </pre>\r\nI've tried a few different things now including:\r\n<pre>var mockEvent = new Mock&lt;MonitorDrivesEvent&gt;();<br>mockEventAggregator.Setup(e =&gt; e.GetEvent&lt;MonitorDrivesEvent&gt;()).Returns(mockEvent.Object);</pre>\r\nHow should I be setting up the mock Event Aggregator to expect and deal with this call to .Subscribe()?<br>\r\n<br>\r\nAny pointers would be great.<br>\r\n<br>\r\nThanks, \r\n",
    "PostedDate": "2009-04-17T13:06:00.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181951",
    "ThreadId": "53673",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I wrote a small test for the event aggregator and I believe the problem is in this line: </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      DriveInfoManager driveInfoManager = new DriveInfoManager(mockContainer as IUnityContainer, mockEventAggregator as IEventAggregator);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I tried this and was able to get it to work:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-size:10pt;font-family:'courier new'\">DriveInfoManager driveInfoManager = new DriveInfoManager(mockContainer.Object, mockEventAggregator.Object);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">You will still need to execute this lines:</span></p>\r\n<pre style=\"margin-left:35.4pt\"><span style=\"font-size:13px\">var mockEvent = new Mock&lt;MonitorDrivesEvent&gt;();<br></span><span style=\"font-size:13px\">mockEventAggregator.Setup(e =&gt; e.GetEvent&lt;MonitorDrivesEvent&gt;()).Returns(mockEvent.Object);</span><span style=\"font-family:calibri\">                </span></pre>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">This will only work if <b>DriveInfoManager</b> only needs <b>MonitorDrivesEvent</b> event. If it requires anything else, you will need to mock it also.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hope it helps!</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 35.4pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Matias Bonaventura</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"font-family:calibri\">http://blogs.southworks.net/matiasb</span></a> </p>\r\n",
    "PostedDate": "2009-04-21T11:55:09.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]