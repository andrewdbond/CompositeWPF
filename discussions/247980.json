[
  {
    "Id": "573769",
    "ThreadId": "247980",
    "Html": "\r\n<p>Hi, I use prism v4.x with WPF and unity.</p>\r\n<p>I've got the problem that the loading of one module takes a lot of time and i want to load in the background during some other views are shown.</p>\r\n<p>All my module are registered in the ModuleCatalog like this:</p>\r\n<pre style=\"font-family:consolas\"> <span style=\"color:blue\">protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ConfigureModuleCatalog()<br>&nbsp;{<br>&nbsp;<span style=\"color:blue\">   base</span>.ConfigureModuleCatalog();<br> <span style=\"color:#2b91af\">   ModuleCatalog</span>&nbsp;moduleCatalog&nbsp;=&nbsp;(<span style=\"color:#2b91af\">ModuleCatalog</span>)<span style=\"color:blue\">this</span>.ModuleCatalog;<br>    moduleCatalog.AddModule(<span style=\"color:blue\">typeof</span>(GraphicsRegionModule.GraphicsTemperatureModule.<span style=\"color:#2b91af\">GraphicsTemperatureModule</span>));<br>}<br><br><pre style=\"font-family:consolas\"><span style=\"color:blue\">protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ConfigureContainer()<br>{<br>   <span style=\"color:blue\">base</span>.ConfigureContainer();<br><pre style=\"font-family:consolas\">Container.RegisterType&lt;<span style=\"color:blue\">object</span>,&nbsp;GraphicsRegionModule.GraphicsTemperatureModule.View.<span style=\"color:#2b91af\">GraphicsTemperatureModuleView</span>&gt;(<span style=\"color:#2b91af\">ViewNames</span>.GraphicsRegionTemperatureGraphicsView,&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ContainerControlledLifetimeManager</span>());<br></pre>\r\n}<br><br>\r\n<pre style=\"font-family:consolas\">[<span style=\"color:#2b91af\">Module</span>(OnDemand=<span style=\"color:blue\">false</span>,&nbsp;ModuleName=<span style=\"color:#a31515\">&quot;Temperature&quot;</span>)]<br><span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">class</span>&nbsp;<span style=\"color:#2b91af\">GraphicsTemperatureModule</span>&nbsp;:&nbsp;<span style=\"color:#2b91af\">IModule<br>{<br></span><pre style=\"font-family:consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">void</span>&nbsp;<span style=\"color:#2b91af\">IModule</span>.Initialize()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green\">//throw&nbsp;new&nbsp;System.NotImplementedException();</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre>\r\n<span style=\"color:#2b91af\">}<br><br><span style=\"color:#000000\">To Load I tried the following:</span></span><span style=\"color:green\"><br><br><span style=\"color:#0000ff\">container.Resolve&lt;Microsoft.Practices.Prism.Modularity.IModuleManager&gt;().LoadModule(Infrastructure.ADUView.ViewNames.GraphicsRegionTemperatureGraphicsView);</span></span><br></pre>\r\nor<br><br>\r\n<pre style=\"font-family:consolas\"><span style=\"color:#0000ff\">container.Resolve&lt;Microsoft.Practices.Prism.Modularity.IModuleManager&gt;().LoadModule(&quot;Temperature&quot;);</span><br><br>But nothing works (always the message unknown module).  Can anyone give me a hint how it will work?<br></pre>\r\n<br><br><br></pre>\r\n</pre>\r\n",
    "PostedDate": "2011-03-01T03:57:11.463-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "573854",
    "ThreadId": "247980",
    "Html": "<p>Hi,</p>\r\n<p>One possible way to achieve your requirement would be to configure your Module Catalog by simply overriding the <strong>ConfigureModuleCatalog</strong> method in your <strong>Bootstrapper</strong> like this:</p>\r\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ConfigureModuleCatalog()\r\n{\r\n   Type tempModule = <span style=\"color: blue;\">typeof</span>(GraphicsTemperatureModule); \r\n   <span style=\"color: blue;\">this</span>.moduleCatalog.AddModule(<span style=\"color: blue;\">new</span> ModuleInfo()\r\n   {\r\n       ModuleName = tempModule.Name,\r\n       ModuleType = tempModule.AssemblyQualifiedName,\r\n       InitializationMode = InitializationMode.WhenAvailable\r\n   });\r\n}\r\n</pre>\r\n</div>\r\n</span></p>\r\n<p>You can read more about modules in <a href=\"http://msdn.microsoft.com/en-us/library/gg405479(v=PandP.40).aspx\">Chapter 4: Modular Application Development</a> and you might find handy the <a href=\"http://msdn.microsoft.com/en-us/library/ff921068(v=PandP.40).aspx\">Modularity QuickStarts</a> provided with Prism. There you will find examples and explanations of possible ways to load modules in Prism.</p>\r\n<p>Additionally, it could be helpful to know that the <strong>ModuleManager.LoadModule</strong> method can only load a module if you pass a <strong>ModuleInfo</strong> as the parameter. In case you pass a view object, a string or a type, a compilation error will be thrown. You can read more about the ModuleInfo members <a href=\"http://msdn.microsoft.com/en-us/library/microsoft.practices.prism.modularity.moduleinfo_members(v=pandp.40).aspx\">here</a>.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-03-01T07:17:13.777-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "574251",
    "ThreadId": "247980",
    "Html": "<p>Hi,</p>\r\n<p>thank you now the loading of the module works (it throws no exeption anymore) but the viewing of the module still takes to much time. I set e breakpoint on the constructor of the viewmodel class of this module (I bind it with this.DataContext = viewmodel to the view) but this contructor is still called only when the view of this module is shown for the first time. Only the showing of this view for the first time takes so much time, every later call is much faster. This is the reason why I want to load the module during the start-up in the background. Is there a possibility to call the viewmodel-class during the module.Load process? Is there an other possibility to increase the showing of this view?</p>\r\n<p>Can you please give me an other hint?</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you!</p>",
    "PostedDate": "2011-03-02T01:03:08.01-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "574454",
    "ThreadId": "247980",
    "Html": "<p>Hi,</p>\r\n<p>The behavior you're describing for the loading of the ViewModel and the View happens because you're using the <em>View-First approach</em> (that is to say, you're specifying the ViewModel as a dependency of the View). If you want to create the ViewModel before creating the View, you could use the <em>ViewModel-First approach</em>. You can read more about in the following links:</p>\r\n<ul>\r\n<li><a href=\"http://wildermuth.com/2009/05/22/Which_came_first_the_View_or_the_Model\">Which came first, The View or the ViewModel</a></li>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/225637\">Viewmodel-first: \"generally to be avoided\"?</a> </li>\r\n</ul>\r\n<p>Take into account that there are some implications with using the ViewModel-First approach, so you should read carefully before deciding to implement it.</p>\r\n<p>If the delay is caused by the fact that you need to retrieve information from a web service or something similar, you could follow another approach: you could have a service in your module that retrieves the necessary information, and once the information has been retrieved, it publishes an event indicating that the view should be loaded, thus avoiding the delay when loading the view. The ViewModel should obtain (through dependency injection) a reference to that service and access the data from there. This is possible because initializing a module does not necessarily imply that its views should be loaded.</p>\r\n<p>You might find the following Prism MSDN chapters handy:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098(v=PandP.40).aspx\">Chapter 7: Composing the User Interface</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\">Chapter 9: Communicating Between Loosely Coupled Components</a></li>\r\n</ul>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-03-02T07:26:46.533-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "574469",
    "ThreadId": "247980",
    "Html": "<p>Thank you, this is much to read and it seems to be good stuff. I will work through it and give you a&nbsp; response if you like.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks a lot,</p>\r\n<p>&nbsp;</p>\r\n<p>Stefan</p>",
    "PostedDate": "2011-03-02T07:51:31.457-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]