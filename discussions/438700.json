[
  {
    "Id": "1023895",
    "ThreadId": "438700",
    "Html": "Hello, \r<br />\nI am fairly new to the MVVM model and need some help. \r<br />\n<br />\nMy application is called with a GUID on the querystring. \r<br />\n<br />\nIn my App.xaml.cs I gather the GUID, run a sub called SetupUserPrincipal with that guid. Inside that function I create object UserPrincipal.<br />\n<pre><code>    private void Application_Startup(object sender, StartupEventArgs e)\n    {\n        string val = HtmlPage.Document.QueryString[&quot;GUID&quot;];\n        Bootstrapper bootStrapper = new Bootstrapper(this.SetupUserPrincipal(val));\n        bootStrapper.Run();\n    }\n\n    private UserPrincipal SetupUserPrincipal(string userid)\n    {\n        UserPrincipal principal = new UserPrincipal(userid);\n        return principal;\n    }\n</code></pre>\n\nInside of my UserPrincipal class, I set the GUID and then call a web service to see if that GUID is correct and if so, gather some more information out of it.<br />\n<pre><code>public class UserPrincipal\n{\n    private string _guid;\n    private Int32 _userID;\n    private DateTime _lastAccess;\n\n    public DateTime LastAccess\n    {\n        get { return this._lastAccess; }\n    }\n\n   public string GUID\n    {\n        get { return this._guid; }\n    }\n\n    public Int32 UserID\n    {\n        get { return this._userID; }\n    }\n\n    public UserPrincipal(string guid)\n    {\n        _guid = guid;\n\n        LoadUserInfo();\n    }\n\n    public void LoadUserInfo()\n    {\n        UserSecurityServiceClient service = new UserSecurityServiceClient();\n        service.GetUserByGUIDCompleted += new EventHandler&lt;GetUserByGUIDCompletedEventArgs&gt;(UserInfo);\n        service.GetUserByGUIDAsync(this._guid);\n    }\n\n    void UserInfo(object sender, GetUserByGUIDCompletedEventArgs e)\n    {\n        NSAMedia.VendorAutomation.Infrastructure.UserSecurityService.Users serviceResponse = e.Result;\n\n        for (int j = 0; j &lt; serviceResponse.User.UserSecurity.Count; j++)\n        {\n            this._userID = serviceResponse.User.UserSecurity[j].userID;\n            this._lastAccess = serviceResponse.User.UserSecurity[j].lastAccess;\n        }\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Publish(true);\n    }\n\n}\n</code></pre>\n\nSince I am in Silverlight, this is a async call. This means the call to run the bootstrapper and register my modules and even Register the Instance of my UserPrincipal object is called and loaded before my web service is called. <br />\n<pre><code>public class Bootstrapper : UnityBootstrapper\n{\n    UserPrincipal userPrincipal;\n\n    protected override DependencyObject CreateShell()\n    {\n        Shell rootShell = new Shell();\n        Application.Current.RootVisual = rootShell;\n        return rootShell;\n    }\n\n    protected override void ConfigureContainer()\n    {\n        Container.RegisterInstance(typeof(UserPrincipal), userPrincipal, new ContainerControlledLifetimeManager());\n\n        base.ConfigureContainer();\n    }\n\n    public Bootstrapper(UserPrincipal principal)\n    {\n        this.userPrincipal = principal;\n    }\n\n    protected override IModuleCatalog CreateModuleCatalog()\n    {\n        ModuleCatalog modules = new ModuleCatalog();\n        //modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.HelloWorld.HelloWorldModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorDetail.VendorDetailModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorSelection.VendorSelectionModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductSelection.ProductSelectionModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductDetails.ProductDetailsModule));\n        return modules;\n    }\n\n}\n</code></pre>\n\nAt this point I wanted to use the UserPrincipal object in each of my Modules constructors to determine if they have the ability to access the page or items on the page. <br />\n<pre><code>       public VendorSelectionViewModel(IVendorSelectionView view, IEventAggregator eventAggregator, User user)\n        {\n            View = view;\n            View.Model = this;\n            _user = user;\n            //this.HeaderInfo = &quot;Hello World&quot;;\n            this.VendorList = new ObservableCollection&lt;NSAMedia.VendorAutomation.Infrastructure.Model.VendorModel&gt;();\n            this.eventAggregator = eventAggregator;\n\n            //this.eventAggregator.GetEvent&lt;UserInitialized&gt;().Subscribe(this.checkUser);\n\n            try\n            {\n                this.LoadVendors();\n            }\n            catch\n            {\n                // log service faults \n                //this.AddError(&quot;Failed to set up data for Specialties, please see the event log for more details!&quot;);\n            }\n\n        }\n</code></pre>\n\nBecause of the async call, my user object that was Registered has none of the information populated from my web service call.\r<br />\n<br />\nMy question is there a way to stop the system pre-bootstrapper to allow the userprincipal object to acquire the information? Or should I be doing something different?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2013-04-01T12:39:03.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1025082",
    "ThreadId": "438700",
    "Html": "Hi,\r<br />\n<br />\nBased on my understanding, what you need is to wait for the asynchronous operation to complete before initializing the modules. Hence, you need to invoke the <strong>InitializeModules</strong> method after the &quot;completed event&quot; is raised. As far as I know, the <strong>Bootstrapper</strong> is not prepared to wait for asynchronous calls to finish, but you can override its <strong>Run</strong> method to change the bootstrapping logic to fit your needs.\r<br />\n<br />\nFor example, as a possible approach, you could override the <strong>Run</strong> method of your bootstrapper and copy the original code, with the difference that instead of calling the <strong>InitializeModules</strong> method directly, you could first check if the operation was completed (for example with the <strong>UserId</strong> property) and if not, you could subscribe to the <strong>UserInitialized</strong> event and invoke the <strong>InitializeModules</strong> method inside the event handler (remember to unsubscribe from this event.) You can find the <strong>Run</strong> method's base code in the <strong>UnityBoostrapper</strong> (in case you are using <strong>Unity</strong>) or in the <strong>MefBootstrapper</strong> (in case you are using <strong>MEF</strong>) in the <strong>Prism</strong> library's source code.\r<br />\n<br />\nLike this, the you can ensure that when the modules are initialized the information required from the web service is available. Also, this would not block the rest of the of the initialization process as the initialization of the modules is the last step in the bootstrapping sequence. You find more about this sequence here:<br />\n<ul>\n<li>\n<a href=\"http://msdn.microsoft.com/en-us/library/gg430868%28v=pandp.40%29.aspx\" rel=\"nofollow\">Chapter 2 - Initializing Prism Applications</a><br />\n</li>\n</ul>\nI hope this helps,\r<br />\n<br />\nDamian Cherubini\r<br />\n<a href=\"http://blogs.southworks.net/dcherubini\" rel=\"nofollow\">http://blogs.southworks.net/dcherubini</a><br />\n",
    "PostedDate": "2013-04-03T13:47:08.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1025534",
    "ThreadId": "438700",
    "Html": "Damian,\r<br />\n<br />\nFirst, thank you for your help. I believe you are putting me on the right track, unfortunately, I am very new to this. Below is the code for my App.xaml.cs, Bootstrapper.cs and UserPrincial.cs. When I run the project with my changes I am getting an error on the 'ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Subscribe(this.UserDone);' line in the Bootstrapper.Run procedure. It is giving me a Microsoft.Practices.ServiceLocation.ServiceLocator.Current threw an exception of type 'System.NullReferenceException.' Am I doing something wrong? Also, is calling the InitializeModules the only thing I would have to do in the UserDone function?\r<br />\n<br />\n<br />\nHere is what I did in my code.\r<br />\n<br />\nApp.xaml.cs<br />\n<pre><code>    private void Application_Startup(object sender, StartupEventArgs e)\n    {\n        string val = HtmlPage.Document.QueryString[&quot;GUID&quot;];\n        Bootstrapper bootStrapper = new Bootstrapper(this.SetupUserPrincipal(val));\n        bootStrapper.Run(false);\n    }\n</code></pre>\n\nBootstrapper.cs - Run override method, subscribing to the UserInitialize event. Once that event is done, call UserDone method that would supply the user object filled in. I would then like to Initialize the Modules<br />\n<pre><code>public class Bootstrapper : UnityBootstrapper\n{\n    UserPrincipal userPrincipal;\n\n    public override void Run(bool runWithDefaultConfiguration)\n    {\n        if (!runWithDefaultConfiguration)\n        {\n            if (userPrincipal.UserID == 0)\n            {\n                ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Subscribe(this.UserDone);\n            }\n        }\n    }\n\n    public void UserDone(UserPrincipal user)\n    {\n        base.InitializeModules();\n    }\n\n    protected override DependencyObject CreateShell()\n    {\n        Shell rootShell = new Shell();\n        Application.Current.RootVisual = rootShell;\n        return rootShell;\n    }\n\n    protected override void ConfigureContainer()\n    {\n        Container.RegisterInstance(typeof(UserPrincipal), userPrincipal, new ContainerControlledLifetimeManager());\n\n        base.ConfigureContainer();\n    }\n\n    public Bootstrapper(UserPrincipal principal)\n    {\n        this.userPrincipal = principal;\n    }\n\n    protected override IModuleCatalog CreateModuleCatalog()\n    {\n        ModuleCatalog modules = new ModuleCatalog();\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorDetail.VendorDetailModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorSelection.VendorSelectionModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductSelection.ProductSelectionModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductDetails.ProductDetailsModule));\n        return modules;\n    }\n\n}\n</code></pre>\n\nUserPrincipal.cs<br />\n<pre><code>public class UserPrincipal\n{\n    private string _guid;\n    private Int32 _userID = 0;\n    private DateTime _lastAccess;\n\n    public DateTime LastAccess\n    {\n        get { return this._lastAccess; }\n    }\n\n   public string GUID\n    {\n        get { return this._guid; }\n    }\n\n    public Int32 UserID\n    {\n        get { return this._userID; }\n    }\n\n    public UserPrincipal(string guid)\n    {\n        _guid = guid;\n\n        LoadUserInfo();\n    }\n\n    public void LoadUserInfo()\n    {\n        UserSecurityServiceClient service = new UserSecurityServiceClient();\n        service.GetUserByGUIDCompleted += new EventHandler&lt;GetUserByGUIDCompletedEventArgs&gt;(UserInfo);\n        service.GetUserByGUIDAsync(this._guid);\n    }\n\n    void UserInfo(object sender, GetUserByGUIDCompletedEventArgs e)\n    {\n        NSAMedia.VendorAutomation.Infrastructure.UserSecurityService.Users serviceResponse = e.Result;\n\n        for (int j = 0; j &lt; serviceResponse.User.UserSecurity.Count; j++)\n        {\n            this._userID = serviceResponse.User.UserSecurity[j].userID;\n            this._lastAccess = serviceResponse.User.UserSecurity[j].lastAccess;\n        }\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Publish(this);\n    }\n\n}</code></pre>\n\n}<br />\n",
    "PostedDate": "2013-04-04T10:21:53.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1025577",
    "ThreadId": "438700",
    "Html": "Hi,\r<br />\n<br />\nI believe that Damian was referring to overriding the Run method and copying the original Run method code with your modifications like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">override</span> <span style=\"color:Blue;\">void</span> Run(<span style=\"color:Blue;\">bool</span> runWithDefaultConfiguration)\n{\n    <span style=\"color:Blue;\">this</span>.useDefaultConfiguration = runWithDefaultConfiguration;\n\n    <span style=\"color:Blue;\">this</span>.Logger = <span style=\"color:Blue;\">this</span>.CreateLogger();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Logger == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(Resources.NullLoggerFacadeException);\n    }\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.LoggerCreatedSuccessfully, Category.Debug, Priority.Low);\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.CreatingModuleCatalog, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ModuleCatalog = <span style=\"color:Blue;\">this</span>.CreateModuleCatalog();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.ModuleCatalog == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(Resources.NullModuleCatalogException);\n    }\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.ConfiguringModuleCatalog, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ConfigureModuleCatalog();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.CreatingUnityContainer, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.Container = <span style=\"color:Blue;\">this</span>.CreateContainer();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Container == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(Resources.NullUnityContainerException);\n    }\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.ConfiguringUnityContainer, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ConfigureContainer();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.ConfiguringServiceLocatorSingleton, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ConfigureServiceLocator();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.ConfiguringRegionAdapters, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ConfigureRegionAdapterMappings();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.ConfiguringDefaultRegionBehaviors, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.ConfigureDefaultRegionBehaviors();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.RegisteringFrameworkExceptionTypes, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.RegisterFrameworkExceptionTypes();\n\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.CreatingShell, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.Shell = <span style=\"color:Blue;\">this</span>.CreateShell();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Shell != <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.SettingTheRegionManager, Category.Debug, Priority.Low);\n        RegionManager.SetRegionManager(<span style=\"color:Blue;\">this</span>.Shell, <span style=\"color:Blue;\">this</span>.Container.Resolve&lt;IRegionManager&gt;());\n\n        <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.UpdatingRegions, Category.Debug, Priority.Low);\n        RegionManager.UpdateRegions();\n\n        <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.InitializingShell, Category.Debug, Priority.Low);\n        <span style=\"color:Blue;\">this</span>.InitializeShell();\n    }\n            \n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Container.IsRegistered&lt;IModuleManager&gt;())\n    {\n        <span style=\"color:Green;\">//Patch to wait for the userPrincipal before initializing the modules</span>\n        <span style=\"color:Blue;\">if</span> (userPrincipal.UserID == 0)\n        {\n            ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Subscribe(<span style=\"color:Blue;\">this</span>.UserDone);\n        }\n        <span style=\"color:Blue;\">else</span>\n        {\n            <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.InitializingModules, Category.Debug, Priority.Low);\n            <span style=\"color:Blue;\">this</span>.InitializeModules();\n            <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.BootstrapperSequenceCompleted, Category.Debug, Priority.Low);\n         }\n    }\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> UserDone(UserPrincipal user)\n{\n    ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Unsubscribe(<span style=\"color:Blue;\">this</span>.UserDone);\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.InitializingModules, Category.Debug, Priority.Low);\n    <span style=\"color:Blue;\">this</span>.InitializeModules();\n    <span style=\"color:Blue;\">this</span>.Logger.Log(Resources.BootstrapperSequenceCompleted, Category.Debug, Priority.Low);\n}\r\n</pre></div>In your case, you were receiving that System.NullReferenceException because the ServiceLocator was never initialized in your Run method.\r<br />\n<br />\nHope this helps,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a><br />\n",
    "PostedDate": "2013-04-04T11:26:59.137-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1026159",
    "ThreadId": "438700",
    "Html": "Federico,\r<br />\n<br />\nThank you for your help. I have a couple of issues that are stopping me from getting to my ultimate goal. <br />\n<ol>\n<li>\nOn all of the Logger.Log lines, I am getting a Resource error. My system is not recognizing the Resources.LoggerCreatedSuccessfully <br />\nIs this a file that I should be creating with constants.<br />\n</li>\n<li>\nMy bigger issue involves the CreateModuleCatalog. I might not have explained myself correctly in the initial issue.\r<br />\nHere is what I want my CreateModuleCatalog to do.<br />\n<pre><code>protected override IModuleCatalog CreateModuleCatalog()\n{\n    ModuleCatalog modules = new ModuleCatalog();\n    modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorDetail.VendorDetailModule));\n    if (userPrincipal.UserID != 3417)\n    {\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorSelection.VendorSelectionModule));\n    }\n    modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductSelection.ProductSelectionModule));\n    modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductDetails.ProductDetailsModule));\n    return modules;\n}\n</code></pre>\n\n</li>\n</ol>\nI want to wait for my UserPrincipal to complete (which the system is allowing) because I want to add some modules based on who is logging in. In the code you supplied, I am still calling the CreateModuleCatalog, ConfigureModuleCatalog, CreateContainer, ConfigureContainer, ... before the web service is done. In this case my userPrincipal.UserID = 0 and all Modules are loaded, even though after the service is done, userPrinicipal.userID = 3417 and the VendorSelection module should not be loaded. I was hoping to do something like the following but cannot because the ServiceLocator is null again as in my previous entry.<br />\n<pre><code>    public override void Run(bool runWithDefaultConfiguration)\n    {\n        //this.useDefaultConfiguration = runWithDefaultConfiguration;\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Subscribe(this.UserDone);\n    }\n\n    public void UserDone(UserPrincipal user)\n    {\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Unsubscribe(this.UserDone);\n\n        this.Logger = this.CreateLogger();\n        if (this.Logger == null)\n        {\n            //throw new InvalidOperationException(Resources.NullLoggerFacadeException);\n        }\n\n        //this.Logger.Log(Resources.LoggerCreatedSuccessfully, Category.Debug, Priority.Low);\n\n        //this.Logger.Log(Resources.CreatingModuleCatalog, Category.Debug, Priority.Low);\n        this.ModuleCatalog = this.CreateModuleCatalog();\n        if (this.ModuleCatalog == null)\n        {\n            //throw new InvalidOperationException(Resources.NullModuleCatalogException);\n        }\n\n        //this.Logger.Log(Resources.ConfiguringModuleCatalog, Category.Debug, Priority.Low);\n        this.ConfigureModuleCatalog();\n\n        //this.Logger.Log(Resources.CreatingUnityContainer, Category.Debug, Priority.Low);\n        this.Container = this.CreateContainer();\n        if (this.Container == null)\n        {\n            //throw new InvalidOperationException(Resources.NullUnityContainerException);\n        }\n\n        //this.Logger.Log(Resources.ConfiguringUnityContainer, Category.Debug, Priority.Low);\n        this.ConfigureContainer();\n\n        //this.Logger.Log(Resources.ConfiguringServiceLocatorSingleton, Category.Debug, Priority.Low);\n        this.ConfigureServiceLocator();\n\n        //this.Logger.Log(Resources.ConfiguringRegionAdapters, Category.Debug, Priority.Low);\n        this.ConfigureRegionAdapterMappings();\n\n        //this.Logger.Log(Resources.ConfiguringDefaultRegionBehaviors, Category.Debug, Priority.Low);\n        this.ConfigureDefaultRegionBehaviors();\n\n        //this.Logger.Log(Resources.RegisteringFrameworkExceptionTypes, Category.Debug, Priority.Low);\n        this.RegisterFrameworkExceptionTypes();\n\n        //this.Logger.Log(Resources.CreatingShell, Category.Debug, Priority.Low);\n        this.Shell = this.CreateShell();\n        if (this.Shell != null)\n        {\n            //this.Logger.Log(Resources.SettingTheRegionManager, Category.Debug, Priority.Low);\n            RegionManager.SetRegionManager(this.Shell, this.Container.Resolve&lt;IRegionManager&gt;());\n\n            //this.Logger.Log(Resources.UpdatingRegions, Category.Debug, Priority.Low);\n            RegionManager.UpdateRegions();\n\n            //this.Logger.Log(Resources.InitializingShell, Category.Debug, Priority.Low);\n            this.InitializeShell();\n        }\n\n        if (this.Container.IsRegistered&lt;IModuleManager&gt;())\n        {\n            //this.Logger.Log(Resources.InitializingModules, Category.Debug, Priority.Low);\n            this.InitializeModules();\n            //this.Logger.Log(Resources.BootstrapperSequenceCompleted, Category.Debug, Priority.Low);\n        }\n    }\n\n    protected override void ConfigureContainer()\n    {\n        Container.RegisterInstance(typeof(UserPrincipal), userPrincipal, new ContainerControlledLifetimeManager());\n\n        base.ConfigureContainer();\n    }\n\n\n   protected override IModuleCatalog CreateModuleCatalog()\n    {\n        ModuleCatalog modules = new ModuleCatalog();\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorDetail.VendorDetailModule));\n        if (userPrincipal.UserID != 3417)\n        {\n            modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.VendorSelection.VendorSelectionModule));\n        }\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductSelection.ProductSelectionModule));\n        modules.AddModule(typeof(NSAMedia.VendorAutomation.Modules.ProductDetails.ProductDetailsModule));\n        return modules;\n    }\n\n</code></pre>\n\n",
    "PostedDate": "2013-04-05T08:28:21.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1026236",
    "ThreadId": "438700",
    "Html": "Hi,\r<br />\n<br />\nBased on my understading, your issues could be fixed the following way:\r<br />\n<br />\n1- Regarding the <strong>Log</strong> lines, they are related to <strong>Prism</strong> debugging and you can remove them since they don't affect the functionality of your application\r<br />\n<br />\n2- Regarding the problem with the <strong>ModuleCatalog</strong>, if you need to use <strong>UserPrincipal</strong> at the time you are configuring your <strong>ModuleCatalog</strong>, then you can just include it to the section of the code that was related to this <strong>UserPrincipal</strong>. Therefore, your <strong>Bootstrapper</strong> should look like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">override</span> <span style=\"color:Blue;\">void</span> Run(<span style=\"color:Blue;\">bool</span> runWithDefaultConfiguration)\n{\n    <span style=\"color:Blue;\">this</span>.useDefaultConfiguration = runWithDefaultConfiguration;\n\n    <span style=\"color:Blue;\">this</span>.Logger = <span style=\"color:Blue;\">this</span>.CreateLogger();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Logger == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(<span style=\"color:#A31515;\">&quot;NullLoggerFacadeException&quot;</span>);\n    }\n\n    <span style=\"color:Blue;\">this</span>.Container = <span style=\"color:Blue;\">this</span>.CreateContainer();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Container == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(<span style=\"color:#A31515;\">&quot;NullUnityContainerException&quot;</span>);\n    }\n\n    <span style=\"color:Blue;\">this</span>.ConfigureContainer();\n\n    <span style=\"color:Blue;\">this</span>.ConfigureServiceLocator();\n\n    <span style=\"color:Blue;\">this</span>.ConfigureRegionAdapterMappings();\n\n    <span style=\"color:Blue;\">this</span>.ConfigureDefaultRegionBehaviors();\n\n    <span style=\"color:Blue;\">this</span>.RegisterFrameworkExceptionTypes();\n\n    <span style=\"color:Blue;\">this</span>.Shell = <span style=\"color:Blue;\">this</span>.CreateShell();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Shell != <span style=\"color:Blue;\">null</span>)\n    {\n        RegionManager.SetRegionManager(<span style=\"color:Blue;\">this</span>.Shell, <span style=\"color:Blue;\">this</span>.Container.Resolve&lt;IRegionManager&gt;());\n\n        RegionManager.UpdateRegions();\n\n        <span style=\"color:Blue;\">this</span>.InitializeShell();\n    }\n            \n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.Container.IsRegistered&lt;IModuleManager&gt;())\n    {\n        <span style=\"color:Green;\">//Patch to wait for the userPrincipal before initializing the modules</span>\n        <span style=\"color:Blue;\">if</span> (userPrincipal.UserID == 0)\n        {\n            ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Subscribe(<span style=\"color:Blue;\">this</span>.UserDone);\n        }\n        <span style=\"color:Blue;\">else</span>\n        {\n            <span style=\"color:Blue;\">this</span>.DoModuleConfig();\n        }\n    }\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> UserDone(UserPrincipal user)\n{\n    ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;UserInitialized&gt;().Unsubscribe(<span style=\"color:Blue;\">this</span>.UserDone);\n    <span style=\"color:Blue;\">this</span>.DoModuleConfig();\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> DoModuleConfig()\n{\n    <span style=\"color:Blue;\">this</span>.ModuleCatalog = <span style=\"color:Blue;\">this</span>.CreateModuleCatalog();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.ModuleCatalog == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(<span style=\"color:#A31515;\">&quot;NullModuleCatalogException&quot;</span>);\n    }\n\n    <span style=\"color:Blue;\">this</span>.ConfigureModuleCatalog();\n    <span style=\"color:Blue;\">this</span>.InitializeModules();\n}\r\n</pre></div>Hope this helps,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a><br />\n",
    "PostedDate": "2013-04-05T10:25:57.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1035720",
    "ThreadId": "438700",
    "Html": "Federico,\r<br />\n<br />\nThank you for your reply. Sorry for the delay.\r<br />\n<br />\nI am getting an error in the Bootstrapper Run function on line this.ConfigureContainer();<br />\n<pre><code> protected override void ConfigureContainer()\n        {\n            Container.RegisterInstance(typeof(UserPrincipal), userPrincipal, new ContainerControlledLifetimeManager());\n\n            base.ConfigureContainer();\n        }</code></pre>\n\nThe error is on the base.ConfigureContainer line. It states Value cannot be null. Parameter name instance.\r<br />\n<br />\nPlease let me know if I am doing something wrong.<br />\n",
    "PostedDate": "2013-04-25T09:23:43.423-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1035781",
    "ThreadId": "438700",
    "Html": "Hi,<br />\n<br />\nBased on my understanding, the default <strong>ConfigureContainer</strong> method of the bootstrapper tries to register the <strong>ModuleCatalog</strong> in the container. However, as we delayed the creation of the <strong>ModuleCatalog</strong> until the <strong>DoModuleConfig</strong> is executed, the <strong>ConfigureContainter</strong> method fails. A possible approach to workaround this is to include the logic of the original <strong>ConfigureContainer</strong> method in the overriding version but without registering the <strong>ModuleCatalog</strong>. Then, you could register the <strong>ModuleCatalog</strong> in the <strong>DoModuleConfig</strong> method. As a result, your <strong>ConfigureContainer</strong> method should be like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">protected</span> <span style=\"color:Blue;\">override</span> <span style=\"color:Blue;\">void</span> ConfigureContainer()\n{\n    <span style=\"color:Blue;\">this</span>.Container.AddNewExtension&lt;UnityBootstrapperExtension&gt;();\n\n    Container.RegisterInstance&lt;ILoggerFacade&gt;(Logger);\n\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IServiceLocator), <span style=\"color:Blue;\">typeof</span>(UnityServiceLocatorAdapter), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IModuleInitializer), <span style=\"color:Blue;\">typeof</span>(ModuleInitializer), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IModuleManager), <span style=\"color:Blue;\">typeof</span>(ModuleManager), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(RegionAdapterMappings), <span style=\"color:Blue;\">typeof</span>(RegionAdapterMappings), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionManager), <span style=\"color:Blue;\">typeof</span>(RegionManager), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IEventAggregator), <span style=\"color:Blue;\">typeof</span>(EventAggregator), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionViewRegistry), <span style=\"color:Blue;\">typeof</span>(RegionViewRegistry), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionBehaviorFactory), <span style=\"color:Blue;\">typeof</span>(RegionBehaviorFactory), <span style=\"color:Blue;\">true</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionNavigationJournalEntry), <span style=\"color:Blue;\">typeof</span>(RegionNavigationJournalEntry), <span style=\"color:Blue;\">false</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionNavigationJournal), <span style=\"color:Blue;\">typeof</span>(RegionNavigationJournal), <span style=\"color:Blue;\">false</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionNavigationService), <span style=\"color:Blue;\">typeof</span>(RegionNavigationService), <span style=\"color:Blue;\">false</span>);\n    RegisterTypeIfMissing(<span style=\"color:Blue;\">typeof</span>(IRegionNavigationContentLoader), <span style=\"color:Blue;\">typeof</span>(RegionNavigationContentLoader), <span style=\"color:Blue;\">true</span>);\n\n    Container.RegisterInstance(<span style=\"color:Blue;\">typeof</span>(UserPrincipal), userPrincipal, <span style=\"color:Blue;\">new</span> ContainerControlledLifetimeManager());\n}\r\n</pre></div>And the <strong>DoModuleConfig</strong> like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> DoModuleConfig()\n{\n    <span style=\"color:Blue;\">this</span>.ModuleCatalog = <span style=\"color:Blue;\">this</span>.CreateModuleCatalog();\n    <span style=\"color:Blue;\">if</span> (<span style=\"color:Blue;\">this</span>.ModuleCatalog == <span style=\"color:Blue;\">null</span>)\n    {\n        <span style=\"color:Blue;\">throw</span> <span style=\"color:Blue;\">new</span> InvalidOperationException(<span style=\"color:#A31515;\">&quot;NullModuleCatalogException&quot;</span>);\n    }\n\n    <span style=\"color:Blue;\">this</span>.Container.RegisterInstance(<span style=\"color:Blue;\">this</span>.ModuleCatalog);\n\n    <span style=\"color:Blue;\">this</span>.ConfigureModuleCatalog();\n    <span style=\"color:Blue;\">this</span>.InitializeModules();\n}\r\n</pre></div>Regards,<br />\n<br />\nDamian Cherubini<br />\n<a href=\"http://blogs.southworks.net/dcherubini\" rel=\"nofollow\">http://blogs.southworks.net/dcherubini</a><br />\n",
    "PostedDate": "2013-04-25T11:52:41.537-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1035795",
    "ThreadId": "438700",
    "Html": "Damian and Federico\r<br />\n<br />\nThis seems to do it. I thank you for your knowledge.<br />\n",
    "PostedDate": "2013-04-25T12:38:20.333-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]