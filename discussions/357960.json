[
  {
    "Id": "843472",
    "ThreadId": "357960",
    "Html": "\r\n<p>I'm trying to load a catalog from XAML in WPF. &nbsp;I've done this successfully in Silverlight (mainly because the example's in the ref docs were for Silverlight) however when I try to do the equivalent in WPF I get the following error when the Boostrapper\r\n trys to load a module from the XAML derived catalog:</p>\r\n<p><strong><span>ModuleTypeLoaderNotFoundException</span></strong><span><br>\r\nThere is currently no moduleTypeLoader in the ModuleManager that can retrieve the specified module.</span></p>\r\n<p>&nbsp;</p>\r\n<p><span>Here's what I have for the catalog (<strong>Catalog.xaml</strong>): &nbsp;</span></p>\r\n<p><span>&lt;Modularity:ModuleCatalog&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xmlns:Modularity=&quot;clr-namespace:Microsoft.Practices.Composite.Modularity;assembly=Microsoft.Practices.Composite&quot;&gt;</span></p>\r\n<p><span>&nbsp;&nbsp; &nbsp;&lt;Modularity:ModuleInfo&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Ref=&quot;Modules/MyAssembly.dll&quot;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;ModuleName=&quot;ShellModule&quot;&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;ModuleType=&quot;MyNamespace.MyModule,&nbsp;MyNamespace&quot; /&gt;</span></p>\r\n<p><span>&lt;/Modularity:ModuleCatalog&gt;</span></p>\r\n<p>It's loading OK from here (in the Bootstrapper):</p>\r\n<p>&nbsp;</p>\r\n<p><span>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;protected override IModuleCatalog GetModuleCatalog()<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;{<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var uri = new Uri(&quot;/Catalogs/Catalog.xaml&quot;, UriKind.Relative);<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var catalog = ModuleCatalog.CreateFromXaml(uri);<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return catalog;<br>\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</span></p>\r\n<div>A breakpoint shows that the catalog is actually loaded, and contains one item. &nbsp;The exception is thrown from within&nbsp;</div>\r\n<div>\r\n<div><span>&nbsp;&nbsp; &nbsp;public partial class App : Application</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp;{</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;protected override void OnStartup(StartupEventArgs e)</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;{</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;new Bootstrapper().Run();&nbsp;<span>// Exception thrown from here.</span></span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp;}</span></div>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Can anyone help me with this issue? i have tried hard but could not find any solution? Please let me know how to go about this problem?</p>\r\n<p>Thanks</p>\r\n<p>VJ</p>\r\n",
    "PostedDate": "2012-06-01T02:41:35.46-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "843510",
    "ThreadId": "357960",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding, this error could be related to the fact that the <strong>Ref </strong>attribute in your <strong>ModuleInfo </strong>does not start with <strong>file://</strong>.</p>\r\n<p>You could find more information about this in this related thread:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/58512\">Boostrapping Catalog from XAML in WPF</a></li>\r\n</ul>\r\n<p>Also, if you are using <strong>MEF </strong>you should be aware of the following known issue:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/7215\">Issue with ModuleCatalog.CreateFromXaml for WPF application with MEF Bootstrapper</a></li>\r\n</ul>\r\n<p>There, you could also find a small working sample.</p>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>ï»¿</p>",
    "PostedDate": "2012-06-01T05:37:58.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "845380",
    "ThreadId": "357960",
    "Html": "<p>H! Agustin</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks for your reply.!</p>\r\n<p>i tried with your solution by usinf file:// on ref in modulecatalog.xaml &nbsp; but it did not work for me.</p>\r\n<p>Could you provide me any alternate solution to above problem?</p>\r\n<p>I am still in debug mode , my application is still getting the same exception.</p>\r\n<p>&nbsp;</p>\r\n<p>if you or anyone else has any other solution please reply&nbsp;</p>\r\n<p>Its urgent</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you</p>\r\n<p>Regards</p>\r\n<p>Vijay</p>",
    "PostedDate": "2012-06-06T00:02:46.827-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "845385",
    "ThreadId": "357960",
    "Html": "<p>Hey H!</p>\r\n<p>&nbsp;</p>\r\n<p>It worked when i commented other two ModulesInfo in Modulecatalog.xaml&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre><span>&lt;</span><span>prism</span><span>:</span><span>ModuleCatalog</span><span>&nbsp;xmlns</span><span>=</span><span>\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>\r\n&nbsp;&nbsp;&nbsp;<span>&nbsp;xmlns</span><span>:</span><span>x</span><span>=</span><span>\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>\r\n&nbsp;&nbsp;&nbsp;<span>&nbsp;xmlns</span><span>:</span><span>sys</span><span>=</span><span>\"clr-namespace:System;assembly=mscorlib\"</span>\r\n&nbsp;&nbsp;&nbsp;<span>&nbsp;xmlns</span><span>:</span><span>prism</span><span>=</span><span>\"clr-namespace:Microsoft.Practices.Prism.Modularity;assembly=Microsoft.Practices.Prism\"</span><span>&gt;</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;!--&lt;prism:ModuleInfo&nbsp;InitializationMode=\"WhenAvailable\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModuleName=\"MenuModule.ModuleInit\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModuleType=\"MenuModule.ModuleInit,&nbsp;MenuModule,&nbsp;Version=1.0.0.0,&nbsp;Culture=neutral,&nbsp;PublicKeyToken=null\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ref=\"&nbsp;file://MenuModule.dll\"/&gt;--&gt;</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>prism</span><span>:</span><span>ModuleInfo</span><span>&nbsp;InitializationMode</span><span>=</span><span>\"WhenAvailable\"</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;ModuleName</span><span>=</span><span>\"OrgManager.ModuleInit\"</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;ModuleType</span><span>=</span><span>\"OrgManager.ModuleInit,&nbsp;OrgManager,&nbsp;Version=1.0.0.0,&nbsp;Culture=neutral,&nbsp;PublicKeyToken=null\"</span>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;Ref</span><span>=</span><span>\"&nbsp;file://OrgManager.dll\"</span><span>/&gt;</span>\r\n<span>&nbsp;&nbsp;&nbsp;</span><span>&lt;!--&lt;prism:ModuleInfo&nbsp;InitializationMode=\"OnDemand\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModuleName=\"CodeManager.ModuleInit\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModuleType=\"CodeManager.ModuleInit,&nbsp;CodeManager,&nbsp;Version=1.0.0.0,&nbsp;Culture=neutral,&nbsp;PublicKeyToken=null\"</span>\r\n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ref=\"&nbsp;file://CodeManager.dll\"/&gt;--&gt;</span>\r\n \r\n<span>&lt;/</span><span>prism</span><span>:</span><span>ModuleCatalog</span><span>&gt;</span></pre>\r\n<pre><br /></pre>\r\n<pre><br /></pre>\r\n<pre>See if i comment other two modules , it loads me OrgManger the second module from above. but if i uncomment all and than run the application</pre>\r\n<pre>than it gives me that ModuletypeLaoder error. Can you find any resion for it? why its behaving in such fashion.</pre>\r\n<pre><br /></pre>\r\n<pre>I am only loading OrgManger module.</pre>\r\n<pre>Please reply </pre>\r\n<pre><br /></pre>\r\n<pre>Thanks</pre>\r\n<pre>VJ</pre>",
    "PostedDate": "2012-06-06T00:14:53.613-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "845561",
    "ThreadId": "357960",
    "Html": "<p>Hi,</p>\r\n<p>Beside the aforementioned problems, I have used <strong>ModuleCatalog </strong>to load modules in <strong>WPF </strong>with <strong>MEF </strong>and <strong>Unity</strong> (similar to the sample provided in the second link i mentioned above).</p>\r\n<p>One thing I noticed in the code snippets you provided, is that in your <strong>Bootstrapper, </strong>you are overriding the <strong>GetModuleCatalog </strong>method, take into account that since <strong>Prism 4.0</strong> the <strong>GetModuleCatalog </strong>method in the <strong>Bootstrapper </strong>is now called <strong>CreateModuleCatalog</strong>. Hence, you could change it, for example like in the following code snippet:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> IModuleCatalog CreateModuleCatalog()\r\n        {\r\n            <span style=\"color: blue;\">var</span> uri = <span style=\"color: blue;\">new</span> Uri(<span style=\"color: #a31515;\">\"/Catalogs/Catalog.xaml\"</span>, UriKind.Relative);\r\n            <span style=\"color: blue;\">var</span> catalog = ModuleCatalog.CreateFromXaml(uri);\r\n            <span style=\"color: blue;\">return</span> catalog;\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Also, it could be helpful to mention that in order for relative paths to work, you need to place your module's <strong>DLL </strong>in the same folder as your shell project.</p>\r\n<p>Also, it would be helpful if you could you provide us with more information about your scenario, like the full exception message text as there may be a couple of thing that could be causing your problem, or if you continue experiencing it, perhaps you could provide us with a repro sample application, so that we can help you further with this.</p>\r\n<p>Also, you could try using another mechanism to register your modules like<strong> Using a Configuration File</strong>, to see if your modules are correctly loaded.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>ï»¿</p>",
    "PostedDate": "2012-06-06T07:59:27-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]