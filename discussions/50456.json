[
  {
    "Id": "169107",
    "ThreadId": "50456",
    "Html": "Hi All,<br>\r\n<br>\r\nI have noticed a strange behaviour when using the command functionality in Silverlight:<br>\r\n<br>\r\nWhen the  adding the commands:Click.Command and CommandParameter property, the IsEnabled property stops functioning:<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#a31515\"></span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">Button</span><span style=\"font-size:13px;color:#ff0000\"> Content</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Delete&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Name</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Btn_Delete&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    Margin</span><span style=\"font-size:13px;color:#0000ff\">=&quot;0,0,8,0&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    MinWidth</span><span style=\"font-size:13px;color:#0000ff\">=&quot;75&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    commands</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Click.Command</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> DeleteCommand</span><span style=\"font-size:13px;color:#0000ff\">}&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    commands</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Click.CommandParameter</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> SelectedDepartment</span><span style=\"font-size:13px;color:#0000ff\">}&quot; <br>\r\n</span><span style=\"font-size:13px;color:#ff0000\">    IsEnabled</span><span style=\"font-size:13px;color:#0000ff\">=&quot;false&quot; /&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\nIf I remove the commands: attributes the IsEnabled functions correctly. This behaviour is the same if IsEnabled is bound to a value on my view model too.<br>\r\n<br>\r\nIs this a bug? Anyone know of any work arounds?<br>\r\n<br>\r\nThanks,<br>\r\nMark<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-17T10:44:32.543-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "169201",
    "ThreadId": "50456",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Mark,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The <b>Click.Command</b> attached property provided by Composite Application Guidance for WPF &amp; Silverlight requires you to specify an <b>ICommand</b> (generally using <b>DelegateCommand</b> class). In that command you define an <b>Execute</b> and <b>CanExecute</b> method. The CAL relies on this latter method to check if the command can be executed and sets the control's <b>IsEnabled</b> property to the value returned by the <b>CanExecute</b> method.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">So, when you use CAL's Click attached property to define commands, the <b>IsEnabled</b> property is set at runtime by the command behavior (more precisely in the <b>UpdateEnabledState</b> method of the <b>CommandBehaviorBase </b>class) which is executed after the <b>isEnabled</b> set in XAML.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">      protected</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">virtual</span> <span style=\"color:blue\">void</span> UpdateEnabledState()</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            ...</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">            if</span><span style=\"font-size:10pt;font-family:'courier new'\"> (<span style=\"color:blue\">this</span>.Command != <span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                TargetObject.IsEnabled = <span style=\"color:blue\">this</span>.Command.CanExecute(<span style=\"color:blue\">this</span>.CommandParameter);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            }<br>\r\n</span><span style=\"font-size:10pt;font-family:'courier new'\">      }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">You can use the <b>RaiseCanExecuteChanged </b>method from the <b>DelegateCommand</b> class to reevalute<b> </b>the <b>CanExecute</b> method and that will update the <b>isEnabled</b> property of all attached controls.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Matias Bonaventura</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"font-family:calibri\">http://blogs.southworks.net/matiasb</span></a></p>\r\n",
    "PostedDate": "2009-03-17T15:01:14.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "169384",
    "ThreadId": "50456",
    "Html": "<div>Thanks Matias, this sounds like exactly what I need. </div>\r\n<div> </div>\r\n<div>I was adjusting the button IsEnabled using a bound property with Notification changes. Where would I set that property in my code? On the dependency property or on the ICommand object?</div>\r\n<div> </div>\r\n<div>Do you have any small snippets of code (or links to) that show this in action?</div>\r\n<div> </div>\r\n<div>Many thanks,</div>\r\n<div>Mark</div>\r\n",
    "PostedDate": "2009-03-18T05:03:57.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "436930",
    "ThreadId": "50456",
    "Html": "<p>Hi Matias,</p>\r\n<p>I am having the same problem that Mark is saying.</p>\r\n<p>Can you please more explain&nbsp;the following solution you have provided earlier.</p>\r\n<p><span style=\"color:#008000\"><strong><span style=\"font-family:calibri\">You can use the RaiseCanExecuteChanged method from the DelegateCommand class to reevalute the CanExecute method and that will update the isEnabled property of all attached controls.</span></strong></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#008000\"><strong><span style=\"font-family:calibri\"></span></strong></span>&nbsp;<span style=\"color:#000000\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#000000\"><span style=\"font-family:calibri\">Thanks </span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#000000\"><span style=\"font-family:calibri\">Sheri</span></span></p>",
    "PostedDate": "2010-04-29T00:29:55.503-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "437095",
    "ThreadId": "50456",
    "Html": "<p>Hi Sherieva,</p>\r\n<p>When you bound a command to a control, it automatically sets the <strong>IsEnabled</strong> property with the value returned by the command's <strong>CanExecute</strong> method. That is why when you set the IsEnabled property&nbsp;in XAML, it gets overriden with the command's value.</p>\r\n<p>So, when you bound a command to a control the beheaviour is as follows (independently from the value you set to the <strong>IsEnabled</strong> property in XAML):</p>\r\n<ul>\r\n<li>If the command's <strong>CanExecute</strong> method returns false: the control will be disabled.</li>\r\n<li>If the command's <strong>CanExecute</strong> method returns true: the control will be enabled.</li>\r\n</ul>\r\n<p>WPF automatically requeries the CanExecute method in certain conditions, but if you want to execute it manually you can do something like this:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>command.RaiseCanExecuteChanged();\r\n</pre>\r\n</div>\r\n<p>This will&nbsp;query the CanExecute method and update the control's&nbsp;<strong>IsEnabled</strong> property automatically.&nbsp;</p>\r\n<p><span style=\"font-family:calibri\">Matias Bonaventura<br></span><a href=\"http://blogs.southworks.net/\"><span style=\"font-family:calibri\">http://blogs.southworks.net/matiasb</span></a></p>",
    "PostedDate": "2010-04-29T07:12:43.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]