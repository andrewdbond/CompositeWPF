[
  {
    "Id": "102406",
    "ThreadId": "30791",
    "Html": "The project I am working on is going to have more than one of a particular module view.&nbsp; These views have a region within them.&nbsp; Is it possible to dynamically name a region.&nbsp; <br>\r\n<br>\r\nFor example:<br>\r\n<br>\r\nI am planning on having a tab control that will contain a tab for each client.&nbsp; In each tab, I am expecting to have an outer&nbsp;region which I will be dynamically adding views.&nbsp; The problem is that the only way I know how to name a region is to declare it in WPF.&nbsp;&nbsp;&nbsp;What I am going to end up with is regions as follows<br>\r\n<br>\r\nMainAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;TabAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab1<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab2<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n<br>\r\nThe problem is that I am not sure how to reference The first OuterRegion or the second OuterRegion.&nbsp; I am also assuming that this would crash due to identicial items.<br>\r\nAny help or suggestion would be greatly appreciated.<br>\r\n<br>\r\nBen<br>\r\n",
    "PostedDate": "2008-07-03T04:54:08.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102435",
    "ThreadId": "30791",
    "Html": "It appears that in the UIComposition quick start they are doing something like this in the EmployeesDetailView.xaml and the EmployeesController.cs files.<br>\r\n<br>\r\nThey are using nested RegionManagers for what would be your individual tabs.<br>\r\n<br>\r\nTake a look and see if it can be adapted to your needs.<br>\r\n<br>\r\nPaul\r\n",
    "PostedDate": "2008-07-03T06:25:45.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102601",
    "ThreadId": "30791",
    "Html": "Paul, thank you for your response, but no this isn't the same...Each tab is a unique region.&nbsp;&nbsp; I my example, each tab is the client so each tab would have the same regions and views on them.<br>\r\n<br>\r\nI will expand my sample<br>\r\n<br>\r\nMainAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;TabAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab1 <strong>Client Blow, Joe<br>\r\n</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab2 <strong>Client Doe, Jane</strong><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n<br>\r\nAs shown above, each tab will be a client that they chose to open and work on.&nbsp; (similar to visual studios)&nbsp; I would like to then have a dynamic area that custom modules will be shown.&nbsp; This is where my problem is.&nbsp; Since the client history area won't change much between clients, the regions would be identical.&nbsp; I don't know how many clients they will have open at a time.&nbsp; In the future, I would like them to even be able to compare the items on the tabs.(sort of like splitting the visual studio horizontally and vertically ).&nbsp; <br>\r\n<br>\r\nBen<br>\r\n",
    "PostedDate": "2008-07-03T17:36:36.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102613",
    "ThreadId": "30791",
    "Html": "Would this be similar to the SCSF Quickstarts.BankTeller sample? If so, I've done this but by using my DocumentManager approach. I'll be adding it to the LateNight sample  <a title=\"Composite WPF - Samples\" href=\"http://code.google.com/p/cwpfsamples/\">here</a> soon, take a look at this and apply the following strategy.<br>\r\n<br>\r\nCreate an interface to your view that exposes a document controller for each tabbed area you wish to expose.<br>\r\n<br>\r\n<code>\r\n&nbsp;&nbsp;&nbsp; public interface ICustomerViewModel {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IDocumentController CustomerViewExtensionController { get; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Customer Customer { get; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n</code>\r\n<br>\r\nNow inherit this in your models definition:<br>\r\n<br>\r\n<code>\r\n&nbsp;&nbsp;&nbsp; public class CustomerViewModel : AbstractDocument, ICustomerViewModel { //... }<br>\r\n</code>\r\n<br>\r\nRepresent the model from the UI<br>\r\n<br>\r\n<code>\r\n&nbsp;&nbsp;&nbsp; &lt;TabControl MinHeight=&quot;100&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ItemsSource=&quot;{Binding CustomerViewExtensionController.Documents}&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectedItem=&quot;{Binding Path=CustomerViewExtensionController.CurrentDocument}&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Item and control templates. --&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;/TabControl&gt;<br>\r\n</code>\r\n<br>\r\nSince the document controller exposes events for documents being opened/closed, add a handler to the DocumentOpening event for the main document controller.<br>\r\n<br>\r\n<code>\r\n&nbsp;&nbsp;&nbsp; var documentController = container.Resolve&lt;IDocumentController&gt;(<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ControllerNames.DocumentController);<br>\r\n&nbsp;&nbsp;&nbsp; documentController.DocumentOpened<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += new EventHandler&lt;DataEventArgs&lt;AbstractDocument&gt;&gt;(DoDocumentOpened);<br>\r\n</code>\r\n<br>\r\nWith a handler like the following:<br>\r\n<br>\r\n<code>\r\n&nbsp;&nbsp;&nbsp; private void DoDocumentOpened(object sender, DataEventArgs&lt;AbstractDocument&gt; e) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ICustomerViewModel cm = e.Value as ICustomerViewModel;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (cm != null) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cm.CustomerViewExtensionController.OpenDocument(new CustomerCommentsViewModel(cm));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n</code>\r\n<br>\r\nAnd that's basically it. I know it doesn't use any RegionManager and I probably should, but I felt this the easiest way of solving the problem. I hope to have a full example ready in the subversion source of my project in the next few days.<br>\r\n<br>\r\n-Brett<br>\r\n",
    "PostedDate": "2008-07-03T18:58:50.1-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102701",
    "ThreadId": "30791",
    "Html": "<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:#aaa 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:#aaa 0.1em dotted;font-style:italic\"><br>\r\nplanefun wrote:<br>\r\nPaul, thank you for your response, but no this isn't the same...Each tab is a unique region.&nbsp;&nbsp; I my example, each tab is the client so each tab would have the same regions and views on them.<br>\r\n<br>\r\nI will expand my sample<br>\r\n<br>\r\nMainAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;TabAreaRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab1 <strong>Client Blow, Joe<br>\r\n</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tab2 <strong>Client Doe, Jane</strong><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OuterRegion<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ClientHistoryView<br>\r\n<br>\r\nAs shown above, each tab will be a client that they chose to open and work on.&nbsp; (similar to visual studios)&nbsp; I would like to then have a dynamic area that custom modules will be shown.&nbsp; This is where my problem is.&nbsp; Since the client history area won't change much between clients, the regions would be identical.&nbsp; I don't know how many clients they will have open at a time.&nbsp; In the future, I would like them to even be able to compare the items on the tabs.(sort of like splitting the visual studio horizontally and vertically ).&nbsp; <br>\r\n<br>\r\nBen<br>\r\n<br>\r\n<br>\r\n</div>\r\n<br>\r\nI understand, I was referring to the nested regions in the code.&nbsp; They are creating a new reginon manager.and registering the view in that.&nbsp; If you register each like named region into a different region manager I wouldnt think that there would any name collisions.<br>\r\n<br>\r\nPaul\r\n",
    "PostedDate": "2008-07-04T05:35:24.38-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]