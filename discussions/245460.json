[
  {
    "Id": "564000",
    "ThreadId": "245460",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I'm trying to build my first WPF 4 app using PRISM/MEF/MVVM. Actually the application should use Lucene.NET Indexes as data source (only search/read access). I want to avoid that in my modules (Service classes) there is direct access to Lucene.NET (or eventually\r\n Linq to Lucene) in order to make the complete data layer / data source changeable easily (e.g. for achieving to alternatively choose a SQL Server database instead to query against). Whats the best practice to do that? Are there any examples for abstraction\r\n of the whole data access layer to a single assembly, which is replaceably by another implementation easily?? Any suggestions?</p>\r\n<p>Thanks in advance!</p>\r\n<p>&nbsp;</p>\r\n<p>Best Regards</p>\r\n<p>Andreas</p>\r\n",
    "PostedDate": "2011-02-10T07:53:44.183-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "564183",
    "ThreadId": "245460",
    "Html": "\r\n<p>Hi Andreas,</p>\r\n<p>Although Prism doesn&acute;t provide guidance to Data Connectivity out of the box, this challenge could be covered using a\r\n<strong>dependency injection container</strong> like Prism does.</p>\r\n<p>Using <a href=\"http://msdn.microsoft.com/en-us/library/ff663144.aspx\">Unity</a> or\r\n<a href=\"http://msdn.microsoft.com/en-us/library/dd460648.aspx\">Mef</a> you could\r\n<strong><em>inject</em></strong> into the services your Data Access Layers in order to perform your operations(search or read). Each of this data access component will know how to handle every operation accordingly, depending your desired logic.</p>\r\n<p>Additionally, you might find <a href=\"http://msdn.microsoft.com/en-us/library/aa973811.aspx\">\r\nthis MSDN article</a> helpful.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-10T12:48:22.27-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]