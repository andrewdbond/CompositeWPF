[
  {
    "Id": "821910",
    "ThreadId": "351773",
    "Html": "\r\n<p>Hi,</p>\r\n<p>To use the prism 4.0 in 64 bit application development do I need to rebuild the source code for x64 platform?</p>\r\n<p>I want to use 64 bit native assemblies.</p>\r\n<p>Regards, Rajendra.</p>\r\n",
    "PostedDate": "2012-04-10T03:45:38.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "822067",
    "ThreadId": "351773",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding, you should be able to use the Prism library's assemblies (that is, the .<strong>dll</strong> files) as out of the box for both <strong>x86</strong> and <strong>x64</strong> platforms. From our side, we have used the Prism library in both <strong>Windows 7 x86</strong> and <strong>Windows 7 x64</strong> without any inconvenience.</p>\r\n<p>Regarding the <strong>x64 native assemblies</strong>, as far as I know you shouldn't experience any incompatibility issue between them and Prism.</p>\r\n<p>You can find more information about this in the following article on <strong>MSDN</strong>:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms241064.aspx\">.NET Framework Core Development - 64-bit Applications</a></li>\r\n</ul>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-04-10T10:47:18.257-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "822229",
    "ThreadId": "351773",
    "Html": "<p>Hi Damian,</p>\r\n<p>So, do you want to say that the prism assemblies are targeting \"Any CPU\" platform setting?</p>\r\n<p>Regards, Rajendra.</p>",
    "PostedDate": "2012-04-10T21:35:25.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "822481",
    "ThreadId": "351773",
    "Html": "<p>Hi Rajendra,</p>\r\n<p>That is right. Based on my understanding, the Prism assemblies have their target platforms configured to \"Any CPU,\" so they should work fine in both <strong>x86</strong> and <strong>x64</strong>.</p>\r\n<p>As a side note, if you are interested in how to check or change the target of an assembly, you might find the <a href=\"http://msdn.microsoft.com/en-us/library/ms164699%28v=vs.100%29.aspx\">CorFlags Conversion Tool</a> useful. Based on my understanding, when this tool is ran against an assembly <strong><em>without options</em></strong> it will show the current <strong>\"CorFlags\" </strong>of the assembly. Then, you can check the <strong>PE </strong>and the <strong>32BIT </strong>flags in order to know its target platform:</p>\r\n<ul>\r\n<li>For <strong>AnyCPU</strong>: PE = <em>PE32</em> and 32BIT = <em>0</em></li>\r\n<li>For <strong>x86</strong>: PE = <em>PE32</em> and 32BIT = <em>1</em></li>\r\n<li>For <strong>x64</strong>: PE = <em>PE32+</em> and 32BIT = <em>0</em></li>\r\n</ul>\r\n<p>This, along with other interesting topics regarding this subject, are explained in the following blog post by Gaurav Seth:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.msdn.com/b/gauravseth/archive/2006/03/07/545104.aspx\">Moving from 32-bit to 64-bit application development on .NET Framework</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-04-11T09:57:30.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "822732",
    "ThreadId": "351773",
    "Html": "<p>Thanks Damian,</p>\r\n<p>This is really helpful.</p>\r\n<p>Regards, Rajendra.</p>",
    "PostedDate": "2012-04-11T21:55:45.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]