[
  {
    "Id": "924882",
    "ThreadId": "398870",
    "Html": "\r\n<p>I have&nbsp;a Prism (v4.0, WPF) app that I am working on.&nbsp; It has various UI modules that make async wcf calls using the generated async methods.&nbsp; When those fail in the ...Completed async handler, I publish an event using the EventAggregator that\r\n the shell has subscribed to -- and the logic there displays a Notification interaction request.</p>\r\n<p>In one of my modules I have two async wcf service calls, and when they both fail, I get an event published from BOTH of their Completed handlers.</p>\r\n<p>The subsriber code then throws an exception:</p>\r\n<p><strong>Specified Visual is already a child of another Visual or the root of a CompositionTarget.</strong></p>\r\n<p>&nbsp;The&nbsp;shell &nbsp;is subscribing to the event on the UIThread.&nbsp; All works well when only one wcf call fails (and only one event is raised/published).</p>\r\n<p>I'm just trying to get it so that I can see both messages -- it's ok that they would be synchronous/sequential to the user.&nbsp; Any help and guidance would be appreciated.</p>\r\n<p>Here is the code that subscribes to the event:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnImportsSatisfied()\r\n        {\r\n            _eventAggregator.GetEvent&lt;NwpNotficationEvent&gt;().Subscribe(OnNwpNotificationRequest, ThreadOption.UIThread);\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> OnNwpNotificationRequest(NwpNotificationContent obj)\r\n        {\r\n            _systemMessage.Raise(<span style=\"color:blue\">new</span> Notification { Content = obj, Title = <span style=\"color:#a31515\">&quot;NWP Billing Services&quot;</span>});\r\n        }\r\n</pre>\r\n<pre>Here is the XAML code for the message box:</pre>\r\n<pre><div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">prism</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionRequestTrigger</span> <span style=\"color:red\">SourceObject</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding SystemMessage}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction.Dialog</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">NotificationLocalModalInteractionDialog</span> <span style=\"color:blue\">/&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction.Dialog</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction.ContentTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">StackPanel</span> <span style=\"color:red\">Orientation</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Vertical</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Message}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Margin</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">5,0,5,0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">TextWrapping</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Wrap</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">12</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Center</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBox</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Details}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Margin</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">5,0,5,0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">TextWrapping</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Wrap</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">12</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Center</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">StackPanel</span><span style=\"color:blue\">&gt;</span>                            \r\n                        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction.ContentTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">interactionRequest</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionDialogAction</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">prism</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">InteractionRequestTrigger</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-10T12:41:39.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "925368",
    "ThreadId": "398870",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding if you are using the <strong>InteractionDialogAction </strong>provided in Karlshifflett's <a href=\"http://karlshifflett.wordpress.com/2010/11/07/in-the-box-ndash-mvvm-training/\">In the Box &ndash; MVVM Training</a> or a similar implementation, I believe the cause of this error could be that when the second call is raised, if the first message is still showing, the <strong>InteractionDialogAction </strong>will try to add the same <strong>InteractionDialogBase </strong>to the <strong>AssociatedObject</strong>'s <strong>Children </strong>property twice generating the aforementioned exception.</p>\r\n<p>In my opinion, a possible workaround for this could be to set a busy flag that will change its state in your event handler, and only raise the interaction request if the flag is not busy. Then if another event is raised when the flag is busy, you could avoid raising the interaction request and store the new published notification object in a collection like a queue. This way you could pass a callback when raising the interaction request, which will be called when closing the displayed message, and in this callback you could check if the queued notification objects collection is not empty and raise a new interaction request if necessary, if not you could change back the state of the flag to not busy.<br /><br />I hope you find this helpful,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-10-11T10:12:27.503-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]