[
  {
    "Id": "915580",
    "ThreadId": "396361",
    "Html": "\r\n<p>Hi</p>\r\n<p>I am new on developing silverlight with Prism.</p>\r\n<p>I already made some reseach on how to my problem with the region and subregion with multiple instance of same view to the tab region but still I can't find the answer.</p>\r\n<p>I have main project module&nbsp; with 1 View and has TabControl as a prism region.<br>\r\nThen, I have separate sub projects module with a view and inside of the view it also has a region.\r\n<br>\r\nThe way I call the sub project module is using requestnavigate.</p>\r\n<p><span style=\"color:#0000ff\">_regionManager.RequestNavigate(&quot;TabRegion&quot;, New Uri(&quot;Module1&quot;, UriKind.Relative), AddressOf NavigationCompleted)</span></p>\r\n<p><br>\r\nWhenever I use the RequestNavigate to call the view of the sub projects, it is add to the tabitem of the main project module. This is working. But when I call again the navigaterequest to add the view of the sub project module that is already added on the tabitems,\r\n instead of create a new tab and instance of the view, it prompts an error like this.</p>\r\n<p><span style=\"color:#ff0000\">&quot;An exception occured while creating a region with name 'exampleregion'. The exception was: System.ArgumentException: Region with the given name is already registered&quot;.</span></p>\r\n<p>I read from one of the article, I need to use the injection of view to have multiple instance of the view and put different name of the view.<br>\r\nExample <br>\r\n<span style=\"color:#0000ff\">Dim mainRegion = RegionManager.Regions(&quot;TabRegion&quot;)</span><br>\r\n<span style=\"color:#0000ff\">mainRegion.Add(new OrderDetails(), &quot;OrderDetails1&quot;)</span><br>\r\n<span style=\"color:#0000ff\">mainRegion.Add(new OrderDetails(), &quot;OrderDetails2&quot;)</span></p>\r\n<p>I can't use this code to the main project module to call the views of the sub project module. The main project module cannot find the views of the sub project module because it is on separate project. In the example above, the OrderDetails cannot be find\r\n on the main project module because it is located on the sub project module.</p>\r\n<p>Normally, my sub project module register its view on the moduleinit like the example below and I can call it to the main project module using requestnavigate.</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">&nbsp;</span></span></span></p>\r\n<p>&nbsp;<span style=\"color:#0000ff\">Public Sub Initialize() Implements Microsoft.Practices.Prism.Modularity.IModule.Initialize</span><br>\r\n<span style=\"color:#0000ff\">_container.RegisterType(Of Object, SubModuleView)(&quot;SubModuleView&quot;)</span><br>\r\n<span style=\"color:#0000ff\">End Sub</span></p>\r\n<p><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">&nbsp;</span></p>\r\n<p><br>\r\nI hope someone can help on how I can solve my problem.</p>\r\n<p>&nbsp;Here is my sample project <a href=\"https://www.dropbox.com/s/pe5y31iuhpg9h9y/TestProject.zip\">\r\nhttps://www.dropbox.com/s/pe5y31iuhpg9h9y/TestProject.zip</a>&nbsp; that has similar problem.</p>\r\n<p><span style=\"color:#0000ff\">&nbsp;</span></p>\r\n",
    "PostedDate": "2012-09-21T01:36:39.977-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "917268",
    "ThreadId": "396361",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, the cause of the error your are receiving is that the <strong>RegionManager </strong>allows only uniquely named regions; therefore, the second registration of the same region name would produce the error you mentioned. Hence the problem may be that you are adding views that contains regions with the same name and not the name of the views itself. In order to avoid this, I believe you could benefit of the <strong>Scoped Regions </strong>functionality provided by <strong>Prism</strong>,&nbsp; which allows that each view will have its own <strong>RegionManager </strong>so that the inner regions will be registered with that <strong>RegionManager </strong>rather than the parent RegionManager.</p>\r\n<p>For more information about this you could check the following section of the <strong>Prism </strong>documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098(v=pandp.40).aspx#sec42\">7: Composing the User Interface,Creating Multiple Instances of a Region</a></li>\r\n</ul>\r\n<p>As explained in the documentation, scoped regions in <strong>Prism </strong>are only available with view injection as out of the box, hence you will have to add views using this approach, similar like the code snippets you posted above but setting the <strong>createRegionManagerScope </strong>parameter to true when calling the <strong>Add </strong>method. Note that when using this parameter set to true, the <strong>Add </strong>method will return the new <strong>RegionManager </strong>that you can retain for further access to the local scope in order to change the content of the inner regions.</p>\r\n<p>On the other hand, if the view you want to add are located in a different module, you could retrieve them by resolving the corresponding instances from the container. For example, based on your sub project module registration example, you could resolve the <strong>SubModuleView </strong>like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>Dim myView As Object = _container.Resolve(Of Object)(<span style=\"color: #a31515;\">\"SubModuleView\"</span>)\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Then you could add this instance to the region instead of directly creating a new one which will require a reference to your module.</p>\r\n<p>Also you could register you views through a common interface that could be used to resolve the views across you different modules. For more information about this I recommend you to check the following chapter of the documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28v=pandp.40%29.aspx\">3: Managing Dependencies Between Components</a></li>\r\n</ul>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-09-25T07:22:19.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "918454",
    "ThreadId": "396361",
    "Html": "\r\n<p>Hi&nbsp;</p>\r\n<p>Thank you for your answer. It helps me a lot. I already tried the view injection and your example to resolve the sub module view. I can now create multiple instance of view on the tab region.</p>\r\n<p>Now, &nbsp;I am facing a new problem. In my SubModuleView, I also have region (<strong>SubModuleViewRegion</strong>) and 2 buttons to load view1 and view2 to the region.&nbsp;</p>\r\n<p>When I click the button, I encountered this error</p>\r\n<p><span style=\"color:#ff0000\">&quot;The region manager does not contain the <strong>SubModuleViewRegion</strong>&quot;.</span></p>\r\n<p><span style=\"color:#000000\">This is the code on the button to the viewmodel of SubModuleView</span></p>\r\n<p><span style=\"color:#000000\">Dim mainRegion = _regionManager.Regions(&quot;<strong>SubModuleViewRegion</strong>&quot;) &nbsp; &nbsp; &nbsp;&nbsp;<br>\r\nDim subModule = _container.Resolve(Of Object)(&quot;View1&quot;) &nbsp; &nbsp; &nbsp;&nbsp;<br>\r\nmainRegion.Add(subModule, &quot;View1&quot;, True)</span></p>\r\n<p>&nbsp;</p>\r\n<p>You can find my updated codes here</p>\r\n<p><a href=\"https://www.dropbox.com/s/lkyhdh0wdlfoin0/TestProject.zip\">https://www.dropbox.com/s/lkyhdh0wdlfoin0/TestProject.zip</a></p>\r\n",
    "PostedDate": "2012-09-27T06:51:24.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "918710",
    "ThreadId": "396361",
    "Html": "<p>Hi,</p>\r\n<p>After analyzing your updated sample we found that the cause of the error is that region you are trying to retrieve is contained in a scoped <strong>RegionManager</strong>, but you are asking that region to the parent <strong>RegionManager</strong>. As each <strong>RegionManager </strong>is unaware of the regions of the others, you will need to obtain the region thought the corresponding scoped <strong>RegionManager</strong>.</p>\r\n<p>When retrieving a <strong>RegionManager </strong>from the container through dependency injection, the container will inject the parent <strong>RegionManager</strong>, as it's the only <strong>RegionManager </strong>the container knows. Therefore, in order to access the scoped <strong>RegionManager </strong>in the <strong>SubModuleViewModel</strong>, you will need to implement the logic to save this <strong>RegionManager </strong>and to retrieve it in the view model.</p>\r\n<p>As a possible approach for doing this, I believe you could check the <a href=\"http://prismtk.codeplex.com/\">Prism Training Kit - UIComposition Lab</a>. This lab portrays a case where scoped regions are used. Although the labs are in <strong>C#</strong>, I believe you could find the approach used to handle the different <strong>RegionManager </strong>instances useful in your application.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-09-27T13:42:35.993-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "918879",
    "ThreadId": "396361",
    "Html": "\r\n<p>Hi</p>\r\n<p>I understand that I need to implement to save the regionmanager and retrieve it in the view model.\r\n<br>\r\nI&nbsp;got confused on the code from&nbsp;Prism Training Kit. Maybe because&nbsp;the example is in C# and Model View Presenter.</p>\r\n<p>The model view presenter is really new to my knowledge. As much as possible, I would like to not change the way I code my project with Model View ViewModel (MVVM).</p>\r\n<p>I hope we could make it work using my submitted sample project.&nbsp;</p>\r\n<p>Thank you in advance for the help.</p>\r\n",
    "PostedDate": "2012-09-28T01:16:55.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "919187",
    "ThreadId": "396361",
    "Html": "<p>Hi,</p>\r\n<p>In order to avoid changing the structure of your project, I believe you could take advantage of the <strong>RegionManagerAwareBehavior </strong>and the <strong>IRegionManagerAware</strong> interface I wrote in the following blog post:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.southworks.net/dcherubini/2011/11/10/regions-inside-datatemplates-in-prism-v4-using-a-region-behavior/\">Regions inside DataTemplates in Prism v4 using a region behavior</a></li>\r\n</ul>\r\n<p>Basically, when a view / view model that implements the <strong>IRegionManagerAware </strong>interface is injected in a region, the <strong>RegionManagerAwareBehavior </strong>will automatically set its <strong>RegionManager </strong>property to the corresponding <strong>RegionManager</strong> of that view / view model. For example, in the <strong>SubModuleViewModel</strong>, the <strong>RegionManager</strong> property will contain the scoped region manager. Therefore, I believe that by using this behavior you can achieve the functionality you need without making major changes.</p>\r\n<p>Unfortunately, the behavior's code is written in <strong>C#</strong>; however, I believe you should be able to port it to <strong>VB </strong>without problems.</p>\r\n<p>In order to add the behavior to your application, you only need to override the <strong>RegisterDefaultRegionBehaviors </strong>method of the <strong>Bootstrapper </strong>and then implement the <strong>IRegionManagerAware </strong>interface in the view models that need to access it's corresponding <strong>RegionManager </strong>(e.g. the <strong>SubModuleViewModel</strong>).</p>\r\n<p>You can find more information about registering behaviors this in the following section of the Prism documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430866%28v=pandp.40%29.aspx#sec28\">Appendix E: Extending Prism - Region Behaviors</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-09-28T13:15:09.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]