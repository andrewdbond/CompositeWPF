[
  {
    "Id": "1045326",
    "ThreadId": "444097",
    "Html": "<strong>Background:</strong><br />\n<ol>\n<li>\nWith StockTraderRI demo application when you select an action in the PositionSummary view an OrderCompositeView is activated by the OrderController. The only information displayed on the view is the symbol, ie STOCK01. This is done via TransactionInfo object.<br />\n</li>\n<li>\nThere is a binding between OrderDetailsViewModel to OrderCompositeView via this property:<br />\n<pre><code>public object OrderDetails\n{\n    get { return this.orderDetailsViewModel; }\n}\n</code></pre>\n\n</li>\n<li>\nWhen the OrderCompositeView is displayed the entry is blank and awaits user input before it can be processed.<br />\n</li>\n</ol>\n<strong>My question:</strong>\r<br />\nLet's suppose if by clicking the PositionSummaryItem I want to display details of this item in my OrderCompositeView - so it's not going to be a new entry but an existing one. How do I pass the TransactionInfo details to my OrderDetailsViewModel?\r<br />\n<br />\nThis is where the concrete class gets injected in the OrderCompositeViewModel:<br />\n<pre><code>    [ImportingConstructor]\n    public OrderCompositeViewModel(IOrderDetailsViewModel orderDetailsViewModel)\n    {\n        this.orderDetailsViewModel = orderDetailsViewModel;\n        this.orderDetailsViewModel.CloseViewRequested += _orderPresenter_CloseViewRequested;\n    }\n</code></pre>\n\nHow do I pass the tickerSymbol parameter to the OrderDetailsViewModel in order to activate the OrderDetailsView with data from STOCK01 object ?\r<br />\n<br />\nIn the StartOrder method of the OrderController the TransactionInfo is passed to the OrderCompositeViewModel through this property injection:<br />\n<pre><code>        var orderCompositeViewModel = ServiceLocator.Current.GetInstance&lt;IOrderCompositeViewModel&gt;();\n\n        orderCompositeViewModel.TransactionInfo = new TransactionInfo(tickerSymbol, transactionType);\n</code></pre>\n\nThis very tickerSymbol needs to be passed down to the constructor of the OrderDetailsViewModel as well. How do I do that? At what point in OrderDetailsViewModel do I retrieve the new record using the tickerSymbol? Do I use the ServiceLocator as in ServiceLocator.Current.GetInstance&lt;IOrderDetailsViewModel&gt;(); ? How is the ticker Symbol passed ?\r<br />\n<br />\nI know I could I start newing things up and create unnecessary coupling. I'm very keen to do this the right way. Any help would be greatly appreciated.<br />\n",
    "PostedDate": "2013-05-17T14:41:01.903-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1046136",
    "ThreadId": "444097",
    "Html": "Hi,\r<br />\n<br />\nI'm not sure if I understand what you are trying to achieve. If what you want is to simply set the <strong>TransactionInfo</strong> from your <strong>orderDetailsViewModel</strong>, this is already being done in the code you provided before, since the property <strong>TransactionInfo</strong> from your <strong>orderCompositeViewModel</strong> will also set the same <strong>TransactionInfo</strong> for the <strong>orderDetailsViewModel</strong>, which comes through Dependency Injection in the <strong>OrderCompositeViewModel</strong> constructor. So if you want to pass <strong>tickerSymbol</strong> to your <strong>orderDetailsViewModel</strong>, you will just need to set the <strong>TransactionInfo</strong> using that <strong>tickerSymbol</strong> to your <strong>orderCompositeViewModel</strong>.<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\norderCompositeViewModel.TransactionInfo = <span style=\"color:Blue;\">new</span> TransactionInfo(tickerSymbol, transactionType);\r\n</pre></div>If you want to use <strong>TransactionInfo</strong> in a way that you can react and show details from an item, you could use a new <strong>TransactionType</strong>, since <strong>TransactionType</strong> is defined as:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">enum</span> TransactionType\n{\n    Buy,\n    Sell\n}\r\n</pre></div>If this doesn't help you or we misunderstood your scenario, it would be helpful if you could provide us more information about what you are trying to achieve.\r<br />\n<br />\nRegards.\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-05-20T11:49:56.137-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1047593",
    "ThreadId": "444097",
    "Html": "Thank you for your reply Federico. This is the answer I was after.<br />\n<br />\nThis is what I'll be doing which is along the lines of your suggestion. (Instead of OrderDetails I have a class called JournalEntryDetails).<br />\n<pre><code>    public TransactionInfo TransactionInfo\n    {\n        get { return this.JournalEntryDetailsViewModel.TransactionInfo; }\n        set\n        {\n            SetTransactionInfo(value);\n\n            // \n            JournalEntry journalEntry =\n                this.journalEntryService.GetJournalEntry(value.JournalEntryId);\n            this.JournalEntryDetailsViewModel.HeaderText = journalEntry.HeaderText;\n            this.JournalEntryDetailsViewModel.BodyText = journalEntry.BodyText;\n        }\n    }\n</code></pre>\n\nMy plan is the following. When the TransactionInfo property is set I will:<br />\n<ol>\n<li>\nCreate a reference to a new JournalEntry (or OrderDetails) record from JournalEntryCompositeViewModel using the transaction info. In my case it is the JournalEntryId (or TickerSymbol in StockTraderRI).<br />\n2.Set the values in the JournalEntryDetailsViewModel (or OrderDetailsViewModel)<br />\n</li>\n</ol>\n",
    "PostedDate": "2013-05-23T02:19:23.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1048933",
    "ThreadId": "444097",
    "Html": "Hi Federico,<br />\n<br />\nI wonder if you could help me out with this one.<br />\n<br />\nFYI: For my demo, I have renamed OrderEntryDetails with JournalEntryDetails. It has the same functionality as in the StockTraderRI demo app.<br />\n<br />\nThis is what I've done. In the JournalEntryDetailsViewModel (or OrderEntryDetailsViewModel) I added the following code to TransactionInfo property:<br />\n<pre><code>    public TransactionInfo TransactionInfo\n    {\n        get { return this.transactionInfo; }\n        set\n        {\n            this.transactionInfo = value;\n            this.RaisePropertyChanged(() =&gt; this.TransactionType);\n            this.RaisePropertyChanged(() =&gt; this.JournalEntryId);\n\n            // refresh data\n\n            JournalEntry journalEntry = journalEntriesService.GetJournalEntry(value.JournalEntryId);\n            this.HeaderText = journalEntry.HeaderText;\n            this.BodyText = journalEntry.BodyText;\n      }\n    }\n</code></pre>\n\nThe idea here is that when transaction info is set in the OrderDetailsViewModel I obtain the existing record from the XML file using the JournalEntryId from the TransactionInfo object.<br />\nI subsequently load two properties HeaderText and BodyText with the values from the XML file.<br />\n<br />\nThe retrieval of the JournalEntryDetails via the journalEntiresService class works fine. The problem is that values for HeaderText and BodyText still doesn't show on the JournalEntryDetails view. As a matter of fact I seem to be getting a stack overflow exception when attempting to assign a value to this.HeaderText.<br />\n<br />\nIs there a binding problem here? Any help would be greatly appreciated.<br />\n",
    "PostedDate": "2013-05-26T14:53:17.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1049224",
    "ThreadId": "444097",
    "Html": "Hi,\r<br />\n<br />\nIn the code snippet you posted it seems that you are not raising the <strong>PropertyChanged</strong> event (using the <strong>RaisePropertyChanged</strong> method) for the <strong>HeaderText</strong> and <strong>BodyText</strong> properties, unless they are being raised in their corresponding <strong>setters</strong>. If that is not the case, please try adding a <strong>RaisePropertyChanged</strong> invocation for both properties at the end of the <strong>setter</strong>.\r<br />\n<br />\nTake into account that when you change the value of a property, you need to raise the aforementioned event to inform the view of this change. If not, the view will keep showing the older values.\r<br />\n<br />\nRegarding the &quot;stack overflow&quot; part, such a thing can happen if a property is accessing itself in its <strong>setter</strong> or <strong>getter</strong>. For example:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">string</span> headerText;\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> HeaderText\n{\n    <span style=\"color:Blue;\">get</span> { <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">this</span>.headerText; }    <span style=\"color:Green;\">// We return the value of the headerText attribute, OK.</span>\n    <span style=\"color:Blue;\">set</span> { <span style=\"color:Blue;\">this</span>.HeaderText = value; }  <span style=\"color:Green;\">// We made a typo and as a result the code access this property again instead of the attribute, resulting in a stack overflow.</span>\n}\r\n</pre></div>I hope this helps,\r<br />\n<br />\nDamian Cherubini\r<br />\n<a href=\"http://blogs.southworks.net/dcherubini\" rel=\"nofollow\">http://blogs.southworks.net/dcherubini</a><br />\n",
    "PostedDate": "2013-05-27T10:08:09.663-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1050382",
    "ThreadId": "444097",
    "Html": "Hi Damian,\r<br />\n<br />\nThank you very much for your help.\r<br />\n<br />\nI am using the PropertyChanged events in the property.\r<br />\n<br />\nYou were correct about the issue with the stack overflow. I've fixed that.\r<br />\n<br />\nI'm encountering some composition errors at the moment. I'll fix those before I can tackle my original problem.\r<br />\n<br />\nAgain, I'm very grateful for the help.<br />\n",
    "PostedDate": "2013-05-29T16:47:40.27-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]