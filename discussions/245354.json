[
  {
    "Id": "563599",
    "ThreadId": "245354",
    "Html": "\r\n<p>I'm not sure what I'm missing here... just trying to get a simple HelloWorld to work.</p>\r\n<p>&nbsp;</p>\r\n<p>App.xaml</p>\r\n<pre><span>&lt;</span><span>Application</span><span>&nbsp;x</span><span>:</span><span>Class</span><span>=</span><span>&quot;MyProj.App&quot;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;xmlns</span><span>=</span><span>&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;xmlns</span><span>:</span><span>x</span><span>=</span><span>&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;/&gt;</span><br></pre>\r\n<p>App.xaml.cs</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnStartup(StartupEventArgs e)\r\n{\r\n    <span style=\"color:blue\">base</span>.OnStartup(e);\r\n\r\n    Bootstrapper bootstrapper = <span style=\"color:blue\">new</span> ClientBootstrapper();\r\n    bootstrapper.Run();\r\n}</pre>\r\n</div>\r\n<p>Bootstrapper.cs</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">sealed</span> <span style=\"color:blue\">class</span> ClientBootstrapper : MefBootstrapper\r\n{\r\n    <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureAggregateCatalog()\r\n    {\r\n        <span style=\"color:blue\">base</span>.ConfigureAggregateCatalog();\r\n\r\n        AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(Assembly.GetExecutingAssembly()));\r\n    }\r\n\r\n    <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> DependencyObject CreateShell()\r\n    {\r\n        <span style=\"color:blue\">return</span> Container.GetExportedValue&lt;Shell&gt;();\r\n    }\r\n\r\n    <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> InitializeShell()\r\n    {\r\n        <span style=\"color:blue\">base</span>.InitializeShell();\r\n\r\n        Application.Current.MainWindow = (Window)Shell;\r\n        Application.Current.MainWindow.Show();\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Shell.xaml</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;Window x:Class=&quot;MyProj.Shell&quot; Title=&quot;First Prism Run&quot;\r\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\r\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\r\n        xmlns:cal=&quot;http://www.codeplex.com/prism&quot;\r\n        WindowStyle=&quot;SingleBorderWindow&quot; ResizeMode=&quot;CanResizeWithGrip&quot;\r\n        MinWidth=&quot;600&quot; MinHeight=&quot;400&quot;&gt;\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span> <span style=\"color:red\">Name</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;LayoutRoot&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ItemsControl</span> <span style=\"color:red\">Name</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;PrimaryRegion&quot; cal:RegionManager.RegionName=&quot;PrimaryRegion&quot;</span> <span style=\"color:red\">Background</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Yellow&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Window</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>HelloWorldView.xaml</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;UserControl x:Class=&quot;MyProj.HelloWorldView&quot;\r\n             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\r\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\r\n             Width=&quot;200&quot; Height=&quot;200&quot;&gt;\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Hello World&quot;</span> <span style=\"color:red\">Foreground</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Green&quot;</span> <span style=\"color:red\">HorizontalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Center&quot;</span> <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Center&quot;</span> <span style=\"color:red\">FontFamily</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Calibri&quot;</span> <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;24&quot;</span> <span style=\"color:red\">FontWeight</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Bold&quot;</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">TextBlock</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">UserControl</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>ModulaA.cs</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[ModuleExport(<span style=\"color:blue\">typeof</span>(HelloWorldModule), InitializationMode = InitializationMode.OnDemand)]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> HelloWorldModule : IModule\r\n{\r\n    [Import()]\r\n    <span style=\"color:blue\">public</span> HelloWorldView HelloWorld { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n    [Import(AllowRecomposition = <span style=\"color:blue\">false</span>)]\r\n    <span style=\"color:blue\">private</span> IRegionManager Manager;\r\n\r\n    [ImportingConstructor()]\r\n    <span style=\"color:blue\">public</span> HelloWorldModule(IRegionManager mgr)\r\n    {\r\n        Manager= mgr;\r\n    }\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Initialize()\r\n    {\r\n        Manager.AddToRegion(<span style=\"color:#a31515\">&quot;PrimaryRegion&quot;</span>, HelloWorld);\r\n        Manager.Regions[<span style=\"color:#a31515\">&quot;PrimaryRegion&quot;</span>].Activate(HelloWorld);\r\n        <span style=\"color:green\">//Manager.RegisterViewWithRegion(&quot;PrimaryRegion&quot;, typeof(HelloWorldView));</span>\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>This just doesn't seem to work. I'm not really sure how to get this HelloWorldView to load into the region properly.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-09T14:23:55.603-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563732",
    "ThreadId": "245354",
    "Html": "\r\n<p>Where are you informing the container of the existence of the module?&nbsp; Are you placing the module in a folder &quot;Modules&quot; or are you using a configuration file?</p>\r\n",
    "PostedDate": "2011-02-09T21:57:39.877-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563799",
    "ThreadId": "245354",
    "Html": "\r\n<p><span style=\"color:#ff0000\"><em>Where are you informing the container of the existence of the module?&nbsp; Are you placing the module in a folder &quot;Modules&quot; or are you using a configuration file?</em></span></p>\r\n<p><em></p>\r\n<hr>\r\n</em>I wasn't aware that I had to let the container know about the Module if it's in the same assembly.\r\n<p></p>\r\n",
    "PostedDate": "2011-02-10T01:23:01.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563960",
    "ThreadId": "245354",
    "Html": "\r\n<p><a href=\"http://msdn.microsoft.com/en-us/library/gg430868(v=PandP.40).aspx#Y1846\">Here is the page for that</a></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureAggregateCatalog()\r\n        {\r\n            <span style=\"color:blue\">base</span>.ConfigureAggregateCatalog();\r\n\r\n            <span style=\"color:blue\">this</span>.AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(<span style=\"color:blue\">typeof</span>(MefBootstrap).Assembly));            \r\n            <span style=\"color:blue\">this</span>.AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(<span style=\"color:blue\">typeof</span>(SomeProject.Infrastructure.Controllers.EntityController).Assembly));\r\n\r\n            this.AggregateCatalog.Catalogs.Add(new AssemblyCataLog(typeof(HelloWorldModule).Assembly));<br>   </pre>\r\n<pre>            //DirectoryCatalog catalog = <span style=\"color:blue\">new</span> DirectoryCatalog(<span style=\"color:#a31515\">&quot;Modules&quot;</span>);\r\n            //<span style=\"color:blue\">this</span>.AggregateCatalog.Catalogs.Add(catalog);\r\n            \r\n        }\r\n</pre>\r\n<pre>This is just an example of how you can load the Modules in a seperate directory or assembly that is referenced by the main project. DirectoryCatalog is part of MEF. You all might want to reference<br>this <a href=\"http://msdn.microsoft.com/en-us/library/gg405479(v=PandP.40).aspx\">page</a> for additional options for loading your modules</pre>\r\n</div>\r\n",
    "PostedDate": "2011-02-10T07:00:55.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563979",
    "ThreadId": "245354",
    "Html": "\r\n<p>drop the InitializationMode you are specifying its only to load when you tell it to.</p>\r\n",
    "PostedDate": "2011-02-10T07:16:06.65-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563981",
    "ThreadId": "245354",
    "Html": "\r\n<p><em><span style=\"color:#ff0000\">Also is the HelloWorldView.cs attributed with export?</span></em></p>\r\n<p></p>\r\n<hr>\r\n<p></p>\r\n<p>I'm sorta understanding how to mark the necessary classes and load modules and views and regions, but I'm not 100% there yet. I did manage to load a view into a region though using some additional asset classes I found online. In fact, here's a reference\r\n to my other question that goes a bit beyond this one:&nbsp;<a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=245448\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=245448</a></p>\r\n",
    "PostedDate": "2011-02-10T07:19:03.67-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]