[
  {
    "Id": "246377",
    "ThreadId": "72182",
    "Html": "<p>How can I add plumbing code that will intercept and wrap a view that is added to a specific region?&nbsp;</p>\r\n<p>I am using the AvalonDock region adapters from CompositeWpfContrib but they only work with DocumentPane and DocableContent. I would like to use ordinary UserControl derived views and add them to a AvalonDock region and somehow have some plumbing code intercept when the view is added to such a region and wrap the view as necessary.</p>\r\n<p>Any ideas how I can go about doing this?</p>",
    "PostedDate": "2009-10-15T22:49:12.623-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "246537",
    "ThreadId": "72182",
    "Html": "<p id=acefda20-9c8b-012c-46e8-12313b005981>Hi</p>\r\n<p id=acefe650-9c8b-012c-46e9-12313b005981>As you said, the AvalonDock sample for contrib only provides <strong>RegionAdapters</strong> to enable DocumentPane and DockablePane controls to be Region hosts. If I understand correctly, you want to be able to add UserControls to these regions without having them inherit from <strong>DockableContent</strong>. Without knowing the capabilities/limitations of the AvalonDock controls, what you should do is create a different <strong>RegionAdapter</strong> that wraps your user controls as any control that can be placed in the <strong>AvalonDock</strong> controls and then adds them to the host (DocumentPane or DockablePane).</p>\r\n<p id=aceffd30-9c8b-012c-46ea-12313b005981>Please let me know if this helps.</p>\r\n<p id=acf01520-9c8b-012c-46eb-12313b005981>Damian Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-10-16T07:12:51.72-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]