[
  {
    "Id": "268100",
    "ThreadId": "78350",
    "Html": "<p>Has anyone tried implementing FormsAuthentication in using WCF RIA Services (using WCF RIA Services Class Library pattern) and Prism?</p>\r\n<p>I could really use an example/code snippets. I understand the part where I register the WebContext with the UnityContainer. But am not sure, where to place the WebContext class, should it be in my Infrastructure class library or should it be my authentication module. How do I add the WebContext to the application resources if I am registering the service in a module called upon by the Bootstrapper. Also, I am used to adding the AuthenticationDomainContext to application lifetime objects in the XAML of App.xaml file. How do I do that in Prism if I am not referencing the WCF RIA services through the shell?</p>\r\n<p>I have at one point of time been able to perform each task in different test applications but I am not able to bring them together using Prism's. Before Prism, to use Authentication I had to reference my Client side of the RIA services library and create a WebContext class manually in my main application project and it worked. I am using David Hill's sample along with the p&amp;p's RI implementation along with some videos of MTaulty and Erik Mork but they do not have any info regarding Authentication using RIA Services in Prism as of now.</p>\r\n<p>Please help. Any info or direction or sample code will be great.</p>\r\n<p>Thanks a ton.</p>",
    "PostedDate": "2009-12-16T09:31:47.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "268156",
    "ThreadId": "78350",
    "Html": "<p>It came down to this, I added a reference of the WCF Class library to the Shell (which I was trying to avoid) and loaded the Web Context and associated with Authentication Domain Context in the Init method of the App.xaml.cs and added to resources before the call to bootstrapper. If anyone has a better approach please let me know.</p>",
    "PostedDate": "2009-12-16T12:42:21.353-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "416312",
    "ThreadId": "78350",
    "Html": "<p>The lack of guidance for implementing authentication in Prism is my main reason for avoiding Prism. It's a pity, but for us, better a working solution (Business templates MVVM) than a non-working one (Prism with people's suggestions on how to interface with the Authentication service). I'd rather someone tell me the correct place to put the code - it is infrastructure after all. It shouldn't need to be this hard.</p>",
    "PostedDate": "2010-03-10T03:31:54.117-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "416747",
    "ThreadId": "78350",
    "Html": "<p>Here is a quick overview (with some code) of what I am doing.</p>\r\n<p>I am using RIA services class library which has two pieces one is the .Web project and the other project which you will reference in the client side.</p>\r\n<p>In your .Web project create you DataClasses (eg: Linq2SQL). Create your AuthenticationDomainService similar to the one below:</p>\r\n<pre>-----------------------------------------------------------------------------------------------------------------------------------------------</pre>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:Blue\">using</span> System.ComponentModel;\r\n<span style=\"color:Blue\">using</span> System.ComponentModel.DataAnnotations;\r\n<span style=\"color:Blue\">using</span> System.Linq;\r\n<span style=\"color:Blue\">using</span> System.Web.DomainServices;\r\n<span style=\"color:Blue\">using</span> System.Web.Ria;\r\n<span style=\"color:Blue\">using</span> System.Web.Ria.ApplicationServices;\r\n<span style=\"color:Blue\">using</span> System.Web.Ria.Data;\r\n<span style=\"color:Blue\">using</span> System.Web.DomainServices.Providers;\r\n<span style=\"color:Blue\">using</span> System.Web.Security;\r\n<span style=\"color:Blue\">using</span> WCF_RIA_CL.Web.DataClasses;\r\n\r\n<span style=\"color:Blue\">namespace</span> WCF_RIA_CL.Web.DomainServices\r\n{\r\n    [EnableClientAccess]\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> AuthenticationDomainService : LinqToSqlDomainService&lt;MyDataClassesDataContext&gt;, IAuthentication&lt;User&gt;\r\n    {\r\n        <span style=\"color:Green\">//public override void Initialize(DomainServiceContext context)</span>\r\n        <span style=\"color:Green\">//{</span>\r\n        <span style=\"color:Green\">//    base.Initialize(context);</span>\r\n        <span style=\"color:Green\">//    this.DataContext.Connection.ConnectionString = ClientConnectionString.GetConnectionString();</span>\r\n        <span style=\"color:Green\">//} // if you want to override</span>\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> User DefaultUser = <span style=\"color:Blue\">new</span> User()\r\n        {\r\n            EntityPid = -1,\r\n            Name = <span style=\"color:Blue\">string</span>.Empty,\r\n            Roles = <span style=\"color:Blue\">null</span>,\r\n            Password = <span style=\"color:Blue\">string</span>.Empty,\r\n            UpdatedOn = DateTime.MinValue,\r\n            IsLocked = <span style=\"color:Blue\">false</span>,\r\n            NickName = <span style=\"color:Blue\">string</span>.Empty,\r\n        };\r\n\r\n        <span style=\"color:Green\">// To enable Forms/Windows Authentication for the Web Application, </span>\r\n        <span style=\"color:Green\">// edit the appropriate section of web.config file.</span>\r\n        <span style=\"color:Blue\">#region</span> IAuthentication&lt;User&gt; Members\r\n\r\n        <span style=\"color:Blue\">public</span> User GetUser()\r\n        {\r\n            <span style=\"color:Blue\">if</span> ((<span style=\"color:Blue\">this</span>.ServiceContext != <span style=\"color:Blue\">null</span>) &amp;&amp;\r\n                (<span style=\"color:Blue\">this</span>.ServiceContext.User != <span style=\"color:Blue\">null</span>) &amp;&amp;\r\n                <span style=\"color:Blue\">this</span>.ServiceContext.User.Identity.IsAuthenticated)\r\n            {\r\n                <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">this</span>.GetUser(<span style=\"color:Blue\">this</span>.ServiceContext.User.Identity.Name);\r\n            }\r\n            <span style=\"color:Blue\">return</span> AuthenticationDomainService.DefaultUser;\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> User Login(<span style=\"color:Blue\">string</span> userName, <span style=\"color:Blue\">string</span> password, <span style=\"color:Blue\">bool</span> isPersistent, <span style=\"color:Blue\">string</span> customData)\r\n        {\r\n            <span style=\"color:Green\">//throw new NotImplementedException();</span>\r\n            <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>.ValidateUser(userName, password))\r\n            {\r\n                User temp = <span style=\"color:Blue\">new</span> User();\r\n                temp.Name = userName;\r\n                temp.LocationCode = 1;\r\n                temp.Roles = <span style=\"color:Blue\">null</span>;\r\n                FormsAuthentication.SetAuthCookie(userName, isPersistent);\r\n                \r\n                <span style=\"color:Blue\">return</span> temp;\r\n            }\r\n\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">null</span>;\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">bool</span> ValidateUser(<span style=\"color:Blue\">string</span> userName, <span style=\"color:Blue\">string</span> password)\r\n        {\r\n            <span style=\"color:Green\">//using (var context = new MyDataClassesDataContext())</span>\r\n            <span style=\"color:Green\">//{</span>\r\n            <span style=\"color:Green\">//    var login = from l in context.login_infos</span>\r\n            <span style=\"color:Green\">//                where l.user_id == userName</span>\r\n            <span style=\"color:Green\">//                &amp;&amp; l.password == password</span>\r\n            <span style=\"color:Green\">//                select l;</span>\r\n\r\n            <span style=\"color:Green\">//    if (login.Count() == 1)</span>\r\n            <span style=\"color:Green\">//        return true;</span>\r\n\r\n            <span style=\"color:Green\">//    return false;</span>\r\n            <span style=\"color:Green\">//}</span>\r\n\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">true</span>; <span style=\"color:Green\">// for testing always return true</span>\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> User Logout()\r\n        {\r\n            FormsAuthentication.SignOut();\r\n            <span style=\"color:Blue\">return</span> AuthenticationDomainService.DefaultUser;\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> UpdateUser(User user)\r\n        {\r\n            <span style=\"color:Green\">//throw new NotImplementedException();</span>\r\n        }\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n        <span style=\"color:Blue\">private</span> User GetUser(<span style=\"color:Blue\">string</span> userName)\r\n        {\r\n            User user = <span style=\"color:Blue\">new</span> User();\r\n            login_info li = <span style=\"color:Blue\">this</span>.DataContext.login_infos.First(u =&gt; u.user_id == userName);\r\n\r\n            user.Name = li.user_id;\r\n            user.NickName = li.nick_name;\r\n            user.IsLocked = li.lock_ind;\r\n\r\n            <span style=\"color:Blue\">return</span> user;\r\n        }\r\n    }\r\n}<br>-----------------------------------------------------------------------------------------------------------------------------------------------<br>Compile.<br><br>I have an Infrastructure project in which I create a new class and name it WebContext (Keep the namespace simple e.g. namespace Infrastructure)<br>Here is the WebContext:<br>-----------------------------------------------------------------------------------------------------------------------------------------------<br><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">namespace</span> Infrastructure\r\n{\r\n    <span style=\"color:Blue\">using</span> System;\r\n    <span style=\"color:Blue\">using</span> System.Collections.Generic;\r\n    <span style=\"color:Blue\">using</span> System.ComponentModel;\r\n    <span style=\"color:Blue\">using</span> System.ComponentModel.DataAnnotations;\r\n    <span style=\"color:Blue\">using</span> System.Linq;\r\n    <span style=\"color:Blue\">using</span> System.Web.Ria.Data;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria.Services;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria.ApplicationServices;\r\n    <span style=\"color:Blue\">using</span> WCF_RIA_CL.Web;\r\n\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Context for the RIA application.</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;remarks&gt;</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> This context extends the base to make application services and types available</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> for consumption from code and xaml.</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/remarks&gt;</span>\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">sealed</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span> WebContext : WebContextBase\r\n    {\r\n\r\n        <span style=\"color:Blue\">#region</span> Extensibility Method Definitions\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> This method is invoked from the constructor once initialization is complete and</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> can be used for further object setup.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">void</span> OnCreated();\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Initializes a new instance of the WebContext class.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> WebContext()\r\n        {\r\n            <span style=\"color:Blue\">this</span>.OnCreated();\r\n        }\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets the context that is registered as a lifetime object with the current application.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;exception cref=&quot;InvalidOperationException&quot;&gt;</span><span style=\"color:Green\"> is thrown if there is no current application,</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> no contexts have been added, or more than one context has been added.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/exception&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> &lt;seealso cref=&quot;Application.ApplicationLifetimeObjects&quot;/&gt;</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">static</span> WebContext Current\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> ((WebContext)(WebContextBase.Current));\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets a user representing the authenticated identity.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">new</span> User User\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> ((User)(<span style=\"color:Blue\">base</span>.User));\r\n            }\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n-----------------------------------------------------------------------------------------------------------------------------------------------<br>In you App.xaml add the below lines (modify as required)<br>----------------------------------------------------------------------------------------------------------------------------------------------\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>xmlns:appsvc=&quot;clr-namespace:System.Windows.Ria.ApplicationServices;assembly=System.Windows.Ria&quot;\r\nxmlns:infrastructure=&quot;clr-namespace:Infrastructure;assembly=Infrastructure&quot;\r\nxmlns:authenticationDomainContext=&quot;clr-namespace:WCF_RIA_CL.Web.DomainServices;assembly=WCF_RIA_CL&quot;\r\n\r\n<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Application.ApplicationLifetimeObjects</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">infrastructure</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">WebContext</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">infrastructure</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">WebContext.Authentication</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">appsvc</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">FormsAuthentication</span><span style=\"color:Blue\">&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">appsvc</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">FormsAuthentication.DomainContext</span><span style=\"color:Blue\">&gt;</span>\r\n                   <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">authenticationDomainContext</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">AuthenticationDomainContext</span><span style=\"color:Blue\">/&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">appsvc</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">FormsAuthentication.DomainContext</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">appsvc</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">FormsAuthentication</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">infrastructure</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">WebContext.Authentication</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">infrastructure</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">WebContext</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Application.ApplicationLifetimeObjects</span><span style=\"color:Blue\">&gt;</span></pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<pre>--------------------------------------------------------------------------------------------------------------------------------</pre>\r\n<div id=\"_mcePaste\" style=\"overflow:hidden;left:-10000px;top:1670px;width:1px;height:1px\">\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>eneric;\r\n    <span style=\"color:Blue\">using</span> System.ComponentModel;\r\n    <span style=\"color:Blue\">using</span> System.ComponentModel.DataAnnotations;\r\n    <span style=\"color:Blue\">using</span> System.Linq;\r\n    <span style=\"color:Blue\">using</span> System.Web.Ria.Data;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria.Services;\r\n    <span style=\"color:Blue\">using</span> System.Windows.Ria.ApplicationServices;\r\n\r\n    <span style=\"color:Blue\">using</span> WCF_RIA_CL.Web;\r\n\r\n\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Context for the RIA application.</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;remarks&gt;</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> This context extends the base to make application services and types available</span>\r\n    <span style=\"color:Gray\">///</span><span style=\"color:Green\"> for consumption from code and xaml.</span>\r\n    <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/remarks&gt;</span>\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">sealed</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span> WebContext : WebContextBase\r\n    {\r\n\r\n        <span style=\"color:Blue\">#region</span> Extensibility Method Definitions\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> This method is invoked from the constructor once initialization is complete and</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> can be used for further object setup.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">void</span> OnCreated();\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Initializes a new instance of the WebContext class.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> WebContext()\r\n        {\r\n            <span style=\"color:Blue\">this</span>.OnCreated();\r\n        }\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets the context that is registered as a lifetime object with the current application.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;exception cref=&quot;InvalidOperationException&quot;&gt;</span><span style=\"color:Green\"> is thrown if there is no current application,</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> no contexts have been added, or more than one context has been added.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/exception&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> &lt;seealso cref=&quot;Application.ApplicationLifetimeObjects&quot;/&gt;</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">static</span> WebContext Current\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> ((WebContext)(WebContextBase.Current));\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets a user representing the authenticated identity.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">new</span> User User\r\n        {\r\n            <span style=\"color:Blue\">get</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> ((User)(<span style=\"color:Blue\">base</span>.User));\r\n            }\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n</div>",
    "PostedDate": "2010-03-10T18:23:39.353-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "633278",
    "ThreadId": "78350",
    "Html": "<p>Hello Aditya Voleti,</p>\r\n<p>I like your approahc and would like to know how do your reference the authonticationdomainservice &amp; webcontext from your different modules, for example the login screen and from module VM.</p>\r\n<p>Appreciate if you can add this information</p>\r\n<p>Thanks &amp; Best Regards</p>\r\n<p>Waleed</p>",
    "PostedDate": "2011-06-26T17:14:31.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "635088",
    "ThreadId": "78350",
    "Html": "<p>Waleed, The Infrastructure project has the WebContext class. Each Silverlight Application&nbsp;added to the project has a reference to the Infrastructure project which allows access to the WebContext. Ditto for the AuthenticationDomainContext.</p>",
    "PostedDate": "2011-06-29T16:17:17.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "636386",
    "ThreadId": "78350",
    "Html": "<p>Hello Aditya,</p>\r\n<p>Actually, your information was very helpful to me.</p>\r\n<p>Insteed of having the webcontext lies in&nbsp;my Infrastructure project, I have it in the ria service client project, this way it will be available to all the client modules.</p>\r\n<p>This link contains three important videos for \"Colin Blair\" showing how to structure correctly the ria service class library projects with all other modules with respect to authentication as well.</p>\r\n<p>Have a look at it here :</p>\r\n<p><a href=\"http://www.riaservicesblog.net/Blog/post/RIA-Services-Enterprise-Business-Application-The-Movie.aspx\">http://www.riaservicesblog.net/Blog/post/RIA-Services-Enterprise-Business-Application-The-Movie.aspx</a></p>\r\n<p>.Best regards</p>\r\n<p>Waleed</p>",
    "PostedDate": "2011-07-02T03:58:41.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "683173",
    "ThreadId": "78350",
    "Html": "<p>Hi,</p>\r\n<p>For those concerned with this issue, you could check the following  blog post, which provides guidance on how to use WCF services with Prism  in Silverlight:</p>\r\n<p><a href=\"http://blogs.southworks.net/gmaliandi/2011/10/using-wcf-services-in-prism-silverlight-applications/\">Using WCF services in Prism Silverlight applications</a></p>\r\n<p>Also, you might find the following blog post by David Hill useful, as  it provides insight on how to use WCF RIA Services with Prism:</p>\r\n<p><a href=\"http://blogs.msdn.com/b/dphill/archive/2009/08/17/prism-and-net-ria-services.aspx\">Prism And .Net RIA Services</a></p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-10-12T07:58:30.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "764612",
    "ThreadId": "78350",
    "Html": "<p>Hi,</p>\r\n<p>You don't need to&nbsp;use&nbsp;WebContext class.&nbsp;You can create&nbsp;your own custom&nbsp;authentication service&nbsp;based on&nbsp;FormsAuthentication class.</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">sealed</span> <span style=\"color: blue;\">class</span> CustomFormsAuthentication : FormsAuthentication, IAuthenticationService\r\n{\r\n    <span style=\"color: blue;\">public</span> AuthenticationService()\r\n    {\r\n        DomainContext = <span style=\"color: blue;\">new</span> AuthenticationDomainContext();\r\n    }\r\n}</pre>\r\n<p>AuthenticationDomainContext class is auto-generated by a&nbsp;tool from AuthenticationDomainService. IAuthenticationService interface&nbsp;is&nbsp;required to register your service&nbsp;in container and it&nbsp;resides&nbsp;in&nbsp;infrastructure project.</p>\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">interface</span> IAuthenticationService\r\n{\r\n    IPrincipal User { <span style=\"color: blue;\">get</span>; }\r\n}\r\n</pre>\r\n<p>After registration you can use it to get access to authenticated user in other modules.</p>\r\n<p>I hope this&nbsp;is helpfull for you.</p>\r\n</div>\r\n<p>(PS. Sorry for my bad English. I'm working on it :).)</p>",
    "PostedDate": "2012-02-14T12:06:59.297-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]