[
  {
    "Id": "660556",
    "ThreadId": "269695",
    "Html": "\r\n<p>Hi</p>\r\n<p>I have to three views :&nbsp;</p>\r\n<p>V1 : DebiteurMainView</p>\r\n<p>V2 : FactureView</p>\r\n<p>V3: FactureDetailView</p>\r\n<p>Each of these views has its ViewModel that implements&nbsp;INavigationAware and&nbsp;IRegionMemberLifetime.</p>\r\n<p>The navigation scenario is as follow:</p>\r\n<p>V1 -&gt; V2-&gt;V3</p>\r\n<p>From V3 when i goback, i directly go the V1 instead V2.</p>\r\n<p>Here is my code</p>\r\n<p>V1: DebiteurMainViewModel</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"color:black\"> <span style=\"color:blue\">#region</span> INavigationAware Members\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> IsNavigationTarget(NavigationContext navigationContext)\r\n        {\r\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedFrom(NavigationContext navigationContext)\r\n        {\r\n            \r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedTo(NavigationContext navigationContext)\r\n        {\r\n         \r\n        }\r\n\r\n       \r\n\r\n        <span style=\"color:blue\">#region</span> IRegionMemberLifetime Members\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> KeepAlive\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>; }\r\n        }\r\n\r\n        \r\n</pre>\r\n<pre style=\"color:black\"><span style=\"color:blue\"><br></span></pre>\r\n<pre style=\"color:black\"><span style=\"color:blue\">V2 : FactureViewModel<div style=\"color:black; background-color:white\"><pre>     <span style=\"color:blue\">private</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; _goBackToMainViewCommand;\r\n\r\n        <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; GoBackToMainViewCommand\r\n        {\r\n            <span style=\"color:blue\">get</span> {\r\n                <span style=\"color:blue\">if</span> (_goBackToMainViewCommand == <span style=\"color:blue\">null</span>)\r\n                    _goBackToMainViewCommand = <span style=\"color:blue\">new</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt;(GoBack, CanGoBack);\r\n                <span style=\"color:blue\">return</span> _goBackToMainViewCommand;\r\n            }\r\n            <span style=\"color:blue\">set</span> { _goBackToMainViewCommand = value; }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> GoBack(<span style=\"color:blue\">object</span> obj)\r\n        {\r\n            _navigationService.Journal.GoBack();\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> CanGoBack(<span style=\"color:blue\">object</span> obj)\r\n        {\r\n             <span style=\"color:blue\">return</span> _navigationService.Journal.CanGoBack;\r\n        }\r\n\r\n\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> IsNavigationTarget(NavigationContext navigationContext)\r\n        {\r\n        \r\n           \r\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedFrom(NavigationContext navigationContext)\r\n        {\r\n           \r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedTo(NavigationContext navigationContext)\r\n        {\r\n           \r\n            _navigationService = navigationContext.NavigationService;\r\n            <span style=\"color:blue\">int</span> idDpdebt00 = Int32.Parse(navigationContext.Parameters[<span style=\"color:#a31515\">&quot;ID_DPDEBT00&quot;</span>]);\r\n            <span style=\"color:blue\">string</span> idClient = navigationContext.Parameters[<span style=\"color:#a31515\">&quot;ID_DPCLIT00&quot;</span>];\r\n            Client = _dpclit00Repository.GetGlientByID(Int32.Parse(idClient));\r\n            Dpdebt00 = _dpdebt00Repository.GetDPDEBT00ByID(idDpdebt00);\r\n            Factures = _dpdebt10Repository.GetFactures(idDpdebt00);\r\n            \r\n        }\r\n\r\n  \r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> KeepAlive\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>; }\r\n        }\r\n\r\n       \r\n</pre>\r\n</div>\r\n<br></span></pre>\r\n<pre><span style=\"color:#0000ff\">V3: FactureDetailViewModel</span></pre>\r\n<pre><span style=\"color:#0000ff\"><br></span></pre>\r\n<pre><span style=\"color:#0000ff\"><div style=\"color:black; background-color:white\"><pre>  <span style=\"color:blue\">private</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; _goBackCommand;\r\n\r\n      <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; GoBackCommand\r\n      {\r\n          <span style=\"color:blue\">get</span>\r\n          {\r\n              <span style=\"color:blue\">if</span> (_goBackCommand == <span style=\"color:blue\">null</span>)\r\n                  _goBackCommand = <span style=\"color:blue\">new</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt;(GoBack, CanGoBack);\r\n              <span style=\"color:blue\">return</span> _goBackCommand;\r\n          }\r\n          <span style=\"color:blue\">set</span> { _goBackCommand = value; }\r\n      }\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> GoBack(<span style=\"color:blue\">object</span> obj)\r\n      {\r\n\r\n            _navigationService.Journal.GoBack();\r\n\r\n       \r\n      }\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> CanGoBack(<span style=\"color:blue\">object</span> obj)\r\n      {\r\n           <span style=\"color:blue\">return</span> _navigationService.Journal.CanGoBack;\r\n      }\r\n\r\n <span style=\"color:blue\">#region</span> INavigationAware Members\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> IsNavigationTarget(NavigationContext navigationContext)\r\n      {\r\n         \r\n           <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n      }\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedFrom(NavigationContext navigationContext)\r\n      {\r\n         \r\n      }\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedTo(NavigationContext navigationContext)\r\n      {\r\n            _navigationService = navigationContext.NavigationService;\r\n            <span style=\"color:blue\">int</span> idClient = Int32.Parse(navigationContext.Parameters[<span style=\"color:#a31515\">&quot;ID_DPCLIT00&quot;</span>]);\r\n            <span style=\"color:blue\">int</span> idFacture = Int32.Parse(navigationContext.Parameters[<span style=\"color:#a31515\">&quot;ID_DPDEBT10&quot;</span>]);\r\n            ID_DPDEBT00 = Int32.Parse(navigationContext.Parameters[<span style=\"color:#a31515\">&quot;ID_DPDEBT00&quot;</span>]);\r\n            Client = _dpclit00Repository.GetGlientByID(idClient);\r\n            Factures = _dpdebt30repository.GatFactureDetails(idFacture);\r\n            Dpdebt10 = _dpdebt10Repository.GetFactureByID(idFacture);\r\n          \r\n      }\r\n\r\n      <span style=\"color:blue\">#endregion</span>\r\n\r\n      <span style=\"color:blue\">#region</span> IRegionMemberLifetime Members\r\n\r\n      <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> KeepAlive\r\n      {\r\n          <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>; }\r\n      }\r\n\r\n      <span style=\"color:blue\">#endregion</span>\r\n</pre>\r\n</div>\r\n<br></span></pre>\r\n<pre style=\"color:black\"><span style=\"color:blue\"><br></span></pre>\r\n<pre style=\"color:black\"><span style=\"color:blue\"><br></span></pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-08-19T05:56:05.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "660762",
    "ThreadId": "269695",
    "Html": "<p>Hi,</p>\n<p>In my opinion, the problem seems to be caused by the way the views are navigated to rather the views themselves. As explained on the following note from the <a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28PandP.40%29.aspx\">Navigation Chapter</a> of the Prism MSDN documentation:</p>\n<p>\"<em>The navigation journal can only be used for region-based navigation operations that are coordinated by the region navigation service. If you use view discovery or view injection to implement navigation within a region, the navigation journal will not  be updated during navigation and cannot be used to navigate forward or backward within that region.</em>\"</p>\n<p>This means that if a view is injected or registered into a region instead of navigated to (e.g using the <strong>RequestNavigate</strong> method) the view will not be registered in the journal.</p>\n<p>If this is not the case, it would be helpful if you could provide us with a repro sample application portraying this problem, so we can analyze why it is happening.</p>\n<p>I hope you find this useful,</p>\n<p>&nbsp;</p>\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-08-19T12:24:06.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "660775",
    "ThreadId": "269695",
    "Html": "<p>Hi DCherubini</p>\r\n<p>I don't use view injection nor view discovery. I use RequestNavigate method.</p>\r\n<p>Please explain me how can i provide you a sample application? How can i upload?</p>\r\n<p>Thanks</p>",
    "PostedDate": "2011-08-19T13:12:14.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "662056",
    "ThreadId": "269695",
    "Html": "<p>Hi,</p>\r\n<p>You could upload your sample to <a href=\"http://skydrive.live.com/\">SkyDrive</a> or a similar site.</p>\r\n<p>Thanks,</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-08-23T05:48:29.32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "663101",
    "ThreadId": "269695",
    "Html": "<p>Hi&nbsp;<a class=\"UserProfileLink\" href=\"http://www.codeplex.com/site/users/view/GuidoMaliandi\">GuidoMaliandi</a></p>\r\n<p>I rechecked my application and realize that the problem does not come from the Goback method.</p>\r\n<p>To go back to a view in my application, the user press ESC key. The problem is that all views are not removed from the memory and all of them catch&nbsp;</p>\r\n<p>the Key Press Event so they call the Goback method (<span style=\"font-family: Consolas, 'Courier New', Courier, monospace; white-space: pre;\">_navigationService.Journal.GoBack()). That is why my application return to view V1 instead to V2.</span></p>\r\n<p><span style=\"font-family: Consolas, 'Courier New', Courier, monospace; white-space: pre;\">So the view is removed from the region but is still in memrory and continues to catch some events like Key events.</span></p>\r\n<p><strong>How can i cleary remove the view from the region and from memory</strong></p>\r\n<p>Thanks</p>\r\n<p><span style=\"font-family: Consolas, 'Courier New', Courier, monospace;\"><span style=\"white-space: pre;\"><br /></span></span></p>",
    "PostedDate": "2011-08-25T02:07:50.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "663249",
    "ThreadId": "269695",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, the problem you're experiencing could be caused by the fact that you might be exporting your view as a <strong>singleton </strong>instance. In order to make sure that your view is not exported in the container as a singleton instance you might check this:</p>\r\n<p>In case you are using <strong>Unity</strong>, its default behavior is to create a new instance of the view each time it is resolved (unless you have used the <strong>RegisterInstance </strong>method or the <strong>RegisterType </strong>method passing a <strong>ContainerControlledLifetimeManager </strong>as a parameter).</p>\r\n<p>If you are using <strong>MEF </strong>you will have to decorate your view with the <strong>PartCreationPolicy </strong>attribute specifying the <strong>NonShared </strong>value.</p>\r\n<p>You can read more about this in the following chapter from the Prism MSDN documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921140(v=PandP.40).aspx\">Chapter 3 - Managing Dependencies Between Components</a></li>\r\n</ul>\r\n<p>I hope you find this information handy.</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-08-25T07:20:04.747-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "663674",
    "ThreadId": "269695",
    "Html": "<p>Hi aadami</p>\r\n<p>I decorate all my views and viewModels with&nbsp;<strong>PartCreationPolicy&nbsp;</strong>attribute specifying the&nbsp;<strong>NonShared&nbsp;</strong>value.</p>\r\n<p>I still get this strange behavior.</p>\r\n<p>Thank</p>",
    "PostedDate": "2011-08-26T00:59:05.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "663713",
    "ThreadId": "269695",
    "Html": "<p>Hi aadami</p>\r\n<p>You can get my app at this url:</p>\r\n<p><a href=\"https://skydrive.live.com/P.mvc#!/?cid=19206cd461fa3265&amp;sc=documents&amp;id=19206CD461FA3265%21196!cid=19206CD461FA3265&amp;id=19206CD461FA3265%21196&amp;sc=documents\">https://skydrive.live.com/P.mvc#!/?cid=19206cd461fa3265&amp;sc=documents&amp;id=19206CD461FA3265%21196!cid=19206CD461FA3265&amp;id=19206CD461FA3265%21196&amp;sc=documents</a></p>\r\n<p>Feel free to contact me for any further questions.</p>\r\n<p>The navigation scenario is:</p>\r\n<p>DebiteurMainView -&gt; FactureView -&gt; FactureDetailView</p>\r\n<p>and the return should be :</p>\r\n<p>FactureDetailView -&gt; FactureView -&gt; DebiteurMainView.</p>\r\n<p>Unfortunatly i get &nbsp; FactureDetailView &nbsp;-&gt; &nbsp;DebiteurmainView&nbsp;</p>\r\n<p>Sorry for the size of the projet. I could not make a light repro.</p>\r\n<p>Thanks</p>",
    "PostedDate": "2011-08-26T03:02:58.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "664011",
    "ThreadId": "269695",
    "Html": "<p>Hi,</p>\r\n<p>The application that you provided doesn&rsquo;t works for us (the shell appears but the views aren&rsquo;t shown). It may be because it needs some resources, like a database, which we don&rsquo;t have.</p>\r\n<p>It would be helpful if you could provide us with a repro sample application that only uses the views in which you are experimenting the problem and that mocks any required data.</p>\r\n<p>Meanwhile, I have checked the code that you use to navigate back in the <strong>FactureView</strong> and the <strong>FactureDetailView</strong> and I have seen that you invoke the command used to navigate back pressing the <strong>ESC</strong> key in both views. It may be possible that the key press is being &ldquo;received&rdquo; by both views so that when the <strong>FactureView</strong> is navigated back to, it&rsquo;s navigate back command is called immediately and it could look like the view was skipped in the navigation process.</p>\r\n<p>&nbsp;</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-08-26T11:58:07.767-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "664164",
    "ThreadId": "269695",
    "Html": "<p>hi DCherubini</p>\r\n<p>Please run the application in Debug mode not in release. The database is in the same directoty (Application\\Veto2000Application\\Veto2000\\bin\\Debug\\) as the .exe. &nbsp;</p>\r\n<p>You are right. When i display FactureDetailView and press ESC key, i realize that the Goback method of the FactureView run first. So as you said the key press is received&nbsp;</p>\r\n<p>by both views. FactureView receive first and FactureDetailView at the end.</p>\r\n<p>Why FactureView is not destroyed when i move to FactureDetailView?</p>\r\n<p>What can skip the view in the navigation?</p>\r\n<p>Here is the repo without data (Veto2000ApplicationWithoutData)</p>\r\n<p><a href=\"https://skydrive.live.com/#!/?cid=19206cd461fa3265&amp;sc=documents&amp;id=19206CD461FA3265%21196!cid=19206CD461FA3265&amp;id=19206CD461FA3265%21196&amp;sc=documents\">https://skydrive.live.com/#!/?cid=19206cd461fa3265&amp;sc=documents&amp;id=19206CD461FA3265%21196!cid=19206CD461FA3265&amp;id=19206CD461FA3265%21196&amp;sc=documents</a></p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>",
    "PostedDate": "2011-08-26T21:24:13.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "665047",
    "ThreadId": "269695",
    "Html": "<p>Hi,</p>\r\n<p>We were able to run and analyze your sample application fine, thank you.</p>\r\n<p>Regarding your problem, I believe that the reason of why the views are being kept alive might be because the interaction trigger is holding strong references the them. There is an <a href=\"../workitem/8532\">active work item in the Prism&rsquo;s Issue Tracker</a> regarding this problem.</p>\r\n<p>As a workaround for this you can export the views and view models decorating them with the <strong>PartCreationPolicy</strong> attribute specifying the <strong>NonShared</strong> value and replace the <strong>CanGoBack</strong> method in the view models with the following one:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">bool</span> CanGoBack(<span style=\"color: blue;\">object</span> obj)\r\n{\r\n        <span style=\"color: blue;\">var</span> activeView = _regionManager.Regions[WellknownRegionNames.MainContentRegion].ActiveViews.FirstOrDefault() <span style=\"color: blue;\">as</span> UserControl;\r\n        <span style=\"color: blue;\">if</span> (activeView.DataContext == <span style=\"color: blue;\">this</span>)\r\n        {\r\n                <span style=\"color: blue;\">return</span> _navigationService.Journal.CanGoBack;\r\n        }\r\n        <span style=\"color: blue;\">else</span>\r\n        {\r\n                <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;\r\n        }\r\n}\r\n\r\n</pre>\r\n</div>\r\n</p>\r\n<p>However, have in mind that this won&rsquo;t solve the problem with the interaction trigger keeping the views / view models alive and it will produce memory leaks.</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-08-29T13:50:04.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "665672",
    "ThreadId": "269695",
    "Html": "<p>Hi</p>\r\n<p>Thank you for answer.&nbsp;</p>\r\n<p>We have found another workaround to avoid memory leaks.</p>\r\n<p>Blochaou Fran&ccedil;ois</p>",
    "PostedDate": "2011-08-31T01:47:53.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]