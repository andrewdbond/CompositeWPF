[
  {
    "Id": "524946",
    "ThreadId": "235494",
    "Html": "\r\n<p>One of the items hoped for in v4.0 were some simple VS2010 Templates for creating applications, modules, etc.&nbsp;</p>\r\n<p>While it is not that difficult to create the project items by hand, I was wondering if there had been any new templates published.</p>\r\n<p>Thanks</p>\r\n<p>Paul</p>\r\n",
    "PostedDate": "2010-11-21T06:45:21.493-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525846",
    "ThreadId": "235494",
    "Html": "\r\n<p>Hi,</p>\r\n<p>As of today, there are no Visual Studio templates to build Prism v4.0&nbsp;applications available. You can, however, take the necessary code from a\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg430879%28PandP.40%29.aspx\">quickstart</a>, so that you don't have to create the projects entirely by hand.</p>\r\n<p>Another possibility would be to use David Hill&rsquo;s <a href=\"http://dphill.members.winisp.net/Templates.html\">\r\nPrism 2.2 templates</a> and adapt the generated projects&nbsp;to Prism v4.0 (using the code from the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg430879%28PandP.40%29.aspx\">quickstarts</a>&nbsp;as reference).</p>\r\n<p>Hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2010-11-23T06:56:44.16-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525862",
    "ThreadId": "235494",
    "Html": "\r\n<p>To add to Guido's comments, creating template was on the backlog and we really did want to do them.&nbsp;Unfortunately,&nbsp;a few other higher priority features took longer than expected, leading us to cut these templates from the scope of Prism4.</p>\r\n<p>We have had a few discussions around taking David's templates and updating them for v4, but doing so &quot;out of band&quot;&nbsp;(&nbsp;between releases). Keep an eye out on both David Hill's blog and Karl Shifflet's blog. If we can get this done, the templates will\r\n most likely be posted or mentioned there.</p>\r\n<p>I do have a follow up question, though.&nbsp; What are the top three project templates you would want to see us build?</p>\r\n<p>Thanks,<br>\r\nMike</p>\r\n",
    "PostedDate": "2010-11-23T07:31:48.347-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525982",
    "ThreadId": "235494",
    "Html": "\r\n<p>it would be great if we can have a MVVM template which includes also modularity &amp; all the essential utilities(boostrapper, shell &amp; such)</p>\r\n<p>Kind regards</p>\r\n",
    "PostedDate": "2010-11-23T10:12:03.16-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "526390",
    "ThreadId": "235494",
    "Html": "\r\n<p>Mike</p>\r\n<p>I am not looking for the full SCSF GAT framework, but something small and targetted to be usable by the 90th percentile of users.&nbsp; Too much, and we end up deleteing half of what was created to make it fit into our development patterns.&nbsp;&nbsp; One&nbsp;helper&nbsp;that\r\n creates everything IMO would be against the&nbsp;direction that you have gone to create composable parts into a whole.&nbsp; &nbsp;It is also nice to have helpers that can be used throughout the life of an application, not just at the creation of it.&nbsp;\r\n Too many times in the old SCSF world, you would use it to create the initial solution, delete a bunch of it, and then not be able to use the helpers anymore because they would rip appart the patterns you were using.&nbsp;</p>\r\n<p>Use Code Snippets for stuff that doesnt create&nbsp;projects or&nbsp;files&nbsp;or add references.&nbsp;&nbsp; They can be smaller and very targetted to simple patterns.</p>\r\n<p>I would like to see simple project and file&nbsp;helpers to create:</p>\r\n<ul>\r\n<li>A Shell Project\r\n<ul>\r\n<li>These would need to be able to create either a MEF or Unity Bootstrapper, a&nbsp; simple view, add the appropriate Prism references and that is pretty much it.\r\n</li></ul>\r\n</li><li>A Module Project\r\n<ul>\r\n<li>Same thing, these would need to be able to create either a MEF or Unity loaded module.cs file, add the references, etc.&nbsp; This same helper could be used to create a service module or a module that contains views.\r\n</li></ul>\r\n</li><li>Add a&nbsp;View\r\n<ul>\r\n<li>Need a couple of these to fit the various patterns you have.&nbsp; One for each would be nice.&nbsp; Presenter first?&nbsp; View First?&nbsp; No Presenter?&nbsp; Controller?&nbsp; Etc.\r\n</li></ul>\r\n</li><li>Add a View Model? </li><li>Add a Controller? </li><li>Add an Event?&nbsp; ( event and content files&nbsp;) </li></ul>\r\n<p>Everything else IMO should be code snippets.&nbsp; Things like Publish or Subscribe to an Event,&nbsp; add a command, etc.&nbsp;</p>\r\n<p>Be targetted in what you create so that you are replicating a simple&nbsp;pattern that you have described in the documentation, but not&nbsp;the entire implementation of a solution.&nbsp;</p>\r\n<p>If you want to go to the level of the SCSF helpers to add things like Async Services, Login / Authorization patterns,&nbsp; and other things that allow Prism to integrate with other MS solutions, IMO another Codeplex project, or another area here for those\r\n would be called for.&nbsp; Allow&nbsp;the user community to help with some of those, but have you guys vet them as to which can be included or referenced by the Prism app.</p>\r\n<p>Thanks for listening</p>\r\n<p>Paul</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-11-24T05:22:32.327-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "526682",
    "ThreadId": "235494",
    "Html": "\r\n<p>Hey guys,</p>\r\n<p>I am in the process of putting together the necessary files for Project Templates / Item Templates.&nbsp; At the present, I have the Shell Application Project created.&nbsp; Next to put together are the Item Templates.&nbsp; The whole package will available\r\n on the VS Gallery when i am done, in VSIX format.&nbsp; I am hoping it will be just the basics for now and add some stuff over time.&nbsp; Pretty much got tired of having to create everything from scratch and based on what VS2010 can do with these items it\r\n relatively easy to do.</p>\r\n<p>@pmont: don't know at present that I will include all of the requests on the first iteration.&nbsp; As for Presenters/View First/No Pesenter/Controller that is up to the developer.&nbsp; The templates will focus on MVVM.&nbsp; I will put together the Pub/Subs\r\n for IEventAggregator in some snippets to include.&nbsp; On the note of MVVM, the included ViewModel by the P &amp; P guys will be used for simplicity, more advanced options can be substituted in.</p>\r\n<p>&nbsp;</p>\r\n<p>Morgan</p>\r\n",
    "PostedDate": "2010-11-24T16:50:19.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]