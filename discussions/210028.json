[
  {
    "Id": "433562",
    "ThreadId": "210028",
    "Html": "<p>Hello,\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>I have upgraded my app&nbsp;to use&nbsp;Enterprise Library 5.0 / Unity 2.0 and a personally build Composite Application Library with References to the new Assemblies.\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>Now, when&nbsp;application starts,&nbsp;I'm getting an exception &quot;The invoked member is not supported in a dynamic assembly.&quot; in class 'DirectoryModuleCatalog.Desktop' in method 'InnerLoad' - Line 60&nbsp;=&nbsp; &quot;loadedAssemblies.AddRange(assemblies)&quot; .</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Drives the main logic of building the child domain and searching for the assemblies.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> InnerLoad()\r\n        {\r\n            <span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrEmpty(<span style=\"color:blue\">this</span>.ModulePath))\r\n                <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> InvalidOperationException(Resources.ModulePathCannotBeNullOrEmpty);\r\n\r\n            <span style=\"color:blue\">if</span> (!Directory.Exists(<span style=\"color:blue\">this</span>.ModulePath))\r\n                <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> InvalidOperationException(\r\n                    <span style=\"color:blue\">string</span>.Format(CultureInfo.CurrentCulture, Resources.DirectoryNotFound, <span style=\"color:blue\">this</span>.ModulePath));\r\n\r\n            AppDomain childDomain = <span style=\"color:blue\">this</span>.BuildChildDomain(AppDomain.CurrentDomain);\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                List&lt;<span style=\"color:blue\">string</span>&gt; loadedAssemblies = <span style=\"color:blue\">new</span> List&lt;<span style=\"color:blue\">string</span>&gt;();\r\n\r\n                <span style=\"color:blue\">var</span> assemblies = (\r\n                                     <span style=\"color:blue\">from</span> Assembly assembly <span style=\"color:blue\">in</span> AppDomain.CurrentDomain.GetAssemblies()\r\n                                     <span style=\"color:blue\">where</span> !(assembly <span style=\"color:blue\">is</span> System.Reflection.Emit.AssemblyBuilder)\r\n                                           &amp;&amp; !String.IsNullOrEmpty(assembly.Location)\r\n                                     <span style=\"color:blue\">select</span> assembly.Location\r\n                                 );\r\n\r\n                loadedAssemblies.AddRange(assemblies);</pre>\r\n<pre>...\r\n</pre>\r\n</div>\r\n<p>I also tried with an empty directory, but it gives me the same error.</p>\r\n<p>My Solution is using VS2010 .Net4.0 ...</p>\r\n<p>Any idea what's wrong ?</p>\r\n<p><strong>Bye, Stefan</strong></p>\r\n<p><em><span style=\"text-decoration:underline\">Update:</span></em> I take the 'DirectoryLookupModularity'-Sample from the Quickstarts and there I have got the same exception after upgrading the solution from .net3.5 to .net4.0.</p>\r\n<p><em><span style=\"text-decoration:underline\">&nbsp;Update II:</span></em> While deeper searching the KnowledgeBase I found, that there are two patched pre versions</p>\r\n<p>&nbsp;- one prepared for unity2.0/entlib5.0 <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=205372\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=205372</a></p>\r\n<p>- one for usage with .net4&nbsp;<a href=\"http://compositewpf.codeplex.com/wikipage?title=Migrating Prism v2.1 to .Net 4.0 RC&referringTitle=VS 2010 and .Net 4.0\">http://compositewpf.codeplex.com/wikipage?title=Migrating%20Prism%20v2.1%20to%20.Net%204.0%20RC&amp;referringTitle=VS%202010%20and%20.Net%204.0</a></p>\r\n<p>So now&nbsp;I will merge both and hope that goes right...</p>",
    "PostedDate": "2010-04-21T03:43:28.7-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "434719",
    "ThreadId": "210028",
    "Html": "<p>Just an FYI - I got around this by modifying the above referenced code (i.e. the query for assemblies) like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre> <span style=\"color:blue\">var</span> assemblies = (\r\n             <span style=\"color:blue\">from</span> Assembly assembly <span style=\"color:blue\">in</span> AppDomain.CurrentDomain.GetAssemblies()\r\n             <span style=\"color:blue\">where</span> !<strong>assembly.IsDynamic</strong>\r\n                 &amp;&amp; !String.IsNullOrEmpty(assembly.Location)\r\n             <span style=\"color:blue\">select</span> assembly.Location\r\n         );\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>* Note the change from !(assembly is System.Reflection.Emit.AssemblyBuilder) to !assembly.IsDynamic</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-04-23T10:38:08.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]