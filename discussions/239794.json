[
  {
    "Id": "541301",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi Guys,</p>\r\n<p>I am confused which one of the above will be useful. I have following scenario</p>\r\n<p>ModuleA&nbsp;</p>\r\n<p>&nbsp;&nbsp;ButtonAView -&gt; Target to NavigationRegion</p>\r\n<p>ModuleAView Implements INavigatioAware-&gt; Target to MainRegion&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>ModuleB</p>\r\n<p>&nbsp;&nbsp;ButtonBView -&gt; Target to NavigationRegion</p>\r\n<p>ModuleBView Implements INavigatioAware-&gt; Target to MainRegion&nbsp;</p>\r\n<p>INavigationAware is used to work like navigation.</p>\r\n<p>&nbsp;</p>\r\n<p>My target is to now now implement MVVM in such a way that ModuleAView has one button and ModuleBView has textbox. When button in ModuleAview is clicked something should be written in ModelBView textbox. how this can be achieved using MVVM and how communicate\r\n should be done. EventAgg or Command.</p>\r\n<p>&nbsp;</p>\r\n<p>In future there will be multiple modules with different functionalities. Since I am learning now your help would highly be appreciated. I looked in Prism TK and QuickStart was not able to get good example implementing both.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks.</p>\r\n",
    "PostedDate": "2010-12-28T10:50:00.82-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "541341",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi,</p>\r\n<p><strong>Commanding</strong> is useful when in your application you need to handle interaction in components that don&acute;t have direct relation on the visual tree elements, like viewmodels. This means you could trigger a command at specific point in the\r\n visual tree and handle it at a higher level.</p>\r\n<p><strong>Event Aggregation</strong> allows you to communicate between different modules along your application. This communication approach provides multicast publish/subscribe functionality. This means there can be multiple publishers that raise the same\r\n event and there can be multiple subscribers listening to the same event. As documentation shows &ldquo;<em>&hellip;Consider using the\r\n<strong>EventAggregator</strong> to publish an event across modules and when sending a message between business logic code, such as controllers and presenters.</em>&rdquo;</p>\r\n<p>You can read more about <strong>Commanding </strong>and <strong>Event Aggregation</strong> in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\">Chapter 9: Communicating Between Loosely Coupled Components</a>.</p>\r\n<p>Regarding your scenario, it depends on your requirements. If you need to modify the text on a TextBox in another module when pressing a button, you could for example, bind that button to a DelegateCommand in your ViewModel and make it publish an event through\r\n the Event Aggregator. You should have your other module subscribe to that event and modify the TextBox when the event is received.</p>\r\n<p>The code for the command in your ViewModel could look like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> SomeViewModelOnModuleA\r\n{\r\n     (&hellip;)\r\n     <span style=\"color:blue\">public</span> DelegateCommand MyCommand { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>;}\r\n \r\n     <span style=\"color:blue\">public</span> SomeViewModelOnModuleA()\r\n     {\r\n         MyCommand =<span style=\"color:blue\">new</span> DelegateCommand(PublishEvent);\r\n     }\r\n \r\n     <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> PublishEvent()\r\n     {\r\n         ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;SomeEvent&gt;().Publish(&ldquo;content&rdquo;);\r\n     }\r\n      \r\n     (&hellip;)\r\n}\r\n</pre>\r\n</div>\r\n<p>And the code in your other module, which would be subscribed to that event, could look like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> SomeViewModelOnModuleB\r\n{\r\n     <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> TextBoxContent {<span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>;}\r\n     \r\n     (&hellip;)\r\n\r\n     <span style=\"color:blue\">public</span> SomeViewModelOnModuleB()\r\n     {\r\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;SomeEvent&gt;().Subscribe(ModifyTextBox);\r\n     }\r\n\r\n     <span style=\"color:blue\">public</span> ModifyTextBox(<span style=\"color:blue\">string</span> content)\r\n     {\r\n        <span style=\"color:blue\">this</span>.TextBoxContent=content;\r\n         <span style=\"color:green\">// Assuming you have a RaisePropertyChanged implementation</span>\r\n        RaisePropertyChanged(&ldquo;TextBoxContent&rdquo;);\r\n     }\r\n\r\n     (&hellip;)\r\n}\r\n</pre>\r\n</div>\r\n<p>Then you could have your TextBox&rsquo;s Text property bind to the TextBoxContent property.</p>\r\n<p>If your requirement involves any other kind of navigation, you might find the <a href=\"http://msdn.microsoft.com/en-us/library/gg430861(v=PandP.40).aspx\">\r\nNavigation Chapter</a> useful. Note that you can pass parameters on a navigation request, which might be handy for your scenario.</p>\r\n<p>Also, it might be worth noting that there are QuickStarts for navigation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405495(v=PandP.40).aspx\">State-Based Navigation QuickStart</a>\r\n</li><li><a href=\"http://msdn.microsoft.com/en-us/library/gg430881(v=PandP.40).aspx\">View-Switching Navigation QuickStart</a>\r\n</li></ul>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-12-28T12:19:50.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "541885",
    "ThreadId": "239794",
    "Html": "\r\n<p>Thanks for the sample code. While implementing this i am getting following exception</p>\r\n<p>he composition produced a single composition error. The root cause is provided below. Review the CompositionException.Errors property for more detailed information.<br>\r\n1) Cannot create an instance of type 'Test.Modules.ModuleA.Views.ModuleAView' because a constructor could not be selected for construction. Ensure that the type either has a default constructor, or a single constructor marked with the 'System.ComponentModel.Composition.ImportingConstructorAttribute'.<br>\r\nResulting in: Cannot activate part 'Test.Modules.ModuleA.Views.ModuleAView'.Element: Test.Modules.ModuleA.Views.ModuleAView --&gt; &nbsp;Test.Modules.ModuleA.Views.ModuleAView --&gt; &nbsp;AssemblyCatalog (Assembly=&quot;Test.Modules.ModuleA, Version=1.0.0.0, Culture=neutral,\r\n PublicKeyToken=null&quot;)<br>\r\nResulting in: Cannot get export 'Test.Modules.ModuleA.Views.ModuleAView (ContractName=&quot;System.Object&quot;)' from part 'Test.Modules.ModuleA.Views.ModuleAView'.Element: Test.Modules.ModuleA.Views.ModuleAView (ContractName=&quot;System.Object&quot;) --&gt; &nbsp;Test.Modules.ModuleA.Views.ModuleAView\r\n --&gt; &nbsp;AssemblyCatalog (Assembly=&quot;Test.Modules.ModuleA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot;)</p>\r\n",
    "PostedDate": "2010-12-29T13:19:08.653-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "542132",
    "ThreadId": "239794",
    "Html": "Hi mbronzovic,\r\n<div>PLease find the attached scenario i wanted to achieve. The Green Colored things goes to contentRegion in Shell and Brown Color things goes to navigation region. Now my Module A has two Views one for navigation region and other for content region. The ConentAView\r\n has textblock that displays 'SomeText'. Another module B has also two views one for navigationregion i.e. simple button and other is ContenView that has one button. When this button is clicked i wanted to see 'SomeText' in ContentAView. But the issue is when\r\n i click on button and then click on navigationregion for ContentAView nothing is there.</div>\r\n<div><br>\r\n</div>\r\n<div>I hope u got what i am trying to achieve.</div>\r\n<div><br>\r\nYour help in this regard will highly be appreiciated</div>\r\n<div><br>\r\n</div>\r\n<div>Thanks</div>\r\n<div><br>\r\n<br>\r\n<hr id=\"x_x_stopSpelling\">\r\nFrom: [email removed]<br>\r\nTo: [email removed]<br>\r\nDate: Tue, 28 Dec 2010 12:19:58 -0800<br>\r\nSubject: Re: EventAgg or COmmand [CompositeWPF:239794]<br>\r\n<br>\r\nFrom: mbronzovic<br>\r\n<div id=\"x_x_ecxThreadNotificationPostBody\">Hi,<br>\r\n<strong>Commanding</strong> is useful when in your application you need to handle interaction in components that don´t have direct relation on the visual tree elements, like viewmodels. This means you could trigger a command at specific point in the visual\r\n tree and handle it at a higher level.<br>\r\n<strong>Event Aggregation</strong> allows you to communicate between different modules along your application. This communication approach provides multicast publish/subscribe functionality. This means there can be multiple publishers that raise the same event\r\n and there can be multiple subscribers listening to the same event. As documentation shows “<em>…Consider using the\r\n<strong>EventAggregator</strong> to publish an event across modules and when sending a message between business logic code, such as controllers and presenters.</em>”<br>\r\nYou can read more about <strong>Commanding </strong>and <strong>Event Aggregation</strong> in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\" target=\"_blank\">\r\nChapter 9: Communicating Between Loosely Coupled Components</a>.<br>\r\nRegarding your scenario, it depends on your requirements. If you need to modify the text on a TextBox in another module when pressing a button, you could for example, bind that button to a DelegateCommand in your ViewModel and make it publish an event through\r\n the Event Aggregator. You should have your other module subscribe to that event and modify the TextBox when the event is received.<br>\r\nThe code for the command in your ViewModel could look like this:<br>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> SomeViewModelOnModuleA\r\n{\r\n     (…)\r\n     <span style=\"color:blue\">public</span> DelegateCommand MyCommand { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>;}\r\n \r\n     <span style=\"color:blue\">public</span> SomeViewModelOnModuleA()\r\n     {\r\n         MyCommand =<span style=\"color:blue\">new</span> DelegateCommand(PublishEvent);\r\n     }\r\n \r\n     <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> PublishEvent()\r\n     {\r\n         ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;SomeEvent&gt;().Publish(“content”);\r\n     }\r\n      \r\n     (…)\r\n}\r\n</pre>\r\n</div>\r\nAnd the code in your other module, which would be subscribed to that event, could look like this:<br>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> SomeViewModelOnModuleB\r\n{\r\n     <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> TextBoxContent {<span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>;}\r\n     \r\n     (…)\r\n\r\n     <span style=\"color:blue\">public</span> SomeViewModelOnModuleB()\r\n     {\r\n        ServiceLocator.Current.GetInstance&lt;IEventAggregator&gt;().GetEvent&lt;SomeEvent&gt;().Subscribe(ModifyTextBox);\r\n     }\r\n\r\n     <span style=\"color:blue\">public</span> ModifyTextBox(<span style=\"color:blue\">string</span> content)\r\n     {\r\n        <span style=\"color:blue\">this</span>.TextBoxContent=content;\r\n         <span style=\"color:green\">// Assuming you have a RaisePropertyChanged implementation</span>\r\n        RaisePropertyChanged(“TextBoxContent”);\r\n     }\r\n\r\n     (…)\r\n}\r\n</pre>\r\n</div>\r\nThen you could have your TextBox’s Text property bind to the TextBoxContent property.<br>\r\nIf your requirement involves any other kind of navigation, you might find the <a href=\"http://msdn.microsoft.com/en-us/library/gg430861(v=PandP.40).aspx\" target=\"_blank\">\r\nNavigation Chapter</a> useful. Note that you can pass parameters on a navigation request, which might be handy for your scenario.<br>\r\nAlso, it might be worth noting that there are QuickStarts for navigation:<br>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405495(v=PandP.40).aspx\" target=\"_blank\">State-Based Navigation QuickStart</a>\r\n</li><li><a href=\"http://msdn.microsoft.com/en-us/library/gg430881(v=PandP.40).aspx\" target=\"_blank\">View-Switching Navigation QuickStart</a>\r\n</li></ul>\r\nI hope you find this information useful.<br>\r\nThanks,<br>\r\nMiguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\" target=\"_blank\">http://blogs.southworks.net/mbronzovic</a><br>\r\n<br>\r\n</div>\r\n<div id=\"x_x_ecxThreadNotificationFooter\">Read the <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=239794&ANCHOR#Post541341\" target=\"_blank\">\r\nfull discussion online</a>.<br>\r\nTo add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com?subject=[CompositeWPF:239794]\">CompositeWPF@discussions.codeplex.com</a>)<br>\r\nTo start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com\">\r\nCompositeWPF@discussions.codeplex.com</a><br>\r\nYou are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://compositewpf.codeplex.com/discussions/239794/unsubscribe/\" target=\"_blank\">\r\nunsubscribe</a> on CodePlex.com.<br>\r\nPlease note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com<br>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2010-12-30T05:20:48.447-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "542133",
    "ThreadId": "239794",
    "Html": "\r\n<p>forgot to mention i am using mef in my scenarios.</p>\r\n",
    "PostedDate": "2010-12-30T05:22:53.917-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "542235",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi,</p>\r\n<p>The <strong>CompositionException</strong> you&rsquo;ve reported seems to be caused by the fact that your\r\n<em>ModuleAView</em> is trying to be composed by MEF, but it doesn&rsquo;t have a constructor that is viable for MEF to construct it. In order for your class to be able to be constructed by MEF, you should have either a default constructor (one with no parameters)\r\n or a constructor marked with the <strong>ImportingConstructor</strong> attribute.</p>\r\n<p>For example, a constructor with the <strong>ImportingConstructor</strong> attribute could look like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[ImportingConstructor]\r\n<span style=\"color:blue\">public</span> MyClass(ISomeService service, IEventAggregator eventAggregator)\r\n{\r\n    (&hellip;)\r\n}\r\n</pre>\r\n</div>\r\n<p>Note that, when MEF composes your class, injecting dependencies through the use of an importing constructor, each of the dependencies injected is also composed by MEF, so it should also follow the criteria mentioned above (about having a default constructor\r\n or one marked as <strong>ImportingConstructor</strong>).</p>\r\n<p>Also, note that every class that will be composed by MEF must be marked as an export, by decorating it with the\r\n<strong>Export</strong> attribute. You can read more about this in the following articles from the\r\n<a href=\"http://mef.codeplex.com/wikipage?title=Guide&referringTitle=Documentation\">\r\nMEF Programming Guide</a>:</p>\r\n<ul>\r\n<li><a href=\"http://mef.codeplex.com/wikipage?title=Declaring%20Exports&referringTitle=Guide\">Declaring Exports</a>\r\n</li><li><a href=\"http://mef.codeplex.com/wikipage?title=Declaring%20Imports&referringTitle=Guide\">Declaring Imports</a>\r\n</li></ul>\r\n<p>You might also find the following <a href=\"http://blogs.southworks.net/geoff/2010/09/03/effective-mef-managed-extensibility-framework/\">\r\nblog post</a> by Geoff Cox handy. The suggestions in <strong>#10 Learn to debug composition errors\r\n</strong>could help you debug further composition errors that may arise.</p>\r\n<p>As for your specific scenario, based on my understanding of your description, you&rsquo;re trying to modify the value of a TextBox&rsquo;s text property in a view, based on the press of a button in another view. However, at the time you press the button,\r\n the view with the TextBox may not have been loaded. In order to achieve this, you could make use of\r\n<strong>Region Context </strong>(more information in <a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\">\r\nthis chapter</a>), which is a mechanism that allows providing contextual information between views in the same region (regardless of the fact that they could be placed on different modules). So, when clicking your button in\r\n<em>ModuleBView</em>, you could store that value in the Region Context, and then when\r\n<em>ModuleAView</em> is created, you could retrieve the value from the Region Context as well.</p>\r\n<p><span lang=\"EN-US\" style=\"color:black\">Please let us know if we have misunderstood your scenario. In case we did, it could be helpful if you could provide us with a repro sample so that we could help you further with your case.</span></p>\r\n",
    "PostedDate": "2010-12-30T10:17:41.773-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "542327",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Thanks for the reply. The View is loaded i am sure about the because when i click on buttonA in navigationRegion i can see viewA and when i click on buttonB in navigation i can see viewB but when i click on CountButton on ViewB and then I click on ButtonA\r\n in order to see the ViewA then I cannot see the textbox modified on ViewA.</p>\r\n<p>Regarding my scenario your understanding is almost right</p>\r\n<p>Regarding the RegionContext it has open new doors of information for me thanks for the information It would be very helpful if you can provide the simple example with mef using REgionContext. because i tried the link above and some blogs but was not of great\r\n help.</p>\r\n<p>Once again thnx for providing me the info and opening doors of information.</p>\r\n<p>thnx<br>\r\n<br>\r\n</p>\r\n",
    "PostedDate": "2010-12-30T13:07:08.827-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "543287",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi,</p>\r\n<p>There are no changes with MEF when using Region Context. You could obtain a reference to the region's context by using the Context property of the IRegion object, which you can obtain through the RegionManager's Regions collection. This could look like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">object</span> regionContext = regionManager.Regions[<span style=\"color:#a31515\">&quot;YourRegion&quot;</span>].Context;\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>In order for you to gain better understanding of the concepts explained in this thread, I've prepared a sample with a similar scenario as yours, using Region Context alongside with Commanding, Event Aggregation, Navigation and MEF. You can download it from\r\n<a href=\"http://cid-12a8b70137345033.office.live.com/self.aspx/p%5E0p%20Samples/RegionContextSample.zip\">\r\nhere</a>.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-03T10:08:01.613-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "544200",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi Guido Maliandi,</p>\r\n<p>The link for download the code is not working. :-(</p>\r\n",
    "PostedDate": "2011-01-05T02:30:18.25-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "544299",
    "ThreadId": "239794",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I've updated the <a href=\"http://cid-12a8b70137345033.office.live.com/self.aspx/p%5E0p%20Samples/RegionContextSample.zip\">\r\ndownload link</a>. I'm sorry for the inconveniences.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-05T06:29:17.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]