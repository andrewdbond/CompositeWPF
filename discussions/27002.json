[
  {
    "Id": "90206",
    "ThreadId": "27002",
    "Html": "\r\nIs anyone using the Model-View-ViewModel pattern with Prism?  I used the pattern to prototype an app and I found it to be really useful with WPF.  Just curious if anyone was using it with Prism and what they discovered, if anything.<br /><br />Is you are not familiar with the MVVM pattern check out this link: <a href=\"http://blogs.sqlxml.org/bryantlikes/archive/2006/09/27/WPF-Patterns.aspx\" class=\"externalLink\">http://blogs.sqlxml.org/bryantlikes/archive/2006/09/27/WPF-Patterns.aspx<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a>.  The pattern also goes by the name of DataModel-View-ViewModel.<br /><br />",
    "PostedDate": "2008-05-02T06:43:03.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "90247",
    "ThreadId": "27002",
    "Html": "\r\nActually, we have been looking at this pattern, and we were spiking a little with it, taking it a little further by composing at the ViewModel level with the help of templates.<br />Take a look at <a href=\"http://staff.southworks.net/blogs/jdominguez/archive/2008/04/29/Using-the-Presentation-Model-in-WPF.aspx\" class=\"externalLink\">this post<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a> where a colleague talks about it: <a href=\"http://staff.southworks.net/blogs/jdominguez/archive/2008/04/29/Using-the-Presentation-Model-in-WPF.aspx\" class=\"externalLink\">Using the Presentation Model in WPF<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a>.<br /><br />Ezequiel Jadib<br /><a href=\"http://staff.southworks.net/blogs/ejadib/default.aspx\" class=\"externalLink\">http://staff.southworks.net/blogs/ejadib/default.aspx<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a><br /><br />",
    "PostedDate": "2008-05-02T09:31:31.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "90823",
    "ThreadId": "27002",
    "Html": "\r\nThe examples of using data templates instead of user controls is interesting and rather appealing. Although it took a few minutes to figure out what was going on. Looks promising!<br /><br />How to bridge the ICommand with the PresentationModel will be interesting to see examples of with no code behind. Perhaps declaratively invoking a controller action?<br />",
    "PostedDate": "2008-05-06T12:08:50.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "90883",
    "ThreadId": "27002",
    "Html": "\r\nBridging the gap wasn't so bad, I decided to give it a try and it also turned out nice. This approach really cleans and helps separate out responsibilities. I hope it sticks around, and I look forward to what the team comes up with.<br />",
    "PostedDate": "2008-05-06T17:17:54.533-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91147",
    "ThreadId": "27002",
    "Html": "\r\nCheck out the ViewModel UI Composition spike we uploaded in the last drop (in the PublishedSpikes folder). It illustrates using this technique to do all UI composition through models and templates. The shell is a model, regions are models, and views are models. DataTemplates act on each and provide the look and feel.<br />",
    "PostedDate": "2008-05-08T00:19:36.473-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91227",
    "ThreadId": "27002",
    "Html": "\r\nI guess I wasn't clear enough, sometimes I get ahead of myself. The ViewModel UI Composition spike is what I was referring to when I mentioned using data templates instead of user controls.<br />",
    "PostedDate": "2008-05-08T07:32:06.543-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91404",
    "ThreadId": "27002",
    "Html": "\r\nI have used this pattern before and it has significant advantages  however is there some way we can overcome the limitations of no designer ? Most devs are so wed to a designer not having it is a big risk.<br /><br />To me if we can get a designer we can forget about MVP/MVC ? <br /><br />To me <br />No code behind ++ ( easier to test and maintain) <br />Reusability ++ ( standard templates - while you can do this other wasy with Templates its much cleaner)<br />Simplicity ++<br /><br />However <br />No Designer ---<br /><br /><br />Am i wrong ? What are you views ? <br /><br />Regards, <br /><br />Ben <br />",
    "PostedDate": "2008-05-09T02:11:41.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91444",
    "ThreadId": "27002",
    "Html": "\r\nI'm still digesting the ViewModel UI Composition spike in the latest release.  But my initial thought was that ui/ux people will not like working with DataTemplates.<br /><br />My initial idea when attemping to utilize the MVVM pattern was to create the <i>View</i> as a UserControl, create the <i>ViewModel</i> as a class bound to UserControl via DataContext property.  And plain old classes for the <i>Models</i> as my business entities.  I don't know if I'm applying the pattern properly, but I had used it this way in previous non-Prism WPF apps successfully (at least I think it was successful).<br /><br />Still need some more time to fully grasp what's happening in the ViewModel UI Composition spike...<br />",
    "PostedDate": "2008-05-09T06:21:27.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91731",
    "ThreadId": "27002",
    "Html": "@jmodzel<br>\r\n<br>\r\nFor the team, DataTemplates composition feel like a more &quot;natural&quot; extension of WPF. Although DataTemplate support is very limited in Cider, there's very rich support in Blend. Using models and templates, actually gives MORE opportunity for a designer to be able to visualize what is going on.<br>\r\n<br>\r\nRegards<br>\r\nGlenn\r\n",
    "PostedDate": "2008-05-10T20:19:17.577-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "91831",
    "ThreadId": "27002",
    "Html": "Glenn, <br>\r\n<br>\r\nIt seems a big improvement but surely there must be some way to force Cider to render it ? I thought Blend would do it but most devs dont have blend and you normally dont get the designer guys back for minor cosmetic changes.. <br>\r\n<br>\r\nIs there like conditional compilation some sort of #if extention..? Is it possible we will see a patch for VS to handle this ? <br>\r\n<br>\r\nRegards, <br>\r\n<br>\r\nBen\r\n",
    "PostedDate": "2008-05-11T21:19:36.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "97178",
    "ThreadId": "27002",
    "Html": "Anyone know if SP1 of VS2008 has fixed the non rendering of resources bug ? <br>\r\n<br>\r\nBTW I think most UI people will like using Data Templates if they rendered and even better they will be nudged into putting more logic in the viewmodel and model as oposed to the usercontrol/view. <br>\r\n<br>\r\nRegards, <br>\r\n<br>\r\nBen\r\n",
    "PostedDate": "2008-06-05T21:12:27.973-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "97200",
    "ThreadId": "27002",
    "Html": "jmodzel, I hear you and I fully support your idea, personally I've not quite grasped data templates, I'm still grasping WPF as it's such a steep learning curve coming from a component model like Windows Forms.<br>\r\n<br>\r\nI Really like the DataContext idea as it allows me to create simple data structures in my view-model and have a 1 liner in my presenter to bind the data object (model) to the UI.<br>\r\n<br>\r\nOkay, that probably sounded stupid, and please take me out the back and beat me up, but I just wish all this technology would get into my head.<br>\r\n<br>\r\n-Brett<br>\r\n<br>\r\nP.S. Is WPF natural only to web developers? Am I the only one that's struggling with WPF?<br>\r\n",
    "PostedDate": "2008-06-06T00:16:03.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "97667",
    "ThreadId": "27002",
    "Html": "Oh, you're not the only one, Brett! One thing that makes it really tough for me is that there are so many ways to do the same thing. Even the &quot;seasoned&quot; WPF guys offer up different solutions to the same problem. It's cool technology, it's just not yet matured to the point where there is a lot of authoritative guidance on it. That's my 2 cents, anyway (I've been playing with it for a few weeks.)<br>\r\n<div style=\"border-right:medium none;padding-right:0.2em;border-top:#aaa 0.1em dotted;padding-left:0.2em;padding-bottom:0.2em;margin:1em 0em 2.5em 3em;border-left:medium none;padding-top:0.2em;border-bottom:#aaa 0.1em dotted;font-style:italic\"><br>\r\nbrettryan wrote:<br>\r\njmodzel, I hear you and I fully support your idea, personally I've not quite grasped data templates, I'm still grasping WPF as it's such a steep learning curve coming from a component model like Windows Forms.<br>\r\n<br>\r\nI Really like the DataContext idea as it allows me to create simple data structures in my view-model and have a 1 liner in my presenter to bind the data object (model) to the UI.<br>\r\n<br>\r\nOkay, that probably sounded stupid, and please take me out the back and beat me up, but I just wish all this technology would get into my head.<br>\r\n<br>\r\n-Brett<br>\r\n<br>\r\nP.S. Is WPF natural only to web developers? Am I the only one that's struggling with WPF?<br>\r\n<br>\r\n<br>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2008-06-09T07:27:35.72-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "97857",
    "ThreadId": "27002",
    "Html": "Yep, I know what you mean. I've been working really hard, and slowly moving along to work out how to make the WPF and Prism framework work for me. I'm trying to keep things as simple as I can while still gaining flexibility and extensibility.<br>\r\n<br>\r\nI actually like the fact there's a lot of variety, it means that we can pick and choose the way to do things, eventually great patterns will come out of all the different ways of doing things. I'm starting to learn that WPF is actually a good tool for developers since it doesn't restrict us as much as it used to. I remember .NET 1.1 when I was first learning everything forced ADO.NET datasets down my throught and I felt it extremely difficult to break away from that model, now the industry seems to be wanting to do the same, of which WPF is helping a great deal.<br>\r\n<br>\r\nOver the past week I've wiped away all my previous WPF solutions and started from scratch to try and come up with a simple Prism application, it currently represents a couple of use-cases for an upcoming project in my company that I'm experimenting with, but I think the ideas could help others. I'd love to polish it up and publish it for all to see. There's hardly any unit tests as I'm constantly changing the way the thing works. My goal is to work out how to make an extensible application though simple service contracts. The application is an MDI style app, the classic two pane application with a tabbed use-case browser extension on the left and a tabbed document window to the right. There are extension sites being exposed just for the menu bar at the moment but I do wish to create a general menu service, but for the most part the app design is trying to avoid extension sites as I'm a huge fan of compile time safety.<br>\r\n<br>\r\nI'm thinking of putting this up as a &quot;Issue Tracker&quot; post so I can attach a file, is there any other way to post example solutions? I've also asked this question on <a title=\" What's the best way to submit samples for public review?\" href=\"http://www.codeplex.com/CompositeWPF/Thread/View.aspx?ThreadId=29257\">this post</a>. Mabe I should create a blog? I want to write a script that directs the readon on how to create the solution and why I'm doing things the way I am.<br>\r\n<br>\r\nI hope I didn't ramble too much once again,<br>\r\n-Brett<br>\r\n<br>\r\n<div style=\"border-style:dotted none;border-color:rgb(170, 170, 170) -moz-use-text-color;border-width:0.1em medium;margin:1em 0em 2.5em 3em;padding:0.2em;font-style:italic\"><br>\r\nID10T wrote:<br>\r\nOh, you're not the only one, Brett! One thing that makes it really tough for me is that there are so many ways to do the same thing. Even the &quot;seasoned&quot; WPF guys offer up different solutions to the same problem. It's cool technology, it's just not yet matured to the point where there is a lot of authoritative guidance on it. That's my 2 cents, anyway (I've been playing with it for a few weeks.)<br>\r\n<br>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2008-06-09T22:25:20.037-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "98134",
    "ThreadId": "27002",
    "Html": "<p>Just my two cents on learning WPF...</p>\r\n<p>It seems that with the introduction of any new technology, your first attempts often based on old technology patterns.&nbsp; For instance, I can (painfully) remember my first .Net 1.0 web application.&nbsp; I was trying to use ASP.Net like it was classic ASP.&nbsp; Similarly, with WPF, if you are coming from a WinForms background, you may find yourself using techniques that worked well in WinForms, but require an atomic shoehorn to work in WPF.<br>\r\n<br>\r\nThere does seem to be a &quot;WPF mindset&quot;, which sets in after a few sleepless months.&nbsp; The more you work with it, the more you start thinking WPF.&nbsp; Best practices seem elusive, partly because, as mentioned, there are so many different ways to do things.&nbsp; Choice is great, but it helps to know what it is you are choosing from, and more importantly - why?<br>\r\n<br>\r\nA&nbsp;good approach is to think of Xaml similar to XHtml.&nbsp; For me, once I become fluent with a markup language I don't bother with designers.&nbsp; Just like working with Html in web apps, you just known what the markup renders like.&nbsp; It took a while, but I'm pretty much at that stage with Xaml.<br>\r\n<br>\r\nSo, you are not alone, everyone goes through the WPF Wall of Fire.<br>\r\n<br>\r\nOn a separate thread...any prediction on the first official release of Prism?<br>\r\n<br>\r\nCheers,<br>\r\n<br>\r\nRon</p>\r\n",
    "PostedDate": "2008-06-11T04:41:17.237-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "98141",
    "ThreadId": "27002",
    "Html": "Thanks Ron, I think you've expressed how the majority of us are feeling, if not you certainly gathered how I feel.<br>\r\n<br>\r\nI know what you mean with your learning path, I came from a java background, then went to Windows Forms, I haven't had a great deal of work with ASP.NET though have been working in JSP and JSF. XML markup isn't the problem I'm facing, it's more the patterns involved to put it all together. There are hundreds of things I'm still having trouble figuring out, like how to get a command to fire when someone double clicks a ListViewItem within a DataTemplate... I didn't get to bed till about 5:30am thismorning trying to figure that one out, and still haven't got it.<br>\r\n<br>\r\nSlowly every day I unserstand just one little thing a little better, but it's adding up. I'm getting a little more fluent in XAML, but it's the patterns that I'm clawing at to try and get a hold of.<br>\r\n<br>\r\nMaybe I'm just a slow learner? I feel it some days with WPF ;)<br>\r\n-Brett<br>\r\n",
    "PostedDate": "2008-06-11T05:22:09.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "98170",
    "ThreadId": "27002",
    "Html": "My experience is exactly the same.&nbsp; I've been tasked with creating a WPF prototype for a new application and I've been working on it pretty consistently for the past 3 months or so.&nbsp; Last week I had a major coding epiphany and now I &quot;get it&quot;....where &quot;it&quot; = WPF and Prism.&nbsp; <br>\r\n<br>\r\nOne of my challenges is going to be getting my other devs up to speed and productive once my app is ready for development.&nbsp; We're having our MS guys come in and do training, but you simply have to spend time doing this stuff before it sinks in. The wall of fire analogy is a good one.&nbsp; <br>\r\n<br>\r\nI thought <strong>gblock</strong> had said (in a video) that the end of the year would be a release 1.0....or at least implied it.&nbsp; Not trying to start any rumors or anything.<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-06-11T07:14:30.217-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "98291",
    "ThreadId": "27002",
    "Html": "hehe, I think we've hijacked this thread and turned it into &quot;So how are you finding WPF?&quot;, lol.<br>\r\n<br>\r\nI wish I had the luxury of a team. I'm a 1 man &quot;OO-guy&quot; in our company in an apps team of 4. The other three are 4gl (Progress) people where I'm also writing progress code. Unfortunately our infrastructure guys have a mentality to &quot;stay latest, we don't want to fall behind&quot; yet we use legacy style systems from telnet sessions, with Windows satalite programs to handle more &quot;graphical&quot; applications (that's where I come in). Sometimes they don't understand how I have to learn things, there's a sort of feeling like &quot;What? You already know C#, why do you need to learn more?&quot;, I just nod my head and sob a little inside, lol.<br>\r\n<br>\r\nMaybe that's it, I just need the time. Can anyone tell me of any courses in Victoria, Australia that I can take?<br>\r\n<br>\r\nAh well, at least I'm still smiling and giving it a world of a go :)<br>\r\n-Brett<br>\r\n",
    "PostedDate": "2008-06-11T16:00:28.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "117087",
    "ThreadId": "27002",
    "Html": "Going back to the Presentation Model topic, I posted an example on how to use this pattern with DataTemplates.<br>\r\nPrism shipped using the presentation model pattern in the Commanding QuickStart, but without using DataTemplates. I took that code as a starting point to show how you could implement it without using UserControls as views, and composing the &quot;UI&quot; at the ViewModel level.<br>\r\n<br>\r\nLink:\r\n<a href=\"http://blogs.southworks.net/jdominguez/2008/09/presentation-model-with-datatemplates-in-compositewpf-prism-sample/\" rel=bookmark>Presentation Model with DataTemplates in CompositeWPF (Prism) Sample</a><br>\r\n<br>\r\nThoughts?<br>\r\n",
    "PostedDate": "2008-09-08T20:39:09.783-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "117317",
    "ThreadId": "27002",
    "Html": "I read your blog post and checked out the code.&nbsp; This looks good to me.&nbsp; My org is working on an app using prism and this is the basic pattern we are using.&nbsp; We ended up simplifying our terminology a bit and we have <em>models</em> (aka ViewModels or PresentationModels) and <em>views</em> (DataTemplates).\r\n",
    "PostedDate": "2008-09-09T12:44:24.413-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "118099",
    "ThreadId": "27002",
    "Html": "&lt;&lt;My goal is to work out how to make an extensible application though simple service contracts. &gt;&gt;<br>\r\n<br>\r\nBrett&nbsp;- have you seen the Managed Extensibility Framework?<a href=\"http://www.codeplex.com/Wiki/View.aspx?ProjectName=MEF\"><br>\r\n<br>\r\nhttp://www.codeplex.com/Wiki/View.aspx?ProjectName=MEF</a><br>\r\n<br>\r\nAndrew\r\n",
    "PostedDate": "2008-09-12T06:02:17.467-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]