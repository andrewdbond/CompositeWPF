[
  {
    "Id": "146861",
    "ThreadId": "44139",
    "Html": "Let's say an application uses static loading of module and adds module A to the ModuleCatalog in GetModuleCatalog.  Module A happens to use module B inside of itself.  Is there a way inside module A's Initialize method for it to say &quot;oh, hey, if the application hasn't already installed module B into the catalog, do it and initialize it now&quot;?<br>\r\n<br>\r\nThat way consumers of module A don't have to have any idea what modules A uses.  They just link to the assemblies we provide and add the modules they directly use to the catalog and that is that.  Or do we always need to tell them that even though they have no idea what module B is, they must add it to the catalog anyway and if they forget, things might not work?\r\n",
    "PostedDate": "2009-01-13T18:09:01.667-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "147014",
    "ThreadId": "44139",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The default way to set a dependency between modules to make sure a specific module is loaded before another one does using static module loading could be the following one (with your sample module names):</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">protected override IModuleCatalog GetModuleCatalog()</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            var catalog = new ModuleCatalog();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            catalog.AddModule(typeof(ModuleB))</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                  .AddModule(typeof(ModuleA), &quot;ModuleB&quot;);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            return catalog;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.35pt\"><span style=\"font-family:calibri\">Remember that it is important that modules have no knowledge of each other to maintain the application loosely coupled, and making ModuleA<em> </em>know where<em> </em>ModuleB is deployed would be against this. Perhaps you could implement this as an assembly reference instead of a Module dependency, by creating separate projects an referencing the one with ModuleB’s functionality from ModuleA but remaining as a single module to your application. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">However, if you still want to add new modules without changing the bootstrapper’s GetModuleCatalog() method, and don’t want to expose the dependency between Modules A and B I will explain how to do this below. You should also be aware that this will create a strong couple of the module to the CAL’s interfaces’ implementations. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">To do this you can add the following code in Module A’s Inititialize() method:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">ModuleCatalog catalog = this.container.Resolve&lt;IModuleCatalog&gt;() as ModuleCatalog;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">if (catalog != null)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">catalog.AddModule(&quot;ModuleB&quot;, typeof(ModuleB).AssemblyQualifiedName, InitializationMode.OnDemand);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                IModuleManager moduleManager = this.container.Resolve&lt;IModuleManager&gt;();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                if (moduleManager != null)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                              moduleManager.LoadModule(&quot;ModuleB&quot;);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span> </p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#1f497d;font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">For more information about module loading you can check:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><span style=\"font-family:calibri\"><b>StaticModuleLoading</b> <b>Quickstart</b></span>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><b><span style=\"font-family:calibri\">How to: Load Modules On Demand (documentation)</span></b>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><b><span style=\"font-family:calibri\">How to: Statically Load Modules (documentation)</span></b>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2009-01-14T05:48:02.18-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "147056",
    "ThreadId": "44139",
    "Html": "Thanks.  Your response was helpful.  I am aware of how the typical static loading works and have been using it.  It was just the module inside a module, where only the module knew it used another module inside of itself (when the application didn't).  I wasn't sure how one would deal with.<br>\r\n<br>\r\nI will have to think about your comment about a module not having any other knowledge of another module.  Understandably a module's usage is via the interfaces it exposes, and I wasn't planning on changing that fact.  But to get the interfaces, a module has to be loaded.  So at some level, even if it is at the highest App level, they have to get tied together somehow.  Essentially what you are saying is that it should be up to the application to determine which module should be used to provide a given interface.  But how does the container find the interface if such a module wasn't loaded?  (Rhetorical question)  :)<br>\r\n<br>\r\nSo it comes down to a philisophical question of sorts I suppose.  Always something to think about.  And maybe I should tinker a bit with dynamic loading.<br>\r\n",
    "PostedDate": "2009-01-14T07:53:29.843-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]