[
  {
    "Id": "699101",
    "ThreadId": "279688",
    "Html": "<p>Hi,</p>\n<p>I have a question regarding the usage of CompositeCommand.</p>\n<p>Let me describe the situation:</p>\n<p>I have a module that is managing the workspaces (WorkspaceManager). A workspace is a folder that contains&nbsp;several files. These files are associated with various child modules. A workspace can be loaded, saved, etc. Obviously, the child modules are directly impacted by a workspace loading operation (they have to load their own files from the folder).</p>\n<p>In order to address this need, I was thinking of using CompositeCommand: the WorkspaceManager is exposing the load/save CompositeCommands. The child modules are registering their child DelegateCommand (load / save) with the CompositeCommands of the WorkspaceManager in order to do the specific loading.</p>\n<p>Another option can consist in using events (shared service events or through EventAggregator) but it seems less adapted to this situation (in particular because it's asynchronous).</p>\n<p>What is your thoughts on this issue?&nbsp;</p>\n<p>Thanks a lot,</p>\n<p>Best</p>",
    "PostedDate": "2011-11-16T10:30:44.943-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699517",
    "ThreadId": "279688",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, <strong>CompositeCommand </strong>seems a reasonable approach if you expect an immediate action from the UI. This is explained in more depth in the <a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\">Communicating Between Loosely Coupled Components</a> chapter of the Prism documentation at MSDN. From the documentation:</p>\r\n<p><em>(...)</em></p>\r\n<p><em>The Prism Library provides the following communication approaches: </em></p>\r\n<ul>\r\n<li><em>&nbsp;&nbsp;&nbsp;&nbsp; Solution commanding. Use when there is an expectation of immediate action from the user interaction.</em></li>\r\n<li><em>&nbsp;&nbsp;&nbsp;&nbsp; Region context. Use this to provide contextual information between the host and views in the host's region. This approach is somewhat similar to the DataContext, but it does not &nbsp;&nbsp;&nbsp; rely on it.</em></li>\r\n<li><em>&nbsp;&nbsp;&nbsp;&nbsp; Shared services. Callers can call a method on the service which raises an event to the receiver of the message. Use this if none of the preceding is applicable.</em></li>\r\n<li><em>&nbsp;&nbsp;&nbsp;&nbsp; Event aggregation. For communication across view models, presenters, or controllers when there is not a direct action-reaction expectation.</em></li>\r\n</ul>\r\n<p><em>(...)</em></p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>﻿</p>",
    "PostedDate": "2011-11-17T04:37:07.467-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699732",
    "ThreadId": "279688",
    "Html": "\r\n<p>Hi Augustin,</p>\r\n<p>Thanks for your quick answer that confirms my thoughts.</p>\r\n<p>I have another question regarding the module settings but I will start another discussion for that soon.</p>\r\n<p>Thanks again,<br>\r\nBest,</p>\r\n<div>Le 17 nov. 2011 13:37, &quot;aadami&quot; &lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt; a écrit :<br type=\"attribution\">\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: aadami</p>\r\n<div>\r\n<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, <strong>CompositeCommand </strong>\r\nseems a reasonable approach if you expect an immediate action from the UI. This is explained in more depth in the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx\" target=\"_blank\">\r\nCommunicating Between Loosely Coupled Components</a> chapter of the Prism documentation at MSDN. From the documentation:</p>\r\n<p><em>(...)</em></p>\r\n<p><em>The Prism Library provides the following communication approaches: </em></p>\r\n<ul>\r\n<li><em>Solution commanding. Use when there is an expectation of immediate action from the user interaction.</em>\r\n</li><li><em>Region context. Use this to provide contextual information between the host and views in the host's region. This approach is somewhat similar to the DataContext, but it does not rely on it.</em>\r\n</li><li><em>Shared services. Callers can call a method on the service which raises an event to the receiver of the message. Use this if none of the preceding is applicable.</em>\r\n</li><li><em>Event aggregation. For communication across view models, presenters, or controllers when there is not a direct action-reaction expectation.</em>\r\n</li></ul>\r\n<p><em>(...)</em></p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\" target=\"_blank\"><br>\r\nhttp://blogs.southworks.net/aadami</a>&#65279;</p>\r\n</div>\r\n<div>\r\n<p>Read the <a href=\"http://compositewpf.codeplex.com/discussions/279688#post699517\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com?subject=[CompositeWPF:279688]\" target=\"_blank\">CompositeWPF@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com\" target=\"_blank\">\r\nCompositeWPF@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://compositewpf.codeplex.com/discussions/279688/unsubscribe/\" target=\"_blank\">\r\nunsubscribe</a> on CodePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com</p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n",
    "PostedDate": "2011-11-17T10:30:36.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]