[
  {
    "Id": "102752",
    "ThreadId": "30892",
    "Html": "Hi,<br>\r\n<br>\r\nI've been thinking about commands in WPF, CAB and CAG.<br>\r\n<br>\r\nIt's desirable to expose CanExecute as property on command instead of having a CanExecute handler.<br>\r\nThis is more the way CAB does commanding.<br>\r\n<br>\r\nCAB defines also a&nbsp;three state command status: enabled, disabled and unavailable.<br>\r\nBut there is no equivalent in CAG yet.<br>\r\n<br>\r\nBenjamin\r\n",
    "PostedDate": "2008-07-04T10:32:22.973-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102810",
    "ThreadId": "30892",
    "Html": "Hi Benjamin<br>\r\n<br>\r\nOur CAL commands build on top of the WPF command infrastructure. WPF defines the ICommand interface that has CanExecute method. DelegateCommand implements ICommand so it requires the CanExecute method. The reason CanExecute&nbsp;is a method and not a property is so that the Parameters for the command can be passed in to CanExecute. If it was a property the you would not be able to pass these parameters in.\r\n",
    "PostedDate": "2008-07-05T00:40:24.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "102814",
    "ThreadId": "30892",
    "Html": "Glen,<br>\r\n<br>\r\nbut how would you make a button invisible&nbsp;which is bound to a command? <br>\r\n<br>\r\nBenjamin<br>\r\n",
    "PostedDate": "2008-07-05T01:35:11.883-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]