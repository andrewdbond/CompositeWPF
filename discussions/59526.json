[
  {
    "Id": "201532",
    "ThreadId": "59526",
    "Html": "<p>When a view is removed from region its and all its children's unload event gets called.&nbsp; If/when the view insttance is loaded back into region the loaded event gets called for the view and its children. Because of this behavior any one time processing that needs to happen in loaded event now needs a special flag to make sure it doesn't get run more than once for the real lifetime of the view. But how do I handle unloading? I have an attached behavior that creates some event handlers on my view, and cleans up those event handlers when the attached element calls unload, but in Prism I can't do that since even after unload that same view instance could be shown again, but now necessary objects that have been cleaned up in unloaded are no longer available. What's a good decopuled way of knowing when an element/view is really destroyed and be able to react to it via an attached behavior?</p>",
    "PostedDate": "2009-06-15T04:29:04.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "202606",
    "ThreadId": "59526",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">Hi Joe</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">If I understand your scenario correctly, you want to know whether a View is added/removed to a region. If you do not need them to be removed, but just deactivate it, Prism provides a way to do this. The <strong>IActiveAware</strong> interface allows you to monitor Activated/Deactivated events of a View related to a region. The following thread provides more details about this:</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=54953\"><span style=\"font-family:Calibri;font-size:small\">Using IActiveAware</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Another possible approach, could be finding a way to persist the View&rsquo;s state, so when you load it again you have access to the objects that were cleaned up.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>You might also implement the <strong>IDisposable</strong> interface, and the controller whose responsibility is to manage the lifetime of that specific view, should call Dispose() on the view, so the view can now clean up the resources.</span><span style=\"\" lang=EN-US></span></span></span></p>\r\n<p style=\"text-indent:35.4pt;margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">If I misunderstood your scenario and when you said <em>&ldquo;knowing when an element/view is really destroyed&rdquo;</em> you meant about to be GCd, you can always use its destructor.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>",
    "PostedDate": "2009-06-17T11:47:57.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]