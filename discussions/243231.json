[
  {
    "Id": "555075",
    "ThreadId": "243231",
    "Html": "\r\n<p>I basically follow the Prism sample ModularityWithMef.Silverlight</p>\r\n<p>My catalog xaml is very simple</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfoGroup</span> <span style=\"color:red\">InitializationMode</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">OnDemand</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span> <span style=\"color:red\">Ref</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">CustomerManagement.Silverlight.xap</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">ModuleName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">CustomerManagementModule</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">ModuleType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">CustomerManagement.CustomerManagementModule, CustomerManagement</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfoGroup</span><span style=\"color:blue\">&gt;</span>\r\n\r\n\r\n</pre>\r\n</div>\r\n<p>the module itself simply has nothing in it</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\r\n<div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">namespace</span> CustomerManagement {\r\n     [ModuleExport(<span style=\"color:blue\">typeof</span>(CustomerManagementModule), InitializationMode = InitializationMode.OnDemand)] <br>     <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomerManagementModule : IModule { }\r\n} \r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<p>and then I use the exact same method to load the module</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>ModuleManager.LoadModule(<span style=\"color:#a31515\">&quot;CustomerManagementModule&quot;</span>);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p>I wire up the download event, OK, I can see the total bytes is exactly the same to the file size, so that means the program is downloading it properly, but why the heck it is still throwing out 4004 exception?</p>\r\n<p>&nbsp;</p>\r\n<p>Could anyone give me a hint? thanks a lot!</p>\r\n",
    "PostedDate": "2011-01-25T08:15:29.27-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555132",
    "ThreadId": "243231",
    "Html": "\r\n<p>ok, I gave up using MEF, just using the approach in ModularityWithUnity works fine.MEF is really a pain in the ass.</p>\r\n<p>&nbsp;</p>\r\n<p>However, I get another question, does anyone know how to setup the bytes in each downloading chunk by using ModuleManager?</p>\r\n<p>It is very strange, when I run the Prism sample, the ModuleE.xap is only 160K, but the DownloadProgressChanged is fired 4 times.</p>\r\n<p>When I run mine, my xap is more than 800K, but the event is only fired 2 times. Why?</p>\r\n<p>&nbsp;</p>\r\n<p>The second question is, I tried to use a BusyIndicator to wrap my main region, it's like this:</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">toolkit</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">BusyIndicator</span> <span style=\"color:red\">Grid.Row</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">IsBusy</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding IsDownloading}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">toolkit</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">BusyIndicator.BusyContent</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">StackPanel</span> <span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">18</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Foreground</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">DarkSlateBlue</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">FontWeight</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Bold</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                    Package is Loading ...\r\n                        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">TextBlock</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Progress}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">FontSize</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">18</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">StackPanel</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">toolkit</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">BusyIndicator.BusyContent</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ItemsControl</span> <span style=\"color:red\">regions:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MainRegion</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Style</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource RegionContentTemplate}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ItemsControl</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">toolkit</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">BusyIndicator</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I update the property data in the ProgressChanged event, but the BusyIndicator is just not triggered. However, when the downloading is down, the BusyIndicator will flash very quick. It's almost like, when downloading, the screen is frozen. I thought it's\r\n an Async operation. Did I miss anything? thanks!</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-25T09:51:56.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555211",
    "ThreadId": "243231",
    "Html": "\r\n<p>Hi,</p>\r\n<p>The reason you are experiencing such a fast download time on your <em>xap file</em> versus the one on the\r\n<strong>Modulartiy Quickstart</strong>, is because the <em>ModularityWithMef.Silverlight.Web</em> project of the solution uses an\r\n<strong>HttpHandler</strong>, which simulates a slow download for each requested module. On real production environments, you will experience a normal download time and the events will fire more times compared when doing such an operation on Visual Studio internal\r\n webserver, Cassini.</p>\r\n<p>In the other hand, based on my understanding of your scenario, you need to indicate that the application is busy when you start doing a long operation and indicate that it is no longer busy when is finished. Using the\r\n<strong>BusyIndicator</strong> control helps you to achieve this by setting the <em>\r\nIsBusy</em> property. The expected behavior of the BusyIndicator is to freeze the screen while the Isbusy property is set to true.</p>\r\n<p>One possible way to workaround this, is instead of set the values on the <em>LoadModuleProgressChanged</em> event is set the property when you start the long operation, that means when you click a button or fire an action to download the module, and finally\r\n set the IsBusy property back to false when the <em>LoadModuleCompleted</em> event is fired.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-25T12:48:48.923-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555213",
    "ThreadId": "243231",
    "Html": "\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>mbronzovic wrote:</strong><br>\r\n<p>Hi,</p>\r\n<p>The reason you are experiencing such a fast download time on your <em>xap file</em> versus the one on the\r\n<strong>Modulartiy Quickstart</strong>, is because the <em>ModularityWithMef.Silverlight.Web</em> project of the solution uses an\r\n<strong>HttpHandler</strong>, which simulates a slow download for each requested module. On real production environments, you will experience a normal download time and the events will fire more times compared when doing such an operation on Visual Studio internal\r\n webserver, Cassini.</p>\r\n<p>In the other hand, based on my understanding of your scenario, you need to indicate that the application is busy when you start doing a long operation and indicate that it is no longer busy when is finished. Using the\r\n<strong>BusyIndicator</strong> control helps you to achieve this by setting the <em>\r\nIsBusy</em> property. The expected behavior of the BusyIndicator is to freeze the screen while the Isbusy property is set to true.</p>\r\n<p>One possible way to workaround this, is instead of set the values on the <em>LoadModuleProgressChanged</em> event is set the property when you start the long operation, that means when you click a button or fire an action to download the module, and finally\r\n set the IsBusy property back to false when the <em>LoadModuleCompleted</em> event is fired.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n</blockquote>\r\n<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>since you mentioned it, I now realize the Web project does have a HttpHandler to simulate a slowly download, haha, that's nice.</p>\r\n<p>I think I probably need a better way to show the Progress instead of using BusyIndicator so the window won't get frozen.</p>\r\n<p>&nbsp;</p>\r\n<p>thanks again!</p>\r\n",
    "PostedDate": "2011-01-25T12:56:57.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555504",
    "ThreadId": "243231",
    "Html": "\r\n<p>Is it true that MEF is not working as in the example provided, I imetated the code in the quickstart, can't get it to work .... always this nasty exception error</p>\r\n<p>ModuleTypeLoadingException ...</p>\r\n<p>any help on this ...</p>\r\n<p>Reagrds</p>\r\n",
    "PostedDate": "2011-01-26T04:16:35.587-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555516",
    "ThreadId": "243231",
    "Html": "\r\n<p>Dear Guys,</p>\r\n<p>I just figure it out ... none of the PRISM dll should be copy local , all should be set to FALSE.</p>\r\n<p>It just worked !!</p>\r\n<p>Regards,</p>\r\n<p>Waleed</p>\r\n",
    "PostedDate": "2011-01-26T04:56:26.3-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]