[
  {
    "Id": "422562",
    "ThreadId": "207013",
    "Html": "<p>What is the best practice for setting initial parameters in a viewmodel?</p>\r\n<p>Thanks</p>\r\n<p>Rob</p>",
    "PostedDate": "2010-03-23T07:19:17.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "423293",
    "ThreadId": "207013",
    "Html": "<p>Hi Rob,</p>\r\n<p>The usual way to inject dependencies into the <strong>ViewModel</strong>, assuming it is created through the Unity container (so it goes through the Builder&rsquo;s pipeline), is using <a href=\"http://msdn.microsoft.com/en-us/library/dd203129.aspx\">Constructor Injection</a>. You can find many examples of this in the <a href=\"http://msdn.microsoft.com/en-us/library/dd458858.aspx\">Quickstarts</a> and <a href=\"http://msdn.microsoft.com/en-us/library/dd458919.aspx\">Reference Implementation</a> that come with Prism.</p>\r\n<p>Another possible scenario could be that the <strong>ViewModel</strong> is instantiated through its default constructor as it is declared in XAML (an assigned to the view&rsquo;s <strong>DataContext</strong>). If this is the case, you probably will need to use the <a href=\"http://msdn.microsoft.com/en-us/library/dd458903.aspx\">Service Locator</a> to get the different dependencies of your <strong>ViewModel</strong>. <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=155539\">This thread</a> provides some more information about that.</p>\r\n<p>If by <em>&ldquo;setting initial parameters&rdquo;</em> you meant something different please provide some more information about what you are trying to achieve so we can provide a more detailed answer.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p>Damian Schenkelman</p>\r\n<p><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2010-03-24T16:11:39.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]