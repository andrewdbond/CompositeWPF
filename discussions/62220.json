[
  {
    "Id": "211176",
    "ThreadId": "62220",
    "Html": "<p>Would there be any caveats or problems using&nbsp;PRISM for an application that,&nbsp;in addtion to being a complex UI, &nbsp;will have many audio and video streaming feeds?</p>\r\n<p>Thank you.</p>",
    "PostedDate": "2009-07-12T05:02:02.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "211735",
    "ThreadId": "62220",
    "Html": "<p>Hi</p>\r\n<p>In my personal opinion, whether to use the Prism for your application or not &nbsp;depends not only on what your application&rsquo;s usage scenario, but also how you are going to <strong>develop, test and maintain</strong> it. Applications created with Prism, will be highly decoupled and have a bigger testability/maintainability level compared to monolithic applications. You can read more about these benefits <a href=\"http://msdn.microsoft.com/en-us/library/dd490815.aspx\">here</a>.</p>\r\n<p>Although I do not know your exact scenario, you should evaluate if your application will only accomplish the task it is supposed to until today, or will be expanded and improved over time. If your application is for a customer, or you are developing just for fun, doing it with Prism will allow you to easily add features to it while keeping it functional. In my personal opinion, this could be great for media like apps.</p>\r\n<p>From my own experience, my company has helped developing a Silverlight application (it is a &ldquo;Rough cut&rdquo; video editor) which uses Prism and is used for video and audio editing/streaming and the developers had a good developer experience.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p>Damian Schenkelman</p>\r\n<p><span style=\"font-size:11pt\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></span></p>",
    "PostedDate": "2009-07-14T07:24:27.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]