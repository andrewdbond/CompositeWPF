[
  {
    "Id": "473411",
    "ThreadId": "221623",
    "Html": "<p>I have implemented the RegionPopupBehavior as in the RI of Prism. I want to bring up a new window pop up on a button click. I am activating the view in a Secondary region as RI. How to command bind a button command to open this new window view?&nbsp;</p>",
    "PostedDate": "2010-07-27T16:17:24.977-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "474920",
    "ThreadId": "221623",
    "Html": "<p id=398131a0-7e36-012d-2cea-123139180535>Hi,</p>\r\n<p id=39813ea0-7e36-012d-2ceb-123139180535>Based on our understanding, you have a WPF application using Prism and need to implement command bindings that eventually might open a pop-up window like in the RI.</p>\r\n<p id=39814d80-7e36-012d-2cec-123139180535>In Prism is provided an infrastructure for leveraging commands. For more information, you could take a look at the following documentation section (see the <em>Binding Commands to a View</em> section) on MSDN:</p>\r\n<ul>\r\n<li>&nbsp;&nbsp; <a href=\"http://msdn.microsoft.com/en-us/library/ff647893.aspx\">Commands</a> </li>\r\n</ul>\r\n<p id=39815fa0-7e36-012d-2ced-123139180535>On the other hand, once you configured your command in XAML by following the instructions in the link provided above, you would want to know where to handle it. So, this design decision could be taken by choosing the presentation pattern&nbsp;to be used in your application. For more information about these patterns you could check the following links:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff647218.aspx\">Separated Presentation</a>: <ol>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/dd419663.aspx\">MVVM</a> - <a href=\"http://msdn.microsoft.com/en-us/library/ff647585.aspx\">Presentation Model</a>&nbsp; </li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff647388.aspx\">Supervising Presenter</a> </li>\r\n</ol></li>\r\n</ul>\r\n<p id=398178a0-7e36-012d-2cee-123139180535>The last step is the implementation of the Command itself (i.e. the handler). One of the most used approaches in Prism is the usage of DelegateCommand. Additionally, you could use the original way to create a custom Command by&nbsp;implementing the ICommand interface. For more information of these topics:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff647893.aspx\">Commands</a> (see the <em>DelegateCommand&lt;T&gt;</em> section) </li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms752308.aspx#creating_commands\">Commanding Overview</a> (see the <em>Creating Custom Commands </em>section) </li>\r\n</ul>\r\n<p id=39819a80-7e36-012d-2cef-123139180535>No matter if you choice to use the first option or the second one. In both cases, you would indicate a CanExecute method and a ExecuteMethod. The former one will notify the UI control whether it is possible to execute, and the other&nbsp;act as&nbsp;the handler method where you could write your logic.&nbsp;&nbsp;&nbsp;</p>\r\n<p id=3981c0c0-7e36-012d-2cf0-123139180535>In addition, you could check the <a>Commanding Quickstart</a>.</p>\r\n<p id=3981e420-7e36-012d-2cf1-123139180535>Please let me know if this helps.</p>\r\n<p id=39820db0-7e36-012d-2cf2-123139180535>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-07-30T15:06:05.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "477528",
    "ThreadId": "221623",
    "Html": "<p>Thanks Fernando,</p>\r\n<p>I have implemented the pop well. Now I have a small problem. some of my pop up views vary in sizes. Is there a way I can adjust the pop up window size on rum time?&nbsp;</p>",
    "PostedDate": "2010-08-06T15:11:03.217-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]