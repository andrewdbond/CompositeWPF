[
  {
    "Id": "236028",
    "ThreadId": "69381",
    "Html": "<p>Hello,</p>\r\n<p>(Silverlight 3 - Composite Application (Prism))</p>\r\n<p>I have a composite application consisting of regions inside a tabcontrol.</p>\r\n<p>When I resize my window, the tabcontrol follows and resize itself, the region resizes itself as well but its content only resizes itself horizontally.</p>\r\n<p>My region is simply declared like this :</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">\r\n<p>&lt;<span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">ItemsControl</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Name</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;AgentMngtRegion&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Regions</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">RegionManager.RegionName</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;AgentMngtRegion&quot; /&gt;</span></span></p>\r\n<p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">and my module simply register itself to the region like this :</span></span></p>\r\n<span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"font-size:x-small\">\r\n<p>&nbsp;<span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">this</span></span><span style=\"font-size:x-small\">.regionManager.Regions[</span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">&quot;AgentMngtRegion&quot;</span></span><span style=\"font-size:x-small\">].Add(</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> Main.</span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">MainPage</span></span><span style=\"font-size:x-small\">());</span></p>\r\n<p>\r\n<p><span style=\"font-size:x-small\">My MainPage is a usercontrol with a grid with 3 rows :</span></p>\r\n<span style=\"font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">\r\n<p>\r\n<p><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">&lt;Grid</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> x</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">Name</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;LayoutRoot&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Background</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;#f5f5f5&quot;&gt;<br></span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">Grid.RowDefinitions</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&gt;<br></span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">RowDefinition</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Height</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;115&quot; /&gt;<br></span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">RowDefinition</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Height</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;*&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> MinHeight</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;100&quot; /&gt;<br></span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">RowDefinition</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> Height</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;445&quot; /&gt;<br></span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;/</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">Grid.RowDefinitions</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&gt;</span></span></p>\r\n<p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">Basically the Row #1 (Height=*) should resize itself and take the remaining space but it doesn't. It stays always at 100px.</span></span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">Any ideas?</span></span></p>\r\n<p>Thanks,</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">Alex</span></span></p>\r\n</p>\r\n</p>\r\n</span></span></span></p>\r\n</span></span></span></p>\r\n</span></span></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-18T06:32:30.687-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236048",
    "ThreadId": "69381",
    "Html": "<p>Hi Alex,</p>\r\n<p>I actually addressed this issue recently in my <a href=\"http://multitargeting.CodePlex.com\">http://multitargeting.CodePlex.com</a> project, I wanted all of my applications (WPF, Silverlight and Winforms) to have the same behaviors using PRISM.&nbsp;&nbsp; You'll find on the home page of the referenced link that there is a video clip showing it in action.</p>\r\n<p><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Demo.MainPage</span><span style=\"color:Black\">&quot;</span><br>&nbsp;&nbsp;&nbsp; <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span> <br>&nbsp;&nbsp;&nbsp; <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span> <br>&nbsp;&nbsp;&nbsp; <span style=\"color:Red\">xmlns:Regions</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation</span><span style=\"color:Black\">&quot;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&gt;</span><br>&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">800</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">550</span><span style=\"color:Black\">&quot;</span> <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Red\">RenderTransformOrigin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0.5 0.5</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ItemsControl</span> <span style=\"color:Red\">Regions:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MainRegion</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span><br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid.RenderTransform</span><span style=\"color:Blue\">&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ScaleTransform</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">PageScale</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ScaleX</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ScaleY</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid.RenderTransform</span><span style=\"color:Blue\">&gt;</span><br>&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span><br><span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span><br><br>I can't recall the blog I got this information from (to give credit where credit is due) but the above RenderTransform works in conjunction with the following code behind in the MainPage (shell).</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MainPage : UserControl\r\n</span>{\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">double</span> originalWidth;\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">double</span> originalHeight;\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">double</span> originalAspectRatio;\r\n\r\n    <span style=\"color:Blue\">public</span> MainPage()\r\n    {\r\n        InitializeComponent();\r\n\r\n        <span style=\"color:Green\">// wire up the event handler. This is a great addition</span>\r\n        <span style=\"color:Green\">// to silverlight, as you used to have to hook into the</span>\r\n        <span style=\"color:Green\">// browser event yourself</span>\r\n        SizeChanged += <span style=\"color:Blue\">new</span> SizeChangedEventHandler(Page_SizeChanged);\r\n    }\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> Page_SizeChanged(<span style=\"color:Blue\">object</span> sender, SizeChangedEventArgs e)\r\n    {\r\n        <span style=\"color:Blue\">if</span> (originalAspectRatio == 0)\r\n        {\r\n            originalWidth = LayoutRoot.Width + 10;\r\n            originalHeight = LayoutRoot.Height + 10;\r\n            originalAspectRatio = originalWidth / originalHeight;\r\n        }\r\n\r\n        <span style=\"color:Blue\">if</span> (e.NewSize.Width &lt; originalWidth || e.NewSize.Height &lt; originalHeight)\r\n        {\r\n            <span style=\"color:Green\">// don't shrink</span>\r\n            PageScale.ScaleX = 1.0;\r\n            PageScale.ScaleY = 1.0;\r\n        }\r\n        <span style=\"color:Blue\">else</span>\r\n        {\r\n            <span style=\"color:Green\">// resize keeping aspect ratio the same</span>\r\n            <span style=\"color:Blue\">if</span> (e.NewSize.Width / e.NewSize.Height &gt; originalAspectRatio)\r\n            {\r\n                <span style=\"color:Green\">// height is our constraining property</span>\r\n                PageScale.ScaleY = e.NewSize.Height / originalHeight;\r\n                PageScale.ScaleX = PageScale.ScaleY;\r\n            }\r\n            <span style=\"color:Blue\">else</span>\r\n            {\r\n                <span style=\"color:Green\">// either width is our constraining property, or the user</span>\r\n                <span style=\"color:Green\">// managed to nail our aspect ratio perfectly.</span>\r\n                PageScale.ScaleX = e.NewSize.Width / originalWidth;\r\n                PageScale.ScaleY = PageScale.ScaleX;\r\n            }\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>Where the above fires for every resize event I found that child views only fire once.&nbsp;&nbsp; I took advantage of this fact to solve a problem with my treeviews extending beyond my region versus showing scrollbars (I use a DockPanel on the WPF side).&nbsp;&nbsp; If you define your Width and Height then this is not a problem however we don't want to set any widths/heights for obvious reasons.</p>\r\n<p>So in my PresenterBase class I have the following (excerpt) that wires up the views SizeChanged event:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>[InjectionConstructor]\r\n<span style=\"color:Blue\">public</span> PresenterBase(IView view, IPresentationModel model, IUnityContainer container)\r\n{\r\n    <span style=\"color:Blue\">try</span>\r\n    {\r\n        <span style=\"color:Green\">// For logging purposes</span>\r\n        ModuleName = GetType().FullName;\r\n\r\n        <span style=\"color:Green\">// Setter injection is not available until after the constructor</span>\r\n        <span style=\"color:Green\">// so we'll set them manually</span>\r\n        Error = container.Resolve&lt;IError&gt;();\r\n        Logger = container.Resolve&lt;ILoggerFacade&gt;();\r\n\r\n        <span style=\"color:Green\">// Set the presenter with a reference to the container</span>\r\n        Container = container;\r\n\r\n        <span style=\"color:Green\">// Set the Presenter with a reference to the model</span>\r\n        Model = model;\r\n\r\n        <span style=\"color:Blue\">if</span> ((TView)view <span style=\"color:Blue\">is</span> UserControl)\r\n        {\r\n<span style=\"color:Blue\">#if</span> !WinForm\r\n            <span style=\"color:Green\">// WPF/Silverlight have SizeChanged event</span>\r\n            <span style=\"color:Green\">// Provide means to notify User Controls that their size has been set</span>\r\n            ((TView)view).SizeChanged += (<span style=\"color:Blue\">object</span> sender, SizeChangedEventArgs e) =&gt;\r\n                {\r\n                    OnViewSizeSet(sender, e);\r\n                };\r\n<span style=\"color:Blue\">#endif</span>\r\n        }\r\n\r\n</pre>\r\n</div>\r\n<p>You find&nbsp;in Modules\\Views\\Data\\LocalDataPresenter the following override:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Called when [view size set].</span>\r\n<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;sender&quot;&gt;</span><span style=\"color:Green\">The sender.&lt;/param&gt;</span>\r\n<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;e&quot;&gt;</span><span style=\"color:Green\">The &lt;see cref=&quot;System.Windows.SizeChangedEventArgs&quot;/&gt; instance containing the event data.&lt;/param&gt;</span>\r\n<span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> OnViewSizeSet(<span style=\"color:Blue\">object</span> sender, SizeChangedEventArgs e)\r\n{\r\n    <span style=\"color:Blue\">base</span>.OnViewSizeSet(sender, e);\r\n\r\n    <span style=\"color:Green\">// Set the treeview to fit the entire control</span>\r\n    tvwLocalDataSource.Width = (<span style=\"color:Blue\">int</span>)e.NewSize.Width;\r\n    tvwLocalDataSource.Height = (<span style=\"color:Blue\">int</span>)e.NewSize.Height;\r\n}\r\n</pre>\r\n</div>\r\n<p>Which effectively sets the treeview width and height (only one time) and after that the RenderTransform adjusts its dimensions.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-18T07:35:03.423-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "238300",
    "ThreadId": "69381",
    "Html": "<p>Nice! but the problem with that code is it doesn't resize the section but &quot;scales&quot; the controls so they are bigger!</p>\r\n<p>In my case, I just want the row marked <strong>Height=&quot;*&quot;</strong> to take the remaining space.</p>\r\n<p>It's kinda like the ItemsControl resizes its content horizontally but not vertically...</p>\r\n<p>I'll try to play around with the SizeChanged event.</p>\r\n<p>Other ideas?</p>\r\n<p>Alex</p>\r\n<p><span style=\"color:#ff0000;font-size:x-small\"></span>&nbsp;</p>",
    "PostedDate": "2009-09-24T06:38:49.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "238318",
    "ThreadId": "69381",
    "Html": "<p>I got it working after stumbling on this thread : <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=28522\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=28522</a></p>\r\n<p>&nbsp;Just adding this to my ItemsControl did the trick!</p>\r\n<p>&nbsp;&lt;ItemsControl.ItemsPanel&gt;<br>&nbsp;&lt;ItemsPanelTemplate&gt;<br>&nbsp;&nbsp;&lt;controlsToolkit:DockPanel /&gt;<br>&nbsp;&lt;/ItemsPanelTemplate&gt;<br>&lt;/ItemsControl.ItemsPanel&gt;</p>\r\n<p>&nbsp;Thanks all for your help!</p>",
    "PostedDate": "2009-09-24T07:32:42.367-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]