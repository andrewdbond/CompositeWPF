[
  {
    "Id": "1128989",
    "ThreadId": "471141",
    "Html": "Hi,\r<br />\nI have a scenario where I have a main region and a navigation region.  Each region contains one view at a time.  The regions would optimally be constructed like so:\r<br />\n<br />\n<img src=\"https://qtodjq.sn2.livefilestore.com/y2pmbArmjcoJkPDaQPLQzuoQiD6tepyRdM8fSYbQ8HhEJ73rpcJy9zKmhV_alQsI0Ow1_xAkUyNnzay9RmrAs3-MJ33MvbwTvAJcUNDXjM4-mKrqru9KNsj7LE6mGHhmIbO/region.png?psid=1\" alt=\"Image\" />\r<br />\n<br />\nThe main region would contain a view with an &quot;Action&quot; button that triggers execution of that view.  The navigation region contains buttons that allow the user to skip a particular view in the main region and proceed to the next.  Due to the alignment of the Action button, I have not been able to accomplish this scenario. \r<br />\n<br />\nMy workaround is to put the Action button in its own region (and view) like this:\r<br />\n<br />\n<img src=\"https://qtmemg.sn2.livefilestore.com/y2pGwphSzIKuCo2bKBclGoTtdF6a7HySsWWsNRN2jUe65c-6vvMGQTryihU803OWY15-IeKqrSMSTulc1LyYt81a_Vr9MPFsOR7qJ_Abst18MZOn8f5AbyvPpCeMl_GVzFW/region2.png?psid=1\" alt=\"Image\" />\r<br />\n<br />\nI am sharing the viewmodel for Main Region and Action Region by composing a shared instance of the viewmodel.<br />\n\r<br />\nI have tried composite commands but the text of the button changes with each view which involves more complexity.  I would simply like to have a single view for the main region and in that view have a button which appears to the right of the navigation region as shown in the first image.\r<br />\n<br />\nIs this possible?\r<br />\nThank you,\r<br />\nDavid A.<br />\n",
    "PostedDate": "2013-11-25T17:51:33.933-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1129192",
    "ThreadId": "471141",
    "Html": "Hi David,\r<br />\n<br />\nBased on my understanding, the layout you are describing could be simply achieved by overlapping both regions (content controls) in a one single <strong>Grid</strong> cell. This could be done by defining first the <strong><em>Main content control</em></strong> filling the entire window, so then you would define the <strong><em>Navigation content control</em></strong> with its proper <strong><em>height</em></strong>, <strong><em>width</em></strong>, and <strong><em>horizontal and vertical alignment</em></strong>. \r<br />\nBy doing this, the <strong>Navigation Region</strong> would appear over the <strong>Main Region</strong> after their views get resolved acording to the content control order definition.\r<br />\n<br />\nNevertheless, you could define a separate region for the <strong><em>Action button</em></strong> and use the <strong>EventAggregator</strong> in order to raise an event from the <strong><em>Action Button's ViewModel</em></strong>, and subscribe to it on every <strong><em>Main ViewModel</em></strong>.\r<br />\n<br />\nTo accomplish this approach, you would need to receive the <strong>EventAggregator</strong> throw constructor on the <strong><em>Action ViewModel</em></strong> and each one of the <strong><em>Main Region's ViewModel</em></strong>. You could use one only <strong><em>Action Button's View</em></strong> which it always would publish the same event, and then each <strong><em>Main ViewModel</em></strong> would perform the job that corresponds on the specified &quot;<strong><em>ActionEventHandler</em></strong>&quot; method.\r<br />\n<br />\nIn order to do this, you would need to subscribe to the &quot;<strong><em>ActionTriggeredEvent</em></strong>&quot; on each <strong><em>Main ViewModel</em></strong> constructor as shown below:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> MainViewModel1(IEventAggregator eventAggregator, ..){\n    ...\n    ActionTriggeredEvent actionTriggeredEvent = eventAggregator.Get&lt;ActionTriggeredEvent&gt;();\n    actionTriggeredEvent.Subscribe(ActionEventHandler, ThreadOption.UIThread);\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> ActionEventHandler(){\n     <span style=\"color:Green;\">// execute tasks..</span>\n}\r\n</pre></div>The Event would be published from inside the <strong><em>CommandHandler</em></strong> method as follows:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">this</span>.eventAggregator.GetEvent&lt;ActionTriggeredEvent&gt;().Publish();\r\n</pre></div>Notice that you would need to make your &quot;<strong><em>ActionTriggeredEvent</em></strong>&quot; inherit from <strong>CompositePresentationEvent</strong>:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> ActionTriggeredEvent : CompositePresentationEvent&lt;<span style=\"color:Blue;\">string</span>&gt;{}\r\n</pre></div>For more information about <strong>EventAggregation</strong>, you could refer to the following <strong>PRISM Guide</strong> chapter on <strong>MSDN</strong>:<br />\n<h1></h1>\n<ul>\n<li>\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=pandp.40).aspx#sec8\" rel=\"nofollow\">Comunicating Between Loosely Coupled Components</a><br />\n</li>\n</ul>\nI hope this helped you,\r<br />\nGabriel Ostrowsky\r<br />\n<a href=\"https://blogs.southworks.net/gostrowsky\" rel=\"nofollow\">https://blogs.southworks.net/gostrowsky</a><br />\n",
    "PostedDate": "2013-11-26T06:56:38.357-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1129259",
    "ThreadId": "471141",
    "Html": "Gabriel,\r<br />\n<br />\nYour response is greatly appreciated, and solved my problem.  I started going down the road of the pub/sub EventAggregation, but I also had to change the content (text) of the button depending on the view and it seemed like overkill to have to implement a separate EventAggregator for that as well.\r<br />\n<br />\nThe solution you provided with the overlapping content controls was exactly what I was looking for.<br />\n\r<br />\nThank you for taking the time to help me out!\r<br />\nDavid A.<br />\n",
    "PostedDate": "2013-11-26T10:21:31.63-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]