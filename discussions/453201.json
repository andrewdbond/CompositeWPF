[
  {
    "Id": "1079783",
    "ThreadId": "453201",
    "Html": "I have ran into an issue and I'm having troubles troubleshooting.  I am using Prism and have created a CustomDialogService which will add a view to a dialogRegion dynamically through code.<br />\n\r<br />\nIn the shell I have a dialogRegion defined with an explicit name.  I've verified that everywhere in xaml the regions have a regionName that isn't null or empty.  When I add a view into the region I am providing a name (unique name via guid.NewGuid().ToString) each time.\r<br />\n<br />\nMy question is this... based on the below exception, how can I verify/validate which Region has a RegionName coming back null and what is the DelayedRegionCreationBehavior doing?\r<br />\n<br />\nI would pre-emptively create this region if I knew what region its blowing up on.\r<br />\n<br />\nThanks for any debugging/troubleshooting tips:\r<br />\n<br />\n-Daniel\r<br />\n<br />\nWhen I call the dialog service I get an error on DelayedRegionCreationBehavior: \r<br />\n<br />\n{&quot;An exception occurred while trying to create region objects. <br />\n<pre><code>- The most likely causing exception was: 'System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred while creating a region with name ''. The exception was: System.ArgumentNullException: Value cannot be null.</code></pre>\n\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).  ---&gt; System.ArgumentNullException: Value cannot be null.\r<br />\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes methodAttributes, RuntimeType typeOwner)\r<br />\n   at System.RuntimeMethodHandle.InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeType typeOwner)\r<br />\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)\r<br />\n   at System.Delegate.DynamicInvokeImpl(Object[] args)\r<br />\n   at System.Delegate.DynamicInvoke(Object[] args)\r<br />\n   at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.<br />\n<pre><code>But also check the InnerExceptions for more detail or call .GetRootException(). &quot;}\n</code></pre>\n\nInner Exception --&gt;\r<br />\n<br />\n{&quot;An exception occurred while creating a region with name ''. The exception was: System.ArgumentNullException: Value cannot be null.\r<br />\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName). &quot;}\r<br />\n<br />\nInner Exception --&gt;\r<br />\n<br />\n{&quot;Value cannot be null.\r<br />\nParameter name: regionName&quot;}<br />\n",
    "PostedDate": "2013-08-12T13:00:05.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1080141",
    "ThreadId": "453201",
    "Html": "Hi,\r<br />\n<br />\nAs far as I know, in order to validate/verify which <strong>Region</strong> has a null name, you will need to debug your solution along with the <strong>Prism Library</strong>. In order to do that, you will need to:<br />\n<h1></h1>\n<ul>\n<li>Remove any reference to <strong>Prism Library</strong> assemblies in your solution</li>\n<li>\nAdd the <strong>Prism Library</strong> projects to your solution<br />\n</li>\n</ul>\nIn addition, it would be helpful if you can provide us more information or even a code snippet of how you are defining your regions in <strong>XAML</strong>.\r<br />\n<br />\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-08-13T08:53:13.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1234572",
    "ThreadId": "453201",
    "Html": "Hi ran up with same issue. \r<br />\n<br />\nIf I keep my application running for long time, say whole night and keep my PC locked. when i switch tabs of perform any interaction with application, It crashes and I get following error in Event logs.\r<br />\n<br />\nApplicationNeedsToClose The exception is: Microsoft.Practices.Prism.Regions.UpdateRegionsException: An exception occurred while trying to create region objects. \r<br />\nThe most likely causing exception was: 'System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred while creating a region with name ''. The exception was: System.ArgumentNullException: Value cannot be null.\r<br />\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).  ---&gt; System.ArgumentNullException: Value cannot be null.\r<br />\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r<br />\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r<br />\n   at System.Delegate.DynamicInvokeImpl(Object[] args)\r<br />\n   at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.<br />\n<pre><code>But also check the InnerExceptions for more detail or call .GetRootException().  ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred while creating a region with name ''. The exception was: System.ArgumentNullException: Value cannot be null.</code></pre>\n\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).  ---&gt; System.ArgumentNullException: Value cannot be null.\r<br />\nParameter name: regionName\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionAdapterBase<code>1.Initialize(T regionTarget, String regionName)\r<br />   at Microsoft.Practices.Prism.Regions.RegionAdapterBase</code>1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()\r<br />\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)\r<br />\n   --- End of inner exception stack trace ---\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()\r<br />\n   at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.ContainsRegionWithName(String regionName)<br />\n",
    "PostedDate": "2014-04-15T23:27:15.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]