[
  {
    "Id": "467160",
    "ThreadId": "219398",
    "Html": "<p>Hi guys</p>\r\n<p>first of all, i think the prism library is gr8t, and much anticipated, all the explanation i could find about the difference between using prism with mef vs. prism with unity lead me to the following conclusion</p>\r\n<p>1. use mef if you are planing to integrate 3 parties</p>\r\n<p>2. use mef or unity depending of how you would like the code to look (if you prefer mef syntax over unity syntax)</p>\r\n<p>beside that i could not figure any thing else :(</p>\r\n<p>&nbsp;</p>\r\n<p>I'm working with your drops, and wanted to say and ask a couple of  things</p>\r\n<p>1. the MEF sample application is very poor, and most probably fits your needs of testing, and has nothing to do with real world application</p>\r\n<p>2. it took me ages to figure out that when using directory catalog (mef) the modules post build should copy only the modules and not the module reference dlls as well. if you don't follow this you get a weird exception&nbsp; in ConfigureRegionAdapterMappings). also there is a need to reference Composite.UnityExtensions.Desktop for some strange reason although im using MEF only.</p>\r\n<p>question:</p>\r\n<p>3.&nbsp; when i use the _regionViewRegistry.RegisterViewWithRegion(&quot;StatusRegion&quot;, typeof(StatusBar)) i get another weird exception at RegionViewRegistry.CreateInstance: &quot;Activation error occured while trying to get instance of type StatusBar, key &quot;&quot;&quot;</p>",
    "PostedDate": "2010-07-14T02:43:40.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467185",
    "ThreadId": "219398",
    "Html": "<p>found the answer: (3)</p>\r\n<p>The view should have the [Export] attribute also</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-07-14T04:04:56.807-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467880",
    "ThreadId": "219398",
    "Html": "<p>Which application are you looking at, the modularity quickstart or the MVVM RI?</p>\r\n<p>We'll see if we can add something in the guidance about working with disconnected modules and deploying them as build steps.</p>\r\n<p>-b</p>",
    "PostedDate": "2010-07-15T09:26:07.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467954",
    "ThreadId": "219398",
    "Html": "Hi brumfb\r\n\r\nthanks for the answer, I'm talking about the modularity - which currently, is the only sample involving MEF, the RI application is unity based\r\n",
    "PostedDate": "2010-07-15T12:48:23.963-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "468003",
    "ThreadId": "219398",
    "Html": "<p>The Modularity Quick Starts are meant to show most of the standard scenarios that are possible.&nbsp; If you want to see the simplest way to do on demand loading, for example, between the code and the docs (which we are working on and should be in the next drop) you should be able to grasp the concept of modularity in isolation.&nbsp; For more complex and closer to &quot;real world&quot; scenarios,&nbsp;we have the reference implementations (the stock trader and the survey).&nbsp;</p>\r\n<p>What did you expect from the quickstarts?&nbsp; A starter solution/soluton template?&nbsp;Or something&nbsp;else?</p>\r\n<p>What else would you want to see&nbsp;demonstrated in either the quickstarts or the reference implemntations that we are not showing?</p>\r\n<p>Thanks,</p>\r\n<p>Michael Puleio</p>",
    "PostedDate": "2010-07-15T16:23:07.523-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "468528",
    "ThreadId": "219398",
    "Html": "Hi Michael, \r\n\r\nglad to hear you are working on the documentation for the next drop. The RI application is currently Unity based, and as far as i see it (according to Prism team members blogs) MEF is the real highlight of the V4 release. <br>\r\nregardless, the RI IMHO is not a real world application in the sense of the wind drift in the forms/issue tracker. most of the users are talking about toolbar (normally ribbon), tree view module, and main module. async communication, responsive UI. <br>\r\nin my case, i have an unresolved issue while i tried to compose two module in the same shell using MEF. This simple situation should work out of the box even in drop version - but it does not (both for silverlight and WPF), another one simple situation IMHO is the region manger that does not have any views. <br>\r\n<br>\r\nif proper samples where supplied, I'm sure you would catch these issue before delivery, and make some of the  community more &quot;happy&quot; with out of the box working samples.<br>\r\n<br>\r\nMichael, I'm willing to contribute such samples - but I'm not sure how. \r\n<br><br>\r\n\r\np.s.<br>\r\nsome examples<br>\r\nhttp://compositewpf.codeplex.com/workitem/6985<br>\r\nhttp://compositewpf.codeplex.com/workitem/6992\r\n\r\n\r\n",
    "PostedDate": "2010-07-17T09:17:43.727-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "469133",
    "ThreadId": "219398",
    "Html": "<p>Thanks for the feedback.&nbsp; We have plans to convert the Stock Trader RI to use MEF, which should help us both show a more &quot;real&quot; (or at least closer to real) app using MEF and tease out a few issues that the minimal quickstarts don't expose. I'll also look at the issue tracker problems you mentioned and see if we can get them fixed soon.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-07-19T10:53:23.973-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]