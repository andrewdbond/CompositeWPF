[
  {
    "Id": "809936",
    "ThreadId": "348495",
    "Html": "\r\n<p>Please comment on&nbsp;reasons to use Unity to register a type as a singleton over using a static class instead:</p>\r\n<p>- Design Pattern Comments</p>\r\n<p>- Testing Patterns</p>\r\n<p>- Performance/Speed Data</p>\r\n",
    "PostedDate": "2012-03-13T17:08:53.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "810394",
    "ThreadId": "348495",
    "Html": "<p>Hi,<br /><br />Based on my understanding this choice will depend on the different requirements of your scenario.</p>\r\n<p>In my opinion using the <strong>Unity </strong>Container might result profitable specially in cases where:</p>\r\n<ul>\r\n<li>Classes have dependencies on other objects or classes</li>\r\n<li>Dependencies are complex or require abstraction</li>\r\n<li>Dependency injection might result handy</li>\r\n</ul>\r\n<p>Additionally using <strong>Unity </strong>allows you to abstract from the implementation of your class as you will be able to resolve them through an interface. Allowing you to swap the implementation details of the class without affecting the components that depends on it.</p>\r\n<p>Take into account that Dependency injection through <strong>Unity </strong>can have a minor impact on performance, and it can increase complexity where only simple dependencies exist. In those cases it could make sense to use static classes instead of a singleton in the container.</p>\r\n<p>Also, you could find more information about this in the following links:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921140(v=pandp.40).aspx#sec2\">Chapter 3: Managing Dependencies Between Components, Considerations for Using the Container</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff660859(v=pandp.20).aspx\">When Should I Use Unity?</a></li>\r\n</ul>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>ï»¿</p>",
    "PostedDate": "2012-03-14T11:16:16.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]