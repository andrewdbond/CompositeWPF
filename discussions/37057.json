[
  {
    "Id": "122953",
    "ThreadId": "37057",
    "Html": "I'm looking forward to use Prism, but I have a question.<br>\r\n<br>\r\nFor example I have ModuleA, and ModuleB. <br>\r\n<br>\r\nI want to invoke MethodB from ModuleA.&nbsp; Is there any way to do it?<br>\r\n",
    "PostedDate": "2008-10-04T22:24:57.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "123187",
    "ThreadId": "37057",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Hi,</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">One possible approach would be to use the <b>Event Aggregator</b>. However, you must keep in mind that a published event may be captured by more than one subscriber (if there are more than one instance of the subscriber class) and there can be also more than one publisher for an event.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">For an example, you may have a look at the </span><a href=\"http://msdn.microsoft.com/en-us/library/cc707857.aspx\"><span style=\"color:#0000ff;font-family:Calibri\">Event Aggregation QuickStart</span></a><span style=\"font-family:Calibri\">.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">For more information, you may check the following topics:</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span>·<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span><a href=\"http://msdn.microsoft.com/en-us/library/cc707867.aspx\"><span style=\"color:#0000ff;font-family:Calibri\">Event Aggregator</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span>·<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span><a href=\"http://msdn.microsoft.com/en-us/library/cc707855.aspx\"><span style=\"color:#0000ff;font-family:Calibri\">How to: Create and Publish Events</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span>·<span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span><a href=\"http://msdn.microsoft.com/en-us/library/cc707892.aspx\"><span style=\"color:#0000ff;font-family:Calibri\">How to: Subscribe and Unsubscribe to Events</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Another possible approach would be to declare an interface for the class (whose methods you want to invoke) in a common module (referenced by Module A and Module B) and then register an instance of that class in the container (e.g.: in Module A), so that the other module (e.g.: in Module B) can retrieve it through its interface and invoke its methods.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">You may also use services for the same purpose.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Hope it helps.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:Calibri\">Ignacio Baumann Fonay</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><a href=\"http://blogs.southworks.net/ibaumann/\"><span><span style=\"color:#0000ff;font-family:Calibri\">http://blogs.southworks.net/ibaumann/</span></span></a> </p>\r\n</span></span></span>\r\n",
    "PostedDate": "2008-10-06T08:01:42.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]