[
  {
    "Id": "451212",
    "ThreadId": "214863",
    "Html": "<p>I have a requirement -\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>I need to use a region twice in a project at two different modules, with mvvm pattern in each module.&nbsp;\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>I hold a combo box in this region. I want to do a selection change globally on both the modules, when i do a selection at any one place on the application.&nbsp;\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>I&nbsp;am able to follow mvvm pattern and using INotifyPropertyChanged, I am able to do the global change on both combos on load by holding the data on isolated storage. Second time when i try to do a change, I am able to only find change at one region, second region holds the old data. Which means i am not able to trigger the notificationchanged for the other region.&nbsp;\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;private IsolatedStorageSettings appSettings = IsolatedStorageSettings.ApplicationSettings;\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>public long currentsortitem</p>\r\n<p>{</p>\r\n<p>get</p>\r\n<p>{</p>\r\n<p>if(appSettings[&quot;currentsortitem&quot;] != null)</p>\r\n<p>{</p>\r\n<p>_currentsortitem = Convert.ToInt64(appSettings[&quot;currentsortitem&quot;]);}</p>\r\n<p>return _currentsortitem;</p>\r\n<p>}</p>\r\n<p>set</p>\r\n<p>{</p>\r\n<p>if (_currentsortitem != value)</p>\r\n<p>{<br>_currentsortitem = value;</p>\r\n<p>appSettings[&quot;currentsortitem&quot;] = _currentsortitem;</p>\r\n<p>NotifyPropertyChanged(&quot;currentsortitem&quot;);}</p>\r\n<p>}</p>\r\n<p>}&nbsp;</p>\r\n<p>In the xaml :\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;&nbsp;<span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">ComboBox</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> x</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">:</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\">Name</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;sortcombo&quot;</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> ItemsSource</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;{</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Binding</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> sortlist</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">}&quot;</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> SelectedValue</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;{</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Binding</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> currentsortitem</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">,</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> Mode</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=TwoWay}&quot;</span></span></span><span style=\"font-family:Consolas;font-size:x-small\"><span style=\"font-family:Consolas;font-size:x-small\"> /&gt;</span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\">\r\n<p>&nbsp;</p>\r\n</span></span></span></span></span></p>\r\n<p>&nbsp;</p>\r\n<p>Can somebody help me on this ?</p>\r\n<p>Regards,</p>\r\n<p><span><span><span><span><span>\r\n<p>Muthu, EMC Corporation,India</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></span></span></span></span></p>",
    "PostedDate": "2010-06-03T07:51:35.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467489",
    "ThreadId": "214863",
    "Html": "<p>Hi Muthu,</p>\r\n<p>Based on our understanding, you need to add the same view twice and reflect the performed changes/updates in the ViewA to ViewB and conversely ViewB to ViewA by using MVVM.</p>\r\n<p>The approach of binding in two way to a property in the view model seems to be correct, but this scenario can be achieved by taking into account this and also the following things:</p>\r\n<ol>\r\n<li>As this is a Silverlight application if you want to use the two way &ldquo;binding mode&rdquo;, you must implement <a href=\"http://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged(VS.95).aspx\">INotifyPropertyChanged</a> in your view model. For more information about binding you could take a look at this <a href=\"http://msdn.microsoft.com/en-us/library/cc278072(VS.95).aspx\">link</a> on MSDN. </li>\r\n<li>Last but not least, you would have to share the same instance of your view model between the ViewA and ViewB, so at this point you could register a type with unity of your view model with a particular LifeTimeManager named <a href=\"http://msdn.microsoft.com/en-us/library/microsoft.practices.unity.containercontrolledlifetimemanager.aspx\">ContainerControlledLifetimeManager</a>. For more information about how to use Lifetime Managers you could visit <a href=\"http://msdn.microsoft.com/en-us/library/ff648098.aspx\">this page</a> on MSDN. </li>\r\n</ol>\r\n<p>Regarding how to show the same view, I think that the better approach is to register the same view in two different regions at the same time, therefore, as a view belongs to a specific module (where it was created),&nbsp; that module is the one that should register the view twice.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-07-14T15:07:09.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]