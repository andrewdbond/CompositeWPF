[
  {
    "Id": "870890",
    "ThreadId": "371338",
    "Html": "\r\n<p>I'd like to know the necessary steps to migrate a project developed using MEF to Unity and viceversa.</p>\r\n<p>I'm using Silverlight 5 and Prism 4.1.</p>\r\n",
    "PostedDate": "2012-07-17T09:22:55.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "874102",
    "ThreadId": "371338",
    "Html": "<p>Hi,</p>\r\n<p>As far as I know, there is no specific guidance with steps on how to migrate from one container to the other. As mentioned in this <a href=\"http://compositewpf.codeplex.com/discussions/228924?ProjectName=compositewpf\">related thread</a> by Michael Puleio, porting from one to the other shouldn't require much effort:</p>\r\n<p><em>The development styles differ quite a bit due to the different approaches in design an scenarios for usage.&nbsp; With MEF, it is recommended to do declarative programming (attributes for registration/exporting and importing).&nbsp; With Unity, the more common approach is a lot more imperative (registration via code rather than attributes). Constructor injection is preferred in Unity (even though it can do property injection) vs property injection is preferred in MEF (even though it can do constructor injection).</em></p>\r\n<p><em>The biggest challenge you will run into is the different styles, which I highlighted above.&nbsp; Once you get past the style differences, it is a matter of ensuring all the types, services, etc get registered properly in the container, which requires deciphering a lot of very verbose error messages in exceptions.</em></p>\r\n<p>In my opinion, as a starting point to achieve this, I believe you should consider the different specific capabilities of each container. You could find useful information about this in <a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28v=pandp.40%29\">Chapter 3</a> of the <strong>Prism </strong>documentation.</p>\r\n<p>Also, I believe the tips mentioned in this blog post could result useful:</p>\r\n<ul>\r\n<li><a href=\"http://www.overroot.com/blog/2011/05/29/how-to-migrate-an-application-from-unityprism-to-mefprism/\">How to Migrate an Application from Unity/Prism to MEF/Prism</a></li>\r\n</ul>\r\n<p>Additionally, take into account that you could use the different examples provided along the <strong>Prism </strong>documentation, on how to achieve specific scenarios with each of the containers. For example I particularly believe that the following sections could result handy:</p>\r\n<ul>\r\n<li>Chapter 2 Initializing Prism Applications\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430868(v=pandp.40)#sec13\">Creating and Configuring the Container in the UnityBootstrapper</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430868(v=pandp.40)#sec14\">Creating and Configuring the Container in the MefBootstrapper</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921140(v=pandp.40)\">Chapter 3 Managing Dependencies Between Components</a> (for examples on how to register types and resolve instances)</li>\r\n<li>Chapter 4 Modular Application Development\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405479(v=pandp.40)#sec38\">Modules in MEF</a> (highlights the differences when defining Modules with MEF)</li>\r\n</ul>\r\n</li>\r\n<li>Chapter 6 Advanced MVVM Scenarios\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405494(v=pandp.40)#sec16\">Creating the View and View Model Using MEF</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405494(v=pandp.40)#sec17\">Creating the View and View Model Using Unity</a></li>\r\n</ul>\r\n</li>\r\n<li>Chapter 8 Navigation\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430861(v=pandp.40)#sec8\">Basic Region Navigation</a> (different approaches for Views registration when using region navigation).</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-07-18T10:34:29.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "878140",
    "ThreadId": "371338",
    "Html": "<p>Thank you Agustin. I'll check your info.</p>",
    "PostedDate": "2012-07-19T16:59:37.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]