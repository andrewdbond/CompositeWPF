[
  {
    "Id": "560746",
    "ThreadId": "244643",
    "Html": "\r\n<p>Dear All,</p>\r\n<p>&nbsp;</p>\r\n<p>I am a bit stuck with this. I have introduced a new paremeter in a ctor of my NavigationViewModel. &nbsp;Now Prism can't resolve the parameter any more. And I get this error message:</p>\r\n<p>Microsoft JScript runtime error: Unhandled Error in Silverlight Application An exception occurred while initializing module 'NavigationModule'.&nbsp;&nbsp;&nbsp; &nbsp;- The exception message was: Activation error occured while trying to get instance of\r\n type NavigationModule, key ''&nbsp;&nbsp; &nbsp;Check the InnerException property of the exception for more information. If the exception occurred&nbsp;&nbsp;&nbsp; &nbsp;while creating an object in a DI container, you can exception.GetRootException() to help\r\n locate the&nbsp;&nbsp;&nbsp; &nbsp;root cause of the problem. &nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.ModuleInitializer.HandleModuleInitializationError(ModuleInfo moduleInfo, String assemblyName, Exception exception)&nbsp;&nbsp; at Microsoft.Practices.Prism.Modularity.ModuleInitializer.Initialize(ModuleInfo\r\n moduleInfo)&nbsp;&nbsp; at Microsoft.Practices.Prism.Modularity.ModuleManager.LoadModulesThatAreReadyForLoad()</p>\r\n<p>My navigationModule has the ctor like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> NavigationModule(IUnityContainer container, IRegionManager regionManager)\r\n        {\r\n            _container = container;\r\n            _regionManager = regionManager;\r\n            \r\n<span style=\"color:green\">//Atempt to register DomainClient, which doesn't seem to work.</span>\r\n_container.RegisterType&lt;DomainClient&gt;(<span style=\"color:blue\">new</span> ContainerControlledLifetimeManager());\r\n            _regionManager.RegisterViewWithRegion(Constants.NavRegion, () =&gt; _container.Resolve&lt;NavigationView&gt;());\r\n            _regionManager.RegisterViewWithRegion(Constants.ToolbarRegion, () =&gt; _container.Resolve&lt;ToolbarView&gt;());\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Navigation View Model owns by Navigation View looks simply like this:<br>\r\n<br>\r\n</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> NavigationViewModel(DomainClient client)\r\n        {\r\n            _context = <span style=\"color:blue\">new</span> SCMDomainContext(client);\r\n            ConstructCommon();\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>I suspect the problem is that DomainClient is an abstract class from RIA Services and the IoC can't create an instance of this abstract class, hence the error correct?<br>\r\nIn this case, I would be happy if I could force it to ignore the ctor with the abstract DomainClient parameter, and rather try to resolve a different ctor with the non-abstract SCMDomainContext like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> NavigationViewModel(SCMDomainContext context)\r\n        {\r\n            _context = context;\r\n            ConstructCommon();\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>1) How would I do that in Unity?</p>\r\n<p>2) Problem with MEF is that it needs an export attribute, but even the non-abstract&nbsp;SCMDomainContext is auto generated code by RIA services. I couldn't just go there and add an [Export] attribute on top of it?&nbsp;And how would I do this with MEF?&nbsp;</p>\r\n<p><br>\r\n<strong>UPDATE:<br>\r\n</strong>I tried to use this to select the correct ctor for injection, but it failed.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> _container.Configure&lt;InjectedMembers&gt;().ConfigureInjectionFor&lt;NavigationViewModel&gt;(<span style=\"color:blue\">new</span> InjectionConstructor(_container.Resolve&lt;SCMDomainContext&gt;()));\r\n            _container.RegisterType&lt;SCMDomainContext&gt;(<span style=\"color:blue\">new</span> ContainerControlledLifetimeManager());<br>\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Besides the Injectedmember is obsolete anyway, I wondr how I have to do it nowadays. :)<br>\r\nI got frustrated and&nbsp;removed the ctor with the abstract class injection temporarily all together so that only one ctor with SCMDomainContext can be injected in. But it can't even resolve the non-abstract SCMDomainContext, which is auto generated code by\r\n RIA.</p>\r\n<p>Arrgh<br>\r\n<br>\r\nYour help on this is highly appreciated,<br>\r\nHouman&nbsp;</p>\r\n",
    "PostedDate": "2011-02-04T05:47:44.433-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563475",
    "ThreadId": "244643",
    "Html": "\r\n<p>Hi Houman,</p>\r\n<p>Take into account that Unity only <strong>resolve instances</strong> of concrete classes. Since your\r\n<em>DomainClient</em> is an abstract class, that is the cause of your error when trying to register on the container, in the NavigationModule.</p>\r\n<p>One possible way to achieve this scenario, could be to register a <em>DomainClient</em> instance in the container on your module. For example:</p>\r\n<p></p>\r\n<p><span lang=\"EN-US\" style=\"font-size:9.5pt\"></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">//retrieve your DomainClient and create the instance of it, named client...</span>\r\nConcreteClient concreteClient = client;\r\n_container.RegisterInstance(concreteClient, <span style=\"color:blue\">new</span> ContainerControlledLifetimeManager());<span style=\"color:green\">//by doing this you always are going to retrieve the same instance</span>\r\n           ...\r\n<span style=\"color:blue\">public</span> NavigationViewModel(ConcreteClient client){&hellip;}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\nThis way your view model will resolve you client instance and then setup the SCMDomainContext.</span>\r\n<p></p>\r\n<p></p>\r\n<p>Take into account, that you could do the same using MEF, by just simple decorate your concrete classes.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-09T11:22:22.837-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]