[
  {
    "Id": "1048983",
    "ThreadId": "445049",
    "Html": "I have a TreeView with HierarchicalDataTemplate. In the leaf node of the treeview, I have a button<br />\nbinding to a command object, which have done the job as I expected.<br />\n<br />\nHere is the working Xaml code:<br />\n<br />\n&lt;UserControl x:Class=&quot;YhControls.Views.ListFilesView&quot;<br />\n<pre><code>         xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n         xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n         xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; \n         xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; \n         xmlns:i=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;\n         xmlns:m=&quot;clr-namespace:YhCommon;assembly=YhCommon&quot;\n         xmlns:vm=&quot;clr-namespace:YhControls.ViewModels&quot;\n         mc:Ignorable=&quot;d&quot; \n         d:DesignHeight=&quot;300&quot; d:DesignWidth=&quot;300&quot;&gt;\n&lt;Grid Name=&quot;root&quot;&gt;\n    &lt;Grid.Resources&gt;\n        &lt;HierarchicalDataTemplate DataType = &quot;{x:Type vm:Node}&quot;  ItemsSource = &quot;{Binding Path=nodes}&quot;&gt;\n            &lt;TextBlock Text=&quot;{Binding Path=Name}&quot; /&gt;\n        &lt;/HierarchicalDataTemplate&gt;\n        &lt;HierarchicalDataTemplate DataType = &quot;{x:Type vm:Leaf}&quot;  ItemsSource = &quot;{Binding Path=nodes}&quot; &gt;\n            &lt;Button Content=&quot;{Binding Path=Name}&quot; Command=&quot;{Binding ElementName=root,Path=DataContext.ShowFileCommand}&quot; CommandParameter=&quot;{Binding }&quot; /&gt;\n\n        &lt;/HierarchicalDataTemplate&gt;\n    &lt;/Grid.Resources&gt;</code></pre>\n\n.....<br />\n&lt;/UserControl&gt;<br />\n<br />\nNow I want change the implementation from &quot;Binding Commands&quot; to &quot;InvokeCommandAction&quot;.<br />\n<br />\nHere is the version of &quot;InvokeCommandAction&quot;:<br />\n<br />\n&lt;UserControl x:Class=&quot;YhControls.Views.ListFilesView&quot;<br />\n<pre><code>         xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n         xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n         xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; \n         xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; \n         xmlns:i=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;\n         xmlns:m=&quot;clr-namespace:YhCommon;assembly=YhCommon&quot;\n         xmlns:vm=&quot;clr-namespace:YhControls.ViewModels&quot;\n         mc:Ignorable=&quot;d&quot; \n         d:DesignHeight=&quot;300&quot; d:DesignWidth=&quot;300&quot;&gt;\n&lt;Grid Name=&quot;root&quot;&gt;\n    &lt;Grid.Resources&gt;\n        &lt;HierarchicalDataTemplate DataType = &quot;{x:Type vm:Node}&quot;  ItemsSource = &quot;{Binding Path=nodes}&quot;&gt;\n            &lt;TextBlock Text=&quot;{Binding Path=Name}&quot; /&gt;\n        &lt;/HierarchicalDataTemplate&gt;\n        &lt;HierarchicalDataTemplate DataType = &quot;{x:Type vm:Leaf}&quot;  ItemsSource = &quot;{Binding Path=nodes}&quot; &gt;\n            &lt;Button Content=&quot;{Binding Path=Name}&quot;  &gt;\n                    &lt;i:Interaction.Triggers&gt;\n                    &lt;i:EventTrigger EventName=&quot;Click&quot; &gt;\n                        &lt;i:InvokeCommandAction Command=&quot;{Binding ElementName=root,Path= DataContext.ShowFileCommand}&quot; CommandParameter=&quot;{Binding }&quot;  /&gt;\n                    &lt;/i:EventTrigger&gt;\n                &lt;/i:Interaction.Triggers&gt;\n            &lt;/Button&gt;\n        &lt;/HierarchicalDataTemplate&gt;\n\n    &lt;/Grid.Resources&gt;</code></pre>\n\n...<br />\n&lt;/UserControl&gt;<br />\n<br />\nBut, in &quot;InvokeCommandAction&quot; version, I got exception:<br />\n&quot;Baml stream has unexpected record. Try to add to InvokeCommandAction, <br />\nbut it is not a collection or which has TypeConverter.&quot;<br />\n<br />\nHope some one can help me.<br />\n",
    "PostedDate": "2013-05-26T21:46:45.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1049217",
    "ThreadId": "445049",
    "Html": "Hi,\r<br />\n<br />\nBased on your code snippets, I don't see what could be the root of your problem that is causing that exception. It would be helpful if you could provide more details about what you are trying to achieve and why you need to use <strong>InvokeCommandAction</strong> instead of simply binding the button to a command. Also, it would be useful if you post the entire exception message so we can dig a little further on the problem.\r<br />\n<br />\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a><br />\n",
    "PostedDate": "2013-05-27T09:44:24.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1049360",
    "ThreadId": "445049",
    "Html": "fmartinez,\r<br />\n<br />\nSorry, I cannot rebuild the senario.\r<br />\n<br />\nBut I guess that may be there are some incompatibility between Nuget packages Blend.Interactivity.WPF.v4.0 and Blend.Interactivity.WPF.\r<br />\n<br />\nIn my solution, some projects reference Nuget package Blend.Interactivity.WPF.v4.0 and some use Blend.Interactivity.WPF and some use both. I guess it IS the source of\r<br />\nproblem.  After I only reference Blend.Interactivity.WPF.v4.0, the program is OK now and I do not know how to rebuild the scene.\r<br />\n<br />\nInstall Blend.Interactivity.WPF.v4.0, Blend.Interactivity.WPF and uninstall them in different sequences will show some Phenomenon strange to me.\r<br />\n<br />\nWhy I want use <strong>InvokeCommandAction</strong>?<br />\n<ol>\n<li>After I replace Button with TextBlock, Content with Text, and Click with MouseDown, every thing is OK as expected.</li>\n<li>When program is running, if I press arrow key DOWN, the selected  treeview leaf changed. I try to use this feature to raise event. (because use arrow key is more convenient than mouse in my project).</li>\n<li>\nI modify TextBlock with property Focusable=&quot;True&quot; and replace MouseDown with GotFocus, but this DO NOT work. I am still trying to solve this problem.<br />\n</li>\n</ol>\nHope you can help me.\r<br />\nThanks<br />\n",
    "PostedDate": "2013-05-27T18:22:46.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1049718",
    "ThreadId": "445049",
    "Html": "Hi,\r<br />\n<br />\nI'm glad you could solve your original problem. \r<br />\n<br />\nRegarding your second problem, it would be helpful if you could provide us a sample of your application so we can help you implement the functionality you are describing in an <strong>InvokeCommandAction</strong>.\r<br />\n<br />\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-05-28T10:08:26.26-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1050454",
    "ThreadId": "445049",
    "Html": "Federico,<br />\n<br />\nMy Goal: <br />\nImplement a WPF TreeView, it will response when user browse to any leaf TreeViewItem of the TreeView.<br />\n<h1>My Project QTVB compose of following tree files.</h1>\n(1)  MainWindow.xaml<br />\n<pre><code>&lt;Window x:Class=&quot;QTVB.MainWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:i=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;\n        Title=&quot;MainWindow&quot; Height=&quot;350&quot; Width=&quot;525&quot;&gt;\n    &lt;DockPanel&gt;\n        &lt;Button Content=&quot;Setup&quot; DockPanel.Dock=&quot;Top&quot; Command=&quot;{Binding SetupCommand}&quot; /&gt;\n        &lt;TextBox Text=&quot;{Binding Message}&quot; DockPanel.Dock=&quot;Top&quot;/&gt;\n        &lt;TreeView Name=&quot;root&quot; ItemsSource=&quot;{Binding Leafs}&quot;&gt;\n            &lt;TreeView.ItemTemplate&gt;\n                &lt;HierarchicalDataTemplate ItemsSource = &quot;{Binding Path=nodes}&quot;&gt;\n                    &lt;TextBlock Text=&quot;{Binding Path=Name}&quot; &gt;\n                        &lt;i:Interaction.Triggers&gt;\n                            &lt;i:EventTrigger EventName=&quot;MouseDown&quot; &gt;\n                                &lt;i:InvokeCommandAction Command=&quot;{Binding ElementName=root,Path= DataContext.FooCommand}&quot; CommandParameter=&quot;{Binding }&quot;  /&gt;\n                            &lt;/i:EventTrigger&gt;\n                        &lt;/i:Interaction.Triggers&gt;\n                    &lt;/TextBlock&gt;\n                &lt;/HierarchicalDataTemplate&gt;\n            &lt;/TreeView.ItemTemplate&gt;\n        &lt;/TreeView&gt;\n    &lt;/DockPanel&gt;\n&lt;/Window&gt;</code></pre>\n\n(2) MainWindow.xaml.cs<br />\n<pre><code>namespace QTVB\n{\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            DataContext = new MainViewModel();\n        }\n    }\n}</code></pre>\n\n(3) MainViewModel.cs<br />\n<pre><code>namespace QTVB\n{\n    public class MainViewModel:NotificationObject\n    {\n        public const string LeafsPropertyName = &quot;Leafs&quot;;\n        private ObservableCollection&lt;Leaf&gt; _Leafs = new ObservableCollection&lt;Leaf&gt;();\n        public ObservableCollection&lt;Leaf&gt; Leafs\n        {\n            get\n            {\n                return _Leafs;\n            }\n            set\n            {\n                if (_Leafs == value)\n                {\n                    return;\n                }\n                _Leafs = value;\n                RaisePropertyChanged(LeafsPropertyName);\n            }\n        }\n        public const string MessagePropertyName = &quot;Message&quot;;\n        private string _Message = string.Empty;\n        public string Message\n        {\n            get\n            {\n                return _Message;\n            }\n            set\n            {\n                if (_Message == value)\n                {\n                    return;\n                }\n                _Message = value;\n                RaisePropertyChanged(MessagePropertyName);\n            }\n        }\n        private DelegateCommand&lt;Leaf&gt; _FooCommand;\n        public DelegateCommand&lt;Leaf&gt; FooCommand\n        {\n            get\n            {\n                return _FooCommand\n                    ?? (_FooCommand = new DelegateCommand&lt;Leaf&gt;(\n                                          (p) =&gt;\n                                          {\n                                              if (p.IsLeaf) Message = p.Name;\n                                          }));\n            }\n        }\n        private DelegateCommand _SetupCommand;\n        public DelegateCommand SetupCommand\n        {\n            get\n            {\n                return _SetupCommand\n                    ?? (_SetupCommand = new DelegateCommand(\n                                          () =&gt;\n                                          {\n                                              ConstructLeafs();\n                                          }));\n            }\n        }\n        public MainViewModel()\n        {\n            ConstructLeafs();\n        }\n        public void ConstructLeafs()\n        {\n            Leafs.Clear();\n            Leafs.Add(new Leaf(&quot;Stem1&quot;, false));\n            Leafs.Add(new Leaf(&quot;Stem2&quot;, false));\n            Leafs[0].nodes.Add(new Leaf(&quot;leaf11&quot;, true));\n            Leafs[0].nodes.Add(new Leaf(&quot;leaf12&quot;, true));\n            Leafs[0].nodes.Add(new Leaf(&quot;leaf13&quot;, true));\n            Leafs[1].nodes.Add(new Leaf(&quot;leaf21&quot;, true));\n            Leafs[1].nodes.Add(new Leaf(&quot;leaf22&quot;, true));\n        }\n    }\n    public class Leaf : NotificationObject\n    {\n        public const string NamePropertyName = &quot;Name&quot;;\n        private string _Name = string.Empty;\n        public string Name\n        {\n            get\n            {\n                return _Name;\n            }\n            set\n            {\n                if (_Name == value)\n                {\n                    return;\n                }\n                _Name = value;\n                RaisePropertyChanged(NamePropertyName);\n            }\n        }\n        public const string IsLeafPropertyName = &quot;IsLeaf&quot;;\n        private bool _IsLeaf = false;\n        public bool IsLeaf\n        {\n            get\n            {\n                return _IsLeaf;\n            }\n            set\n            {\n                if (_IsLeaf == value)\n                {\n                    return;\n                }\n                _IsLeaf = value;\n                RaisePropertyChanged(IsLeafPropertyName);\n            }\n        }\n        public ObservableCollection&lt;Leaf&gt; nodes\n        {\n            get;\n            set;\n        }\n        public Leaf(string name,bool isleaf)\n        {\n            Name = name;\n            IsLeaf = isleaf;\n            nodes = new ObservableCollection&lt;Leaf&gt;();\n        }\n    }\n}\n</code></pre>\n\nIn this project QTVB , user can click at the leaf TreeViewItem to let FooCommand execute as expected. But when user use arrow key to navigate among leaf TreeViewItem, nothing happens.<br />\n<br />\nSo I create project QTVB2. In QTVB2, the only difference is the file MainWindow.xaml.<br />\n(1) MainWindow.xaml<br />\n<pre><code>&lt;Window x:Class=&quot;QTVB.MainWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:i=&quot;clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity&quot;\n        Title=&quot;MainWindow&quot; Height=&quot;350&quot; Width=&quot;525&quot;&gt;\n    &lt;DockPanel&gt;\n        &lt;Button Content=&quot;Setup&quot; DockPanel.Dock=&quot;Top&quot; Command=&quot;{Binding SetupCommand}&quot; /&gt;\n        &lt;TextBox Text=&quot;{Binding Message}&quot; DockPanel.Dock=&quot;Top&quot;/&gt;\n        &lt;TreeView Name=&quot;root&quot; ItemsSource=&quot;{Binding Leafs}&quot; &gt;\n            &lt;i:Interaction.Triggers&gt;\n                &lt;i:EventTrigger EventName=&quot;SelectedItemChanged&quot; &gt;\n                    &lt;i:InvokeCommandAction Command=&quot;{Binding FooCommand}&quot; CommandParameter=&quot;{Binding ElementName=root, Path=SelectedValue }&quot;  /&gt;\n                &lt;/i:EventTrigger&gt;\n            &lt;/i:Interaction.Triggers&gt;\n           &lt;TreeView.ItemTemplate&gt;\n                &lt;HierarchicalDataTemplate ItemsSource = &quot;{Binding Path=nodes}&quot;&gt;\n                    &lt;TextBlock Text=&quot;{Binding Path=Name}&quot; &gt;\n                    &lt;/TextBlock&gt;\n                &lt;/HierarchicalDataTemplate&gt;\n            &lt;/TreeView.ItemTemplate&gt;\n        &lt;/TreeView&gt;\n    &lt;/DockPanel&gt;\n&lt;/Window&gt;\n</code></pre>\n\nIn project QTVB2, when user browse to leaf TreeViewItem using arrow key, FooCommand execute as expected. <br />\nBut after browse to some leaf, if user click Setup button to execute SetupCommand, exception &quot;can not convert object of type System.Windows.Controls.TreeViewItem to type QTVB.Leaf&quot; throws<br />\nHow to Fix it ? Thanks.<br />\n<br />\nBest Regards<br />\nHJY<br />\n",
    "PostedDate": "2013-05-29T23:24:06.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1050748",
    "ThreadId": "445049",
    "Html": "Hi,\r<br />\n<br />\nI created a sample using the code you provided and it seems to work fine for me. I believe that your problem could be related to something else that is not in the code you provided. Nevertheless, I uploaded the sample to my <strong>SkyDrive</strong> account so you can use it.<br />\n<h1></h1>\n<ul>\n<li>\n<a href=\"https://skydrive.live.com/redir?resid=5A2B4B74A8FB9815!110\" rel=\"nofollow\">TreeView and InvokeCommandAction on Prism (Unity)</a><br />\n</li>\n</ul>\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-05-30T10:22:00.35-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1051925",
    "ThreadId": "445049",
    "Html": "Federico,<br />\n<ol>\n<li>I use my own code in another computer, It DO work. So it is true as you said &quot;your problem could be related to something else that is not in the code you provided&quot;.</li>\n<li>\n(a)<br />\n I reinstalled VS 2010 in my computer, recompiled the project, it still DID NOT work.<br />\n(b)<br />\n I installed VS 2012 in my computer, just executed the binary produced in (a), It DID work.\n</li>\n<li>\nI still do not understand what is going wrong in my computer.<br />\n</li>\n</ol>\nBest Regards\r<br />\nHJY<br />\n",
    "PostedDate": "2013-06-02T22:40:34.297-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052276",
    "ThreadId": "445049",
    "Html": "Hi,\r<br />\n<br />\nWhen I created the sample using your code, I used <strong>Visual Studio 2012</strong> to do it. Nevertheless, I recreated the sample in <strong>Visual Studio 2010</strong> and it is also working for me. Therefore, you probably have an issue with your <strong>Visual Studio 2010</strong> installation or your <strong>computer environment</strong>. \r<br />\n<br />\nAnyway, I'm glad that your solution is now working.\r<br />\n<br />\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-06-03T11:10:52.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]