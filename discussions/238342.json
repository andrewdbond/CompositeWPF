[
  {
    "Id": "535623",
    "ThreadId": "238342",
    "Html": "\r\n<p>Untitled Page</p>\r\n<p>Hi</p>\r\n<p>I'm using Prism Region Navigation with Silverlight Frame navigation Navigation as described in http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx.</p>\r\n<p>The simple case is working as you'd expect but I want to call a RIA service method in my ConfirmNavigationRequest method.The problem is that OnNavigatingFrom in the FrameNavigationWrapperPage isn't set up to handle ConfirmNavigationRequest not being totally\r\n synchronus. I.e. when ConfirmNavigationRequest returns, if the result is not present then the method will continue and skip past the cancellation step. I'll try and illustrate with a code sample.</p>\r\n<p>Here is the OnNavigateFrom from the frame wrapper page...</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;OnNavigatingFrom(<span style=\"color:#2b91af\">NavigatingCancelEventArgs</span>&nbsp;e)<br>{\r\n    <span style=\"color:blue\">this</span>.Execute&lt;<span style=\"color:#2b91af\">IConfirmNavigationRequest</span>&gt;(<br>&nbsp;&nbsp;&nbsp; ina&nbsp;=&gt;\r\n&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;    <span style=\"color:blue\">bool</span>?&nbsp;result&nbsp;=&nbsp;<span style=\"color:blue\">null</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">var</span>&nbsp;ignore&nbsp;=&nbsp;<span style=\"color:blue\">false</span>;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ina.ConfirmNavigationRequest(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <span style=\"color:blue\">\r\n    this</span>.CreateNavigationContext(e.Uri),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;=&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <span style=\"color:blue\">if</span>&nbsp;(!ignore)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    result&nbsp;=&nbsp;r;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ignore&nbsp;= <span style=\"color:blue\">true</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">\r\n    if</span>&nbsp;(result&nbsp;==&nbsp;<span style=\"color:blue\">false</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {\r\n                e.Cancel&nbsp;=&nbsp;<span style=\"color:blue\">true</span>;<br>            }\r\n        });\r\n}\r\n</pre>\r\n<p>Now if my view model looks like this...</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ConfirmNavigationRequest(<span style=\"color:#2b91af\">NavigationContext</span>&nbsp;navigationContext,&nbsp;<span style=\"color:#2b91af\">Action</span>&lt;<span style=\"color:blue\">bool</span>&gt;&nbsp;continuationCallback)<br>{\r\n    // synchronus code\r\n    continuationCallback(false);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre>\r\n<p>Then the result is set before &quot;if(result&nbsp;==&nbsp;false)&quot; is reached and e.Cancel is set correctly.</p>\r\n<p>If my view model looks like this however...</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ConfirmNavigationRequest(<span style=\"color:#2b91af\">NavigationContext</span>&nbsp;navigationContext,&nbsp;<span style=\"color:#2b91af\">Action</span>&lt;<span style=\"color:blue\">bool</span>&gt;&nbsp;continuationCallback)<br>{  \r\n<span style=\"color:blue\">    this</span>.riaContextThing.RiaMethod(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; operation,\r\n<br>                 (x)&nbsp;=&gt;\r\n<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {\r\n                     continuationCallback(x);\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });\r\n} </pre>\r\n<p>Then continuationCallback isn't called until the RiaService returns and when &quot;if(result&nbsp;==&nbsp;false)&quot; is reached, result is null and anything that happens in continuationCallback is ignored.</p>\r\n",
    "PostedDate": "2010-12-14T08:22:37.947-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "535750",
    "ThreadId": "238342",
    "Html": "\r\n<p>Hi,</p>\r\n<p>As explained in the <a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28PandP.40%29.aspx\">\r\nNavigation chapter</a> from the Prism MSDN documentation, &quot;<em>It should be noted that after the interaction request event is raised, the\r\n<strong>ConfirmNavigationRequest</strong> method immediately returns so that the user can continue to interact with the UI of the application. When the user clicks the\r\n<strong>OK</strong> or <strong>Cancel</strong> buttons on the pop-up window, the callback method of the interaction request is made, which in turn calls the continuation callback to complete the navigation operation. All the methods are called on the UI thread.\r\n Using this technique, no background threads are required. </em><em>Using this mechanism, you can control if the navigation request is carried out immediately or is deferred, pending an interaction with the user or some other asynchronous interaction (for example,\r\n as a result of a web service request). To enable navigation to proceed, you can simply call the continuation callback method, passing\r\n<strong>true</strong> to indicate that it can continue. Similarly, you can pass <strong>\r\nfalse</strong> to indicate that the navigation should be canceled.</em>&quot;</p>\r\n<p>You can read more about this in the &quot;Confirming or Cancelling Navigation&quot; section of the aforementioned chapter. You might also find\r\n<a href=\"http://blogs.msdn.com/b/kashiffl/archive/2010/10/04/prism-v4-region-navigation-pipeline.aspx\">\r\nthis article</a> from <a href=\"http://blogs.msdn.com/b/kashiffl\">Karl Shifflett</a> useful to your scenario.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-12-14T11:57:08.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "535982",
    "ThreadId": "238342",
    "Html": "\r\n<p>Hi Guido</p>\r\n<p>Thanks for showing an interest but what you say doesn't seem to apply when you integrate Silverlight Frame Navigation with Prism Navigation a la the link provided in my first post and again\r\n<a href=\"http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx\">\r\nhere</a>. The link is actually a Karl Shifflett link which follows up the one you provided.</p>\r\n<p>Also, I'm not providing the user with an OK/Cancel dialog box, I want to make a RIA services call.</p>\r\n<p>Thanks</p>\r\n<p>Ben</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-12-15T00:46:43.687-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "537452",
    "ThreadId": "238342",
    "Html": "\r\n<p id=\"x_57b07ad0-eb7f-012d-9f7e-123139181c74\">Hi,</p>\r\n<p id=\"x_57b083c0-eb7f-012d-9f7f-123139181c74\">For those who are experiencing this issue, it could be useful to know that it's being discussed in the comments of\r\n<a href=\"http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx\">\r\nthis post</a> from <a href=\"http://blogs.msdn.com/b/kashiffl/\">Karl Shifflett</a>, who has announced that he's working on a solution to this.</p>\r\n<p id=\"x_57b09830-eb7f-012d-9f81-123139181c74\">Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2010-12-17T11:13:16.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]