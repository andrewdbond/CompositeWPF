[
  {
    "Id": "622469",
    "ThreadId": "260071",
    "Html": "<p>I have problems with regions in my SL4 project while breaking it into modules. I want to do that to enable</p>\n<p>separate simultaneous development of different parts of application. Also this will be helpful in case there is</p>\n<p>a need to target multiple platforms. I've never designed Composite Applications, but think this is a good</p>\n<p>chance to try. So i've chosen Prism + MVVM Light Toolkit (like commands infrastructure that it provides,</p>\n<p>also there are bunch of articles and videocasts about it) to implement that.</p>\n<p>In Shell.xaml i have following markup (no CB):</p>\n<div style=\"color: black; background-color: white;\">\n<pre> &lt;Grid x:Name=<span style=\"color: #a31515;\">\"LayoutRoot\"</span> Background=<span style=\"color: #a31515;\">\"White\"</span>&gt;\n        &lt;Grid.RowDefinitions&gt;\n            &lt;RowDefinition Height=<span style=\"color: #a31515;\">\"Auto\"</span>&gt;&lt;/RowDefinition&gt;\n            &lt;RowDefinition Height=<span style=\"color: #a31515;\">\"Auto\"</span>&gt;&lt;/RowDefinition&gt;\n            &lt;RowDefinition Height=<span style=\"color: #a31515;\">\"Auto\"</span>&gt;&lt;/RowDefinition&gt;\n        &lt;/Grid.RowDefinitions&gt;\n        &lt;Grid.ColumnDefinitions&gt;\n            &lt;ColumnDefinition Width=<span style=\"color: #a31515;\">\"Auto\"</span>&gt;&lt;/ColumnDefinition&gt;\n            &lt;ColumnDefinition Width=<span style=\"color: #a31515;\">\"280\"</span>&gt;&lt;/ColumnDefinition&gt;\n        &lt;/Grid.ColumnDefinitions&gt;\n        &lt;!-- Ribbon --&gt;\n        &lt;UserControl x:Name=<span style=\"color: #a31515;\">\"Ribbon\"</span>\n                Regions:RegionManager.RegionName=<span style=\"color: #a31515;\">\"RibbonRegion\"</span>\n                Grid.ColumnSpan=<span style=\"color: #a31515;\">\"2\"</span> Margin=<span style=\"color: #a31515;\">\"0,24,0,0\"</span>                \n               /&gt;\n        &lt;!-- Diagram --&gt;\n        &lt;UserControl Name=<span style=\"color: #a31515;\">\"Diagram\"</span>\n                Regions:RegionManager.RegionName=<span style=\"color: #a31515;\">\"DiagramRegion\"</span>\n                Grid.Row=<span style=\"color: #a31515;\">\"1\"</span>\n                Grid.Column=<span style=\"color: #a31515;\">\"0\"</span>\n                HorizontalAlignment=<span style=\"color: #a31515;\">\"Left\"</span>                \n                /&gt;\n        &lt;!-- Lower Grid --&gt;\n        &lt;UserControl Name=<span style=\"color: #a31515;\">\"DiagnosticsPanel\"</span>\n            Regions:RegionManager.RegionName=<span style=\"color: #a31515;\">\"DiagnosticsPanelRegion\"</span>\n            Grid.Row=<span style=\"color: #a31515;\">\"2\"</span>  \n            Grid.Column=<span style=\"color: #a31515;\">\"0\"</span>\n              /&gt;\n</pre>\n<pre>&lt;/Grid&gt;</pre>\n</div>\n<p>Also i have Unity Bootstrapper :</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> Bootstrapper : UnityBootstrapper \n    {\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> DependencyObject CreateShell()\n        {\n            <span style=\"color: blue;\">var</span> shell = ServiceLocator.Current.GetInstance&lt;Shell&gt;();\n            <span style=\"color: blue;\">return</span> shell;\n        }\n\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\n        {\n            <span style=\"color: blue;\">base</span>.InitializeShell();\n            Application.Current.RootVisual = Shell <span style=\"color: blue;\">as</span> UIElement;\n            DispatcherHelper.Initialize();\n        }\n\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> IModuleCatalog CreateModuleCatalog()\n        {\n            <span style=\"color: green;\">//base.CreateModuleCatalog();</span>\n            <span style=\"color: green;\">//var moduleCatalog = new ModuleCatalog();</span>\n            <span style=\"color: green;\">//moduleCatalog.AddModule(typeof (RibbonModule.RibbonModule));</span>\n            <span style=\"color: green;\">//return moduleCatalog;</span>\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> ModuleCatalog();\n        }\n\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ConfigureModuleCatalog()\n        {\n            <span style=\"color: blue;\">var</span> ribbonModuleType = <span style=\"color: blue;\">typeof</span>(RibbonModule.RibbonModule);\n            ModuleCatalog.AddModule(<span style=\"color: blue;\">new</span> ModuleInfo(ribbonModuleType.Name, ribbonModuleType.AssemblyQualifiedName));\n        }\n\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Stop()\n        {<span style=\"white-space: pre;\">\t</span>    </pre>\n<pre>            <span style=\"color: green;\">//ViewModelLocator.Cleanup();</span>\n        }        \n    }\n</pre>\n</div>\n<p>View (no CB) :</p>\n<p><span style=\"font-family: Consolas,'Courier New',Courier,monospace; white-space: pre;\">&lt;UserControl x:Class=<span style=\"color: #a31515;\">\"RibbonModule.RibbonView\"</span></span></p>\n<p><span style=\"font-family: Consolas, 'Courier New', Courier, monospace; white-space: pre;\"> xmlns=<span style=\"color: #a31515;\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></p>\n<div style=\"color: black; background-color: white;\">\n<pre>             xmlns:x=<span style=\"color: #a31515;\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>\n             xmlns:d=<span style=\"color: #a31515;\">\"http://schemas.microsoft.com/expression/blend/2008\"</span>\n             xmlns:mc=<span style=\"color: #a31515;\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span> \n             xmlns:ViewModel=<span style=\"color: #a31515;\">\"clr-namespace:RibbonModule.ViewModel\"</span>\n             mc:Ignorable=<span style=\"color: #a31515;\">\"d\"</span>\n             Height=<span style=\"color: #a31515;\">\"300\"</span>\n             Width=<span style=\"color: #a31515;\">\"300\"</span>\n            &gt;\n\n    &lt;UserControl.Resources&gt;\n        &lt;ViewModel:MainViewModel x:Key=<span style=\"color: #a31515;\">\"mainViewModel\"</span> /&gt;\n        &lt;!--&lt;ResourceDictionary&gt;\n            &lt;ResourceDictionary.MergedDictionaries&gt;\n                &lt;ResourceDictionary Source=<span style=\"color: #a31515;\">\"Skins/MainSkin.xaml\"</span>/&gt;\n            &lt;/ResourceDictionary.MergedDictionaries&gt;\n        &lt;/ResourceDictionary&gt;--&gt;\n    &lt;/UserControl.Resources&gt;\n\n    &lt;Grid x:Name=<span style=\"color: #a31515;\">\"RibbonContainer\"</span> DataContext=<span style=\"color: #a31515;\">\"{Binding Path=., Source={StaticResource mainViewModel}}\"</span>&gt;\n\n        &lt;TextBlock FontSize=<span style=\"color: #a31515;\">\"36\"</span>\n                   FontWeight=<span style=\"color: #a31515;\">\"Bold\"</span>\n                   Foreground=<span style=\"color: #a31515;\">\"Purple\"</span>\n                   Text=<span style=\"color: #a31515;\">\"{Binding Welcome}\"</span>\n                   VerticalAlignment=<span style=\"color: #a31515;\">\"Center\"</span>\n                   HorizontalAlignment=<span style=\"color: #a31515;\">\"Center\"</span>\n                   TextWrapping=<span style=\"color: #a31515;\">\"Wrap\"</span> /&gt;\n\n    &lt;/Grid&gt;\n&lt;/UserControl&gt;\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>ViewModel :</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> MainViewModel : ViewModelBase\n{\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> Welcome\n        {\n            <span style=\"color: blue;\">get</span>\n            {\n                <span style=\"color: blue;\">return</span> <span style=\"color: #a31515;\">\"Welcome to MVVM Light\"</span>;\n            }\n        }\n}\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>RibbonModule.cs :</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> RibbonModule : IModule\n    {\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">readonly</span> IRegionManager _regionManager;\n        <span style=\"color: blue;\">private</span> IUnityContainer _container;\n        \n        <span style=\"color: blue;\">public</span> RibbonModule(IRegionManager regionManager, IUnityContainer container)\n        {\n            _regionManager = regionManager;\n            _container = container;\n        }\n        <span style=\"color: blue;\">#region</span> Implementation of IModule\n\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Initialize()\n        {\n            <span style=\"color: green;\">//_container.RegisterType&lt;ISomeService, SomeService&gt;();</span>\n            _regionManager.RegisterViewWithRegion(<span style=\"color: #a31515;\">\"RibbonRegion\"</span>, <span style=\"color: blue;\">typeof</span> (RibbonView));\n        }\n\n        <span style=\"color: blue;\">#endregion</span>\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>Project builds but at runtime I'm getting following error :</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>An exception occurred while trying to create region objects. \n    - The most likely causing exception was: 'System.Reflection.TargetInvocationException:&nbsp;</pre>\n<pre>Exception has been thrown by the target of an invocation. ---&gt;&nbsp;</pre>\n<pre>Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred while creating a region with name 'RibbonRegion'.&nbsp;</pre>\n<pre>The exception was: System.Collections.Generic.KeyNotFoundException: controlType\n   at Microsoft.Practices.Prism.Regions.RegionAdapterMappings.GetMapping(Type controlType)\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName). &nbsp;</pre>\n<pre>---&gt; System.Collections.Generic.KeyNotFoundException: controlType\n   at Microsoft.Practices.Prism.Regions.RegionAdapterMappings.GetMapping(Type controlType)\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\n   --- End of inner exception stack trace ---\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()\n   at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)\n   --- End of inner exception stack trace ---\n   at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes&nbsp;</pre>\n<pre>methodAttributes, RuntimeType typeOwner)\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture,&nbsp;</pre>\n<pre>Boolean skipVisibilityChecks)\n   at System.Delegate.DynamicInvokeImpl(Object[] args)\n   at System.Delegate.DynamicInvoke(Object[] args)\n   at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)\n   at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.\n    But also check the InnerExceptions for more detail or call .GetRootException().\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>It seems like my region binding is incorrect, but i did it according to guidlines, so maybe you can point where i missed something? Thanks in advance.</p>\n<p>p.s. Test solution is here. I doubt someone will look, but just in case -&nbsp;<a href=\"http://db.tt/HVsihUT\" target=\"_blank\">http://db.tt/HVsihUT</a> (100kb archive).</p>",
    "PostedDate": "2011-06-03T04:33:18.867-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "622511",
    "ThreadId": "260071",
    "Html": "<p>Hi,</p>\r\n<p>From the exception that you're experiencing, it looks like the problem is caused by the fact that there is no region adapter associated to the Ribbon control you're using in your region.</p>\r\n<p>You could try overriding your Bootstrapper's <strong>ConfigureRegionAdapterMappings</strong> method to map the corresponding adapter for the ribbon control. You can read more about this in the following chapters from the Prism MSDN documentation:</p>\r\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.40%29.aspx\">Chapter 7: Composing the User Interface</a></p>\r\n<p><a href=\"http://msdn.microsoft.com/en-us/library/gg430868%28PandP.40%29.aspx\">Chapter 2: Initializing Prism Applications</a></p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-06-03T06:29:17.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "624150",
    "ThreadId": "260071",
    "Html": "<p>Tried to do that, but still had no luck running the application. Then changed region host type to ContentControl and everything worked.</p>",
    "PostedDate": "2011-06-07T06:56:29.023-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]