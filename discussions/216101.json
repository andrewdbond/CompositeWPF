[
  {
    "Id": "455696",
    "ThreadId": "216101",
    "Html": "Walking thru the debugger regions get registered but grabbing the regionmanager in the module doesn't show any regions available. Anyone else seeing this...",
    "PostedDate": "2010-06-15T08:58:03.457-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "456720",
    "ThreadId": "216101",
    "Html": "<p>hi mvermeg i resolved this in mef with this chage in mefMefBootstrapper.cs</p>\r\n<p>public void Run(bool runWithDefaultConfiguration)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.CreateLogger();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Logger was created successfully.&quot;, Category.Debug, Priority.Low);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Creating module catalog.&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.CreateModuleCatalog();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Configuring module catalog.&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ConfigureModuleCatalog();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Creating catalog for MEF&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.CreateAggregateCatalog();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Configuring catalog for MEF&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ConfigureAggregateCatalog();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Creating Mef container&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.CreateContainer();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Configuring MEF container&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ConfigureContainer();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Configuring region adapters&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ConfigureRegionAdapterMappings();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Configuring default region behaviors&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ConfigureDefaultRegionBehaviors();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Registering Framework Exception Types&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.RegisterFrameworkExceptionTypes();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Creating shell&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Shell = this.CreateShell();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.Shell != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Initializing shell&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.InitializeShell();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Correct for work IRegionManager<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //HERE<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var region=this.Container.Providers[0].GetExport&lt;IRegionManager&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegionManager.SetRegionManager(this.Shell, region.Value);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Container.ComposeExportedValue&lt;IRegionManager&gt;(region.Value);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegionManager.UpdateRegions();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Initializing modules&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.InitializeModules();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Logger.Log(&quot;Bootstrapping complete&quot;, Category.Debug, Priority.Low);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>i just create IRegionManager and register the instance, and works for me i hope you can resolve your trouble.</p>\r\n<p>Juan Guillermo</p>\r\n<p>Colombia-Medellin</p>",
    "PostedDate": "2010-06-17T07:11:04.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "456803",
    "ThreadId": "216101",
    "Html": "<p>hi again mvermeg, the last solution only works with only one region, im trying to figure out how to resolve , when i have a solution i give it to you.</p>\r\n<p>Juan Guillermo</p>\r\n<p>Colombia-Medellin</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-06-17T09:19:01.203-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "456805",
    "ThreadId": "216101",
    "Html": "<p>Juan,</p>\r\n<p>the way I am setting up my project to have a the &quot;Shell&quot; which will have only 1 region &quot;ShellRegion&quot;.&nbsp; When the project starts it will look for a Module named Shell. This module contains the regions for the actual layout.&nbsp; Unless I am doing something horriblely wrong it doesn't pickup those regions and fails based on not finding the &quot;MainRegion&quot;.</p>\r\n<p>So your solution partially works at this point...&nbsp; Btw thanks :)</p>\r\n<p>&nbsp;</p>\r\n<p>Edit:&nbsp; I believe it has to do with the visualtree not seeing the additional regions..</p>\r\n<p>&nbsp;</p>\r\n<p>Morgan Vermef</p>",
    "PostedDate": "2010-06-17T09:22:07.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "456842",
    "ThreadId": "216101",
    "Html": "<p>Hi Morgan.</p>\r\n<p>&nbsp;</p>\r\n<p>Ready, you only need put this metadata [System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)] for all class in the folder Regios/Behaviors</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(AutoPopulateRegionBehavior))]<br>&nbsp;&nbsp;&nbsp; public class MefAutoPopulateRegionBehavior : AutoPopulateRegionBehavior</p>\r\n<p>&nbsp;[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(BindRegionContextToDependencyObjectBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(DelayedRegionCreationBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(RegionActiveAwareBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(DelayedRegionCreationBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(RegionManagerRegistrationBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(SyncRegionContextWithHostBehavior))]</p>\r\n<p>[System.ComponentModel.Composition.PartCreationPolicy(CreationPolicy.NonShared)]<br>&nbsp;&nbsp;&nbsp; [Export(typeof(SelectorItemsSourceSyncBehavior))]</p>\r\n<p>its only was taking one region because the Container was shared the instance the all behaviors so first DelayedRegionCreationBehavior take the first region and when take other region its update the TargetElement</p>\r\n<p>&nbsp;private static void CreateRegion(DependencyObject element)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IServiceLocator locator = ServiceLocator.Current;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#ff0000\">//Get the same instance</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DelayedRegionCreationBehavior regionCreationBehavior = locator.GetInstance&lt;DelayedRegionCreationBehavior&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#ff0000\"> //HERE</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regionCreationBehavior.TargetElement = element;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regionCreationBehavior.Attach();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>so its only load the first or last region, the second trouble was with behaviors, when you set</p>\r\n<p>protected virtual void AttachDefaultBehaviors(IRegion region, T regionTarget)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IRegionBehaviorFactory behaviorFactory = this.RegionBehaviorFactory;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (behaviorFactory != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DependencyObject dependencyObjectRegionTarget = regionTarget as DependencyObject;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (string behaviorKey in behaviorFactory)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!region.Behaviors.ContainsKey(behaviorKey))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IRegionBehavior behavior = behaviorFactory.CreateFromKey(behaviorKey);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (dependencyObjectRegionTarget != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IHostAwareRegionBehavior hostAwareRegionBehavior = behavior as IHostAwareRegionBehavior;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (hostAwareRegionBehavior != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#ff0000\">//HERE line2</span><br><span style=\"color:#ff0000\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hostAwareRegionBehavior.HostControl = dependencyObjectRegionTarget;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#ff0000\">//HERE line1</span><br><span style=\"color:#ff0000\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; region.Behaviors.Add(behaviorKey, behavior);</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>you get an error that said &quot;The Region property cannot be set after Attach method has been called.&quot; in line1 and in line2 you get an error that said &quot;The HostControl property cannot be set after Attach method has been called.&quot;</p>\r\n<p>so this is what happen here just add this metadata and all works perfect if you see more errors please tell me, in this moment im working on project that use mef and composite, so thats why i was correcting this errors.</p>\r\n<p>&nbsp;</p>\r\n<p>Juan Guillermo</p>\r\n<p>Colombia-Medellin</p>",
    "PostedDate": "2010-06-17T10:21:45.293-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457399",
    "ThreadId": "216101",
    "Html": "<p>that has it...</p>\r\n<p>seems to be working well now.&nbsp; Just have to get my viewmodels working correctly :)</p>",
    "PostedDate": "2010-06-18T12:57:35.7-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457400",
    "ThreadId": "216101",
    "Html": "<p>hi morgan</p>\r\n<p>if you use viewmodels and views take care about two things:</p>\r\n<p>1- in your view you must add the Export metadata, like this:</p>\r\n<p>[Export(typeof(AnalisisBasicoView))]<br>&nbsp;&nbsp;&nbsp; public partial class AnalisisBasicoView : UserControl</p>\r\n<p>&nbsp;</p>\r\n<p>2-in your viewmodel do something like this:</p>\r\n<p>&nbsp;[Export(typeof(AnalisisBasicoViewModel))]<br>&nbsp;&nbsp;&nbsp; public class AnalisisBasicoViewModel<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private readonly AnalisisBasicoView _view;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#ff0000\"> [ImportingConstructor]</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public AnalisisBasicoViewModel(AnalisisBasicoView view)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _view = view;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public UserControl View { get { return _view; } }<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Juan Guillermo</p>\r\n<p>Colombia-Medellin</p>",
    "PostedDate": "2010-06-18T13:03:04.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457477",
    "ThreadId": "216101",
    "Html": "<p>Just as a comment on the last post. You don't need to explicitly specify type i.e. AnalysisBasicView if the type you are exporting is the concrete type. You only need to specify if you want it to be one of the interfaces it implements / classes it derives from (UserControl).</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-06-18T19:47:36.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457739",
    "ThreadId": "216101",
    "Html": "thx gblock for you commetn, but im not agree with you for this example, cause my viewModel need AnalisisBasicoView, and if you have a lot of view exporting like UserControl, Hwo could you determine wich is the right for the viewModel, and i was giving some example based on Unity. Just it.\r\nOnce Again for this particullary example.\r\n\r\nJuan Guillermo\r\nColombia-Medellin ",
    "PostedDate": "2010-06-20T07:10:11.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457774",
    "ThreadId": "216101",
    "Html": "<p>I think there is a misunderstanding of what I meant. I am&nbsp;not suggesting that you export UserControl. What I am saying is if you put an Export on AnalisisBasicoView / AnalisisBasicoViewModel without specfying the type explicitly we default&nbsp;to the concrete type in other words...</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>[Export(<span style=\"color:blue\">typeof</span>(AnalisisBasicoViewModel))]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> AnalisisBasicoViewModel {\r\n}\r\n</pre>\r\n</div>\r\n<p>Is identical to:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>[Export]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> AnalisisBasicoViewModel {\r\n}</pre>\r\n</div>\r\n<p>As we will use the concrete type as the contract.</p>\r\n<p>If however your view model implemented an interface that you wanted to export then you need to be explicit:&nbsp;</p>\r\n<pre>[Export(typeof(IAnalisisBasicoViewModel))]\r\npublic class AnalisisBasicoViewModel : IAnalisisBasicoViewModel {\r\n}</pre>\r\n<p>&nbsp;Or you can use an InheritedExport on the interface which will automatically result in it being exported by an implementer.</p>\r\n<pre>//no export is required because the interface provides it.\r\npublic class AnalisisBasicoViewModel : IAnalisisBasicoViewModel {\r\n}\r\n\r\n[InheritedExport]\r\npublic interface IAnalisisBasicoViewModel {\r\n}</pre>\r\n<p>&nbsp;Regards</p>",
    "PostedDate": "2010-06-20T11:06:23.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "457865",
    "ThreadId": "216101",
    "Html": "<p>@Juan, sorry I wasn't very clear when I made the comment about getting my vm's working correctly.&nbsp; I meant to say wire them up :)</p>\r\n<p>@Glenn, right now I am using MEF to import the vm into the view and assign the datacontext the vm something to the nature of your blog back in march of this year (part of one of your refactoring runs).&nbsp; Everything works even came across Grench's post related to using an attach property for relating view to vm, tried didn't like that approach for one I found that it wasn't working presently with this drop.&nbsp;</p>\r\n<p>what I got out of your post is now that I should go back and make more concrete contracts via implementing interfaces.&nbsp; i haven't been using the object type to create the contract but string soup<br>(probably a bad idea) e.g. [Export(&quot;SomeViewModel&quot;)]</p>\r\n<p>Morgan.</p>",
    "PostedDate": "2010-06-20T20:50:20.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]