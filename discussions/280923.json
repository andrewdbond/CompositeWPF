[
  {
    "Id": "703698",
    "ThreadId": "280923",
    "Html": "\r\n<p>Hi All,</p>\r\n<p>I'm currently trying to make a decision about how to create a main menu in a prism app.</p>\r\n<p>Initially I was going to have a menu builder module and interface to expose the register (etc ...) menuitemviewmodels.&nbsp; This is fine for modules but then I started thinking about the File menu with it's &quot;Exit&quot; command which should really be handled\r\n in the Shell exe rather than some random module designed to help manage the menu.</p>\r\n<p>Not sure if I've explained this situation very well but I'd appreciate any input on how to go about solving this one.</p>\r\n<p>&nbsp;</p>\r\n<p>Regards,</p>\r\n<p>James</p>\r\n",
    "PostedDate": "2011-11-26T12:37:00.523-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "704717",
    "ThreadId": "280923",
    "Html": "<p>Hi,</p>\n<p>In order to close an application the closing event should be handled in the Shell, hence your module should have a way to notify when this event occurs. For example you could have your Shell subscribe to an event through the event aggregator, so that it  performs the appropriate operation to close your application when that event is published.</p>\n<p>Take into account that depending the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.application.shutdownmode.aspx\"> <strong>ShutdownMode</strong></a> you implement, the way your application react to the call may be different.</p>\n<p>On the other hand, I believe you might find the following threads useful where similar issues are addressed.</p>\n<ul>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/224510\">Composite UI and Menus</a></li>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/255174\">How to programmatically close the app?</a></li>\n</ul>\n<p>I hope you find this useful</p>\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>ï»¿</p>",
    "PostedDate": "2011-11-29T05:26:26.583-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "707621",
    "ThreadId": "280923",
    "Html": "<p>@aadami, how would you recommend handling the case where we need to verify shutdowns can continue? &nbsp;For example, I have several \"dirty\" viewmodels (my editable object in the view model &nbsp;has changed), and I have a button on a view in my ToolbarRegion that publishes an event to the Shell to shutdown. I've read a little about using CompositeCommands to offer the Save option on all viewmodels that need to save data, but it also said how this might not be the best approach. &nbsp;What is the best approach for handling this issue?</p>",
    "PostedDate": "2011-12-05T08:53:52.37-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "707702",
    "ThreadId": "280923",
    "Html": "<p>Hi,</p>\r\n<p>You might find the following blog post by Brian Noyes useful, where a possible approach to handle the aforementioned scenario is proposed:</p>\r\n<ul>\r\n<li><a rel=\"bookmark\" href=\"http://briannoyes.net/2009/09/05/SupportingGracefulShutdownAndSavingOnCloseFromAWPFPrismApp.aspx\">Supporting Graceful Shutdown and Saving on Close From a WPF Prism App</a></li>\r\n</ul>\r\n<p>I hope you find this helpful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-12-05T11:32:13.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]