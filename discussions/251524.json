[
  {
    "Id": "587741",
    "ThreadId": "251524",
    "Html": "\r\n<p>Hi,</p>\r\n<p>It seems I have discovered a bug, what do you think of this?</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> contactViewModel = _container.Resolve&lt;ContactViewModel&gt;();\r\ncontactViewModel.Initialize(contact);\r\n<span style=\"color:blue\">var</span> view = <span style=\"color:blue\">new</span> ContactView(contactViewModel);\r\nview.Name = contact.ContactID.ToString();\r\n_regionManager.Regions[Constants.MainRegion].Add(view);\r\n<span style=\"color:blue\">var</span> test = _regionManager.Regions[Constants.MainRegion].GetView(contact.ContactID.ToString());\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>test should clearly give me the View, which was just added, but it returns null. However I can easily find the Views inside</p>\r\n<pre><div style=\"color:black; background-color:white\"><pre>_regionManager.Regions[Constants.MainRegion]\r\n</pre>\r\n</div>\r\n</pre>\r\n<pre><br>The method doesn't seem to work correctly. Can anyone confirm this please?<br><br>Many Thanks,<br>Houman&nbsp;</pre>\r\n",
    "PostedDate": "2011-03-28T11:06:31.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588208",
    "ThreadId": "251524",
    "Html": "<p>Hi Houman,</p>\r\n<p>The way to add a named view to a region is to use the <a href=\"http://207.46.16.248/en-us/library/gg418985%28PandP.40%29.aspx\">IRegion.Add</a> method passing both the view and the name for it. Prism's UI Composition mechanisms are not designed to detect the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.frameworkelement.name%28VS.95%29.aspx\">FrameworkElement.Name</a> property (possible due to the fact that any kind of object, such as a string, can be added to a region as a view).</p>\r\n<p>You could try modifying your code like this:</p>\r\n<pre><pre><span style=\"color: blue;\">var</span> contactViewModel = _container.Resolve&lt;ContactViewModel&gt;();<br />contactViewModel.Initialize(contact);<br /><span style=\"color: blue;\">var</span> view = <span style=\"color: blue;\">new</span> ContactView(contactViewModel);<br /><span style=\"color: blue;\">string</span> viewName = contact.ContactID.ToString()<br />_regionManager.Regions[Constants.MainRegion].Add(view, viewName);<br /><span style=\"color: blue;\">var</span> test = _regionManager.Regions[Constants.MainRegion].GetView(contact.ContactID.ToString());<br /></pre>\r\n</pre>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-29T06:50:29.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588215",
    "ThreadId": "251524",
    "Html": "<p>Oh that makes sense.</p>\r\n<p>Thanks Guido, as usual you are the savour :)</p>",
    "PostedDate": "2011-03-29T06:59:35.273-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611302",
    "ThreadId": "251524",
    "Html": "<p>@GuidoMaliandi, I am having the same scenario where IRegion.GetView returns null just like Houmie explained.</p>\n<p>But in my scenario I am using RequesNavigate, and I don't provide the View at all (parts ordered by execution plan):</p>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">//....... Bootstrapper:</span></pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">protected</span>&nbsp;<span style=\"color: blue;\">override</span>&nbsp;<span style=\"color: blue;\">void</span>&nbsp;<span style=\"color: #020002;\">ConfigureContainer</span>()\r\n{\r\n&nbsp;&nbsp;<span style=\"color: blue;\">base</span>.<span style=\"color: #020002;\">ConfigureContainer</span>();\r\n \r\n&nbsp;&nbsp;<span style=\"color: #020002;\">Container</span>.<span style=\"color: #020002;\">RegisterType</span>&lt;<span style=\"color: blue;\">object</span>,&nbsp;<span style=\"color: #2b91af;\">LoginView</span>&gt;(<span style=\"color: blue;\">typeof</span>(<span style=\"color: #2b91af;\">LoginView</span>).<span style=\"color: #020002;\">Name</span>);\r\n}\r\n</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\">//...... In another place LoginManager.cs</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: gray;\">IRegionCollection</span>&nbsp;<span style=\"color: #020002;\">regions</span>&nbsp;=&nbsp;<span style=\"color: #020002;\">regionManager</span>.<span style=\"color: #020002;\">Regions</span>;\r\n<span style=\"color: olive;\">Action</span>&nbsp;<span style=\"color: #020002;\">navigate</span>&nbsp;=&nbsp;()&nbsp;=&gt;&nbsp;<span style=\"color: #020002;\">regionManager</span>.<span style=\"color: #020002;\">RequestNavigate</span>(<span style=\"color: #2b91af;\">RegionNames</span>.<span style=\"color: #020002;\">MainContent</span>,&nbsp;<span style=\"color: #2b91af;\">ViewNames</span>.<span style=\"color: #020002;\">LoginView</span>);\r\n \r\n<span style=\"color: blue;\">if</span>&nbsp;(<span style=\"color: #020002;\">regions</span>.<span style=\"color: #020002;\">ContainsRegionWithName</span>(<span style=\"color: #2b91af;\">RegionNames</span>.<span style=\"color: #020002;\">MainContent</span>))\r\n&nbsp;&nbsp;<span style=\"color: #020002;\">navigate</span>();\r\n<span style=\"color: blue;\">else</span>\r\n{\r\n&nbsp;&nbsp;<span style=\"color: #020002;\">regions</span>.<span style=\"color: #020002;\">CollectionChanged</span>&nbsp;+=&nbsp;(<span style=\"color: #020002;\">sender</span>,&nbsp;<span style=\"color: #020002;\">e</span>)&nbsp;=&gt;\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: blue;\">if</span>&nbsp;(<span style=\"color: #020002;\">e</span>.<span style=\"color: #020002;\">Action</span>&nbsp;==&nbsp;<span style=\"color: purple;\">NotifyCollectionChangedAction</span>.<span style=\"color: #020002;\">Add</span>&nbsp;&amp;&amp;&nbsp;<span style=\"color: #020002;\">regions</span>.<span style=\"color: #020002;\">ContainsRegionWithName</span>(<span style=\"color: #2b91af;\">RegionNames</span>.<span style=\"color: #020002;\">MainContent</span>))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #020002;\">navigate</span>();\r\n&nbsp;&nbsp;};\r\n}\r\n</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\">//....... And finally, after some event is raised (LoginManager.cs)</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">var</span>&nbsp;<span style=\"color: #020002;\">region</span>&nbsp;=&nbsp;<span style=\"color: #020002;\">regionManager</span>.<span style=\"color: #020002;\">Regions</span>[<span style=\"color: #2b91af;\">RegionNames</span>.<span style=\"color: #020002;\">MainContent</span>];<span style=\"color: green;\"><br />//Doesn't work - returns null</span></pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">var</span>&nbsp;<span style=\"color: #020002;\">view</span>&nbsp;=&nbsp;<span style=\"color: #020002;\">region</span>.<span style=\"color: #020002;\">GetView</span>(<span style=\"color: #2b91af;\">ViewNames</span>.<span style=\"color: #020002;\">LoginView</span>);<span style=\"color: #020002;\"><span style=\"color: green;\"><br /><br />//Works fine - returns the LoginView instance.</span></span></pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">if</span>&nbsp;(<span style=\"color: #020002;\">view</span>&nbsp;==&nbsp;<span style=\"color: blue;\">null</span>)&nbsp;<span style=\"color: #020002;\">view</span>&nbsp;=&nbsp;<span style=\"color: #020002;\">region</span>.<span style=\"color: #020002;\">Views</span>.<span style=\"color: #020002;\">OfType</span>&lt;<span style=\"color: #2b91af;\">LoginView</span>&gt;().<span style=\"color: #020002;\">SingleOrDefault</span>();<span style=\"color: #020002;\">﻿</span><span style=\"color: #020002;\"><span style=\"color: green;\"><br />//Another way that will not constraint the use of LoginView type.</span></span></pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\"><span style=\"color: blue;\">if</span>&nbsp;(<span style=\"color: #020002;\">view</span>&nbsp;==&nbsp;<span style=\"color: blue;\">null</span>)&nbsp;<span style=\"color: #020002;\">view</span>&nbsp;=&nbsp;<span style=\"color: #020002;\">region</span>.<span style=\"color: #020002;\">Views</span>.<span style=\"color: #020002;\">SingleOrDefault</span>(<span style=\"color: #020002;\">v</span>&nbsp;=&gt;&nbsp;<span style=\"color: #020002;\">v</span>&nbsp;!=&nbsp;<span style=\"color: blue;\">null</span>&nbsp;&amp;&amp;&nbsp;<span style=\"color: #020002;\">v</span>.<span style=\"color: #020002;\">GetType</span>().<span style=\"color: #020002;\">Name</span>&nbsp;==&nbsp;<span style=\"color: #2b91af;\">ViewNames</span>.<span style=\"color: #020002;\">LoginView</span>);<span style=\"color: #020002;\">﻿<br /></span><span style=\"color: green;\">//Remove the view</span></pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 11px;\">region.<span style=\"color: #020002;\">Remove</span>(<span style=\"color: #020002;\">view</span>);</pre>\n</pre>\n</pre>",
    "PostedDate": "2011-05-11T16:18:15.537-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611422",
    "ThreadId": "251524",
    "Html": "<p>Hi @weitzhandler,</p>\r\n<p>When you do requestnavigate it does not add a named view to the region. So GetView by name wont work.</p>",
    "PostedDate": "2011-05-11T22:11:07.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611428",
    "ThreadId": "251524",
    "Html": "<p>Any better way than the ways I did to achieve it?</p>\r\n<p>Anyway to create an ex. method RequestNavigate that will add the View name to the region collection?</p>",
    "PostedDate": "2011-05-11T22:23:35.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611465",
    "ThreadId": "251524",
    "Html": "<p>I dont understand the bit where you have hooked up the regions collection changed. You should use a RegionAdapter in that case. If your region is a SingleActiveRegion then each to navigate to a view in the region it automatically removes the old views from its Views collection. You dont have to explicitly call remove on the region manager.</p>",
    "PostedDate": "2011-05-12T00:13:04.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611769",
    "ThreadId": "251524",
    "Html": "<p>@gan_s, I will check out about RegionAdapter, thanks!</p>\n<p>If you can post an example, that would be great as well.</p>",
    "PostedDate": "2011-05-12T09:02:19.203-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "611908",
    "ThreadId": "251524",
    "Html": "<blockquote style=\"padding-bottom: 0px; font-style: italic; margin: 0.25em 1em 0px; padding-left: 0.25em; padding-right: 0.25em; padding-top: 0px; border: #ccc 0.1em solid;\"><strong>gan_s wrote:</strong><br />\r\n<p>You should use a RegionAdapter in that case. If your region is a SingleActiveRegion then each to navigate to a view in the region it automatically removes the old views from its Views collection. You dont have to explicitly call remove on the region manager.</p>\r\n</blockquote>\r\n<p>How do I work with the RegionAdapter? how do I get the adapter with IoC (Unity)? Can you please provide an example or any other resource?</p>",
    "PostedDate": "2011-05-12T11:58:23.507-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "612186",
    "ThreadId": "251524",
    "Html": "<p>The RegionAdapter basically tells the host how to manage views being loaded into it. Prism has region adapters built in for ItemsControl/ContentControl and TabControl. Lets take the example of ContentControl.</p>\n<p>In the ContentControlRegionAdapter it creates a SingleActiveRegion and it handles the views in its content such that at anyone point in time there is only one view loaded in to the Content.</p>\n<p>If you want to create a RegionAdapter for a Grid you would specify how you would want the views to be added to the Grid.Children. Thats the purpose ! So you dont have to worry about adding/removing views wherever you want to, instead it is taken care by  the RegionAdapter. Custom region adapters need to be registered in the ConfigureRegionAdapterMappings in your Bootstrapper (MEF/Unity).</p>\n<p>That aside, I have written an extension method that will help you do the GetView on the IRegion with a RequestNavigate. So you would simply use it like this</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>_regionManager.RequestNavigate(MainRegion, <span style=\"color: blue;\">new</span> Uri(<span style=\"color: #a31515;\">\"Test.View1\"</span>, UriKind.Relative), <span style=\"color: #a31515;\">\"MyView\"</span>);\n\n<span style=\"color: blue;\">var</span> view = _regionManager.Regions[MainRegion].GetView(<span style=\"color: #a31515;\">\"MyView\"</span>);\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>And the extension method is this (as of now only works with MEF. you can tweak it to work with unity):</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre> <span style=\"color: blue;\"><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">class</span> CustomRegionManagerExtensions\n    {\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> RequestNavigate(<span style=\"color: blue;\">this</span> IRegionManager regionManager, <span style=\"color: blue;\">string</span> regionName, Uri source, <span style=\"color: blue;\">string</span> viewName)\n        {\n            <span style=\"color: blue;\">var</span> region = regionManager.Regions[regionName];\n            regionManager.RequestNavigate(regionName, source);\n            <span style=\"color: blue;\">var</span> viewExportName = source.OriginalString;\n            <span style=\"color: blue;\">var</span> viewToAddKey = (<span style=\"color: blue;\">from</span> view <span style=\"color: blue;\">in</span> region.Views \n                                    <span style=\"color: blue;\">let</span> type = (ExportAttribute[]) view.GetType().GetCustomAttributes(<span style=\"color: blue;\">typeof</span> (ExportAttribute), <span style=\"color: blue;\">false</span>) \n                                   <span style=\"color: blue;\">where</span> type.Any(t =&gt; t.ContractName.Equals(viewExportName))\n                                   <span style=\"color: blue;\">select</span> view).FirstOrDefault();\n\n            <span style=\"color: blue;\">if</span> (viewToAddKey == <span style=\"color: blue;\">null</span>) <span style=\"color: blue;\">return</span>;\n            \n            <span style=\"color: blue;\">try</span>\n            {\n                <span style=\"color: blue;\">if</span> (region.Views.Any(v =&gt; v.Equals(viewToAddKey)))\n                {\n                    region.Remove(viewToAddKey); <span style=\"color: green;\">// This throws an ArgumentException and also removes the view</span>\n                }\n            }\n            <span style=\"color: blue;\">catch</span> (ArgumentException)\n            {\n            }\n            <span style=\"color: blue;\">finally</span>\n            {\n                <span style=\"color: green;\">// This adds it to the region again with the view name you specify</span>\n                region.Add(viewToAddKey, viewName);\n            }\n        }\n    }\n</pre>\n</div>\n<br /></span></pre>\n</div>\n<p>&nbsp;</p>\n<p>Hope this helps.</p>\n<p>Cheers!</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\"><br /></span>\n</pre>\n</div>\n<p>&nbsp;</p>",
    "PostedDate": "2011-05-12T23:45:29.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]