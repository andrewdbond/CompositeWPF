[
  {
    "Id": "934040",
    "ThreadId": "401181",
    "Html": "\r\n<p>Calling this piece of code from the Event Aggregator does not work, the collection does not update the UI. Calling the same code from the UI using a button click works?</p>\r\n<p>I think it has to be an issue with the thread</p>\r\n<p>//UI&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Button_Click_1(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            ((TopMenuViewModel)t).OnLoggedIn(<span style=\"color:blue\">true</span>);\r\n        }</pre>\r\n<pre><br></pre>\r\n<pre><br></pre>\r\n<pre>//View Model</pre>\r\n</div>\r\n<p></p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> _eventAggregator.GetEvent&lt;Chameleon.Common.CommonAgent.IsLoggedIn&gt;().Subscribe(OnLoggedIn, ThreadOption.UIThread, <span style=\"color:blue\">false</span>);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnLoggedIn(<span style=\"color:#0000ff\">bool </span>e)\r\n        {\r\n            BusinessService.NavigationBusiness bus = <span style=\"color:blue\">new</span> BusinessService.NavigationBusiness();\r\n            \r\n            bus.GetMenuHeaderCompleted &#43;= (svr) =&gt;\r\n            {\r\n                <span style=\"color:blue\">if</span> (svr != <span style=\"color:blue\">null</span>)\r\n                {\r\n                    _dispatcher.BeginInvoke(() =&gt;\r\n                        {\r\n                            PickableCollection.Clear();\r\n                            PickableCollection = (ObservableCollection&lt;NavigationMenuHeader&gt;)svr;\r\n                        });\r\n                }\r\n            };\r\n\r\n            bus.GetMenuHeader(1);\r\n        }\r\n\r\n</pre>\r\n</div>\r\nCan anybody help thanks.\r\n<p></p>\r\n",
    "PostedDate": "2012-10-29T21:24:13.767-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "934216",
    "ThreadId": "401181",
    "Html": "<p>Hi,</p>\r\n<p>I believe you could check that the setter of your <strong>PickableCollection </strong>is calling for example the <strong>RaisePropertyChanged </strong>method in order to notify the view the state changes of this property, perhaps this could be related to your problem.</p>\r\n<p>On the other hand, if this is not the case, it would be helpful to know if your the subscriber of the event is being successfully called when publishing to it and also it's not clear if when calling the <strong>OnLoggedIn </strong>method from the code behind of the view worked for you.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>,</p>",
    "PostedDate": "2012-10-30T06:49:53.053-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "934234",
    "ThreadId": "401181",
    "Html": "<p>RaisePropertyChanged&nbsp;is being hit but the not <span>notifying the view the state changes</span></p>\r\n<p>&nbsp;this.RaisePropertyChanged(() =&gt; this.PickableCollection);</p>\r\n<p>&nbsp;</p>\r\n<p>Yes the OnLogged event is also being hit, i can see the webservice being called and the new collection being returned.</p>\r\n<p>My xaml is below, i can put breakpoints on the bindings which get hit when i call the button click. But not when OnLoggedIn event is called.</p>\r\n<p>\r\n<pre> &lt;Button Click=\"Button_Click_1\" Height=\"30\" Width=\"40\" Content=\"Tester\" /&gt;</pre>\r\n</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>&lt;ListBox BorderBrush=<span style=\"color: #a31515;\">\"Transparent\"</span> BorderThickness=<span style=\"color: #a31515;\">\"0\"</span>  VerticalAlignment=<span style=\"color: #a31515;\">\"Stretch\"</span> HorizontalAlignment=<span style=\"color: #a31515;\">\"Stretch\"</span> ItemsSource=<span style=\"color: #a31515;\">\"{Binding PickableCollection}\"</span>\r\n    Margin=<span style=\"color: #a31515;\">\"0,0,0,0\"</span>   ScrollViewer.HorizontalScrollBarVisibility=<span style=\"color: #a31515;\">\"Disabled\"</span>&gt;\r\n            &lt;ListBox.ItemsPanel&gt;\r\n                &lt;ItemsPanelTemplate&gt;\r\n                    &lt;StackPanel Orientation=<span style=\"color: #a31515;\">\"Horizontal\"</span> /&gt;\r\n                &lt;/ItemsPanelTemplate&gt;\r\n            &lt;/ListBox.ItemsPanel&gt;\r\n            &lt;ListBox.ItemTemplate&gt;\r\n                &lt;DataTemplate&gt;\r\n                    &lt;TextBlock Foreground=<span style=\"color: #a31515;\">\"Black\"</span> Text=<span style=\"color: #a31515;\">\"{Binding Path=txtLegend}\"</span> /&gt;\r\n                &lt;/DataTemplate&gt;\r\n            &lt;/ListBox.ItemTemplate&gt;\r\n        &lt;/ListBox&gt;\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-10-30T07:20:48.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "934235",
    "ThreadId": "401181",
    "Html": "\r\n<p>My ViewModel</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">namespace</span> Chameleon.Navigation.ViewModel\n{\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> TopMenuViewModel : NotificationObject\n    {\n        IEventAggregator _eventAggregator;\n        Dispatcher _dispatcher;\n        <span style=\"color:blue\">public</span> DelegateCommand&lt;<span style=\"color:blue\">object</span>&gt; LoadMenuCommand { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>; }\n\n        ObservableCollection&lt;NavigationMenuHeader&gt; pickableCollection;\n\n        <span style=\"color:blue\">public</span> TopMenuViewModel(IEventAggregator evt, IRegionManager regionManager, Dispatcher dis)\n        {\n            <span style=\"color:blue\">this</span>._eventAggregator = evt;\n            <span style=\"color:blue\">this</span>._dispatcher = dis;\n     \n            PickableCollection = <span style=\"color:blue\">new</span> ObservableCollection&lt;NavigationMenuHeader&gt;();\n\n            <span style=\"color:green\">//Broadcast logging event </span>\n            Chameleon.Common.CommonAgent.IsLoggedIn loggingIn = _eventAggregator.GetEvent&lt;Chameleon.Common.CommonAgent.IsLoggedIn&gt;();\n            _eventAggregator.GetEvent&lt;Chameleon.Common.CommonAgent.IsLoggedIn&gt;().Subscribe(OnLoggedIn, ThreadOption.UIThread, <span style=\"color:blue\">false</span>);\n\n        }\n\n        <span style=\"color:blue\">public</span> ObservableCollection&lt;NavigationMenuHeader&gt; PickableCollection\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.pickableCollection; }\n            <span style=\"color:blue\">set</span>\n            {\n                <span style=\"color:blue\">this</span>.pickableCollection = value;\n                <span style=\"color:blue\">this</span>.RaisePropertyChanged(() =&gt; <span style=\"color:blue\">this</span>.PickableCollection);\n               <span style=\"color:green\">// OnPropertyChanged(&quot;PickableCollection&quot;);</span>\n\n            }\n        }\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnLoggedIn(<span style=\"color:blue\">bool</span> e)\n        {\n            BusinessService.NavigationBusiness bus = <span style=\"color:blue\">new</span> BusinessService.NavigationBusiness();\n            \n            bus.GetMenuHeaderCompleted &#43;= (svr) =&gt;\n            {\n                <span style=\"color:blue\">if</span> (svr != <span style=\"color:blue\">null</span>)\n                {\n                    _dispatcher.BeginInvoke(() =&gt;\n                        {\n                            PickableCollection.Clear();\n                            PickableCollection = (ObservableCollection&lt;NavigationMenuHeader&gt;)svr;\n                        });\n                }\n            };\n\n            bus.GetMenuHeader(1);\n        }\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-30T07:22:03.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "934237",
    "ThreadId": "401181",
    "Html": "<p>My User Control</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">namespace</span> Chameleon.Navigation.Views\r\n{\r\n    [Export(<span style=\"color: #a31515;\">\"TopMenuView\"</span>)]\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> TopMenuView : UserControl, INavigationAware \r\n    {\r\n        [ImportingConstructor]\r\n        <span style=\"color: blue;\">public</span> TopMenuView(IEventAggregator evt, IRegionManager regionManager)\r\n        {\r\n            InitializeComponent();\r\n\r\n            _regionManager = regionManager;\r\n            _eventManager = evt;\r\n        }\r\n\r\n        [Import]\r\n        <span style=\"color: blue;\">public</span> IRegionManager _regionManager;\r\n\r\n        [Import]\r\n        <span style=\"color: blue;\">public</span> IEventAggregator _eventManager;\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">bool</span> IsNavigationTarget(NavigationContext navigationContext)\r\n        {\r\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">true</span>;\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> OnNavigatedFrom(NavigationContext navigationContext)\r\n        {\r\n\r\n        }\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> OnNavigatedTo(NavigationContext navigationContext)\r\n        {\r\n            <span style=\"color: blue;\">this</span>.DataContext = <span style=\"color: blue;\">new</span> TopMenuViewModel(_eventManager, _regionManager, <span style=\"color: blue;\">this</span>.Dispatcher);\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> Button_Click_1(<span style=\"color: blue;\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            ((TopMenuViewModel)<span style=\"color: blue;\">this</span>.DataContext).OnLoggedIn(<span style=\"color: blue;\">true</span>);\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>",
    "PostedDate": "2012-10-30T07:24:08.157-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "934347",
    "ThreadId": "401181",
    "Html": "<p>Hi,</p>\r\n<p>I tried to reproduce the behavior you are mentioning based on the code snippets you provided and so far I couldn't re-create it. I tried using both approaches, directly calling the <strong>OnLoggedIn </strong>handler in the code behind of the view and subscribing it through the <strong>Event Aggregator</strong>. In both cases the <strong>UI </strong>was updated correctly.</p>\r\n<p>Perhaps it would be helpful if you could provided us with a repro sample application portraying this behavior so we can analyze this in further detail.</p>\r\n<p>On the other hand, one thing I notice is that if you subscribe to the event passing the <strong>ThreadOption.UIThread</strong> parameter, as far as I know you shouldn't need to call the <strong>Dispatcher </strong>in the handler of this event as the event will be received in the <strong>UI thread</strong> and not in the publisher's thread.<br /><br />Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>,</p>",
    "PostedDate": "2012-10-30T11:47:00.053-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]