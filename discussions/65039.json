[
  {
    "Id": "221489",
    "ThreadId": "65039",
    "Html": "<p>Hi List,</p>\r\n<p>i'm looking for a way to bind a DelegateCommand like :<span style=\"font-size:x-small\"><span style=\"font-size:x-small\">&nbsp;</span>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">public</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">DelegateCommand</span></span><span style=\"font-size:x-small\">&lt;</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">object</span></span><span style=\"font-size:x-small\">&gt; CommandStartEdit { </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">get</span></span><span style=\"font-size:x-small\">; </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">private</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">set</span></span><span style=\"font-size:x-small\">; }</span></p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">GlobalCommandProxy</span></span><span style=\"font-size:x-small\"> proxy = </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">GlobalCommandProxy</span></span><span style=\"font-size:x-small\">();</span></p>\r\n<p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>this</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small\">.CommandStartEdit = </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">DelegateCommand</span></span><span style=\"font-size:x-small\">&lt;</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">object</span></span><span style=\"font-size:x-small\">&gt;(</span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">this</span></span><span style=\"font-size:x-small\">.Edit, </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">this</span></span><span style=\"font-size:x-small\">.CanEdit);</span></p>\r\n</p>\r\n</p>\r\n<p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>proxy.StartEdit.RegisterCommand(</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">this</span></span><span style=\"font-size:x-small\">.CommandStartEdit);</span></p>\r\n</p>\r\n</p>\r\n<p>to the ListView.SelectionChanged Event of a ListBox.</p>\r\n<p>Any idea's</p>\r\n<p>Thanks</p>\r\n<p>Peter</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-08-10T05:33:15.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "221554",
    "ThreadId": "65039",
    "Html": "<p>Hi Peter,</p>\r\n<p>Out-of-the-box the <strong>SelectionChanged</strong> event does not support binding to Commands in WPF. To be able to bind to the <strong>SelectionChanged</strong> event of a <strong>ListView</strong> in XAML you could create an attached behavior that handles the binding. For this purpose the <strong>CommandBehaviorBase&lt;T&gt; </strong>was created in prism-v2.</p>\r\n<p><strong>ButtonBaseClickCommandBehavior</strong> is an implementation of the <strong>CommandBehaviorBase&lt;T&gt; </strong>which comes with prism-v2 and you can use as starting point<strong>. ButtonBaseClickCommandBehavior </strong>is used in Silverlight Applications to support binding commands to the click event. You will find it pretty simple to modify to support the <strong>SelectionChanged</strong> event.</p>\r\n<p>You might find the following articles useful to implement the attached behavior:</p>\r\n<ol>\r\n<li><a href=\"http://blogs.southworks.net/jdominguez/2008/08/icommand-for-silverlight-with-attached-behaviors/\">ICommand for Silverlight with Attached Behaviors</a></li>\r\n<li><a href=\"http://blogs.southworks.net/dschenkelman/2009/04/18/commands-with-attached-behavior-for-silverlight-3-dataform/\">another Command with Attached Behavior for the Silverlight 3 DataForm</a>.</li>\r\n</ol>\r\n<p>Hope it helps!</p>\r\n<p>Matias Bonaventura<br><a href=\"http://blogs.southworks.net/matiasb\">http://blogs.southworks.net/matiasb</a></p>",
    "PostedDate": "2009-08-10T08:17:25.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "222331",
    "ThreadId": "65039",
    "Html": "<p>Hi Matias,</p>\r\n<p>your idea works very well.</p>\r\n<p>For others interested in this problem:</p>\r\n<p><a href=\"http://marlongrech.wordpress.com/2008/12/04/attachedcommandbehavior-aka-acb/\">http://marlongrech.wordpress.com/2008/12/04/attachedcommandbehavior-aka-acb/</a></p>\r\n<p>Thanks a lot</p>\r\n<p>Peter</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-08-11T22:43:14.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]