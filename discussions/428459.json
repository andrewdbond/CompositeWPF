[
  {
    "Id": "982931",
    "ThreadId": "428459",
    "Html": "\r\n<p>I modified your stocktraderRI, trying to create a multiple shell mvvm mef application(stocktraderRI is only single shell). I was able to create and display a second shell(actually even the 3rd, 4th shell, etc), but I couldn't have any view displayed to the\r\n new shells. All of my new views have</p>\r\n<p>[ViewExport(RegionName = RegionNames.ARegionName)]</p>\r\n<p>[PartCreationPolicy(CreationPolicy.NonShared)]&nbsp; &nbsp;</p>\r\n<p>public partial class MyView : UserControl</p>\r\n<p>{</p>\r\n<p>}</p>\r\n<p>statement in code behind of that view class.</p>\r\n<p>&nbsp;</p>\r\n<p>And all the shells of course specify its regions using the corresponding region name in .xaml file. Each shell also has its own new region manager. The issue is how can each view specify not only the region name, but also the corresponding region manager\r\n used by a shell which has that region?</p>\r\n<p>&nbsp;</p>\r\n<p>Here is my code to create the new shell:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;IRegionManager regionManager = ServiceLocator.Current.GetInstance&lt;IRegionManager&gt;();</p>\r\n<p>var newRegionManager = regionManager.CreateRegionManager();</p>\r\n<p>var newShell = new MyNewShell(newRegionManager);</p>\r\n<p>RegionManager.SetRegionManager(newShell, newRegionManager);</p>\r\n<p>RegionManager.UpdateRegions();</p>\r\n<p>newShell.Show();</p>\r\n<p>&nbsp;</p>\r\n<p>Here is the xaml code in the new shell that specify the region name:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&lt;ContentControl Name=&quot;something&quot; cal:RegionManager.RegionManager=&quot;{Binding RegionManager, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}&quot; cal:RegionManager.RegionName=&quot;{x:Static inf:RegionNames.ARegionName}&quot;\r\n /&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>So is it possible for a view to specify a new region manager to use for that region? If yes, how?</p>\r\n<p>&nbsp;</p>\r\n<p>In my bootstrapper, I already have the corresponding module loaded.</p>\r\n<p>Any help deeply appreciated. Feel free to ask any more question.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2013-01-03T23:23:44.97-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "983132",
    "ThreadId": "428459",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Based on my understanding, using the <strong>ViewExport </strong>attribute approach to register views will not allow you to specify a custom\r\n<strong>RegionManager</strong>, this can be seen in the <strong>AutoPopulateExportedViewsBehavior\r\n</strong>which discovers the views exported in the container with this attribute and automatically populates them into the associated region. In which case if this behavior was registered by overriding the\r\n<strong>ConfigureDefaultRegionBehaviors </strong>in the bootstrapper, it will be attached to each region by default no matter if they are in different\r\n<strong>RegionManagers </strong>unless this behavior is only added to an specific region. After running some tests I could verify that the views registered with this approach were added to regions in different region manager from different windows.</p>\r\n<p>Based on this, I believe that if you need explicit control on which <strong>RegionManager\r\n</strong>the views will be added then the recommended approach is using <strong>View Injection</strong> in which case the views should be added programmatically instead of using declarative attributes (you can find more information about this in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28v=pandp.40%29.aspx\">Chapter 7: Composing the User Interface</a> of the\r\n<strong>Prism </strong>documentation). When following this approach, you will need to define some logic to retrieve each\r\n<strong>RegionManager</strong> attached to each window. This could be done for example by using a shared service, or if you can retrieve each instance of the created windows you could access the\r\n<strong>RegioManager </strong>property where you stored each corresponding <strong>\r\nRegionManager</strong>.</p>\r\n<p>On the other hand, as you may find using the <strong>View Discovery</strong> approach may also not be adequate to achieve this kind of scenarios as out of the box. Although as mentioned in the following work item, some changes could be made to use this approach\r\n with an specific <strong>RegionManager</strong>:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/8735\">RegisterViewWithRegion doesn't care about RegionManager in which view is registered</a>\r\n</li></ul>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2013-01-04T10:40:38.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "983814",
    "ThreadId": "428459",
    "Html": "\r\n<p>Hi Agustin,</p>\r\n<p>Thanks a lot for the answer. But I followed your suggestion to use View Injection after reading thoroughly Chapter 7, but always got an exception:</p>\r\n<p>Activation error occured while trying to get instance of type <span>MyView</span>, key &quot;&quot;</p>\r\n<p>Here is the code to lanuch MyView and got that exception:</p>\r\n<p><span>IRegionManager regionManager = ServiceLocator.Current.GetInstance&lt;IRegionManager&gt;();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n</span></p>\r\n<p><span>var newRegionManager = regionManager.CreateRegionManager();</span></p>\r\n<p><span>var newShell = new MyNewShell(newRegionManager/*, neweventAggregator*/);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n</span></p>\r\n<p><span>RegionManager.SetRegionManager(newShell, newRegionManager);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\r\n</p>\r\n<p><span>RegionManager.SetRegionName(newShell.DemoRegion, RegionNames.<span>ARegionName</span>);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n</span></p>\r\n<p><span>RegionManager.UpdateRegions();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></p>\r\n<p><span>// View injection&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></p>\r\n<p><span>IRegion region = newRegionManager.Regions[RegionNames.<span>ARegionName</span>];<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></p>\r\n<p><span>MyView&nbsp;newView = ServiceLocator.Current.GetInstance&lt;MyView&gt;(); //this line caused&nbsp;Activation error occured while trying to get instance of type&nbsp;MyView, key &quot;&quot;</span></p>\r\n<p><span>// MyView&nbsp;newView = new MyView(); &nbsp; &nbsp;//this line will not cause exception but won't cause the constructor of view model referenced by this view to be executed thus unusable. &nbsp; &nbsp; &nbsp;</span></p>\r\n<p><span>region.Add(newView, &quot;NewView&quot;);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></p>\r\n<p><span>region.Activate(newView);</span></p>\r\n<p><span>&nbsp;newShell.Show();</span></p>\r\n<p>&nbsp;</p>\r\n<p><span>I have made sure MyView assembly is loaded in bootstrapper, and it has either [Export] or [ViewExport] declaration in the code behind file for MyView class so MEF should be able to find it.</span></p>\r\n<p>Really appreciate more help from you. Thank you in advance.</p>\r\n",
    "PostedDate": "2013-01-07T09:17:19.057-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "983873",
    "ThreadId": "428459",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Based on my understanding of your details, the error you mentioned is more related to a\r\n<strong>MEF </strong>composition problem, than to the use of multiple region managers. In my experience this kind of exception may arise by multiple causes. For example, as a starting point you could check if this is related to one of the following causes:</p>\r\n<ul>\r\n<li>By a timing issue when calling the <strong>ConfigureAggregateCatalog </strong>\r\nmethod, you should make sure that, when you attempt to retrieve the <strong>MyView\r\n</strong>instance, this method has already been called. </li><li>A class being exported in the container more than once, based on my understanding, when using\r\n<strong>MEF</strong>, if you have a project that exports types into the container, this project should be referenced with\r\n<strong>Copy Local = True</strong> in only one project, and with <strong>Copy Local = False\r\n</strong>in the rest. This is the case, for exampling, when using the <strong>Microsoft.Practices.Prism.MefExtensions</strong> assembly.\r\n</li><li>Missing dependencies, when resolving the instance from the container (e.g if the view tries to retrieve an instance through an interface that has not being mapped in the container to an specific implementation).\r\n</li></ul>\r\n<p>If you can't find the reason of this unexpected behavior, it would be helpful if you could provide us with more detailed information regarding your scenario, for example the stack trace of this exception, and its inner exceptions, what is the scope of the\r\n code you posted above (if you are calling this in a module...), etc.</p>\r\n<p>Best Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2013-01-07T12:39:27.557-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "984149",
    "ThreadId": "428459",
    "Html": "\r\n<p>Hi Agustin,</p>\r\n<p>I make sure ConfigureAggregateCatalog in bootstrapper is called before attempting to retrieve the MyView instance.</p>\r\n<p>I make sure MyView project is referenced with Copy Local=True only once in my main project(I changed to Copy Local = false and the bootstrapper simply complains it can't find it in ConfigureAggregateCataglog() call.</p>\r\n<p>I make sure there is not other dependency in MyView class(I even commented out its view modal class to be safe)</p>\r\n<p>and still got that activation exception for MyView in that line, here is exception detail:</p>\r\n<p>Microsoft.Practices.ServiceLocation.ActivationException was unhandled by user code&nbsp; Message=Activation error occured while trying to get instance of type TechnicalAnalysisView, key &quot;&quot;&nbsp; Source=Microsoft.Practices.Prism.MefExtensions&nbsp; StackTrace:&nbsp; &nbsp; &nbsp; &nbsp;at\r\n Microsoft.Practices.Prism.MefExtensions.MefServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) in c:\\release\\WorkingDir\\PrismLibraryBuild\\PrismLibrary\\Desktop\\Prism.MefExtensions\\MefServiceLocatorAdapter.cs:line 76&nbsp; &nbsp; &nbsp; &nbsp;at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type\r\n serviceType, String key)&nbsp; InnerException:&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>What other infomation do you need in order to help me? Where can I send it if you want? Thank you so much.</p>\r\n",
    "PostedDate": "2013-01-08T10:30:27.567-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "984178",
    "ThreadId": "428459",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Sadly, the stack trace from the exception does not provide any helpful information to troubleshoot this error. We were expecting to find more details about where the composition process is failing inside the inner exceptions.</p>\r\n<p>Therefore, it would be helpful if you could isolate this problem into a repro-sample application that we could analyze to help you find the cause behind this problem. You could update your repro-sample for example in\r\n<a href=\"https://skydrive.live.com/\">SkyDrive</a>, or in the file hosting site of your preference.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br>\r\n<a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>\r\n",
    "PostedDate": "2013-01-08T12:06:58.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "985223",
    "ThreadId": "428459",
    "Html": "\r\n<p>Thank you very much guys. After I double checked the code, it's because I commented out&nbsp; the [Export] declaration in MyView class during debugging. Now View Injection works as you suggested. Really appreciated your guys' great help.</p>\r\n",
    "PostedDate": "2013-01-10T19:22:06.93-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]