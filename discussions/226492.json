[
  {
    "Id": "490776",
    "ThreadId": "226492",
    "Html": "<p>This would make it substantially easier to unsubscribe. I just need to dispose the subscription.</p>\r\n<p>All in all, I'd align the entire event aggregator with IObservable/IObserver, to make it future-proof to the Reactive Extensions. Implementing IDisposable is just one tiny bit of it.</p>",
    "PostedDate": "2010-09-08T10:15:40.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "490954",
    "ThreadId": "226492",
    "Html": "<p>&nbsp;</p>\r\n<p>Hi,</p>\r\n<p>Thanks for your feedback. I will copy this as a work-item and this way the  prism team will be notified about this. Additionally, the community could vote  the feature. &nbsp;</p>\r\n<p>When you use Event Aggregator in Prism, the possibility of unsubscribing is  meant to no longer&nbsp;handle an event&nbsp;from a particular component. It&nbsp;can be  achieved by using the subscription token or the handler instead. For more  information you could take a look at the following documentation section on  MSDN:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff647984.aspx\">Event  Aggregator</a>,&nbsp; see the&nbsp;<em>Unsubscribing from an Event section</em></li>\r\n</ul>\r\n<p>That said, your approach seems to be possible, but I&rsquo;m not sure if  implementing IDisposable will make this scenario achievable, since the  subscriber has to indicate the&nbsp;EventAggregator&nbsp;instance from where it has to be  unsubscribed.</p>\r\n<p>Therefore, if the idea is to call a particular method for unsubscribing, you  could create an extensions method which receives&nbsp;the event aggregator instance  as parameter.</p>\r\n<p>Regarding to Reactive Extensions, I&rsquo;m not aware whether implementing  IDisposable could help.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-09-08T15:48:37.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "490955",
    "ThreadId": "226492",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://compositewpf.codeplex.com/workitem/7234\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2010-09-08T15:49:11.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]