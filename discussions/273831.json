[
  {
    "Id": "676612",
    "ThreadId": "273831",
    "Html": "\r\n<p>Hi, I have a stack panel control which host as Region and many views will park inside, I have created a RegionAdapter for it and below is the sample code:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> Adapt(IRegion region, StackPanel regionTarget)\r\n        {\r\n            <span style=\"color:blue\">if</span> (region == <span style=\"color:blue\">null</span>) <span style=\"color:blue\">return</span>;\r\n\r\n            region.Views.CollectionChanged &#43;= (sender, e) =&gt;\r\n            {\r\n                <span style=\"color:blue\">switch</span> (e.Action)\r\n                {\r\n                    <span style=\"color:blue\">case</span> NotifyCollectionChangedAction.Add:\r\n                        \r\n                        <span style=\"color:green\">// Add new view</span>\r\n                        <span style=\"color:blue\">foreach</span> (UIElement element <span style=\"color:blue\">in</span> e.NewItems)\r\n                        {\r\n                            regionTarget.Children.Add(element);\r\n                        }\r\n                        <span style=\"color:blue\">break</span>;\r\n\r\n                    <span style=\"color:blue\">case</span> NotifyCollectionChangedAction.Remove:\r\n\r\n                        <span style=\"color:blue\">foreach</span> (UIElement elementLoopVariable <span style=\"color:blue\">in</span> e.OldItems)\r\n                        {\r\n                            <span style=\"color:blue\">var</span> element = elementLoopVariable;\r\n\r\n                            <span style=\"color:blue\">if</span> (regionTarget.Children.Contains(element))\r\n                            {\r\n                                regionTarget.Children.Remove(element);\r\n                            }\r\n                        }\r\n                        <span style=\"color:blue\">break</span>;\r\n                }\r\n            };\r\n        }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I would like to re-arrange the view's position, for instance the topmost view may move to second position or bottom, or the view at middle move to top.</p>\r\n<p><br>\r\nIs this possible in Prism 4?</p>\r\n",
    "PostedDate": "2011-09-26T03:02:04.993-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "676825",
    "ThreadId": "273831",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding you could arrange your view's position using the <strong>ViewSortHint </strong>attribute. This attribute allows a view to declare a <strong>Hint</strong> property which defines how the view should be ordered in the region.</p>\r\n<p>Note that by default when displaying views, the <strong>Region </strong>class uses a default view sorting routine that uses the hint to order the views.</p>\r\n<p>You'll find more information regarding that in the Prism documentation, Chapter 7:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.40%29.aspx#sec40\">Composing the User Interface: Ordering Views in a Region</a></li>\r\n</ul>\r\n<p>Also if you want to change how views are ordered the documentation explains that:</p>\r\n<p>\"<em>...the Region class provides a SortComparison property that you can set with your own Comparison&lt;object&gt; delegate method. It is important to note that the ordering of the region's Views and ActiveViews properties are reflected in the UI because adapters such as the ItemsControlRegionAdapter bind directly to these properties. A custom region adapter could implement its own sorting and filter that will override how the region orders views.</em>\"</p>\r\n<p>I hope you find this useful.</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-09-26T12:29:52.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]