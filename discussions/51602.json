[
  {
    "Id": "173069",
    "ThreadId": "51602",
    "Html": "I am in a debugging session trying to find out why my scoped RegionManager doesn't get the Regions I excpect.<br>\r\n<br>\r\nI start a new (scoped) RegionManager when I add a view to the main region of the shell window:<br>\r\nIRegionManager layoutsMgr = region.Add(new DockLayout(), null, true);<br>\r\n<br>\r\nThe code for this new view is:<br>\r\n<br>\r\n<p>&lt;UserControl x:Class=&quot;Jacobi.Application.Layouts.DockLayout&quot;<br>\r\n    xmlns=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</a>&quot;<br>\r\n    xmlns:x=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\">http://schemas.microsoft.com/winfx/2006/xaml</a>&quot;<br>\r\n    xmlns:cal=&quot;clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation&quot;<br>\r\n    xmlns:ad=&quot;clr-namespace:AvalonDock;assembly=AvalonDock&quot;&gt;<br>\r\n    &lt;ContentControl&gt;<br>\r\n        &lt;ad:DockingManager &gt;<br>\r\n            &lt;ad:ResizingPanel Orientation=&quot;Vertical&quot;&gt;<br>\r\n                &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Top&quot;&gt;<br>\r\n                &lt;/ad:DockablePane&gt;<br>\r\n                <br>\r\n                &lt;ad:ResizingPanel Orientation=&quot;Horizontal&quot;&gt;<br>\r\n                    &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Left&quot; &gt;<br>\r\n                    &lt;/ad:DockablePane&gt;</p>\r\n<p>                    &lt;ad:DocumentPane cal:RegionManager.RegionName=&quot;Center&quot;&gt;<br>\r\n                    &lt;/ad:DocumentPane&gt;<br>\r\n                    <br>\r\n                    &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Right&quot; &gt;<br>\r\n                    &lt;/ad:DockablePane&gt;<br>\r\n                &lt;/ad:ResizingPanel&gt;</p>\r\n<p>                &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Bottom&quot; &gt;<br>\r\n                &lt;/ad:DockablePane&gt;<br>\r\n            &lt;/ad:ResizingPanel&gt;<br>\r\n        &lt;/ad:DockingManager&gt;<br>\r\n    &lt;/ContentControl&gt;<br>\r\n&lt;/UserControl&gt;<br>\r\n<br>\r\nAfter the view is added I can only see the &quot;Center&quot; region on the scoped RegionManager. Question is why?<br>\r\n<br>\r\nWhen debugging I can see the static RegionManager.CreateRegion method fire 5 times (callback on dependency property), once for each region. That seems to work fine.<br>\r\nI can also see the scopedRegionManager being set on the RegionManager dependency property on the DockLayout control. When that call returns it contains only the center region. I have not found yet how a region is wired up to the region manager in CAL.<br>\r\n<br>\r\nWhen I change the view to:<br>\r\n<br>\r\n&lt;StackPanel&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Top&quot;/&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Left&quot;/&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Center&quot;/&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Right&quot;/&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Bottom&quot;/&gt;<br>\r\n&lt;/StackPanel&gt;<br>\r\n<br>\r\nor make it a little more complex like:<br>\r\n<br>\r\n&lt;ContentControl&gt;<br>\r\n    &lt;StackPanel&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Top&quot;/&gt;<br>\r\n        &lt;Grid&gt;<br>\r\n            &lt;ContentControl cal:RegionManager.RegionName=&quot;Left&quot;/&gt;<br>\r\n            &lt;ContentControl cal:RegionManager.RegionName=&quot;Center&quot;/&gt;<br>\r\n            &lt;ContentControl cal:RegionManager.RegionName=&quot;Right&quot;/&gt;<br>\r\n        &lt;/Grid&gt;<br>\r\n        &lt;ContentControl cal:RegionManager.RegionName=&quot;Bottom&quot;/&gt;<br>\r\n    &lt;/StackPanel&gt;<br>\r\n &lt;/ContentControl&gt;<br>\r\n<br>\r\nIt works fine. I get 5 regions in my scoped RegionManager.<br>\r\nSo there is something in the AvalonDock types that breaks the discovery of regions.<br>\r\n<br>\r\n<strong>What happens when the RegionManager dependency property is set?</strong><br>\r\nI hope that the answer to this question will bring me closer to solving the problem.<br>\r\n<br>\r\nBTW: AvalonDock is available here on codeplex.</p>\r\n",
    "PostedDate": "2009-03-28T07:02:10.663-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "177009",
    "ThreadId": "51602",
    "Html": "Can someone of the team please help me!<br>\r\n<br>\r\nEntering the RegionManager.SetRegionManager method the RegionManager has no regions in its collection.<br>\r\n<a href=\"http://www.xs4all.nl/~mjacobi/Temp/CompositeWPF_SetRegionManager1.JPG\">http://www.xs4all.nl/~mjacobi/Temp/CompositeWPF_SetRegionManager1.JPG</a><br>\r\nAfter the dependency property has been set on the target, the regions are filled on the RegionManager!? <br>\r\n<a href=\"http://www.xs4all.nl/~mjacobi/Temp/CompositeWPF_SetRegionManager2.JPG\">http://www.xs4all.nl/~mjacobi/Temp/CompositeWPF_SetRegionManager2.JPG</a><br>\r\nMy breakpoint in the Add method of the RegionCollection is not hit!?<br>\r\n<br>\r\n<strong>So what happens when the RegionManager dependency property is set on a DependencyObject target?</strong><br>\r\n<br>\r\nThanx,<br>\r\nMarc\r\n",
    "PostedDate": "2009-04-08T00:14:34.32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "177245",
    "ThreadId": "51602",
    "Html": "<p>Hi,</p>\r\n<p>Whenever you try to access the Regions property on the region manager, this will raise an event that will make every created region try to register istself in a region manager if it wasn't already (that's why debugging and trying to see the internal state of the RegionManager might not be the same as accesing the &quot;Regions&quot; property).</p>\r\n<p>You can raise this event explicitly by calling the static method RegionManager.UpdateRegions() to see if this helps you.</p>\r\n<p>How does this &quot;try to register istself in a region manager&quot; works? <br>\r\nThe RegionManagerRegistrationBehavior class will traverse the visual tree of the target control (in your case a DockablePane) and try to get the value of the RegionManager attached property. If the value is null, it will check its parents value, and so on. As long as the DockablePanes are logical descendants of the UserControl (which is the one that has the scoped region manager assigned value), everything should work fine.<br>\r\nNevertheless I've seen strange behaviors with DockManagers, as they are not usually logical parent of their contents. You could workaround this by explicitly setting the RegionManager attached property on the DockablePane to the View's RegionManager:</p>\r\n<p>&lt;UserControl x:Class=&quot;Jacobi.Application.Layouts.DockLayout&quot;<br>\r\n    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>\r\n    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>\r\n    xmlns:cal=&quot;clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation&quot;<br>\r\n    xmlns:ad=&quot;clr-namespace:AvalonDock;assembly=AvalonDock&quot;<br>\r\n    <strong>x:Name=&quot;View&quot;&gt;</strong><br>\r\n    &lt;ContentControl&gt;<br>\r\n        &lt;ad:DockingManager &gt;<br>\r\n            &lt;ad:ResizingPanel Orientation=&quot;Vertical&quot;&gt;<br>\r\n                &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Top&quot; <strong>cal:RegionManager.RegionManager=&quot;{Binding Path=(cal:RegionManager.RegionManager) ElementName=View</strong>}&quot;&gt;<br>\r\n                &lt;/ad:DockablePane&gt;<br>\r\n                <br>\r\n                &lt;ad:ResizingPanel Orientation=&quot;Horizontal&quot;&gt;<br>\r\n                    &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Left&quot; ---same here---&gt;<br>\r\n                    &lt;/ad:DockablePane&gt;</p>\r\n<p>                    &lt;ad:DocumentPane cal:RegionManager.RegionName=&quot;Center&quot;---same here---&gt;<br>\r\n                    &lt;/ad:DocumentPane&gt;<br>\r\n                    <br>\r\n                    &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Right&quot; ---same here---&gt;<br>\r\n                    &lt;/ad:DockablePane&gt;<br>\r\n                &lt;/ad:ResizingPanel&gt;</p>\r\n<p>                &lt;ad:DockablePane cal:RegionManager.RegionName=&quot;Bottom&quot; ---same here---&gt;<br>\r\n                &lt;/ad:DockablePane&gt;<br>\r\n            &lt;/ad:ResizingPanel&gt;<br>\r\n        &lt;/ad:DockingManager&gt;<br>\r\n    &lt;/ContentControl&gt;<br>\r\n&lt;/UserControl&gt;</p>\r\n<p>In the example below, you could use ElementName, or RelativeSource finding the UserControl ancestor so you don't need to assign the x:Name property on the UserControl...</p>\r\n<p>Let me know if this helps,<br>\r\nJulian Dominguez<br>\r\n<a href=\"http://blogs.southworks.net/jdominguez\">http://blogs.southworks.net/jdominguez</a></p>\r\n",
    "PostedDate": "2009-04-08T09:43:07.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "177923",
    "ThreadId": "51602",
    "Html": "Hi Julian,<br>\r\n<br>\r\nUnfortunatly naming the root didn't help:<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\">\r\n<p>cal</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">RegionManager.RegionManager</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=cal:RegionManager.RegionManager,</span><span style=\"font-size:13px;color:#ff0000\"> ElementName</span><span style=\"font-size:13px;color:#0000ff\">=View}&quot;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n(It's a little different than the sample you gave, but I think yours had errors ;-)<br>\r\nI don't think I'm going to persue this any further. Its just takes up too much time. I will try to find another docking control or skip that altogehter.<br>\r\n<br>\r\nThanx for your anwser anyway.\r\n",
    "PostedDate": "2009-04-10T06:11:50.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "178617",
    "ThreadId": "51602",
    "Html": "Hi<div>I'm sorry to hear that.</div><div>By the way, I believe that the correct syntax is </div><div><span style=\"font-family:'segoe ui';font-size:13px;color:rgb(255, 0, 0)\"><p style=\"margin-top:1em;margin-bottom:1em\">cal<span style=\"color:rgb(48, 51, 45)\"><span style=\"font-size:13px;color:rgb(0, 0, 255)\">:</span><span style=\"font-size:13px;color:rgb(255, 0, 0)\">RegionManager.RegionManager</span><span style=\"font-size:13px;color:rgb(0, 0, 255)\">=&quot;{</span><span style=\"font-size:13px;color:rgb(163, 21, 21)\">Binding</span><span style=\"font-size:13px;color:rgb(255, 0, 0)\"> Path</span><span style=\"font-size:13px;color:rgb(0, 0, 255)\">=(cal:RegionManager.RegionManager),</span><span style=\"font-size:13px;color:rgb(255, 0, 0)\"> ElementName</span><span style=\"font-size:13px;color:rgb(0, 0, 255)\">=View}&quot;</span></span></p></span></div><div>Notice the parenthesis. This is because you are binding to an attached property of the target element. I was missing a comma in the previous example (this is because I'm doing this directly in Codeplex rather than VS, which is how I'm supposed to :P)</div><div><br></div><div>I hope you can solve this without further issues.</div><div>Julian</div><div><br></div><div><br></div>",
    "PostedDate": "2009-04-13T11:19:09.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "178850",
    "ThreadId": "51602",
    "Html": "Nope, that didn't make any difference. Still no regions in the RegionManager (after property access).\r\n",
    "PostedDate": "2009-04-14T00:27:50.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]