[
  {
    "Id": "138682",
    "ThreadId": "41793",
    "Html": "Hello,<br>\r\nhow would you manage to get module isolation using Prism?<br>\r\nI mean, all is about IOC, if you want to load modules in different AppDomain, how would it be possible to &quot;share&quot; Unity or other IOC cross-boundaries?<br>\r\n<br>\r\nAny help or idea is appreciated.<br>\r\nThank you,<br>\r\n<br>\r\nRiccardo \r\n",
    "PostedDate": "2008-12-08T11:16:57.9-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138697",
    "ThreadId": "41793",
    "Html": "I think you'll find the following very interesting :)  Particularly the post by Glenn Block:<a href=\"http://www.codeplex.com/MEF/Thread/View.aspx?ThreadId=40335&ANCHOR#Post136825\"><br>\r\nhttp://www.codeplex.com/MEF/Thread/View.aspx?ThreadId=40335&amp;ANCHOR#Post136825</a>\r\n",
    "PostedDate": "2008-12-08T11:54:08.003-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138873",
    "ThreadId": "41793",
    "Html": "Thank you Bill,<br>\r\nI read it and find it very useful, but in the future:)<br>\r\nWe cannot use MEF in our project till it becomes in release mode.<br>\r\nAs I have understood, actually, using Prism as the composite pattern, or one builds up all the stuff to obtain dynamic loading / isolation of modules or adapts MAF functionalities, am I right?<br>\r\n<br>\r\nRiccardo\r\n",
    "PostedDate": "2008-12-09T01:33:41.983-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138910",
    "ThreadId": "41793",
    "Html": "Currently Prism works under a single App-Domain.   The ability to unload App-Domains, recovering resources, is something I believe every enterprise level developer would like/needs to have.  It would be a great feature to have built-in to any framework; particularly one maintained by a P&amp;P team such as this.   <br>\r\n<br>\r\nI thought you might be interested because, like me, you might feel the ROI was not there (to do the work ourselves) if a qualified team was going to be working on it; integrating and managing the pipleline seemed like it was going to be quite the task...<br>\r\n<br>\r\nFor those not familiar with MAF the &quot;Sample-Reliable Extensible Calculator V2&quot; is an example in the <a href=\"http://www.CodePlex.com/CLRAddIns\">http://www.CodePlex.com/CLRAddIns</a> project.\r\n",
    "PostedDate": "2008-12-09T05:16:15.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "139076",
    "ThreadId": "41793",
    "Html": "I completely agree with you. In the enterprise world, a composite application without dynamic modules loading / unloading, recovering resources and fault tolerance lacks of really important aspects, that customers use to ask for (and I don't blame them for that).<br>\r\n<br>\r\nIt's not only the pipeline the problem, it's also the integration of it under the hood. If you want just to add some addin funcionalities to your application (host) or want to automate it with an addin, it's quite simple, and MAF do it very well.<br>\r\nBut if you want to mix all:<br>\r\n<br>\r\n- have addin's graphics in your host<br>\r\n- consume addin's services from your host<br>\r\n- consume host's services from addin<br>\r\n- consume addin's services from other addin's<br>\r\n- have and event-bus shared across host and addins<br>\r\n<br>\r\nwell there is a lot's of work to do to &quot;automate&quot; the crossing of the boundaries.<br>\r\n<br>\r\nI think we should uniform these issues with a unified solution, we have all the components:<br>\r\n<br>\r\n- Prism on the top<br>\r\n- MEF + MAF under the hood<br>\r\n<br>\r\nobviously it's the future, but as I am reading not the closest one for all I mentioned.<br>\r\n",
    "PostedDate": "2008-12-09T11:24:52.177-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]