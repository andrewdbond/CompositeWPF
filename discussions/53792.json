[
  {
    "Id": "181103",
    "ThreadId": "53792",
    "Html": "Hi,<br>\r\n<br>\r\nI am new to this library and to WPF in general and would like to ask for your thoughts.<br>\r\n<br>\r\nI have started a new WPF project, which is a redevelopment of a previous working project, and decided to use this guidance library.&nbsp; But am still not clear on how to implement one of my requirements.<br>\r\n<br>\r\nMy requirement is to have a service registered into our shell and can be used by the modules that we create.&nbsp; We call this service TermsService.&nbsp; Basically, since we are creating a project for different countries, we decided to put our 'translatables' (I don't know if this is even a word =) ) into the database.&nbsp; 'Translatables' are used for labels, common combo box values, i.e. Gender, etc.&nbsp; We did it this way, so instead of creating resources for every culture, we just change the database.&nbsp; That way, we don't have to recompile anything and the application is mostly controlled by the database.&nbsp; And this is what the TermsService is for: to provide functions/methods to retrieve the label value from the db by passing a 'termId'.&nbsp; This is how the 'previous' application (WinForms) was developed which used SCSF.<br>\r\n<br>\r\nIn the previous version of our application, what it does is on a 'Language' change event, i.e. in runtime, it was changed from English to Chinese, we pass the call method accepting the form/view as parameter.&nbsp; This method then loops through all the controls inside the form/view and uses the 'termId' stored in the tag of each label control to set the 'Text' property.&nbsp; But I don't see this as an implementation in WPF.&nbsp; Hence my confusion.&nbsp; As much as possible I want to stick to the Model-View-ViewModel pattern which I have already done to most of the modules I created.<br>\r\n<br>\r\nSo there are two things that I wanted to do which I really can't figure out:<br>\r\n<br>\r\n1. I need to recreate a custom combo box which is windows combo box with an additional property&nbsp; to hold the termId:<br>\r\n&nbsp;&nbsp; &nbsp;I.e in the previous version we just use: &nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;CustomComboBox ccb = new CustomComboBox();<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ccb.TermId = &quot;GENDERTERMID&quot;;<br>\r\n&nbsp;&nbsp; &nbsp;this now populated the combobox with appropriate values.&nbsp; This control uses the TermsService I was referring to earlier to retrieve the values.<br>\r\n<br>\r\n2. And second, and most important, is to be able to change the labels depending on the language selected by the user.&nbsp;&nbsp; I wanted to use in xaml something like:<br>\r\n&nbsp;&nbsp; &nbsp;&lt;Label Tag=&quot;NAMETERMID&quot; /&gt;<br>\r\n&nbsp;&nbsp; &nbsp;And when view is loaded, this label will have a value of &quot;Name: &quot;<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;In the previous version, the Tag property if the label is just set to &quot;NAMETERMID&quot;.&nbsp; And it shows with the correct text, ie: &quot;Name: &quot;.<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\nI've tried a lot of things already, and am at a lost.&nbsp; I tried binding to methods, etc but can't seems to find the correct implementation.&nbsp; Also I'm not able to 'inject' the term service into the view (usercontrol), or I shouldn't do that?&nbsp; I can retrieve the termsService registered in the ViewModels but not in the views.<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\nWhat am I doing wrong? Do you have any ideas on how I'll be able to implement this?&nbsp; Any help would be appreciated. Or please just point me to the right direction.<br>\r\n<br>\r\nThanks very much.<br>\r\n<br>\r\nJames<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-19T20:49:00.467-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181319",
    "ThreadId": "53792",
    "Html": "James,<br>\r\n<br>\r\nSince it seems like all views across your modules will need the capability to localize text based on a selected language this is the approach I would take:<br>\r\n<br>\r\n<ul>\r\n    <li>Define a &quot;LocaleChanged&quot; event in your Infrastructure project. </li>\r\n    <li>Define the TermsService in your Infrastructure project. </li>\r\n    <li>Upon start-up, register the TermsService with the UnityContainer using the ContainerControlledLifetimeManager option. </li>\r\n    <li>In the constructor of each of your ViewModels subscribe to the LocaleChanged event. </li>\r\n    <li>Expose a method on your TermsService which each ViewModel can call to get back an updated list of &quot;terms&quot; it needs. </li>\r\n    <li>Expose a property for each of the terms on your ViewModel (or you could create a view specific class which has all the terms exposed as properties and then expose that class as a property of your ViewModel). </li>\r\n    <li>Bind the text, content, etc to the property exposed on your ViewModel or sub-class. </li>\r\n</ul>\r\n<p>The flow would then work like this:<br>\r\n<br>\r\nComboBox SelectedItemChanged -&gt; Publish LocaleChanged event -&gt; ViewModels would call the TermsService -&gt; Properties updated on the ViewModel -&gt; View pick up changes automatically.<br>\r\n<br>\r\nOne thing to note. You'll need to implement the INotifyPropertyChanged interface on all your ViewModels and any sub-classes which will have a View element bound to it.<br>\r\n<br>\r\nAnyway, that's the approach I would take. There are probably holes in it, but at least it should help you get started. Let me know if you have any questions.<br>\r\n<br>\r\nRyan</p>\r\n",
    "PostedDate": "2009-04-20T07:47:00.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181555",
    "ThreadId": "53792",
    "Html": "Hi Ryan,<br>\r\n<br>\r\nThanks for your reply.<br>\r\n<br>\r\nPlease bear with me, but I do have questions.&nbsp; I have looked at what you suggested and already implemented the first steps.&nbsp; But I do have a few clarifications I need to ask you about this step that you said:<br>\r\n<ul>\r\n    <li>Expose\r\n    a property for each of the terms on your ViewModel (or you could create\r\n    a view specific class which has all the terms exposed as properties and\r\n    then expose that class as a property of your ViewModel). </li>\r\n</ul>\r\nWith regards to this, what you're suggesting is that I need I need to create a property for each term/label?&nbsp; So, it means, in one of the modules I got, is to create 100+ properties?&nbsp; Because, this view is a product configuration module and you can set various settings in here.&nbsp; It contains a lot of labels and what I understood is I can bind each label to the appropriate property in the model.&nbsp; But this is going to be tedious?&nbsp; <br>\r\n<br>\r\nIs there any other way?&nbsp; Do you think I need to create a custom label control with a TermService dependency property?&nbsp; Is that the right way to go?<br>\r\ni.e &lt;CustomLabel TermId=&quot;NAMETERMID&quot; TermService={Bind ... }<br>\r\n<br>\r\nI just don't know if this is an efficient way to go or does it adhere to WPF.&nbsp; And to be honest, I don't know what to put in the Bind yet.&nbsp; Or do I just Bind the 'Content' property.<br>\r\n<br>\r\nThanks again.&nbsp; Appreciate any help.<br>\r\n<br>\r\nRegards,<br>\r\n<br>\r\nJames<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-20T17:58:59.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181766",
    "ThreadId": "53792",
    "Html": "James,<br>\r\n<br>\r\nSounds like you're heading down the correct path. Having said that, yes, it would be extremely tedious and inefficient to create 100+ properties for all the TextBlocks, Buttons, etc you'd need to localize. Luckily, I'm currently involved in a project which has a similar localization requirement and therefore I was able to take a couple minutes to create the sample below. A word of caution before you continue. The sample below doesn't utilized Prism - it's just a quick and dirty prototype I threw together using the out of the box SilverlightApplication template.<br>\r\n<br>\r\nNow that we have that out of the way, here's what I did.<br>\r\n<br>\r\nAdded 2 classes to the SilverlightApplication project (see code below):<br>\r\n<br>\r\n<ul>\r\n    <li>SampleViewModel.cs </li>\r\n    <li>LocalizedValueConverter.cs </li>\r\n</ul>\r\n<strong>SampleViewModel.cs<br>\r\n</strong><br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System.Collections.Generic;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System.ComponentModel;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>namespace</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">LocalizedSilverlight\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">SampleViewModel</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#2b91af\">INotifyPropertyChanged\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">&gt; _localizedText;\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">&gt; LocalizedText\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">get</span><span style=\"font-size:13px\"> { </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> _localizedText; }\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">set\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (_localizedText != </span><span style=\"font-size:13px;color:#0000ff\">value</span><span style=\"font-size:13px\">)\r\n<p> </p>\r\n<p>{</p>\r\n<p>_localizedText = </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">value</span><span style=\"font-size:13px\">;\r\n<p> </p>\r\n<p>RaisePropertyChanged(</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#a31515\">&quot;LocalizedText&quot;</span><span style=\"font-size:13px\">);\r\n<p> </p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">event</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PropertyChangedEventHandler</span><span style=\"font-size:13px\"> PropertyChanged;\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> SampleViewModel()\r\n<p> </p>\r\n<p>{</p>\r\n<p>_localizedText = </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">&gt;();\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.LocalizedText.Add(</span><span style=\"font-size:13px;color:#a31515\">&quot;key1&quot;</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#a31515\">&quot;value1&quot;</span><span style=\"font-size:13px\">);\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.LocalizedText.Add(</span><span style=\"font-size:13px;color:#a31515\">&quot;key2&quot;</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#a31515\">&quot;value2&quot;</span><span style=\"font-size:13px\">);\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.LocalizedText.Add(</span><span style=\"font-size:13px;color:#a31515\">&quot;key3&quot;</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#a31515\">&quot;value3&quot;</span><span style=\"font-size:13px\">);\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.LocalizedText.Add(</span><span style=\"font-size:13px;color:#a31515\">&quot;key4&quot;</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#a31515\">&quot;value4&quot;</span><span style=\"font-size:13px\">);\r\n<p> </p>\r\n<p>}</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> RaisePropertyChanged(</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\"> propertyName)\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (PropertyChanged != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">)\r\n<p> </p>\r\n<p>{</p>\r\n<p>PropertyChanged(</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PropertyChangedEventArgs</span><span style=\"font-size:13px\">(propertyName));\r\n<p> </p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<br>\r\n<strong>LocalizedValueConverter.cs<br>\r\n</strong><br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System.Collections.Generic;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System.Windows.Data;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>namespace</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">LocalizedSilverlight\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">LocalizedValueConverter</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#2b91af\">IValueConverter\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> Convert(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> value, </span><span style=\"font-size:13px;color:#2b91af\">Type</span><span style=\"font-size:13px\"> targetType, </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> parameter, System.Globalization.</span><span style=\"font-size:13px;color:#2b91af\">CultureInfo</span><span style=\"font-size:13px\"> culture)\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> ((</span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">&gt;)value)[(</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\">)parameter];\r\n<p> </p>\r\n<p>}</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> ConvertBack(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> value, </span><span style=\"font-size:13px;color:#2b91af\">Type</span><span style=\"font-size:13px\"> targetType, </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> parameter, System.Globalization.</span><span style=\"font-size:13px;color:#2b91af\">CultureInfo</span><span style=\"font-size:13px\"> culture)\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">throw</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">NotImplementedException</span><span style=\"font-size:13px\">();\r\n<p> </p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<br>\r\n<strong>Next I modified Page.xaml to look like this:</strong><br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">UserControl</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Class</span><span style=\"font-size:13px;color:#0000ff\">=&quot;LocalizedSilverlight.Page&quot;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#ff0000\">xmlns</span><span style=\"font-size:13px;color:#0000ff\">=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><span style=\"font-size:13px\">\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#ff0000\">xmlns</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">x</span><span style=\"font-size:13px;color:#0000ff\">=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><span style=\"font-size:13px\">\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\">\r\n<p>xmlns</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">local</span><span style=\"font-size:13px;color:#0000ff\">=&quot;clr-namespace:LocalizedSilverlight&quot;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#ff0000\">Width</span><span style=\"font-size:13px;color:#0000ff\">=&quot;400&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Height</span><span style=\"font-size:13px;color:#0000ff\">=&quot;300&quot;&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">UserControl.Resources</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">local</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">LocalizedValueConverter</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Key</span><span style=\"font-size:13px;color:#0000ff\">=&quot;ConvertLocalizedValue&quot; /&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">UserControl.Resources</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">Grid</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Name</span><span style=\"font-size:13px;color:#0000ff\">=&quot;LayoutRoot&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Background</span><span style=\"font-size:13px;color:#0000ff\">=&quot;White&quot;&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">StackPanel</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">TextBlock</span><span style=\"font-size:13px;color:#ff0000\"> Text</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=LocalizedText,</span><span style=\"font-size:13px;color:#ff0000\"> Converter</span><span style=\"font-size:13px;color:#0000ff\">={</span><span style=\"font-size:13px;color:#a31515\">StaticResource</span><span style=\"font-size:13px;color:#ff0000\"> ConvertLocalizedValue</span><span style=\"font-size:13px;color:#0000ff\">},</span><span style=\"font-size:13px;color:#ff0000\"> ConverterParameter</span><span style=\"font-size:13px;color:#0000ff\">='key1'}&quot; /&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">TextBlock</span><span style=\"font-size:13px;color:#ff0000\"> Text</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=LocalizedText,</span><span style=\"font-size:13px;color:#ff0000\"> Converter</span><span style=\"font-size:13px;color:#0000ff\">={</span><span style=\"font-size:13px;color:#a31515\">StaticResource</span><span style=\"font-size:13px;color:#ff0000\"> ConvertLocalizedValue</span><span style=\"font-size:13px;color:#0000ff\">},</span><span style=\"font-size:13px;color:#ff0000\"> ConverterParameter</span><span style=\"font-size:13px;color:#0000ff\">='key2'}&quot; /&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">TextBlock</span><span style=\"font-size:13px;color:#ff0000\"> Text</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=LocalizedText,</span><span style=\"font-size:13px;color:#ff0000\"> Converter</span><span style=\"font-size:13px;color:#0000ff\">={</span><span style=\"font-size:13px;color:#a31515\">StaticResource</span><span style=\"font-size:13px;color:#ff0000\"> ConvertLocalizedValue</span><span style=\"font-size:13px;color:#0000ff\">},</span><span style=\"font-size:13px;color:#ff0000\"> ConverterParameter</span><span style=\"font-size:13px;color:#0000ff\">='key3'}&quot; /&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">Button</span><span style=\"font-size:13px;color:#ff0000\"> Content</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=LocalizedText,</span><span style=\"font-size:13px;color:#ff0000\"> Converter</span><span style=\"font-size:13px;color:#0000ff\">={</span><span style=\"font-size:13px;color:#a31515\">StaticResource</span><span style=\"font-size:13px;color:#ff0000\"> ConvertLocalizedValue</span><span style=\"font-size:13px;color:#0000ff\">},</span><span style=\"font-size:13px;color:#ff0000\"> ConverterParameter</span><span style=\"font-size:13px;color:#0000ff\">='key4'}&quot; /&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">StackPanel</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p> </p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">Grid</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n<p>&lt;/</p>\r\n</span>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#a31515\">UserControl</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<strong>And modified Page.xaml.cs like so:</strong><br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>using</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">System.Windows.Controls;\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>namespace</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\">LocalizedSilverlight\r\n<p> </p>\r\n<p>{</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">partial</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Page</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#2b91af\">UserControl\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> Page()\r\n<p> </p>\r\n<p>{</p>\r\n<p>InitializeComponent();</p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">SampleViewModel</span><span style=\"font-size:13px\"> viewModel = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">SampleViewModel</span><span style=\"font-size:13px\">();\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.DataContext = viewModel;\r\n<p> </p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>}</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\nWhen you get all this running, you should see 3 labels with text of: value1, value2, value3 and a Button with content of: value4. As you can see, creating a value converter using the IValueConverter interface gives us a lot of flexibility in what we can do, is extremely easy, and prevented us from having to create a custom control in this scenario.<br>\r\n<br>\r\nHopefully this helps you out. Let me know if you have any other questions.<br>\r\n<br>\r\nRyan<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-21T06:48:26.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182107",
    "ThreadId": "53792",
    "Html": "Hi Ryan,<br>\r\n<br>\r\nThanks so much for your help, I was able to make it run and it works great.<br>\r\nJust one final question, though.&nbsp; More of a binding question<br>\r\n<br>\r\nThis works fine (same as what you have done):<br>\r\n<br>\r\n&lt;Label HorizontalAlignment=&quot;Right&quot; Content=&quot;{Binding Path=LocalizedText, Converter={StaticResource ConvertLocalizedValue}, ConverterParameter='SYS1'}&quot;/&gt;<br>\r\n<br>\r\nAnd then when I did this one, it also works:<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Label HorizontalAlignment=&quot;Right&quot; Tag=&quot;SYS1&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Label.Content&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiBinding Converter=&quot;{StaticResource ConvertLocalizedValue}&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding RelativeSource=&quot;{RelativeSource Self}&quot; Path=&quot;Tag&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding Path=&quot;LocalizedText&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiBinding&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Label.Content&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Label&gt;<br>\r\n<br>\r\nBut when I place this (above) on the DockPanel.Resources like this (below), it doesn't work:<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style TargetType=&quot;{x:Type Label}&quot;&nbsp; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;ContentTemplate&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate DataType=&quot;{x:Type Label}&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;StackPanel&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock HorizontalAlignment=&quot;Right&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock.Text&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiBinding Converter=&quot;{StaticResource ConvertLocalizedValue}&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding Source=&quot;LocalTerms&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding RelativeSource=&quot;{RelativeSource FindAncestor, AncestorType=Label}&quot; Path=&quot;Tag&quot;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiBinding&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock.Text&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/StackPanel&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br>\r\n<br>\r\nI always get DependencyObject.UnsetValue on the first binding.&nbsp; I was just thinking if I do it this way, I don't have to modify all my labels (inserting the converter, etc) and just leave it as it is.&nbsp; Do you have any ideas why is this so?&nbsp; Am I missing something?<br>\r\n<br>\r\nThanks so much.<br>\r\n<br>\r\nRegards,<br>\r\n<br>\r\nJames<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-21T19:37:13.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182313",
    "ThreadId": "53792",
    "Html": "James,<br>\r\n<br>\r\nUnfortunately I've never worked with WPF before so the concept of MultiBinding is foreign to me and therefore I'm afraid I'll be of no use at this point. :-)<br>\r\n<br>\r\nThat does appear to be a very elegant solution if you can get it working. Please let me know if you discover the answer.<br>\r\n<br>\r\nGood luck!<br>\r\n<br>\r\nRyan\r\n",
    "PostedDate": "2009-04-22T06:19:19.133-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]