[
  {
    "Id": "426318",
    "ThreadId": "208015",
    "Html": "<p>Here's my situation - I followed tutorials in Channel 9 (<a href=\"http://channel9.msdn.com/posts/akMSFT/Creating-a-modular-application-using-Prism-V2-Part-1-of-4--Creating-a-shell-and-modules/\">http://channel9.msdn.com/posts/akMSFT/Creating-a-modular-application-using-Prism-V2-Part-1-of-4--Creating-a-shell-and-modules/</a>) to create my first Prism silverlight project and everything worked fine.</p>\r\n<p>Then I switched the sample Digg service to a RIA data service call. The service call, of course,&nbsp;was asynchronized and my ObservableCollection&nbsp;was updated on a different thread. And sure enough, I had cross-thread exception. So, I modified my code to make sure that the Observable collection was both created and updated on UI thread by using Application.Current.Dispatcher.BeginInvoke(). The exception was gone, and when I traced the code, the collection was indeed populated correctly. BUT, the problem was that the UI was not updated.</p>\r\n<p>The following is the code for my ViewModel:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> NetFlexResultsViewModel\r\n     {\r\n        <span style=\"color:Blue\">private</span> INetFlexService mNetFlexService;\r\n        <span style=\"color:Blue\">public</span> NetFlexResultsViewModel(INetFlexService netFlexService, IEventAggregator aggregator)\r\n        {\r\n            Application.Current.RootVisual.Dispatcher.BeginInvoke(() =&gt;\r\n                {\r\n                    Items = <span style=\"color:Blue\">new</span> ObservableCollection&lt;NetFlexResultItem&gt;();\r\n                    mNetFlexService = netFlexService;\r\n                    aggregator.GetEvent&lt;SearchEvent&gt;().Subscribe(OnSearch, Microsoft.Practices.Composite.Presentation.Events.ThreadOption.UIThread);\r\n                });\r\n        }\r\n        <span style=\"color:Green\">//note this method has to be public as in CAB </span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> OnSearch(<span style=\"color:Blue\">string</span> title)\r\n        {\r\n            mNetFlexService.BeginSearch(title,\r\n               <span style=\"color:Blue\">new</span> Action&lt;System.Collections.Generic.IEnumerable&lt;NetFlexResultItem&gt;&gt;(\r\n                   (res) =&gt;\r\n                   {\r\n                       <span style=\"color:Blue\">foreach</span> (NetFlexResultItem item <span style=\"color:Blue\">in</span> res)\r\n                           Items.Add(item);\r\n\r\n                   }));\r\n        }\r\n        <span style=\"color:Blue\">public</span> ObservableCollection&lt;NetFlexResultItem&gt; Items { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">set</span>; }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> HeaderInfo\r\n        {\r\n            <span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> <span style=\"color:#A31515\">&quot;NetFlex results&quot;</span>; }\r\n        }\r\n    }\r\n</pre>\r\n<pre>And my view is simple (see below).I can't figure out what is wrong. Please help!:</pre>\r\n<span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">\r\n<pre style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Odyssey.NetFlexResults</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:d</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/expression/blend/2008</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:mc</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.openxmlformats.org/markup-compatibility/2006</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">mc:Ignorable</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">d</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">d:DesignHeight</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">d:DesignWidth</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">400</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    \r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">White</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ListBox</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ItemList</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Items}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ListBox.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Text</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ListBox.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ListBox</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</pre>\r\n</span></span></span></div>",
    "PostedDate": "2010-04-01T00:38:41.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "508019",
    "ThreadId": "208015",
    "Html": "<p id=469a1660-bac5-012d-784f-12313b10115e>Hi Haishi,</p>\r\n<p id=469a20b0-bac5-012d-7850-12313b10115e>You are correct in that you have to update the code to support asynchronous service calls. Nevertheless, you must take into account that in most general scenarios VM code is executed on the UI thread, but the service call is executed on a different thread (not to block the UI).</p>\r\n<p id=469a2f20-bac5-012d-7851-12313b10115e>That said, you can try removing the use of the Application.Current.Dispatcher.BeginInvoke() in the VM constructor. It is not necessary as you are probably already running on the UI thread, and as the Items property is instantiated asynchronously on a later time bindings will probably fail. &nbsp;</p>\r\n<p id=469a3a10-bac5-012d-7852-12313b10115e><strong>public NetFlexResultsViewModel(INetFlexService netFlexService, IEventAggregator aggregator)<br></strong><strong>{<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Items = new ObservableCollection&lt;NetFlexResultItem&gt;();<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mNetFlexService = netFlexService;<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aggregator.GetEvent&lt;SearchEvent&gt;().Subscribe(OnSearch, Microsoft.Practices.Composite.Presentation.Events.ThreadOption.UIThread);<br></strong><strong>}</strong></p>\r\n<p id=469a7b80-bac5-012d-7858-12313b10115e>In general callbacks from the service are executed on the calling thread (UIThread) in this case, so you won&rsquo;t need to update the OnSearch method. If &nbsp;need to guarantee that the Items property is accessed from the UI thread:</p>\r\n<p id=469a8880-bac5-012d-7859-12313b10115e><strong>public void OnSearch(string title)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mNetFlexService.BeginSearch(title,<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new Action&lt;System.Collections.Generic.IEnumerable&lt;NetFlexResultItem&gt;&gt;(<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (res) =&gt;<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (NetFlexResultItem item in res)<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br></strong><strong>Application.Current.RootVisual.Dispatcher.BeginInvoke(()=&gt;<br></strong><strong>Items.Add(item) );<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br></strong><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }));<br></strong><strong>}</strong></p>\r\n<p id=469b2850-bac5-012d-7864-12313b10115e>You can also take a look at the MVVM Quickstart (GetNewQuestionnaireInstance method of the QuestionnaireVM), that uses an asynchronous call with a call back that updates the UI.<br>On the other hand, I don&rsquo;t see in your code where you are setting the VM as the datacontext for the V, but I assume that is correctly done somewhere else.</p>\r\n<p id=2203b7b0-b9ea-012d-085b-123139180331>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-10-15T13:51:28.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]