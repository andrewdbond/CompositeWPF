[
  {
    "Id": "535633",
    "ThreadId": "238344",
    "Html": "\r\n<p>I am looking for an example on the proper way to utilize a loose xaml2009 file that I will be reading from a database record or file&nbsp;and having it assigned into a region using MEF or Unity.&nbsp; Every example I see deals with Xaml declared in the application,\r\n often with a code behind entry.&nbsp; I need to see this done in VB.</p>\r\n<p>Thanks,</p>\r\n<p>Brian</p>\r\n",
    "PostedDate": "2010-12-14T08:38:40.887-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "535735",
    "ThreadId": "238344",
    "Html": "\r\n<p>Hi Brian,</p>\r\n<p>You might find the following threads useful to your purpose, as well as the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.markup.xamlreader.aspx\">\r\nXamlReader class</a> article in MSDN:</p>\r\n<ul>\r\n<li><a href=\"http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/a53ff197-8703-4c6c-8726-45570304fb7b/\"><span>Load XAML File dynamically</span></a>\r\n</li><li><a href=\"http://social.msdn.microsoft.com/forums/en-US/wpf/thread/d0585aef-a34a-4ce2-8d35-51be78f9bdb3\"><span>dynamic load loose xaml</span><img src=\"http://i1.social.microsoft.com/Forums/resources/images/trans.gif?cver=1864.274%0d%0a\" alt=\"\"></a>\r\n</li></ul>\r\n<p>Also, as this is not strictly related to Prism, you might find better support in the\r\n<a href=\"http://social.msdn.microsoft.com/Forums/en-US/wpf/threads\">WPF forums</a>.</p>\r\n<p>Once you've obtained a reference to the control defined in your XAML, you can register it in the corresponding container. The procedures to do so can be found in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28PandP.40%29.aspx\">this chapter</a> from the Prism MSDN documentation, under the &quot;Registering&quot; section.</p>\r\n<p>When you have registered your control in the corresponding container, you can show it in a Region using any of the mechanisms for UI Composition, following the approaches explained in\r\n<a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=238342\">this chapter</a> from the Prism MSDN documentation.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2010-12-14T11:32:53.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "535753",
    "ThreadId": "238344",
    "Html": "\r\n<div>\r\n<p>Guido,</p>\r\n<p>Thanks.</p>\r\n<p>I have already worked a test case in plain WPF getting the xaml and placing it into a container on another view that uses a viewmodel,</p>\r\n<p>so I am familiar with the XamlReader class and applying it into another xaml object.\r\n</p>\r\n<p></p>\r\n<p>I am new at .Net and I am trying to understand some things. Lambda expressions I have not fully understood yet.</p>\r\n<p></p>\r\n<p>We want to use Prism and either MEF or Unity, whichever is better for our concepts.\r\n</p>\r\n<p>We do plan on showing multiple instances of the same views both as separate tasks and when exposing details of transactions that may be in a list or datagrid.</p>\r\n<p></p>\r\n<p>We plan to use a lot of dynamic xaml, as we display/hide fields/options based on user defined security rights, so we donâ€™t have a fixed view.\r\n</p>\r\n<p>We also have a variety of clients with different needs and even different labels for the same in internal item, so allowing them to have the xaml in a file or db allows us to easily adapt it for the site.\r\n</p>\r\n<p>I am planning to use comments in the xaml to remove sections based on the security options from the file before having it processed to deal with individual user/group rights.\r\n</p>\r\n<p>This will allow us to make changes only in the xaml to support relabeling or restructuring the view that each site/user sees.</p>\r\n<p></p>\r\n<p></p>\r\n<p>What I am trying to find is just what would I need to do assuming I have a usercontrol defined in xaml that is in a filestream object.</p>\r\n<p>I am still at concept stage with our app refractor, just trying to get some examples running to show that the ideas will work, that was why I was hoping to find a real example I could follow.</p>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Once you've obtained a reference to the control defined in your XAML, you can register it in the corresponding container. The procedures to do so can be found in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28PandP.40%29.aspx\">this chapter</a> from the Prism MSDN documentation, under the &quot;Registering&quot; section.</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Assuming I have a filestream object that has a usercontrol in it, what would I need to do to properly register it in VB?\r\n</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Do I need to go through the resolving step?</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Your last link did not go to MSDN documentation, so I am not sure what you were trying to show me.</span></p>\r\n<p>Brian</p>\r\n<p></p>\r\n</div>\r\n<br>\r\n<hr>\r\n<font face=\"Arial\" color=\"Gray\" size=\"-2\">This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. If you have received this email in error, please notify the system\r\n manager. This message contains confidential information and is intended only for the individual named. If you are not the named addressee, you should not disseminate, distribute, or copy this email. Please notify the sender immediately by email if you have\r\n received this email by mistake and delete this email from your system. If you are not the intended recipient, you are notified that discolosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibitied.<br>\r\n</font>",
    "PostedDate": "2010-12-14T12:00:08.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "536340",
    "ThreadId": "238344",
    "Html": "\r\n<p id=\"x_6a726fd0-ea9d-012d-06f7-123139180f64\">Hi Brian,</p>\r\n<p id=\"x_6a727850-ea9d-012d-06f8-123139180f64\">As this is not specifically related to Prism, you might find these links useful:</p>\r\n<ul>\r\n<li>\r\n<div id=\"x_6a728250-ea9d-012d-06f9-123139180f64\">&nbsp;<a href=\"http://social.msdn.microsoft.com/Forums/en/vblanguage/threads\">Visual Basic Language Forum</a></div>\r\n</li><li>\r\n<div id=\"x_6a728c70-ea9d-012d-06fa-123139180f64\">&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/bb531253.aspx\">Lambda Expressions in Visual Basic</a></div>\r\n</li><li>\r\n<div id=\"x_6a729740-ea9d-012d-06fb-123139180f64\">&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/f7ykdhsy.aspx\">.NET Reflection</a></div>\r\n</li></ul>\r\n<p id=\"x_6a72a2e0-ea9d-012d-06fc-123139180f64\">On the other hand, based on my understanding of your scenario, you might find useful Prism&acute;s UI composition documentation:</p>\r\n<ul>\r\n<li>\r\n<div id=\"x_6a72b010-ea9d-012d-06fd-123139180f64\">&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/ff921098(v=PandP.40).aspx\">Chapter 7: Composing the User Interface</a></div>\r\n</li></ul>\r\n<p id=\"x_6a72be10-ea9d-012d-06fe-123139180f64\">I hope you find this information handy.</p>\r\n<p id=\"x_6a72cc10-ea9d-012d-06ff-123139180f64\">Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n",
    "PostedDate": "2010-12-15T12:21:28.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "551995",
    "ThreadId": "238344",
    "Html": "\r\n<p>We have loose Xaml loading non prism and we have prism loading different views using unity containers.&nbsp; What I am looking for is how to properly read a XAML usercontrol loose file and have it injected into the containers.&nbsp;</p>\r\n<p>We currently get the xaml into a dependency object and locate a content container on our window and assign it to that.&nbsp; Since we are not dealing with a window now, just the view, what do we need to do.</p>\r\n<p>Currently we have the following executed:</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">Me</span>.regionManager.RegisterViewWithRegion(<span style=\"color:#2b91af\">RegionNames</span>.LeftRegion,&nbsp;_<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">Function</span>()&nbsp;<span style=\"color:blue\">Me</span>.container.Resolve(<span style=\"color:blue\">Of</span>&nbsp;ModuleControl)())<br></pre>\r\n<pre style=\"font-family:consolas\">I want to replace the modulecontrol view with a loose xaml file we have called MC_loose which has a usercontrol defined in it.</pre>\r\n<pre style=\"font-family:consolas\">I am trying some things out for general proof of concept, I really need the VB code to get the xaml in and tied to the region.</pre>\r\n<pre style=\"font-family:consolas\">We are loading the xaml for the window based method using the following:</pre>\r\n<pre style=\"font-family:consolas\"><pre style=\"font-family:consolas\">&nbsp;<span style=\"color:blue\">Dim</span>&nbsp;rootElement&nbsp;<span style=\"color:blue\">As</span>&nbsp;<span style=\"color:#2b91af\">DependencyObject</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">Using</span>&nbsp;fs&nbsp;<span style=\"color:blue\">As</span>&nbsp;<span style=\"color:blue\">New</span>&nbsp;<span style=\"color:#2b91af\">FileStream</span>(<span style=\"color:#a31515\">&quot;MC_loose.xaml&quot;</span>,&nbsp;<span style=\"color:#2b91af\">FileMode</span>.Open)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rootElement&nbsp;=&nbsp;<span style=\"color:blue\">CType</span>(<span style=\"color:#2b91af\">XamlReader</span>.Load(fs),&nbsp;<span style=\"color:#2b91af\">DependencyObject</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">End</span>&nbsp;<span style=\"color:blue\">Using</span></pre>\r\n<pre style=\"font-family:consolas\"></pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">and then assigning it to a content control.content that is looked up on the window. </span></pre>\r\n<pre style=\"font-family:consolas\"></pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">Thanks for any code samples,</span></pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">Brian</span></pre>\r\n<pre style=\"font-family:consolas\"></pre>\r\n<pre style=\"font-family:consolas\"></pre>\r\n</pre>\r\n",
    "PostedDate": "2011-01-19T08:51:53.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552605",
    "ThreadId": "238344",
    "Html": "\r\n<p>Hi Brian,</p>\r\n<p>Once you have obtained your MC_loose.xaml view through the use of the XamlReader, and have it set into a DependencyObject, you could register that instance in Unity, so that it can be retrieved from other modules.</p>\r\n<p>The code for registering it into the Unity Container (using an overload of the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ee650685.aspx\">RegisterInstance</a> method) could be something like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">Me</span>.container.RegisterInstance(<span style=\"color:blue\">GetType</span>(DependencyObject), &quot;MC_loose&quot;, rootElement)</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>and the code for retrieving it and adding it to your region could look like this:</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">Me</span>.regionManager.RegisterViewWithRegion(<span style=\"color:#2b91af\">RegionNames</span>.LeftRegion,&nbsp;_<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">Function</span>()&nbsp;<span style=\"color:blue\">Me</span>.container.Resolve(<span style=\"color:blue\">Of</span> DependencyObject)(&quot;MC_loose&quot;))</pre>\r\n<p>Let me know if we have misunderstood your scenario. If that is the case, it would be helpful if you could provide us with more information regardin your requirement.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-20T07:11:47.203-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552623",
    "ThreadId": "238344",
    "Html": "\r\n<p>You use ModuleControl, but for us, this is not resolved.&nbsp; Are we missing something?</p>\r\n<p>Resolve(<span style=\"color:blue\">Of</span>&nbsp;ModuleControl)(&quot;MC_loose&quot;))</p>\r\n<p>(I replaced it with UserControl, it runs, but the control is not present.)</p>\r\n<p>Brian</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-20T07:43:15.017-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552664",
    "ThreadId": "238344",
    "Html": "\r\n<p>Hi Brian,</p>\r\n<p>I'm sorry, I meant to resolve a named instance of the type DependencyObject, not ModuleControl. I've updated my previous answer to reflect this.</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">Me</span>.regionManager.RegisterViewWithRegion(<span style=\"color:#2b91af\">RegionNames</span>.LeftRegion,&nbsp;_<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">Function</span>()&nbsp;<span style=\"color:blue\">Me</span>.container.Resolve(<span style=\"color:blue\">Of</span> DependencyObject)(&quot;MC_loose&quot;))</pre>\r\n<p>Sorry for the inconveniences.</p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-20T08:38:31.733-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552669",
    "ThreadId": "238344",
    "Html": "\r\n<p>That's it!</p>\r\n<p>Thanks.</p>\r\n<p>What we didn't know was the RegisterInstance command and the Resolve(of DependencyObject).</p>\r\n<p>We are now moving on!</p>\r\n<p>Brian</p>\r\n",
    "PostedDate": "2011-01-20T08:45:41.463-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]