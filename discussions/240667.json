[
  {
    "Id": "544693",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<div>We have implemented the framework Prism/Unity in our application.</div>\r\n<div></div>\r\n<div>We register the view and the viewmodel with register.type and we pass in parameter&nbsp;ContainerControlledLifetimeManager.</div>\r\n<div>We only have one instance for each view and view model in the application.</div>\r\n<div>We would like to unregister the view and the view model each time we recall the view but we still with the same instance, means, no reload of the data context and the view model.</div>\r\n<div></div>\r\n<div>Here is what we have tried to recreate a new one:&nbsp;</div>\r\n<div>- Remove the weak reference</div>\r\n<div>- Teardown the view in the region</div>\r\n<div>- Dispose the datacontext in the view</div>\r\n<div>- Teardown the View</div>\r\n<div>The result of these actions, everything works but we never pass again in the constructor of the view model, it's still instantiated.</div>\r\n<div></div>\r\n<div>\r\n<div>How can we unregister the link between the view and the view model to recreate a new one?</div>\r\n</div>\r\n<div>If you want some parts of code, let us know.</div>\r\n<div></div>\r\n<div>Thank you for your help.</div>\r\n<div></div>\r\n<div>Regards</div>\r\n<div></div>\r\n<div>PS: we made an issue on the Unity Issue Tracker but we have been told to post on the Prism forums...</div>\r\n",
    "PostedDate": "2011-01-06T01:08:50.6-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "544890",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<p>If I understood your scenario correctly, you need your ViewModel to be recreated each time the view is resolved. In order to achieve that, you need to register your ViewModel's type without specifying a ContainerControlledLifetimeManager, so that a new instance\r\n of the type is retrieved each time you resolve it through the Unity container.</p>\r\n<p>A possibility for achieving your scenario using Region Navigation would be to set the view's DataContext to a new instance of the ViewModel in the OnNavigatedTo method of your view. In order to do so, you must make your view implement the\r\n<strong>INavigationAware</strong> interface. You can read more about this in the <a href=\"How to dispose view when using Lazy&lt;object, IViewMetadata&gt; to create view?\">\r\nNavigation chapter</a> of the Prism MSDN documentation.</p>\r\n<p>Please let me know if I have misunderstood your scenario. In that case, it would be helpful if you could provide us with an in-depth explanation of your scenario, so that we could help you achieve your requirements.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-06T08:42:06.14-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "556734",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Thanks for your quick reply.</p>\r\n<p>We have tried your first solution, deleting the ContainerControlledLifetimeManager but it doesn't seem to be working correctly... The ViewModel is not created again... Do we miss something ?</p>\r\n<p>We will now have a look to your second solution.</p>\r\n<p>Regards</p>\r\n<p>FYI, we are using Prism 2...</p>\r\n",
    "PostedDate": "2011-01-28T01:06:09.377-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "556848",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<p>In order for the first approach I've mentioned to work, it's likely that the view in which you want your ViewModel to be recreated should also be registered without specifying a\r\n<strong>ContainerControlledLifetimeManager</strong>, since you've probably set the DataContext in the view's constructor. If you had specified your view as a singleton instance, the constructor will not be called when you resolve it again.</p>\r\n<p>If you want to benefit from the Navigation approach, you could <a href=\"http://msdn.microsoft.com/en-us/library/gg430859%28PandP.40%29.aspx\">\r\nmigrate to Prism v4</a>. If you don't want to migrate to the latest version, one possibility would be to implement a similar approach to what I've mentioned in my second possibility on your own. That is to say, for example, raise an event when you need to recreate\r\n your ViewModel, and obtain a new instance of it in the handler of that event.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-28T06:00:22.757-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "556928",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<p>We already tried not to specify a ContainerControlledLifetimeManager when registering the view, but it's still not working...</p>\r\n<p>We don't really know where does the problem come from in our project solution...</p>\r\n<p>We keep looking to resolve this issue...</p>\r\n<p>Thanks again for replying so quick !</p>\r\n",
    "PostedDate": "2011-01-28T08:53:31.047-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "556932",
    "ThreadId": "240667",
    "Html": "\r\n<p>Hi,</p>\r\n<p>One possible approach you could pursue to find out the cause of the issue you're experiencing would be to put a breakpoint both in the constructor of the View and in the constructor of the ViewModel, so as to check whether new instances of them are being\r\n created or not.</p>\r\n<p>If you keep experiencing problems after trying out the aforementioned suggestions, you could provide us with a repro sample so that we can help you further.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-28T08:58:39.54-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "557931",
    "ThreadId": "240667",
    "Html": "\r\n<p>Thank you for the advice but we already tried to put a breakpoint in the constructor and new instances are not created...</p>\r\n<p>We will keep looking further because a repro sample is not as easy to do with this project...</p>\r\n<p>FYI, we have several modules and several regions. We are navigating between the views with a ribbon (Divelements.SandRibbon). A Ribbon is implemented in each module.</p>\r\n<p>If you have any more idea please let us know. We will let you know if we find something helpful while keeping debugging...</p>\r\n<p>&nbsp;</p>\r\n<p>Regards</p>\r\n",
    "PostedDate": "2011-01-31T01:27:12.4-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]