[
  {
    "Id": "1433221",
    "ThreadId": "640968",
    "Html": "How would I achieve the following in Prism (this is MVVM light)?<br />\n\r<br />\n&lt;i:Interaction.Triggers&gt;<br />\n<pre><code>                    &lt;local:RoutedEventTrigger RoutedEvent=&quot;{x:Static Validation.ErrorEvent}&quot;&gt;\n                        &lt;e2c:EventToCommand\n                                                Command=&quot;{Binding EditVM.TheEntity.ConversionErrorCommand, Mode=OneWay}&quot;\n                                                EventArgsConverter=&quot;{StaticResource BindingErrorEventArgsConverter}&quot;\n                                                PassEventArgsToCommand=&quot;True&quot; /&gt;\n                    &lt;/local:RoutedEventTrigger&gt;\n                    &lt;local:RoutedEventTrigger RoutedEvent=&quot;{x:Static Binding.SourceUpdatedEvent}&quot;&gt;\n                        &lt;e2c:EventToCommand\n                                                Command=&quot;{Binding EditVM.TheEntity.SourceUpdatedCommand, Mode=OneWay}&quot;\n                                                EventArgsConverter=&quot;{StaticResource BindingSourcePropertyConverter}&quot;\n                                                PassEventArgsToCommand=&quot;True&quot; /&gt;\n                    &lt;/local:RoutedEventTrigger&gt;\n                &lt;/i:Interaction.Triggers&gt;</code></pre>\n\n",
    "PostedDate": "2015-07-06T05:34:06.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1433235",
    "ThreadId": "640968",
    "Html": "Use the InvokeCommandAction behavior that is in the Prism.Interactivity library in Prism 5. It adds the ability to harvest event parameters when hooked up with an event trigger. See the Interactivity QuickStart for an example of its use.<br />\n",
    "PostedDate": "2015-07-06T07:32:44.263-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]