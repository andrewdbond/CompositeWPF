[
  {
    "Id": "425933",
    "ThreadId": "207917",
    "Html": "<p>Can we use Winform's MDI Container as a shell?</p>\r\n<p><span style=\"font-size:x-small\">How do i return DependancyObject from CreateShell() method in the bootstarpper class.</span></p>\r\n<p>protected&nbsp;<span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">override</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">DependencyObject</span></span><span style=\"font-size:x-small\"> CreateShell()</span></p>\r\n<p>{</p>\r\n<p>//.....................shell creation</p>\r\n<p>&nbsp;<span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">return </span></span><span style=\"font-size:x-small\">shell </span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">as</span></span><span style=\"font-size:x-small\"> </span><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">DependencyObject</span></span><span style=\"font-size:x-small\">;</span></p>\r\n<p>&nbsp;}</p>\r\n<p>&nbsp;Do I need to host Winforms MDI&nbsp;Container inside WPF Window?</p>\r\n<p>Thanks</p>\r\n<p>Shailendra</p>",
    "PostedDate": "2010-03-31T04:53:44.897-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "427530",
    "ThreadId": "207917",
    "Html": "<p id=8ae8c1a0-22ea-012d-2b01-12313d013db1>Hi Shailendra,</p>\r\n<p id=8ae8d0a0-22ea-012d-2b02-12313d013db1>I am not aware of your full  scenario, but developing an application that uses the CAL with <strong>Winforms</strong> controls might be the best approach as Prism was meant to be used to <em>&ldquo;to  create a composite application with WPF or Silverlight or upgrade an  existing WPF or Silverlight application to a composite application&rdquo; </em>(from  <a href=\"http://msdn.microsoft.com/en-us/library/dd490815.aspx\">here</a>).  That is why, the CAL comes with two separate assemblies (one that depends on WPF and one that doesn't):</p>\r\n<ul>\r\n<li><strong>Microsoft.Practices.Composite.dll</strong> does not have any dependency with WPF.</li>\r\n<li><strong>Microsoft.Practices.Composite.Presentation.dll</strong> which does have dependencies with WPF. As UI Composition main  functionality is included in this assembly, achieving the scenario you  desire is not viable out of the box.</li>\r\n</ul>\r\n<p id=8ae8eae0-22ea-012d-2b03-12313d013db1>Some possible things that  might interest you are:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/aa480482.aspx\">Smart  Client Software Factory</a> to develop a composite Windows Forms  application. A beta version for VS 2010 <a href=\"http://blogs.southworks.net/dschenkelman/2010/04/04/scsf-gp-beta-for-visual-studio-2010-rc-just-released/\">has  just been released</a>.</li>\r\n<li>Brian Noyes <a href=\"http://www.softinsight.com/bnoyes/2008/10/13/CompositeExtensionsForWindowsForms.aspx\">Composite  Extension for Winforms</a>. He also <a href=\"http://www.softinsight.com/bnoyes/2009/04/22/CompositeExtensionsForPrism2.aspx\">updated  them for Prism v2</a>.</li>\r\n</ul>\r\n<p id=8ae910b0-22ea-012d-2b04-12313d013db1>Please let me know if this  helps.</p>\r\n<p id=8ae93dd0-22ea-012d-2b05-12313d013db1>Damian  Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-04-05T10:27:26.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]