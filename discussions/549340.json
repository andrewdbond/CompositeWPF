[
  {
    "Id": "1258673",
    "ThreadId": "549340",
    "Html": "Hello.\r<br />\n<br />\nI am at the point of pulling out my hair - I register 2 views with a regionManager and at start up the correct view is loaded into the region. \r<br />\n<br />\nI am trying to exchange / replace / deactivate / navigate the initial view with / to the second.<br />\n<pre><code>//Bootstrapper.cs\nprotected override void ConfigureContainer()\n{ \n    base.ConfigureContainer();\n    Container.RegisterType&lt;object, StartupControl&gt;(typeof(StartupControl).FullName);\n    Container.RegisterType&lt;object, MusicGeneration&gt;(typeof(MusicGeneration).FullName);\n}\n\n//StartupViewModel.cs\n//First attempt at navigation - StartupControl gets deactivated (and removed as it should)\n//However &lt;ContentControl regions:RegionManager.RegionName=&quot;mainContentRegion&quot;/&gt; //never swaps out the view to MusicGeneration\n\nvar region = regionManager.Regions[&quot;mainContentRegion&quot;];\nregion.Deactivate(region.Views.ToArray()[0]);\nregion.Activate(region.Views.ToArray()[1]);\n\n//I have done this as well, where view is the actual view\nregionManager.Regions[&quot;mainContentRegion&quot;].RequestNavigate(view.ToString());</code></pre>\n\n<pre><code>///For reference - here is StartUpControl.cs\n\npublic partial class StartupControl : IConfirmNavigationRequest, IRegionMemberLifetime\n    {\n        public StartupControl(IUnityContainer container)\n        {\n            InitializeComponent();\n            DataContext = container.Resolve&lt;StartupViewModel&gt;();\n        }\n\n        public void OnNavigatedTo(NavigationContext navigationContext)\n        {\n            \n        }\n\n        public bool IsNavigationTarget(NavigationContext navigationContext)\n        {\n            return false;\n        }\n\n        public void OnNavigatedFrom(NavigationContext navigationContext)\n        {\n            \n        }\n\n        public void ConfirmNavigationRequest(NavigationContext navigationContext, Action&lt;bool&gt; continuationCallback)\n        {\n            continuationCallback(true);\n        }\n\n        public bool KeepAlive { get { return false; } }\n    }\n</code></pre>\n\nPlease assist<br />\n",
    "PostedDate": "2014-06-22T04:42:44.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1259543",
    "ThreadId": "549340",
    "Html": "Just a question\r<br />\n<br />\nWhat don't you use the Messenger approach in order to communicate between your views ?<br />\n",
    "PostedDate": "2014-06-25T01:47:08.127-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1260110",
    "ThreadId": "549340",
    "Html": "Hi,\r<br />\n \r<br />\nThere are a some issues with the approaches you are using to switch between views.\r<br />\nIn the first approach, you are trying to access the views in the region using their positions in the collection.<br />\n<pre><code>var region = regionManager.Regions[&quot;mainContentRegion&quot;];\nregion.Deactivate(region.Views.ToArray()[0]);\nregion.Activate(region.Views.ToArray()[1]);</code></pre>\n\nWhen the first view is deactivated it is being removed from the region automatically (because you are returning false in the getter of the <strong>KeepAlive</strong> property) and therefore, the collection will no longer have two views. This means that accessing the element at index 1 in the next line will throw an exception, return a different view (if there were other views in the region besides the two you mention above) or have other undefined behavior.\r<br />\nHowever, even if the view were not removed from the collection, it is not a recommended practice to access the views through their position in the collection.\r<br />\n \r<br />\nIn the second approach you are trying to use the <strong>RequestNavigate</strong> method.<br />\n<pre><code>regionManager.Regions[&quot;mainContentRegion&quot;].RequestNavigate(view.ToString());</code></pre>\n\nHowever, take into account that the string you obtain from <strong>typeof(MusicGeneration).FullName</strong> might be different from the one obtained from <strong>view.ToString()</strong> (supposing that view is an instance of a <strong>MusicGeneration</strong> view.) To perform a navigation request the string passed as the view name should be the same as the one used when the view was registered with the <strong>RegisterType</strong> method.\r<br />\nAlso, if the view is already in the region and its <strong>IsNavigationTarget</strong> method is returning false then the navigation request will disregard the existing view and create a new instance of it.\r<br />\n \r<br />\nBased on the code you provided I think that the easier way to switch from the <strong>StartupControl</strong> to the <strong>MusicGeneration</strong> view is invoking the <strong>RequestNavigate</strong> view like this:<br />\n<pre><code>regionManager.Regions[&quot;mainContentRegion&quot;].RequestNavigate(typeof(MusicGeneration).FullName);</code></pre>\n\nWith this, any other view in the region should be deactivated (as the region is used in a <strong>ContentControl</strong>) and removed (if their <strong>KeepAlive</strong> property returns false) and the second view should be shown in its place (the existing view (if any) if its <strong>IsNavigationTarget</strong> returns true or a new instance otherwise.)\r<br />\n \r<br />\nThanks,\r<br />\nEzequiel Jadib\r<br />\n<a href=\"http://blogs.southworks.net\" rel=\"nofollow\">http://blogs.southworks.net</a><br />\n",
    "PostedDate": "2014-06-26T09:52:28.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1260316",
    "ThreadId": "549340",
    "Html": "Hello Ezequiel - thank you for responding\r<br />\n<br />\nI must have forgotten to mention this - but at the time of doing this <br />\n<hr />\nvar region = regionManager.Regions[&quot;mainContentRegion&quot;];\r<br />\nregion.Deactivate(region.Views.ToArray()[0]);\r<br />\nregion.Activate(region.Views.ToArray()[1]);<br />\n<hr />\nI didn't have this<br />\n<hr />\npublic bool KeepAlive { get { return false; } }<br />\n<hr />\nthe view stayed in memory and was accessible through the debugger / immediate window. But still visible regardless \r<br />\n<br />\nI have tried <br />\n<hr />\nregionManager.Regions[&quot;mainContentRegion&quot;].RequestNavigate(typeof(MusicGeneration).FullName);<br />\n<hr />\nas well before but to no avail.\r<br />\n<br />\nThe views are being activated and deactived as expected, however, the first view i.e. <strong><em>StartupControl</em></strong> is never deactivated / removed, and thus always visible<br />\n",
    "PostedDate": "2014-06-27T01:59:12.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]