[
  {
    "Id": "262341",
    "ThreadId": "76723",
    "Html": "<p>Hi,</p>\r\n<p>I see Delegatecommand is a generic class where the generic type is the type of parameter the command expects. How do I declare a DelegateCommand that doesn't expect any parameter types? I bet the answer is simple and staring me in the face ;-)</p>\r\n<p>Thanks for your help</p>\r\n<p>Graham</p>",
    "PostedDate": "2009-12-01T08:44:37.283-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "262394",
    "ThreadId": "76723",
    "Html": "<p>DelegateCommand&lt;object&gt; is your friend :-)</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Attila</p>",
    "PostedDate": "2009-12-01T10:49:21.397-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "262398",
    "ThreadId": "76723",
    "Html": "<p id=e4fdb350-c0d5-012c-75d7-12313b030631>Hi,</p>\r\n<p id=e4fdbe80-c0d5-012c-75d8-12313b030631>As you mentioned in this implementation of ICommand for Prism you aren't allowed to instantiate a DelegateCommand that doesn&rsquo;t expect parameters. A workaround could be creating the instance of the DelegateCommand with the generic type as object and pass null as the parameter. Notice that as default behavior if you don&rsquo;t pass any argument, you will receive a null as parameter.</p>\r\n<p>On the other hand, if your application requires you to create a non-generic DelegateCommand, you may create a custom one by implementing the ICommand interface.&lt;var&gt;&lt;/var&gt;</p>\r\n<div>\r\n<p id=e4fde0e0-c0d5-012c-75da-12313b030631>I hope you can find this answer  helpful.</p>\r\n<p id=e4fdf1e0-c0d5-012c-75db-12313b030631>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n</div>",
    "PostedDate": "2009-12-01T11:04:33.16-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]