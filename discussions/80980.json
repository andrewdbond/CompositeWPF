[
  {
    "Id": "277689",
    "ThreadId": "80980",
    "Html": "<p>Now that the new year is hear, there are lots of questions regarding Prism 4.0 - schedule and capability. I am starting this thread to get feedback on the next release.</p>\r\n<p><strong>Schedule:</strong> Early Spring through Summer. Note: Yes this is vague as we will get started as soon as we finish Web Client Guidance Project.</p>\r\n<p><strong>Features / Capabilities:</strong> We are considering the following for the release - ViewModel pattern, navigation, out of browser applications, developer/designer workflow, user experience patterns, visual studio templates, and a whole host of other areas. We need feedback on this list so please let us know your thoughts using this thread. In February, I will put together a feature survey that I will ask you to take to help us pick the actual scope for Prism 4.0. The survey will be based upon this discussion thread and feedback we heard from customers. Once the survey is available, I will announce the survey on my blog: <a href=\"http://blogs.msdn.com/blaine\">http://blogs.msdn.com/blaine</a> so check it out.</p>\r\n<p>We will use the results of the survey to create the vision/scope for the project and then get started. The will be a fun release. The hard part will be picking what is in the release because there are lots of things to cover - so we need your help :).</p>\r\n<p>Blaine Wastell</p>\r\n<p>Program Manager p&amp;p Client Program</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-15T11:27:01.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "277735",
    "ThreadId": "80980",
    "Html": "<p>Can we get both .NET 3.5 and 4 in this release. I'd like to move to 4 but I want to be able to do it between Prism releases.</p>",
    "PostedDate": "2010-01-15T13:40:28.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "277785",
    "ThreadId": "80980",
    "Html": "<p>When you say &quot;ViewModel pattern&quot; what are you referring to, specifically? I'd love to see the following:</p>\r\n<ul>\r\n<li>Some mechanism or behavior for binding viewmodels with dependencies, i.e. being able to bind a view model with constructor-injected or tagged property dependencies and have the IoC instantiate it and wire up the dependencies </li>\r\n<li>Strongly typed regions</li>\r\n<li>Definitely navigation that fully supports dynamic module loading triggered by a navigation ... perhaps an extension to the navigation definition (attached behavior) that attributes the path with the module name so PRISM knows to load that module when the navigation happens</li>\r\n<li>RegionAdapter for grids</li>\r\n<li>Multicontrol adapter that can handle multiple views becoming visible/invisible through the VisualStateManager (i.e. can I raise some navigation event such that if I have several views, the target view goes to a visible viewstate and the views that aren't the target go to a hidden viewstate)</li>\r\n</ul>\r\n<p>Those are the top wishes I have based on what I've had to manually wire up to support this. Looking forward to the release!</p>",
    "PostedDate": "2010-01-15T15:57:15.16-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278048",
    "ThreadId": "80980",
    "Html": "<p>Definitely looking for the integration story with MEF and a best practices approach for using both Prism and MEF to create modular, extensible apps.&nbsp; Also, more information on the 'ViewModel' pattern would help to cast more votes in that direction. :)</p>",
    "PostedDate": "2010-01-16T18:21:01.143-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278337",
    "ThreadId": "80980",
    "Html": "<p>I would like to see some of the work provided in the WPF Composite Contrib and&nbsp;Calcium migrated to Prism 4.0</p>\r\n<p>In particuliar</p>\r\n<p>Calcium did a log of work on extending the&nbsp;GetModuleCatalog()</p>\r\n<p>Add dialog workspace support out of the box and some others from the Contrib</p>\r\n<p>Auto wiring of MVVM out of the box with BindableObject support in some form of base class.</p>\r\n<p>DispatchedObservableCollection from WPFExtensions to help with threading issues ( WPFExtensions)</p>\r\n<p>These would be my wishes</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-17T20:11:28.14-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278374",
    "ThreadId": "80980",
    "Html": "<p>Some things I'd like to see:</p>\r\n<ul>\r\n<li>Better support for bootstrapping with alternative IOC containers. The use of Unity &quot;resolve anything&quot; feature makes it very difficult to use a custom container. <a href=\"http://neverindoubtnet.blogspot.com/2009/12/ioc-agnostic-prism-bootstrapper.html\">Ward Bell's post</a> could be used as a starting point here.&nbsp;</li>\r\n<li>A non-generic DelegateCommand with no parameters - e.g., new DelegateCommand(() =&gt; DoSomething(..));</li>\r\n<li>A signed binaries release, so third party libraries that extend prism can also be signed</li>\r\n<li>Some kind of IEventAggregator.UnsubscribeAll(target); which deletes all subscriptions by the target object - makes it much easier to ensure a view model/presenter is cleaned up</li>\r\n<li>Easier ability to make views aware of regions - e.g., a view can implement an interface to be notified when it is activated, deactivated, becomes the selected view, is closing/closed (if the region supports closing), ability to throw up &quot;are you sure&quot; dialogs, etc.</li>\r\n</ul>\r\n<p>The WPF team have already released an MVVM template - what would a Prism MVVM class add to that?</p>",
    "PostedDate": "2010-01-17T23:30:54.49-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278380",
    "ThreadId": "80980",
    "Html": "<p><em>&quot;evanhutnick: </em><em>Definitely looking for the integration story with MEF and a best  practices approach for using both Prism and MEF&quot; ...<br></em></p>\r\n<p>My vote for that, as well :)</p>",
    "PostedDate": "2010-01-17T23:55:43.087-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278576",
    "ThreadId": "80980",
    "Html": "<p><strong>Eliminate the Get/Act Pattern</strong></p>\r\n<p><strong><span style=\"font-weight:normal\">I would like to see the Get/Act pattern for IRegionManager and EventAggregator eliminated. &nbsp;It makes testing much more difficult than it needs to be. &nbsp;The extension method wrapper for AddViewToRegion almost needs to be avoided to make things work well. &nbsp;In tests we are forced to build up a full Regionmanager instance versus any mocking, which isn't terrible in-and-of itself, but its dirty.</span></strong></p>\r\n<p>The Get/Act pattern that shows up forces you to Setup the root with a Stub/Mock instance of the thing to be acted upon which reduces the readability of the tests.</p>\r\n<p><strong>Resolve MarkupExtension</strong></p>\r\n<p>I'd like to see a ResolveMarkupExtension in Prism. &nbsp;You can more easily create isolated components or features for your application by Resolving ICommand instances (over hooking the command up through some arbitrary ViewModel or Presenter).</p>\r\n<p><strong>IRemovedFromRegionAware</strong></p>\r\n<p>The name is a bit facetious, but support for a view being notified when it is removed from a region would allow for Unregistering events and CompositeCommands much the same way we Activate/Deactivated when a view IsActive changes.</p>",
    "PostedDate": "2010-01-18T09:39:24.21-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278844",
    "ThreadId": "80980",
    "Html": "<p>At now it's difficult completely separate&nbsp; the design of UI (how to display the model) from the writing of viewmodel (what to presenter of the model and how to manage the model itself) because the region dependency is between the two worlds.</p>\r\n<p>It's can define the region subdivision in xaml of the views, but I have to specify in the module's code in witch region register a view, but I think it's more appropriate define in the view's properties in witch region insert itself. So, I define the view, specified the name of the region in witch register it (by an attached property or something else), specified the viewmodel/presenter interface to link the DataContext of the view (by constructor argument, but I prefer an attribute solution), in this way who design the UI is completely independent from whom is writing the viewmodel.</p>\r\n<p>With this feature when I write the viewmodel I can think only to the presenting the model and business by delegate command, demands the region subdivision to UI's programmers. I think it's fundamental that in the UI there is less code behind as possible, in particular relative to the prism mechanism, for me it is optimum when I can completely write the UI by tools like Blend.</p>",
    "PostedDate": "2010-01-19T01:30:03.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278903",
    "ThreadId": "80980",
    "Html": "<p>1.&nbsp; Get the story&nbsp;for the MEF and PRISM integration down pat.&nbsp; Is it going to replace Unity, Is it going to replace the Module Loader,&nbsp; or Both.&nbsp; Do the intergration and then have a story for each model and provide quick starts for them/it.</p>\r\n<p>2. A lot of the requests above seem to want to couple views to Regions. IMO that is a bad thing.&nbsp; Views should remain region agnostic.&nbsp; They should have an interface that allows them to know when they are added, and removed, and activated, but other than that, they should not know the region they are going to be in until they are placed in it.&nbsp; That IMO is the module or controllers responsibility.</p>\r\n<p>3. Keep .net 3.5 and 4.0 support in this version.</p>\r\n<p>4. Add Rx extensions where appropriate.&nbsp; Things like the Event Aggregator could be Rx enabled.&nbsp; It is close now, but moving to the Rx mindset would be nice.</p>\r\n<p>5.&nbsp;Add more quickstarts that show extensibility ( remote and role based module loading, etc.&nbsp; )</p>\r\n<p>6. Provide some&nbsp;Visual Studio helpers ( Dont go the level of the SCSF stuff to provide whole subsystems, but some simple templates would be nice )</p>\r\n<p>7. Keep it light weight.&nbsp; Dont become SCSF 2.&nbsp; Use the Quick Starts to show best practices, but dont bloat the core with stuff that most dont need.&nbsp;</p>\r\n<p>8. Provide some more region adapters.&nbsp; As things are added to the WPF Toolkit and Silverlight Toolkit, make sure that there are adapters for them in Prism.&nbsp; Provide a Region adapter for the Ribbon Control.&nbsp;</p>\r\n<p>9. Provide more quickstarts which show where and how to add Authentication and Role based solutions.&nbsp;</p>\r\n<p>10.&nbsp; Provide a quickstart that shows asynchronous services.&nbsp;</p>\r\n<p>11.&nbsp; Show Integration with RIA Services and WCF Data Services.&nbsp;</p>\r\n<p>12.&nbsp; Because this is meant to be the Enterprise Pattern to use, provide more quickstarts that show your ideas for how best to integrate the other enterprise level tools that MS provides.&nbsp;</p>\r\n<p>13. Do not be scared to show quick starts that take advantage of the platform they are meant to run on.&nbsp;&nbsp; Do some WPF specific quickstarts, and some Silverlight specific quickstarts.&nbsp; They dont all have to run on both environments.&nbsp;&nbsp; Let some WPF ones use 3D or Multi-Process, or local Storage.&nbsp; Strut the capabilities of each envirionment.&nbsp; Dont always program to the lowest common denominator.</p>",
    "PostedDate": "2010-01-19T05:15:08.89-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "282341",
    "ThreadId": "80980",
    "Html": "<p>Keeping this thread alive.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-27T06:57:21.887-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "282653",
    "ThreadId": "80980",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>pmont wrote:</strong><br>\r\n<p>2. A lot of the requests above seem to want to couple views to Regions. IMO that is a bad thing.&nbsp; Views should remain region agnostic.&nbsp; They should have an interface that allows them to know when they are added, and removed, and activated, but other than that, they should not know the region they are going to be in until they are placed in it.&nbsp; That IMO is the module or controllers responsibility.</p>\r\n</blockquote>\r\n<p>I agree with the point, but I have an exception: what about if I would offer to the customer the possibility to completely customize the UI? I explain better: I make an application, I develop the all the presenters with their interfaces, so I realize a first kind of UI with my region definition, where to insert&nbsp; the views, and so on. The main value of the product is the business logic and the scalable architecture, so I decide to offer the possibility to ISV customer (or some kind of distributor with programming capability) to redesign the UI by its own, only to know the philosophy of Prism's region subdivision and the interfaces of all presenters. Another scenario is the situation where presenter/business team developers have to work completely independent from the UI team developers: the first team doesn't want to know anything about interface, just the interface of presenter, and the module/service to implement.</p>\r\n<p>IMO, in this kind of scenario is essentially to couple views to Regions, in this situation the region subdivision and&nbsp; behaviour is part of UI design and not presenting the model.</p>",
    "PostedDate": "2010-01-28T01:06:35.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "282656",
    "ThreadId": "80980",
    "Html": "<p>I have another suggestion for the code sample:</p>\r\n<p>- a floating/pop-up region to view a keyboard, it regroups more aspect about region behaviour in a useful tool for touch application.</p>\r\n<p>Some one could adding the capability to pop-up the keyboard when the focus is on a entry field by an event aggregator, defining an attached property to use in xmal ,... but tih is another story ^__-</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-28T01:15:01.803-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "282796",
    "ThreadId": "80980",
    "Html": "<p>The requirements you stated, could be solved in several ways.</p>\r\n<p>If you want to use attributes, you could create some custom attributes that allow your views to specify the region they want to be in.&nbsp; Then let the Module those views are in, read those attributes and place them into the proper region.&nbsp; That way, you have control over what flexibility the &quot;users&quot; have.&nbsp; They dont have full access to all of the regions.&nbsp; Only the ones you surface in the attributes.&nbsp; That way it could be &quot;typed&quot; to the user.</p>\r\n<p>If you are in a free for all situation, and the user has the ability to code, then you have no control over the&nbsp;number and form of the reqions, so let them write the modules too and make your presenter code just something that they use.&nbsp;</p>\r\n<p>But the ability to have a view be able to specify a region sounds to me more like an app specific thing.&nbsp;</p>\r\n<p>Paul</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-28T08:09:34.107-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "282837",
    "ThreadId": "80980",
    "Html": "<p>For developing LoB apps in Silverlight, it's essential to use WCF RIA Services. Please be sure Prism 4, MEF and RIA are considered to work seamlessly from the beginning and does not become an after-thought solution. Any large apps will be doing lots of database related activities, and Prism and MEF should see that as the core of any apps. Another words, give us a way to build LARGE modular apps with SL and RIA.</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you in advance!</p>",
    "PostedDate": "2010-01-28T09:15:38.757-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "283324",
    "ThreadId": "80980",
    "Html": "<p>Another item.</p>\r\n<p>MS has been horrible with a story for Inter-Process communication in a fashion that is as robust as the Aggregator or Mediator pattern in CAL.&nbsp; Yes there are named pipes, but it would be nice if CAL could lead the way to a true pub/sub IPC mechanism between CAL processes.&nbsp; Extend the Aggregator to be cross process.&nbsp; Keep it limited to the same box for now, but a robust IPC mechanism would be very welcome.</p>\r\n<p>Just a thought</p>\r\n<p>Paul</p>",
    "PostedDate": "2010-01-29T06:16:04.853-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "283332",
    "ThreadId": "80980",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>pmont wrote:</strong><br>\r\n<p>MS has been horrible with a story for Inter-Process communication in a fashion that is as robust as the Aggregator or Mediator pattern in CAL.</p>\r\n</blockquote>\r\n<p>&nbsp;</p>\r\n<p>'Robust' might not be the best term here. &nbsp;WCF is certainly robust. &nbsp;It's also gotten easier and easier to implement. &nbsp;As for a smooth pub/sub model that is as simple as the EventAggregator (Get/Act pattern aside) you might be on to something there. &nbsp;Looking to something like NServiceBus or Agatha as a model for this might generate an interesting UberAggregator experience.</p>\r\n<p>It might be pushing the charter of the Prism toolset to include this though.</p>",
    "PostedDate": "2010-01-29T06:30:56.983-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "283338",
    "ThreadId": "80980",
    "Html": "<p>your term is a better one.&nbsp; &lt;grin&gt;</p>\r\n<p>But something that extended the Aggregator Pattern into an interprocess model ( CAL apps only ) would be a welcome addition IMO.&nbsp; Like I said, keep it inside the box for now.&nbsp; Under the covers it should use WCF, with whatever channels make sense.&nbsp;&nbsp;The &quot;messages&quot; would have to be in a shared dll, but arent they always for anything other than strings or xml between processes?&nbsp; And we are talking about an app &quot;family&quot; that would be using this comm, so shared dll's would be expected.&nbsp; Pub/Sub with the abiility of multiple processes to join in the fun.&nbsp; An inside the box peer to peer CAL app network.</p>\r\n<p>&nbsp;I am not familiar with Agatha, do you have a link?</p>\r\n<p>And BTW, I am positive that where I work ( a large, large financial company ) they would welcome this addition and put it to use very quickly.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-29T06:54:55.09-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "283342",
    "ThreadId": "80980",
    "Html": "<div class=WordSection1><p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">I do really like the idea of extending the EventAggregator to support pub/sub across processes. </span></p><p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p><p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">Agatha: <a href=\"http://code.google.com/p/agatha-rrsl/\">http://code.google.com/p/agatha-rrsl/</a> & <a href=\"http://davybrion.com/blog/category/agatha/\">http://davybrion.com/blog/category/agatha/</a></span></p><p class=MsoNormal> </p><p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p><div><div style=\"border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in\"><p class=MsoNormal><b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\">From:</span></b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\"> pmont [mailto:notifications@codeplex.com] <br><b>Sent:</b> Friday, January 29, 2010 9:55 AM<br><b>To:</b> cromwellryan@hotmail.com<br><b>Subject:</b> Re: Prism 4.0 Feedback Needed [CompositeWPF:80980]</span></p></div></div><p class=MsoNormal> </p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">From: pmont</span></p><div style=\"margin-bottom:24.0pt\" id=ThreadNotificationPostBody><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">your term is a better one.  &lt;grin&gt;</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">But something that extended the Aggregator Pattern into an interprocess model ( CAL apps only ) would be a welcome addition IMO.  Like I said, keep it inside the box for now.  Under the covers it should use WCF, with whatever channels make sense.  The &quot;messages&quot; would have to be in a shared dll, but arent they always for anything other than strings or xml between processes?  And we are talking about an app &quot;family&quot; that would be using this comm, so shared dll's would be expected.  Pub/Sub with the abiility of multiple processes to join in the fun.  An inside the box peer to peer CAL app network.</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\"> I am not familiar with Agatha, do you have a link?</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\"> </span></p></div><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Read the <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=80980&ANCHOR#Post283338\">full discussion online</a>.</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com?subject=[CompositeWPF:80980]\">CompositeWPF@discussions.codeplex.com</a>)</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com\">CompositeWPF@discussions.codeplex.com</a></span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/80980\">unsubscribe</a> on CodePlex.com.</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com</span></p></div>",
    "PostedDate": "2010-01-29T07:03:52.47-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "284196",
    "ThreadId": "80980",
    "Html": "<p>A recommended infrastructure for hooking up UI to commands with more state than enabled/disabled would be nice.</p>\r\n<p>E.g. Buttons/MenuItems that toggle an option on or off.</p>\r\n<p>I've seen this done with bindings to the command parameter, but it would be nice to have something included in Prism, with samples.</p>",
    "PostedDate": "2010-02-01T03:33:23.947-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "284239",
    "ThreadId": "80980",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>swythan wrote:</strong><br>\r\n<p>A recommended infrastructure for hooking up UI to commands with more state than enabled/disabled would be nice.</p>\r\n<p>E.g. Buttons/MenuItems that toggle an option on or off.</p>\r\n<p>I've seen this done with bindings to the command parameter, but it would be nice to have something included in Prism, with samples.</p>\r\n</blockquote>\r\n<p>Are you thinking along the lines of a Split button or a Ribbon where Groups/Tabs are dynamically added and removed? &nbsp;Something like a Menu Registry?</p>",
    "PostedDate": "2010-02-01T05:51:02.92-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "284751",
    "ThreadId": "80980",
    "Html": "<p>No, more like menus with a checkmark (or toggle buttons on a toolbar). E.g. In a rich text editor, you would usually want a &quot;Bold&quot; toggle button on a toolbar that toggles it's state depending on whether the selected text is bold or not.</p>\r\n<p>We have similar requirements (although in an entirely different context) for commands that modify some sort of state, that should be reflected in the UI that is bound to the command.</p>\r\n<p>TBH, I don't know if this sort of thing really falls into the Prism remit, but it would be useful to get some guidance from somewhere.</p>",
    "PostedDate": "2010-02-02T06:56:34.567-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "284813",
    "ThreadId": "80980",
    "Html": "<p>I hear you. &nbsp;This is definitely possible today, but there is little guidance or samples. &nbsp;Remember, you can use most Ribbon controls as standard Regions.</p>",
    "PostedDate": "2010-02-02T08:32:42.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "285798",
    "ThreadId": "80980",
    "Html": "<p>I have recently found a framework called nRoute (http://nroute.codeplex.com/) which is IMHO awsome. Though it is in an early stage it may be worth considering several of its concepts for Prism 4.0.</p>",
    "PostedDate": "2010-02-04T06:57:43.507-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "287278",
    "ThreadId": "80980",
    "Html": "<p>Hi guys,</p>\r\n<p>1. Improve dynamic modules</p>\r\n<ul>\r\n<li>Shoud support shared styles and other resources. Currently it is not possible because Silverlight try load all styles and if module doesn't have reference to assembly related to style it will fail to load. Currently we implemented it by try catching all styles one by one when new module is loaded.</li>\r\n<li>Modules should share common assemblies. Example: Module A depend on assembly x and Module B depend on assembly x. In this if module B is loaded after A it shouldn't load assembly x. Currently we have implemeted it by manual parsing of extmap section in appmanifest</li>\r\n</ul>\r\n<p>2. Built in integration with MEF</p>\r\n<p>3. Replace all internal logic and public apis with Rx.</p>\r\n<p>4. Silverlight Page Framework is total garbage. Don't try to integrate with it =) Provide some kind of application controller which will build up UI for &quot;use case&quot; or &quot;page&quot;. Also it should be integrated with browser history.</p>\r\n<p>5. Commands should be attached with Expression Blend interaction APIs. Currently PRISM require to create thousand attached property for every new invoker different from Button Click. Example: EventTrigger with InvokeDelegateCommandAction. Currently eventtrigger has some hidden traps and you should rewrite it a bit.</p>\r\n<p>6. Some view model helpers? I know there is thousands of projects that try to provide a solution in this area. Perhaps it could include some way to automate creating of ViewModels with tools like Castle Dynamic Proxy 2. Automappers?</p>\r\n<p>7. Validation Framework. Currently build-in validation framework is rather poor. I think it should be based on fluent interfaces instead of attribute based approach.</p>\r\n<p>Our team has 1 year experience in developing of our interal Silverlight Application Framework firstly based on Prism ideas.</p>\r\n<p>We are ready to help and collaborate if needed.</p>\r\n<p>You can contact me through my blog: http://weblogs.asp.net/AlexeyZakharov/</p>\r\n<p>Best regards,</p>\r\n<p>Alexey Zakharov.</p>",
    "PostedDate": "2010-02-08T12:20:05.907-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "287467",
    "ThreadId": "80980",
    "Html": "<p>+1 for a better validation framework. WPF's built in support is very poor.</p>",
    "PostedDate": "2010-02-09T01:30:24.41-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "287780",
    "ThreadId": "80980",
    "Html": "<p>1. Deployment - For once I'll like to start from the end.</p>\r\n<p>There are no good deployment tools today for application built with CAL (or any application that is not statically built), not as packaged installation and not with ClickOnce.</p>\r\n<p>I'm using a home made msbuild project that take my host, collect all the modules and package them with ClickOnce.</p>\r\n<p>I'm looking for more straight forward deployment project which can have multiple configuration like dev, test, prod, customer1023, customer5. Each configuration will contain manifest of modules require to be package as well as configuration (app.config) file.</p>\r\n<p>For ClickOnce deployment version (not assembly) tracking is also important.</p>\r\n<p>&nbsp;</p>\r\n<p>2. Navigation</p>\r\n<p>I think navigation should be integral part of ViewModel pattern.</p>\r\n<p>* &quot;web site&quot; navigation style with back and forward. This pattern should allow to open more than one host window since most users find it more productive to open two (or more) windows and watch what they want at the same time, not having to navigation between windows.</p>\r\n<p>* Dialog boxes - Show a dialog box which does not allow the application to continue until closed.</p>\r\n<p>In ViewModel pattern sometime I use a UserControl as the View and sometime I use DataTemplate as the View. In the first case the navigation services should be available to both the ViewModel and the UserControl. In the second case the navigation service should be available to the ViewModel only. It means there must be different ways to get hold of the navigation services. Remember that if we allow more than once host window we cannot use singleton navigation service instance.</p>\r\n<p>3. Toolbar and Context Menus.</p>\r\n<p>Say I have a screen that display grid of objects that can be created, modified and delete.</p>\r\n<p>How can we&nbsp;standardize&nbsp;the way we create and bind commands to toolbar items and context menu items.</p>\r\n<p>4. Event Aggregation - I think the implementation is great. The fact that the event itself define the registrations and execution strategy is interesting.</p>\r\n<p>5. One Stop Shop for unhandled Exceptions</p>\r\n<p>I think it can be nice to create service which will handle all unhandled exceptions in the application. Allow to save the exception details to local file, maybe send it with email and show the client a nice &quot;oops, something went wrong&quot; window.</p>\r\n<p>&nbsp;</p>\r\n<p>Look this project and keep up the great work.</p>\r\n<p>Ido.</p>",
    "PostedDate": "2010-02-09T11:55:44.873-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "287796",
    "ThreadId": "80980",
    "Html": "<p>I just like to add one import thing: User State.</p>\r\n<p>By that I mean a way to store and retrieve the state in which the user leave the application on the last run.</p>\r\n<p>* Size and location of the host window</p>\r\n<p>* width and height of grid splitters</p>\r\n<p>* Selected data in list and combo box (where applicable)</p>\r\n<p>&nbsp;</p>\r\n<p>There are some great implementation around that use attached properties to set the UI state directly in XAML but there should be way to add state&nbsp;programmatically for state that is not UI directly.</p>\r\n<p>If we link it to ViewModel pattern then the state of the ViewModel should be restore as well as the view state.</p>\r\n<p>&nbsp;</p>\r\n<p>The user of provider pattern can help make the persistence details transparent to allow different providers such as local file, isolated storage (for web applications), central database, etc.</p>\r\n<p>&nbsp;</p>\r\n<p>Ido.&nbsp;</p>",
    "PostedDate": "2010-02-09T12:28:17.937-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289807",
    "ThreadId": "80980",
    "Html": "<p>Allow view discovery to use scoped regions.&nbsp; For example, with code like this:</p>\r\n<p>this.RegionManager.RegisterViewWithRegion(&quot;MainRegion&quot;, typeof(ReportsView));</p>\r\n<p>\r\n<p>I would like ReportsView to have a region scope, so that it can register a common-name region for its sub-views:&nbsp;</p>\r\n<p>&lt;ContentControl regions:RegionManager.RegionName=&quot;VeryCommon&quot; /&gt;</p>\r\n</p>",
    "PostedDate": "2010-02-11T11:47:21.833-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289811",
    "ThreadId": "80980",
    "Html": "<p>I would also like to be able to register the type of my&nbsp;view-model with a view and a region, so that a command would instanciate the&nbsp;view-model and actually ask the region manager to &quot;open&quot; the view-model, while being agnostic of which view(s) in which region(s) will display the view-model.</p>",
    "PostedDate": "2010-02-11T11:59:13.313-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289812",
    "ThreadId": "80980",
    "Html": "<div class=WordSection1><p class=MsoNormal><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">invertedrider66,</span></p><p class=MsoNormal><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\"> </span></p><p class=MsoNormal><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">Can you stub out what you are envisioning, I’m not following what you are asking for.</span></p><p class=MsoNormal><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\"> </span></p><div><div style=\"border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in\"><p class=MsoNormal><b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\">From:</span></b><span style=\"font-size:10.0pt;font-family:'Tahoma','sans-serif'\"> invertedrider66 [mailto:notifications@codeplex.com] <br><b>Sent:</b> Thursday, February 11, 2010 2:59 PM<br><b>To:</b> cromwellryan@hotmail.com<br><b>Subject:</b> Re: Prism 4.0 Feedback Needed [CompositeWPF:80980]</span></p></div></div><p class=MsoNormal> </p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">From: invertedrider66</span></p><div style=\"margin-bottom:24.0pt\" id=ThreadNotificationPostBody><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif'\">I would also like to be able to register the type of my view-model with a view and a region, so that a command would instanciate the view-model and actually ask the region manager to &quot;open&quot; the view-model, while being agnostic of which view(s) in which region(s) will display the view-model.</span></p></div><div style=\"border:none;border-top:solid #CCCCCC 1.0pt;padding:0in 0in 0in 0in\" id=ThreadNotificationFooter><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Read the <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=80980&ANCHOR#Post289811\">full discussion online</a>.</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com?subject=[CompositeWPF:80980]\">CompositeWPF@discussions.codeplex.com</a>)</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">To start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com\">CompositeWPF@discussions.codeplex.com</a></span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/80980\">unsubscribe</a> on CodePlex.com.</span></p><p><span style=\"font-size:9.0pt;font-family:'Verdana','sans-serif';color:gray\">Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com</span></p></div></div>",
    "PostedDate": "2010-02-11T12:00:46.81-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289833",
    "ThreadId": "80980",
    "Html": "<div>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">Yeah, sure</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">Ok, suppose I have a command that gets data from the outside world.&nbsp; Suppose it gets a Person. &nbsp;The command is meant to display that Person on the screen.&nbsp; Generally, the command would be exposed by a view-model and on that view-model, there&rsquo;s a Person property bound to the UI.&nbsp; When the call returns, that property would be assigned, firing the PropertyChanged event of the view-model, and the UI would refresh, displaying the Person.</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">That&rsquo;s in most of the cases.&nbsp; Now, suppose the command is not exposed by a view-model instance and is unable to directly interact with an instance of a view-model that&rsquo;s bound to the UI.&nbsp; The command is floating somewhere and it has no view-model to update with the Person it gets from the outside world.&nbsp; I guess you would tell me that in this case, my command would use the event aggregator to raise the fact that the Person is now available to be shown, and some view-model somewhere would grab the event, assign its property, and raise PropertyChanged which would display the Person on the UI.</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">What I would like is to formalize this process; when a chunk of data is available (the Person instance in this case), I would like to be able to <em>instanciate</em> a view-model &ndash; in fact, a better approach would be to register a view-model type to a data type (PersonViewModel to Person) &ndash; and ask the framework to find any view registered with that type of view-model and push the view-model into that (those) view(s).</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:Wingdings;color:#1F497D\">J</span><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp; I wonder if that&rsquo;s clear&hellip;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<div>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">dave.</span></p>\r\n</div>\r\n<p><span style=\"font-size:11.0pt;font-family:'Calibri','sans-serif';color:#1F497D\">&nbsp;</span></p>\r\n<div>\r\n<div style=\"border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in\">\r\n<p><span style=\"font-size:10.0pt;font-family:'Arial','sans-serif'\">&nbsp;</span></p>\r\n</div>\r\n</div>\r\n</div>",
    "PostedDate": "2010-02-11T12:35:26.703-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "289939",
    "ThreadId": "80980",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>mkane91301 wrote:</strong><br>\r\n<p>Can we get both .NET 3.5 and 4 in this release. I'd like to move to 4 but I want to be able to do it between Prism releases.</p>\r\n</blockquote>\r\n<p>&nbsp;If all you want to do is work with <span style=\"color:#ff0000\"><strong>CAL (Prism)</strong></span> in <span style=\"color:#ff0000\"><strong>Visual Studio 2010 using .NET 4.0</strong></span> then you can download a converted build of the latest <strong>P&amp;P</strong> drop from <a title=\"The Composure Site\" href=\"http://composure.codeplex.com\"><strong>The Composure Site</strong></a>.</p>\r\n<p>I started this project two months ago to provide lightly modified builds of popular open-source frameworks for&nbsp;those who want to start working with the new&nbsp;platform right away. There are a number of other builds there that may also be of interest to you.</p>\r\n<p><strong>BTW</strong>: There are two builds hosted on <a title=Composure href=\"http://composure.codeplex.com\"><strong>Composure</strong></a> for <strong>CompositeWPF</strong>:&nbsp;one for <span style=\"color:#ff0000\"><strong>Silverlight 3</strong></span>&nbsp;and another for&nbsp;<span style=\"color:#ff0000\"><strong>Silverlight 4</strong></span>. Both of them are built against .NET 4.0 in VS2010 Beta 2. ALL of the desktop tests pass except for 2 related to type identification in certain inheritance scenarios. I have not&nbsp;yet had a chance to review all of the tests for SL4, so keep that in mind and run them yourself if you want to make sure everything is working correctly.</p>\r\n<p>Cheers,</p>\r\n<p>Ben&nbsp;</p>",
    "PostedDate": "2010-02-11T18:12:05.113-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "290160",
    "ThreadId": "80980",
    "Html": "<p>The latest prism is a great platform. Having been following this stuff since CAB on WPF I would have to say the pain points of devloping composite WPF applications are:</p>\r\n<ul>\r\n<li>Input binding support (I think fixed in .NET 4)</li>\r\n<li>Design time experiance with DataTemplates (really a Visual Studio or Blend team problem). Ie I just want to register DataTemplates that target my ViewModels. This allows me to not have to write UserCcontrols and thus keeping my coverage high. Then I just add ViewModels to regions and WPF just figures the rest out. (sucks that Silverlight cant do this).</li>\r\n<li>Building Responsive UIs. This required a lot for Threading and dispatcher knowledge which was overkill for most devs. Rx solves this pretty much in one API. Love Rx</li>\r\n<li>IUnityContainer is silly. What developer thinks that an Interface needs 42 methods. Extension methods anybody? Also want easily be mocked by RhinoMocks or Moq. See --&gt; <a href=\"http://leecampbell.blogspot.com/2009/08/how-not-to-write-interface-in-c-30.html\">http://leecampbell.blogspot.com/2009/08/how-not-to-write-interface-in-c-30.html</a>. Again this problem I dont think is really the Prism team's (but would be nice if they yelled at the Unity team across the corridor)</li>\r\n<li>Unity Convention over configuration. Again not really a problem with Prism but generally Unity and Prism are seen as one product.</li>\r\n</ul>\r\n<p>The things I like most about Prism is that I only need to know and use 4 things 1) Regions, 2)Modules, 3)Event Aggregator, 4)Commands and Behaviours. Small APIs are good APIs.</p>\r\n<p>I would love to see some really good TDD walk through videos. Every place I end up building Prism apps does it differently at the start and once we move to TDD looks the same(as previous projects)&nbsp;but not really similar to the samples or what we started out as. This may be due to me pushing my architecture on the team tho ;-)</p>\r\n<p>So answering the actual question:</p>\r\n<ol>\r\n<li>Get unity to get better</li>\r\n<li>Provide better TDD samples and guidance (Videos!!)</li>\r\n<li>Keep the Api really small or at least an Opt-in framework.</li>\r\n</ol>",
    "PostedDate": "2010-02-12T08:27:45.427-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "413556",
    "ThreadId": "80980",
    "Html": "<p>Unity 2.0 brings some major advantages over version 1.2 that is currently used in Prism.</p>\r\n<p>1) Support Unity 2.0</p>\r\n<p>and maybe</p>\r\n<p>2) Bring in a convention based registration extension to Unity like <a title=\"Unity Auto Registration\" href=\"http://autoregistration.codeplex.com/\">[THIS ONE]</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-03T01:07:22.487-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "417543",
    "ThreadId": "80980",
    "Html": "<p>Any news on the development and the time frame&nbsp; for RTW? Will it release along the same time as SL4?</p>\r\n<p>Thanks!</p>\r\n<p>..Ben</p>",
    "PostedDate": "2010-03-12T09:44:25.397-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "419018",
    "ThreadId": "80980",
    "Html": "<p>As I mentioned in my <a href=\"http://blogs.msdn.com/blaine\">blog</a>, we plan to ship around September. We will have a minor update to fix a couple of issues with the RI and unit tests shortly after Silverlight 4 releases. My <a href=\"http://blogs.msdn.com/blaine\">blog </a>provides&nbsp;links to what needs to get fixed if you want to start with Prism and Silverlight 4 before we release.</p>\r\n<p>blaine</p>\r\n<p>blog: <a href=\"http://blogs.msdn.com/blaine\">http://blogs.msdn.com/blaine</a></p>",
    "PostedDate": "2010-03-16T22:13:42.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "420058",
    "ThreadId": "80980",
    "Html": "<p>Hopeful Prism 4 scope:</p>\r\n<ol>\r\n<li>MEF</li>\r\n<li>Unity 2</li>\r\n<li>MVVM</li>\r\n<li>RX</li>\r\n<li>Information access including WCF.RIA</li>\r\n<li>Design time support</li>\r\n</ol>",
    "PostedDate": "2010-03-18T17:39:36.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "424775",
    "ThreadId": "80980",
    "Html": "<p>Thanks for the feedback everyone. I have captured it and will use this feedback to create a survey that I want everyone to take. The survey will help us prioritize the feedback.</p>\r\n<p>Thanks.</p>\r\n<p>Blaine Wastell</p>\r\n<p><a href=\"http://blogs.msdn.com/blaine\">http://blogs.msdn.com/blaine</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-28T21:10:50.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "431420",
    "ThreadId": "80980",
    "Html": "<p>If it isn't to late to add feedback :)&nbsp;&nbsp; IDisposable pattern applied to&nbsp;applicable areas of the framework, i.e., ViewsCollection.RemoveAndNotify(items)</p>",
    "PostedDate": "2010-04-15T05:50:02.647-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "437212",
    "ThreadId": "80980",
    "Html": "<p>The <a href=\"http://www.zoomerang.com/Survey/WEB22AK39NFHMT\">Prism 4.,0 survey </a>is available. There is too much for us to do so we need you to vote and help guide the focus of our next release.</p>\r\n<p>Blaine Wastell</p>\r\n<p><a href=\"http://blogs.msdn.com/blaine/archive/2010/04/27/have-you-taken-the-prism-4-0-survey.aspx\">http://blogs.msdn.com/blaine/archive/2010/04/27/have-you-taken-the-prism-4-0-survey.aspx</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-04-29T10:02:16.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "442914",
    "ThreadId": "80980",
    "Html": "Any news what items were picked from the survey and what decisions were made to incorporate WCF RIA Services into Prism 4?\r\n\r\nThanks!\r\n..Ben",
    "PostedDate": "2010-05-14T07:13:26.113-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481385",
    "ThreadId": "80980",
    "Html": "<p>Please provide guidence on Authentication and ROLE based composition</p>",
    "PostedDate": "2010-08-17T06:22:08.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481468",
    "ThreadId": "80980",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://compositewpf.codeplex.com/workitem/7117\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2010-08-17T09:24:04.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481469",
    "ThreadId": "80980",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://compositewpf.codeplex.com/workitem/7118\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2010-08-17T09:24:36.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]