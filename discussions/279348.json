[
  {
    "Id": "697778",
    "ThreadId": "279348",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I wish like to load prism app into regular sl app. some thing similar modules app.</p>\r\n",
    "PostedDate": "2011-11-14T03:53:41.197-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "697832",
    "ThreadId": "279348",
    "Html": "<p>Hi,</p>\n<p>Based on my understanding, if you want to host a prism application inside a regular application you could follow a similar approach like the one mentioned by Guido Maliandi in this thread:</p>\n<ul>\n<li><a href=\"http://compositewpf.codeplex.com/discussions/269149\">WPF UserControl Shell</a> </li>\n</ul>\n<p><em>Note: although the sample in this thread was done in WPF it might help as a reference.</em></p>\n<p>On the other hand take into account that Prism's capabilities can be implemented separately, without the need to use all its features in case you don't need them. You might find more information about this on <a href=\"http://msdn.microsoft.com/en-us/library/ff921153%28PandP.40%29.aspx#sec18\"> this chapter</a> from the Prism MSDN documentation. From the documentation:</p>\n<p><em>\"It is important to note that Prism was designed so that you can use any of Prism's capabilities and design patterns individually, or all together, depending on your requirements  and your application scenario. Prism was designed so that it could be incrementally adopted, allowing you to use the capabilities and design patterns that make sense for your particular application without requiring major structural changes.\"﻿</em></p>\n<p>I hope you find this handy</p>\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>﻿</p>",
    "PostedDate": "2011-11-14T06:00:46.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]