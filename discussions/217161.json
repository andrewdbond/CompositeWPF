[
  {
    "Id": "459378",
    "ThreadId": "217161",
    "Html": "<p>Hi</p>\r\n<p>I am having some dificulties regarding my application design.</p>\r\n<p>I have a module that is resposible for creating scopedregionmanagers based on the outside xaml in which i define regions. When I inject those outside xaml-s i create scoped regionmanagers and then i register them in the container:</p>\r\n<p>&nbsp;detailregionmanager = regionmanager1.Regions(<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>).Add(model.View, <span style=\"color:#a31515\">&quot;ScopeRegion&quot;</span>, <span style=\"color:blue\">True</span>)</p>\r\n<p><span style=\"font-size:9.5pt\">_container.RegisterInstance(<span style=\"color:blue\">Of</span> <span style=\"color:#2b91af\">IRegionManager</span>)(<span style=\"color:#a31515\">&quot;ScopeRegionManager&quot;</span>, detailregionmanager)</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;</span></p>\r\n<p>Then in other modules which inject their views in scope regions I resolve scopedregionmanager:</p>\r\n<p>&nbsp;<span style=\"font-size:9.5pt;color:blue\">Dim</span><span style=\"font-size:9.5pt\"> regionmanager&nbsp;<span style=\"color:blue\">As</span> <span style=\"color:#2b91af\">IRegionManager</span></span></p>\r\n<p><span style=\"font-size:9.5pt\">regionmanager = _container.Resolve(<span style=\"color:blue\">Of</span> <span style=\"color:#2b91af\">IRegionManager</span>)(<span style=\"color:#a31515\">&quot;ScopeRegionManager&ldquo;</span>)</span></p>\r\n<p>&nbsp;Is this OK?</p>\r\n<p>Problem is when I want to dispose existing scopedregionmanagers and everything in the MainRegion, I dont know how to do it. I want to dispose all injected views, regionmanagers, and show Starting view in the MainRegion where user choses another ''application''.</p>\r\n<p>I try this:</p>\r\n<p>&nbsp;_regionmanager.Regions(<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>).Remove(_regionmanager.Regions(<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>).Views(1))</p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;</span><span style=\"font-size:9.5pt;color:blue\">For</span><span style=\"font-size:9.5pt\"> <span style=\"color:blue\">Each</span> regionmanagerr <span style=\"color:blue\">As</span> <span style=\"color:#2b91af\">IRegionManager</span> <span style=\"color:blue\">In</span> _container.ResolveAll(<span style=\"color:blue\">Of</span> <span style=\"color:#2b91af\">IRegionManager</span>)()</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">If</span> regionmanagerr <span style=\"color:blue\">Is</span> _regionmanager <span style=\"color:blue\">Then</span></span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">Else</span></span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">For</span> <span style=\"color:blue\">Each</span> region <span style=\"color:blue\">As</span> <span style=\"color:#2b91af\">IRegion</span> <span style=\"color:blue\">In</span> regionmanagerr.Regions</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">For</span> <span style=\"color:blue\">Each</span> view <span style=\"color:blue\">As</span> <span style=\"color:blue\">Object</span> <span style=\"color:blue\">In</span> <span style=\"color:blue\">New</span> <span style=\"color:#2b91af\">List</span>(<span style=\"color:blue\">Of</span> <span style=\"color:blue\">Object</span>)(region.Views)</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; region.Remove(view)</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">Next</span> view</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">Next</span></span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _container.Teardown(regionmanagerr)</span></p>\r\n<p><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span></span></p>\r\n<p><span style=\"font-size:9.5pt;color:blue\">Next</span></p>\r\n<p>&nbsp;Views(0) is the starting view where user choses applications, and the selected application loads into Views(1) scopedregion so I only want to dispose Views(1).</p>\r\n<p>Every ''application'' loads its specific xaml-s that define regions and according to them specific views are injected into that regions. When another application is loaded (or the same application second time) i get the error in the line:</p>\r\n<p>&nbsp;Object reference not set to an instance of an object.</p>\r\n<p>&nbsp;detailregionmanager = regionmanager1.Regions(<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>).Add(model.View, <span style=\"color:#a31515\">&quot;ScopeRegion&quot;</span>, <span style=\"color:blue\">True</span>)</p>\r\n<p>&nbsp;Probabaly becose that scopedregionmanager is already in the container. Please what am I doing wrong? Should I use childcontainer and register all instances in it and at the end dispose that childcontainer?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-06-24T02:26:30.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "460853",
    "ThreadId": "217161",
    "Html": "<p><span style=\"font-size:10pt\">Hi,</span></p>\r\n<p><span style=\"font-size:10pt\">I&rsquo;ve created a sample which shows some of the concepts from you question. You can download the sample from </span><span style=\"font-size:10pt\" lang=ES-AR><a href=\"http://cid-60a74023ee1812bd.office.live.com/self.aspx/.Public/ViewDiscoverySample.zip\"><span style=\"color:#0000ff\">here</span></a>&nbsp;(it has been developed in c#)</span><span style=\"font-size:10pt\">.</span></p>\r\n<p><span style=\"font-size:10pt\">Based on our understanding the you are registering the IRegionManager (scoped region) into the container for adding some views from another module, but this is generally not the recommended approach. I identified two challenges to tackle your scenario:</span></p>\r\n<ol>\r\n<li><span style=\"font-size:x-small\"><span style=\"font-size:10pt\">How to register views through modules using the same scoped region </span></span></li>\r\n<li><span style=\"font-size:x-small\"><span style=\"font-size:10pt\">How to remove all views to get the main region cleaned (optionally it could contain a default view).</span></span></li>\r\n</ol>\r\n<p>&nbsp;<strong><span style=\"font-size:10pt\">1. How to register a view into a scoped region created in another module</span></strong></p>\r\n<p><span style=\"font-size:10pt\">In Prism with &ldquo;view discovery&rdquo; (more details </span><a href=\"http://msdn.microsoft.com/en-us/library/ff650182.aspx\"><span style=\"font-size:10pt\" lang=EN-US><span style=\"color:#0000ff\">here</span></span></a><span style=\"font-size:10pt\">), a module can register views inside a particular region by indicating its name. When this region is displayed at run time, any views that have been registered for that region will be automatically created and displayed within it. </span></p>\r\n<p><span style=\"font-size:10pt\">Therefore, assuming that this region could be a scoped one, if you use IRegionViewRegistry for doing &ldquo;view discovery&rdquo; you could avoid registering your scoped region in the container. The following code shows how it looks (for more info you can see HelloWorldModule2 constructor in the shared sample):</span></p>\r\n<p><span style=\"font-size:x-small\"><span style=\"color:blue\">public </span>HelloWorldModule2(<span style=\"color:#2b91af\">IRegionViewRegistry </span>registry)<br></span><span style=\"font-size:x-small\">{<br>&nbsp;&nbsp; registry.RegisterViewWithRegion(<span style=\"color:#a31515\">&quot;ScopedRegion&quot;</span>, <span style=\"color:blue\">typeof</span>(Views.<span style=\"color:#2b91af\">HelloWorldView2</span>));<br></span><span style=\"font-size:x-small\">&nbsp;&nbsp; ...<br>}</span></p>\r\n<p><strong>2. How to dispose the views</strong></p>\r\n<p>Regarding how to dispose the views, the solution in the sample is similar to your approach, but you will only need to remove the mainView from the MainRegion.</p>\r\n<p>As your views are registered into a scoped region, when you remove the mainView, all other view will be also removed. If need to notify other modules when the main view is removed, you can use the Event Aggregator as shown in the sample.</p>\r\n<p>The code is something like this (for more info you can see the <strong>HelloWorldModule</strong> constructor in the shared sample):</p>\r\n<pre><span style=\"color:blue\">public </span>HelloWorldModule(<span style=\"color:#2b91af\">IRegionManager</span> manager, <span style=\"color:#2b91af\">IEventAggregator</span> eventAggregator)\r\n{\r\n    <span style=\"color:blue\">this</span>.mainRegion = manager.Regions[<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>];\r\n    eventAggregator.GetEvent&lt;RemoveAllViewsClickedEvent&gt;().Subscribe((o) =&gt;\r\n        {\r\n            <span style=\"color:blue\">this</span>.mainRegion.Remove(<span style=\"color:blue\">this</span>.helloWorldView);\r\n        }, <span style=\"color:blue\">true\r\n    </span>);\r\n    ...\r\n}</pre>\r\n<p><span>Please let me know if this helps.</span></p>\r\n<p><span>Fernando Antivero <br></span><a href=\"http://blogs.southworks.net/fantivero\"><span style=\"color:#0000ff\">http://blogs.southworks.net/fantivero</span></a></p>",
    "PostedDate": "2010-06-28T14:49:16.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "461191",
    "ThreadId": "217161",
    "Html": "<p>Thank you for your reply but what when I register two regions with the same name? How will the view from another module know where to go?</p>\r\n<p>For the disposing I will try your approach with eventaggregator.</p>",
    "PostedDate": "2010-06-29T07:10:59.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "504433",
    "ThreadId": "217161",
    "Html": "<p id=af7e3610-8eee-012d-6b2a-12313b101d25>Hi,</p>\r\n<p id=acc17750-b2dc-012d-707e-1231391804a1>If you have two regions with the same name (in separate <strong>RegionManagers</strong>, using Scoped Regions) and you register a view in the <strong>RegionViewRegistry</strong> (that is, using the View Discovery approach), the view will get added to both of them.</p>\r\n<p id=acc18320-b2dc-012d-707f-1231391804a1>If  you need to decide which region the view will be added to, without  using View Injection, you should name the regions differently.</p>\r\n<p id=af7e4330-8eee-012d-6b2b-12313b101d25>Hope this helps.</p>\r\n<p id=af7e5150-8eee-012d-6b2c-12313b101d25>Fernando Antivero    <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-10-08T11:24:16.677-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]