[
  {
    "Id": "277060",
    "ThreadId": "80789",
    "Html": "<p>Hi. I have a problem using Microsoft.Practices.Composite.Modularity. My main WPF project have app.config:<br> <br> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;<br> &lt;configuration&gt;<br> &nbsp; &lt;configSections&gt;<br> &nbsp;&nbsp;&nbsp; &lt;section name=&quot;modules&quot; type=&quot;Microsoft.Practices.Composite.Modularity.ModulesConfigurationSection, Microsoft.Practices.Composite&quot;/&gt;<br> &nbsp; &lt;/configSections&gt;<br> &nbsp; &lt;modules&gt;<br> &nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientService.dll&quot; moduleType=&quot;ShedulerClientService.ModuleDefinitions.ServiceModule, ServiceModule, Version=1.0.0.0, Culture=neutral, PublicKeyToken=dfc9b8d5-4e6d-4d3f-aef3-58af0e91913d&quot; moduleName=&quot;ServiceModule&quot;/&gt;<br> &nbsp;&nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientGridUI.dll&quot; moduleType=&quot;ShedulerClientGridUI.ModuleDefinitions.UIModule, UIModule, Version=1.0.0.0, Culture=neutral, PublicKeyToken=3b493226-cf8a-4338-98f1-d6a7eecc04a7&quot; moduleName=&quot;UIModule&quot;&gt;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dependencies&gt;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dependency moduleName=&quot;ServiceModule&quot;/&gt;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dependencies&gt;<br> &nbsp;&nbsp;&nbsp; &lt;/module&gt;<br> &nbsp; &lt;/modules&gt;<br> &lt;/configuration&gt;<br> <br> It cause error in:<br> <br> protected virtual bool ModuleNeedsRetrieval(ModuleInfo moduleInfo)<br> { bool isAvailable = Type.GetType(moduleInfo.ModuleType) != null;<br> <br> exception: The given assembly name or codebase was invalid. (Exception from HRESULT: 0x80131047) <br> <br> If to change app.config on:<br> <br> &nbsp;&nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientService.dll&quot; moduleType=&quot;ShedulerClientService.ModuleDefinitions.ServiceModule, ServiceModule&quot; moduleName=&quot;ServiceModule&quot;/&gt;<br> &nbsp;&nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientGridUI.dll&quot; moduleType=&quot;ShedulerClientGridUI.ModuleDefinitions.UIModule, UIModule&quot; moduleName=&quot;UIModule&quot;&gt;<br> <br> It cause error in:<br> <br> public virtual void HandleModuleInitializationError(ModuleInfo moduleInfo, string assemblyName, Exception exception)<br> <br> exception: Unable to retrieve the module type ShedulerClientService.ModuleDefinitions.ServiceModule, ServiceModule from the loaded assemblies.&nbsp; You may need to specify a more fully-qualified type name.<br> <br> How it may be corrected?</p>",
    "PostedDate": "2010-01-14T03:19:52.333-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "279067",
    "ThreadId": "80789",
    "Html": "<p id=c2b5a5d0-e730-012c-e8a5-12313d01a961>Hi,</p>\r\n<p id=c2b5bf40-e730-012c-e8a6-12313d01a961>Without knowing your entire application&rsquo;s scenario, the second error you are getting could be because the Fully Qualified Type Name being used in the configuration file is not accurate. I was able to reproduce this same issue using the <a href=\"http://msdn.microsoft.com/en-us/library/dd458902.aspx\">Configuration Modularity QS</a>, and replacing the following line:</p>\r\n<p id=c2b5fae0-e730-012c-e8a8-12313d01a961><span style=\"font-family:Consolas;font-size:x-small\">&lt;module assemblyFile=&quot;Modules/ModuleB.dll&quot; moduleType=&quot;ModuleB.ModuleB, ModuleB&quot; moduleName=&quot;ModuleB&quot;/&gt;</span></p>\r\n<p id=c2b611e0-e730-012c-e8a9-12313d01a961><span style=\"font-size:x-small\">with this one:</span></p>\r\n<p id=c2b628f0-e730-012c-e8aa-12313d01a961><span style=\"font-family:Consolas;font-size:x-small\">&lt;module assemblyFile=&quot;Modules/ModuleB.dll&quot; moduleType=&quot;ModuleB.ModuleB, Moduleeeeeeee&quot; moduleName=&quot;ModuleB&quot;/&gt;</span></p>\r\n<p id=c2b64220-e730-012c-e8ab-12313d01a961><a href=\"http://msdn.microsoft.com/en-us/library/yfsftwz6.aspx\">This article</a> from the MSDN documentation explains how to get the required name. Take into account that the second approach you used is correct as the Version, Culture and PublicKeyToken of the assembly are not necessary as explained in <a href=\"http://msdn.microsoft.com/en-us/library/dd458908.aspx\">this article</a> from the Prism documentation.</p>\r\n<p id=c2b66830-e730-012c-e8ac-12313d01a961>Please let me know if this helps.</p>\r\n<p id=c2b68db0-e730-012c-e8ad-12313d01a961>Damian Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2010-01-19T09:54:09.223-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "281025",
    "ThreadId": "80789",
    "Html": "<p>Thanks. Works only with:</p>\r\n<p>&lt;modules&gt;<br>&nbsp;&nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientService.dll&quot; moduleName=&quot;ServiceModule&quot; moduleType=&quot;ShedulerClientService.ModuleDefinitions.Module, ShedulerClientService&quot;/&gt;<br>&nbsp;&nbsp;&nbsp; &lt;module assemblyFile=&quot;ShedulerClientGridUI.dll&quot; moduleName=&quot;GridUIModule&quot; moduleType=&quot;ShedulerClientGridUI.ModuleDefinitions.Module, ShedulerClientGridUI&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dependencies&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dependency moduleName=&quot;ServiceModule&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dependencies&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/module&gt;<br>&nbsp; &lt;/modules&gt;</p>\r\n<p>Where ShedulerClientGridUI.ModuleDefinitions { public class Module : IModule }&nbsp; and ShedulerClientService.ModuleDefinitions { public class Module: IModule }</p>",
    "PostedDate": "2010-01-24T05:00:12.423-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]