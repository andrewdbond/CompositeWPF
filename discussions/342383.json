[
  {
    "Id": "796415",
    "ThreadId": "342383",
    "Html": "\r\n<p>Hello All,</p>\r\n<p>I am currently attempting to create a&nbsp;mechanism whereby the user can select a particular&nbsp;skin for a Prism application.&nbsp; Currently this is done with a ContentControl at the Shell level, with bindings set as such:</p>\r\n<pre style=\"font-family:Consolas; background:white; color:black; font-size:13px\"><span style=\"color:blue\">&lt;</span><span style=\"color:darkblue\">ContentControl</span><span style=\"color:red\">&nbsp;</span><span style=\"color:purple\">Content</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:darkblue\">Binding</span><span style=\"color:red\">&nbsp;SelectedProfile.Content</span><span style=\"color:blue\">}</span><span style=\"color:blue\">&quot;</span><span style=\"color:red\">&nbsp;</span><span style=\"color:purple\">ContentTemplate</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:darkblue\">Binding</span><span style=\"color:red\">&nbsp;SelectedProfile</span><span style=\"color:blue\">.</span><span style=\"color:blue\">ContentTemplate</span><span style=\"color:blue\">}</span><span style=\"color:blue\">&quot;</span><span style=\"color:blue\">&nbsp;/&gt;</span></pre>\r\n<p>I have a ComboBox which the user can drop down to select a different view profile.</p>\r\n<p>The problem occurs upon the 2nd selection.&nbsp; The ViewProfile.Content for the initial ViewProfile and the&nbsp;second ViewProfile.Content both&nbsp;have&nbsp;controls with the same region name&nbsp;assigned via the attached property&nbsp;RegionManager.RegionName=&quot;regionname&quot;.&nbsp;\r\n When the 2nd ViewProfile.Content is set as the content to the Shell's ContentControl.Content property, the RegionManager.RegionName gets&nbsp;assigned a second time,&nbsp;but instead of simply attaching the control to the already-created region, it appears\r\n that Prism&nbsp;attempts to recreate the Region from scratch, resulting in a very ugly ArgumentException.</p>\r\n<p>What is the best way of ensuring Regions are only created once and allow this scenario to work as expected? :)</p>\r\n<p>Thank you,</p>\r\n<p>Michael</p>\r\n",
    "PostedDate": "2012-02-22T15:37:39.613-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "799532",
    "ThreadId": "342383",
    "Html": "<p>Hi Micheal,</p>\r\n<p>If I understood your scenario correctly, you have two or more contents (for example, <strong>content1 </strong>and <strong>content2</strong>) that contain a region with the same name. It seems that, when <strong>content1 </strong>is set as the content of the <strong>Shell's ContentControl.Content</strong> property, the <strong>Shell</strong>'s <strong>RegionManager </strong>\"finds\" the <strong>content1</strong>'s region and registers it. Then, when the <strong>content2 </strong>is chosen, the <strong>Shell</strong>'s <strong>RegionManager </strong>\"finds\" the <strong>content2</strong>'s region and tries to register it; however, as this region has the same name that the <strong>content1</strong>'s region, the <strong>RegionManager </strong>seems to be raising an exception claiming that a region with that name already exists.</p>\r\n<p>Based on my understanding, this kind of problem could addressed by the use of <em><strong>scoped region managers</strong></em> (that means that each \"content\" would have its own <strong>RegionManager </strong>instead of using the <strong>Shell</strong>'s <strong>RegionManager</strong>). Usually, you could create a scoped region manager for a view doing something like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">bool</span> createRegionManagerScope = <span style=\"color: blue;\">true</span>;\r\nIRegionManager scopedRegionManager = mainRegion.Add(content, <span style=\"color: blue;\">null</span>, createRegionManagerScope);\r\n</pre>\r\n</div>\r\n<p>However, if I understood you scenario correctly, you are not injecting the contents in a region but simply exposing the \"content\" in the <strong>SelectedProfile.Content</strong> property and bind it to the <strong>Content </strong>property of the control. In this scenario, I believe a possible approach could be to set the <strong>RegionManagerProperty </strong>attached property of each view to a new <strong>RegionManager </strong>manually before exposing it through the <strong>SelectedProfile.Content</strong>. Like this, the regions of each \"content\" should not be registered in the<strong> Shell</strong>'s <strong>RegionManager</strong>.</p>\r\n<p>You can find more information about scoped region managers in the following section of Prism's documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.40%29.aspx#sec42\">Chapter 7: Composing the User Interface - Creating Multiple Instances of a Region</a></li>\r\n</ul>\r\n<p>Please, let us know if we have misunderstood your scenario.</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-02-24T10:37:52.41-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "799536",
    "ThreadId": "342383",
    "Html": "<p>That is great, Damian.&nbsp; That's exactly what I'm looking for.&nbsp; I ended up hacking it to auto-generate regions based on the number of times the unique region-name was set.&nbsp; I will go back and use this method instead.&nbsp; Thanks again!</p>",
    "PostedDate": "2012-02-24T10:41:15.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]