[
  {
    "Id": "546612",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I am trying to modify the sample posted in http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx to support Dynamic Modules. I tried loading the dynamic module in&nbsp; FrameNavigationWrapperPage.xaml.cs-&gt;OnNavigatingFrom\r\n function as well as in FrameContentLoader.cs-&gt;BeginLoad function. But it is not working as expected.</p>\r\n<p>Can some one guide me on this?</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n",
    "PostedDate": "2011-01-10T05:13:40.297-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546839",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Madhan,</p>\r\n<p>You might find the &quot;Loading Modules on Demand&quot; section of the <a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28PandP.40%29.aspx\">\r\nModularity Chapter</a> from the Prism MSDN documentation useful, as it explains what's necessary to do in order to load modules on demand. Also, you could check the &quot;Downloading Remote Modules in the Background&quot; if you're downloading the modules in the background,\r\n and the &quot;Modules in MEF&quot; section if you're using MEF.</p>\r\n<p>If you continue experiencing problems, it could be helpful if you could provide us with more details on why your approach is not working as expected, so we can help you fulfill your requirements.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-10T10:04:26.993-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547118",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Following are the changes I did on the example implementation provided.</p>\r\n<p>1) I created a new module with XAP name as &quot;ThePhoneCompany.TopMenuRemoteContent.xap&quot;. Module class name is &quot;TopMenuRemoteContentModule&quot;. I created on Silverlight user control with name &quot;SampleView&quot;. Added the module to be copied into ClientBin of &quot;ThePhoneCompany.Web&quot;\r\n project</p>\r\n<p>2) Added my module in Bootstrapper.cs-&gt;InitializeModules() method</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleInfo m = new ModuleInfo();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m.Ref = &quot;ThePhoneCompany.TopMenuRemoteContent.xap&quot;;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m.ModuleName = &quot;TopMenuRemoteContentModule&quot;;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m.InitializationMode = InitializationMode.OnDemand;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ModuleCatalog.AddModule(m);</p>\r\n<p>3) Added menu item to navigate to the &quot;SamleView&quot; UI</p>\r\n<p>&lt;Rectangle Style=&quot;{StaticResource DividerStyle}&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;HyperlinkButton x:Name=&quot;hlbInventory1&quot; Style=&quot;{StaticResource LinkStyle}&quot; NavigateUri=&quot;/TopMenuRemoteContent/SampleView&quot; TargetName=&quot;ContentFrame&quot;\r\n Content=&quot;Content&quot;/&gt;</p>\r\n<p>4) In FrameNavigationWrapperPage.xaml.cs-&gt;OnNavigatingFrom function, I wrote logic to load the module.</p>\r\n<p>I am getting error in FrameContentLoader.cs-&gt;BeginLoad function since the module load is not completed before calling this function.</p>\r\n<p>I am not sure how to make sure that Module is loaded before BeginLoad function is called.</p>\r\n<p>As an alternative, I tried clicking the menu second time so that module will be already loaded in previous call. Event in that scenario, the view is not resolved and BeginLoad call failed.</p>\r\n<p>Let me know in case you need additional details.</p>\r\n<p>My intention here is, my view might be defined in already loaded module or yet to be loaded dynamic module. I will load the module and then initiate the navigation.</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n",
    "PostedDate": "2011-01-10T23:19:13.477-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547171",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I did one mistake in the first point. I missed add Export attribute for 'SampleView'. So now I am able to load the view in the second click of the menu since the module will be loaded by that time.</p>\r\n<p>I need help in making the dynamic load of module call correctly and make sure that module is loaded before Navigation events are getting fired.</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n",
    "PostedDate": "2011-01-11T01:33:14.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547390",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Madhan,</p>\r\n<p>One possible way of implementing the scenario you're trying to achieve would be to check if the module that contains that view has been loaded in the\r\n<strong>ConfirmNavigation</strong> method. That way, you would call the <strong>continuationCallback\r\n</strong>method only when the module has been downloaded, and proceed with the navigation then.</p>\r\n<p>From Karl Shifflett's post:</p>\r\n<p><em>&quot;Intercept the navigation request, verify the assembly is loaded then proceed with the navigation request. If the assembly is not loaded or is in the process of loading, you can wait until the assembly loads, and then proceed with the request.</em></p>\r\n<ul>\r\n<li><em>MEF Catalogs have a Changed event that you can hook to determine the status of assembly loading.&quot;</em>\r\n</li></ul>\r\n<p>Another possibility would be to start downloading the module when you click on the menu, and subscribe to an event indicating that it's completed downloading (for example, the event mentioned by Karl Shifflett in case of MEF). Then, you could initiate the\r\n navigation request in the handler for that event, so that the navigation is carried out only when that module has been loaded.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-11T09:44:44.587-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547776",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Guido Leandro Maliandi,</p>\r\n<p>I tired to handle the download in OnNavigatingFrom function. Basically, I had a ModuleStatus type which will keep track of the model load status. I will register that as Single instance with Container. I wrote below code to wait for module to load and then\r\n proceed with navigation. But, I was not able to achieve the required functionality. What am I missing here?</p>\r\n<p>protected override void OnNavigatingFrom(NavigatingCancelEventArgs e) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleStatus moduleStatus = ServiceLocator.Current.GetInstance&lt;ModuleStatus&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._manager = ServiceLocator.Current.GetInstance&lt;IModuleManager&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._manager.LoadModuleCompleted &#43;=new EventHandler&lt;LoadModuleCompletedEventArgs&gt;(_manager_LoadModuleCompleted);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._manager.ModuleDownloadProgressChanged &#43;= new EventHandler&lt;ModuleDownloadProgressChangedEventArgs&gt;(_manager_ModuleDownloadProgressChanged);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _manager.LoadModule(e.Uri.ToString().Split('/')[1] &#43; &quot;Module&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Do the check in another thread.<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Threading.ThreadPool.QueueUserWorkItem(delegate<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ctr = 0;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (!moduleStatus.IsModuleLoaded(e.Uri.ToString().Split('/')[1] &#43; &quot;Module&quot;) &amp;&amp; ctr &lt; 20)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(&quot;Waiting for module '&quot; &#43; e.Uri.ToString().Split('/')[1] &#43; &quot;Module' to get loaded&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(1000);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctr&#43;&#43;;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(&quot;module loading is completed and proceeding with navigation logic&quot;);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Dispatcher.BeginInvoke(() =&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(&quot;Run regular logic&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute&lt;IConfirmNavigationRequest&gt;(<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ina =&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Boolean? result = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Boolean ignore = false;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ina.ConfirmNavigationRequest(<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.CreateNavigationContext(e.Uri),<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r =&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!ignore)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result = r;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ignore = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(result);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (result == false)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.Cancel = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(e.Cancel);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(e.Cancel);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(e.Cancel);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.WriteLine(&quot;OnNavigatingFrom is completed&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n",
    "PostedDate": "2011-01-11T22:51:10.443-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "548022",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Guido Leandro Maliandi,</p>\r\n<p>Finally, I have reached the solution.</p>\r\n<p>1) Created a ModuleStatus class for tracking the modules loading. I will register object of this class as Single instance with Container. In Module initialize, resolve this object and add the load status information.</p>\r\n<p>2) In FrameRegionSyncBehavior,-&gt; OnFrameNavigating method, check for the module availability for the Navigation URI. If module is not loaded already, cancel the naviation and load the module.</p>\r\n<p>3) In module completion event, reinitiate the navigation with the same URI which call OnFrameNavigating method and navigation proceeds this time.</p>\r\n<p>I tested with different scenarios like, remote module for Silverlight naviation, remote module for prism naviation, refresh scenario. It works fine.</p>\r\n<p>Hope this approach is fine.</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n",
    "PostedDate": "2011-01-12T06:46:44.293-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "548120",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Madhan,</p>\r\n<p>Your approach seems a valid possibility for achieving your results. I'm glad that you've found a way to solve it, and I thank you for sharing your findings with the rest of the community, as other users that face similar scenarios could benefit from this.</p>\r\n<p>Thanks,</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-12T09:30:38.417-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "562388",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi Madhan,</p>\r\n<p>I am looking for a very similar solution, can you post some sample code? It will save me a lot of time.</p>\r\n<p>Thanks,<br>\r\nSalman</p>\r\n",
    "PostedDate": "2011-02-07T22:22:36.05-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "562779",
    "ThreadId": "241134",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Step 1: Created ModuleStatus class in ThePhoneCompany.Common project</p>\r\n<p>public class ModuleStatus<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;string&gt; modulesInitialized = new List&lt;string&gt;();<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void AddModule(Type t)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; modulesInitialized.Add(t.Name);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool IsModuleLoaded(string moduleName)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool result = (from name in modulesInitialized<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; where moduleName.Equals(name)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select name).Count() &gt; 0;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int ModulesInitialized<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return this.modulesInitialized.Count; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Step 2: In Bootstrapper.cs in ThePhoneCompany project, added code to create ModuleStatus instance and register as PRISM service</p>\r\n<p>protected override void ConfigureContainer()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.ConfigureContainer();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleStatus status = new ModuleStatus();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Container.ComposeExportedValue&lt;ModuleStatus&gt;(status);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Step 3: Added code in all module initialization to resolve the modulestatus instance and use the functions to register the module initialization status as true</p>\r\n<p>public void Initialize()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleStatus moduleStatus = ServiceLocator.Current.GetInstance&lt;ModuleStatus&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; moduleStatus.AddModule(this.GetType());<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Step 4: In FrameRegionSyncBehavior.cs in Prismv4FrameRegionNavigation project, updated the OnFrameNavigating function</p>\r\n<p>void OnFrameNavigating(Object sender, EventArgs e) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleStatus moduleStatus = ServiceLocator.Current.GetInstance&lt;ModuleStatus&gt;();<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!moduleStatus.IsModuleLoaded(((NavigatingCancelEventArgs)e).Uri.ToString().Split('/')[1] &#43; &quot;Module&quot;))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (var c in this._catalog.Modules)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (c.ModuleName == ((NavigatingCancelEventArgs) e).Uri.ToString().Split('/')[1] &#43; &quot;Module&quot;)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _manager.LoadModule(((NavigatingCancelEventArgs) e).Uri.ToString().Split('/')[1] &#43; &quot;Module&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((NavigatingCancelEventArgs) e).Cancel = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u = ((NavigatingCancelEventArgs) e).Uri;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._isNavigating = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Step 5: In FrameRegionSyncBehavior.cs in Prismv4FrameRegionNavigation project, created private Uri variable</p>\r\n<p>private Uri u;</p>\r\n<p>Step 6: In FrameRegionSyncBehavior.cs in Prismv4FrameRegionNavigation project, added code for module load completion</p>\r\n<p>void _manager_LoadModuleCompleted(object sender, LoadModuleCompletedEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._hostControl.Navigate(u);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Hope above steps help you to resolve the issue.</p>\r\n<p>&nbsp;</p>\r\n<p>Regards,</p>\r\n<p>Madhan</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-08T09:36:09.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563067",
    "ThreadId": "241134",
    "Html": "\r\n<p>Thanks!</p>\r\n",
    "PostedDate": "2011-02-08T20:37:01.583-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "565790",
    "ThreadId": "241134",
    "Html": "<p>Hi Madhan,</p>\r\n<p>thanks for the example code.&nbsp; I was looking for pretty much the same thing.</p>\r\n<p>Unfortunately I seem to be missing some info, because in FrameRegionSyncBehavior in OnFrameNavigating the following objects are unknown:</p>\r\n<p>this._catalog&nbsp; and</p>\r\n<p>_manager</p>\r\n<p>&nbsp;</p>\r\n<p>Where or rather how do you define them?</p>\r\n<p>&nbsp;</p>\r\n<p>Greeting,</p>\r\n<p>Michael.</p>",
    "PostedDate": "2011-02-14T04:17:05.333-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "565918",
    "ThreadId": "241134",
    "Html": "<p>Hi Michael,</p>\n<p>In FrameRegionSyncBehavior.cs, declare the following variables.</p>\n<p>private IModuleManager _manager;<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private IModuleCatalog _catalog;</p>\n<p>&nbsp;</p>\n<p>In OnAttach() function, resolve the module manager and module catalog prism services.</p>\n<p>&nbsp;this._manager = ServiceLocator.Current.GetInstance&lt;IModuleManager&gt;();<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._manager.LoadModuleCompleted += new EventHandler&lt;LoadModuleCompletedEventArgs&gt;(_manager_LoadModuleCompleted);<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._catalog = ServiceLocator.Current.GetInstance&lt;IModuleCatalog&gt;();</p>\n<p>&nbsp;</p>\n<p>Hope this helps.</p>\n<p>Regards,</p>\n<p>Madhan</p>",
    "PostedDate": "2011-02-14T08:15:25.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "565984",
    "ThreadId": "241134",
    "Html": "<p>Wanted to say that I just worked through this and it all works perfectly!</p>\r\n<p>Also, Your implementation here also supports loading modules from&nbsp;silver-light&nbsp;class libraries that are referenced directly by the shell. &nbsp;</p>\r\n<p>Thank you for taking the time to post as I am sure it will help many people out... like me!</p>\r\n<p>ACanadian</p>",
    "PostedDate": "2011-02-14T10:20:14.467-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "565987",
    "ThreadId": "241134",
    "Html": "<p>whoops, forgot to mention on thing.</p>\r\n<p>I plan to try and display a Module loading page while a module is being loaded dynamically. &nbsp; Should be a matter of navigating the host control to a page in the shell, then when LoadModuleComplete is called the host control will navigate appropriately.... &nbsp;</p>",
    "PostedDate": "2011-02-14T10:30:33.143-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "565997",
    "ThreadId": "241134",
    "Html": "<p>&nbsp;</p>\n<p>Well that was easy... unless I am doing something that I shouldn't :)</p>\n<p>1) Created a new view called: ModuleLoadingView in the shell.</p>\n<p>2) Ensured the view was exported, kept it as Shared so that it would be reused</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>    <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;summary&gt;</span>\n    <span style=\"color: gray;\">///</span><span style=\"color: green;\"> The Export attribute exports the ModuleLoadingView using the full type name as the key</span>\n    <span style=\"color: gray;\">///</span><span style=\"color: green;\"> </span>   \n    <span style=\"color: gray;\">///</span> <span style=\"color: gray;\">&lt;/summary&gt;</span>\n    [Export(<span style=\"color: blue;\">typeof</span>(ModuleLoadingView))]\n    [PartCreationPolicy(CreationPolicy.Shared)]\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>3) Modified the OnFrameNavigating to: (Change in bold)</p>\n<div style=\"color: black; background-color: white;\">\n<pre>    ModuleStatus moduleStatus = ServiceLocator.Current.GetInstance&lt;ModuleStatus&gt;();\n\n    <span style=\"color: blue;\">if</span> (!moduleStatus.IsModuleLoaded(((NavigatingCancelEventArgs)e).Uri.ToString().Split(<span style=\"color: #a31515;\">'/'</span>)[1] + <span style=\"color: #a31515;\">\"Module\"</span>))\n    {\n       <span style=\"color: blue;\">foreach</span> (<span style=\"color: blue;\">var</span> c <span style=\"color: blue;\">in</span> <span style=\"color: blue;\">this</span>._catalog.Modules)\n       {\n          <span style=\"color: blue;\">if</span> (c.ModuleName == ((NavigatingCancelEventArgs)e).Uri.ToString().Split(<span style=\"color: #a31515;\">'/'</span>)[1] + <span style=\"color: #a31515;\">\"Module\"</span>)\n          {\n             <strong><span style=\"color: green;\">//Navigate to loading page</span>\n             <span style=\"color: blue;\">this</span>._hostControl.Navigate(<span style=\"color: blue;\">new</span> Uri(<span style=\"color: #a31515;\">\"/ModuleLoadingView\"</span>,UriKind.Relative));</strong>\n\n             _manager.LoadModule(((NavigatingCancelEventArgs)e).Uri.ToString().Split(<span style=\"color: #a31515;\">'/'</span>)[1] + <span style=\"color: #a31515;\">\"Module\"</span>);\n             ((NavigatingCancelEventArgs)e).Cancel = <span style=\"color: blue;\">true</span>;\n             u = ((NavigatingCancelEventArgs)e).Uri;\n\n             <span style=\"color: blue;\">return</span>;\n          }\n       }\n    }\n\n    <span style=\"color: blue;\">this</span>._isNavigating = <span style=\"color: blue;\">true</span>;\n</pre>\n</div>",
    "PostedDate": "2011-02-14T10:50:24.32-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "569020",
    "ThreadId": "241134",
    "Html": "<p>Running into a situation where the dynamically loaded modules MEF exports are not getting into the compostibale parts catalogs?. &nbsp; &nbsp;Essentially I am attempting to build my own module that loads dynamically using the inventory module as a template.</p>\r\n<p>The problem I am having is&nbsp;I'm trying to use the region manager request navigate function from a dynamically loaded module and it fails right away.</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>_regionManager.RequestNavigate(RegionNames.MainContentRegion, Constants.AdministrationHomeView, PostNavigationCallback);</pre>\r\n<pre><br /></pre>\r\n<pre><div style=\"color: black; background-color: white;\"><pre> <span style=\"color: blue;\">void</span> PostNavigationCallback(NavigationResult navigationResult)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (navigationResult.Result == <span style=\"color: blue;\">true</span>)\r\n                MessageBox.Show(<span style=\"color: #a31515;\">\"Navigation Successful\"</span>);\r\n            <span style=\"color: blue;\">else</span>\r\n                MessageBox.Show(<span style=\"color: #a31515;\">\"Navigation Failed\"</span>);\r\n        }\r\n</pre>\r\n</div>\r\n<br /></pre>\r\n<pre><br /></pre>\r\n<pre>In the post navigation call back I noticed that the NavigationResult objects context property does not have a reference to a navigation service. </pre>\r\n<pre>Wondering what I am missing?</pre>\r\n<pre><br /></pre>\r\n<pre>The constant value is relative URI path: /Administration/AdministrationView</pre>\r\n<pre><br /></pre>\r\n<pre>I have confirmend that I am successfully importing the _regionManager in the ctor... which means MEF must be working on imports..?</pre>\r\n<pre><br /></pre>\r\n<pre><div style=\"color: black; background-color: white;\"><pre>[ImportingConstructor]\r\n<span style=\"color: blue;\">public</span> UserViewModel(\r\n      IRegionManager regionManager\r\n      )\r\n{\r\n\r\n _regionManager = regionManager;\r\n\r\n}\r\n</pre>\r\n</div>\r\n<br /></pre>\r\n<pre>My view model is implementing the following interfaces: <pre><span>INavigationAware</span>,&nbsp;<span>IPageTitle</span>,&nbsp;<span>IRegionMemberLifetime</span><br /></pre>\r\n</pre>\r\n<pre><br /></pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-02-19T10:29:05.42-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "726076",
    "ThreadId": "241134",
    "Html": "<p>Hi anyone, please read this, Karl Shifflett has made great work on this:</p>\r\n<p><a href=\"http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx\">http://blogs.msdn.com/b/kashiffl/archive/2010/10/05/integrating-prism-v4-region-navigation-with-silverlight-frame-navigation.aspx</a></p>",
    "PostedDate": "2012-01-16T16:13:03.147-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "812113",
    "ThreadId": "241134",
    "Html": "<p>Created a framework for creating Navigation based Silverlight application using prism easily. &nbsp;It is partly based on Karl Shifflett's solution. &nbsp;Thought I might share it.</p>\r\n<p><a href=\"http://ultimateframework.codeplex.com/\">http://ultimateframework.codeplex.com/</a></p>",
    "PostedDate": "2012-03-18T05:59:13.147-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]