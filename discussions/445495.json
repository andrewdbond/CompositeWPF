[
  {
    "Id": "1050814",
    "ThreadId": "445495",
    "Html": "Hello,<br />\n<br />\nI am facing a design problem and would like your point of view.<br />\n<br />\nI have the following shell :<br />\n<pre><code>&lt;ItemsControl prism:RegionManager.RegionName=&quot;ParentRegion&quot;&gt;\n   &lt;ContentControl prism:RegionManager.RegionName=&quot;SourceRegion&quot; /&gt;\n   &lt;ContentControl prism:RegionManager.RegionName=&quot;DestinationRegion&quot; /&gt;\n&lt;/ItemsControl&gt;</code></pre>\n\nAn interface of the ViewModel contained in a &quot;core&quot; library shared across the libraries.<br />\nThis ViewModel interface is the following :<br />\n<pre><code>public interface IMainRegionViewModel\n    {\n        string SourceText { get; set; }\n        string DestText { get; set; }\n    }</code></pre>\n\nIn my Module my initialize method set the 2 regions with the same type (MyView) :<br />\n<pre><code>public void Initialize()\n{\n      _regionManager.RegisterViewWithRegion(&quot;SourceRegion&quot;, typeof(MyView));\n      _regionManager.RegisterViewWithRegion(&quot;DestinationRegion&quot;, typeof(MyView));\n}</code></pre>\n\nConsequently, during the creation of the MyView class, Unity injects a ViewModel of the same type in both my Views.<br />\n<br />\nBut I would like SourceRegion to update the field SourceText of the ParentRegion context and the DestRegion to update the field DestText of the ParentRegion.<br />\n<br />\nWhat is the best way to do that?<br />\n<ul>\n<li>Create 2 different view class inheriting from the same base view which only difference would be a function to override</li>\n<li>\nNot using Unity for injecting the View in the regionManager and calling the View constructor with an argument of mine\n<ul>\n<li>I have some thoughts about implementing a delegate function as argument</li>\n</ul>\n</li>\n<li>\nContinue with the same code and share an event in the &quot;Core&quot; library that will use an EventArgs containing an information related with the View.<br />\n</li>\n</ul>\nIn fact I am looking for how to differentiate 2 Views injected by Unity in the regionManager so that they have a different behavior.<br />\n<br />\nThe goal of my question is : what is the best way to solve this problem?<br />\n<br />\nSincerely,<br />\nLinvi<br />\n",
    "PostedDate": "2013-05-30T12:43:33.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1051304",
    "ThreadId": "445495",
    "Html": "Hi,\r<br />\n<br />\nBased on my understanding of your application, a possible solution to your problem could be to react to the <strong>CollectionChanged</strong> event from the <strong>SourceRegion</strong> and <strong>DestinationRegion</strong> regions. Therefore, you will need to subscribe to this event in your <strong>ParentRegion</strong> view model and then change the <strong>SourceText</strong> or <strong>DestinationText</strong> accordingly. The following is an example on how to subscribe to them:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">//SourceRegionViews_CollectionChangedHandler will modify SourceText</span>\n<span style=\"color:Blue;\">this</span>.regionManager.Regions[<span style=\"color:#A31515;\">&quot;SourceRegion&quot;</span>].Views.CollectionChanged += SourceRegionViews_CollectionChangedHandler;\n\n<span style=\"color:Green;\">//DestinationRegionViews_CollectionChangedHandler will modify DestinationText</span>\n<span style=\"color:Blue;\">this</span>.regionManager.Regions[<span style=\"color:#A31515;\">&quot;DestinationRegion&quot;</span>].Views.CollectionChanged += DestinationRegionViews_CollectionChangedHandler;\r\n</pre></div>This way, your subscription handlers will be invoked every time a <strong>View</strong> is added in the corresponding region; there you will receive the injected <strong>View</strong> and you can execute the logic you are trying to achieve.\r<br />\n<br />\nIf this doesn't help or we misunderstood your problem, it would be helpful if you can provide us more details about your <strong>ParentRegion</strong>.\r<br />\n<br />\nRegards,\r<br />\n<br />\nFederico Martinez \r<br />\n<a href=\"http://blogs.southworks.net/fmartinez\" rel=\"nofollow\">http://blogs.southworks.net/fmartinez</a> <br />\n",
    "PostedDate": "2013-05-31T11:07:16.293-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]