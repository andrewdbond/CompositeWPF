[
  {
    "Id": "553479",
    "ThreadId": "242807",
    "Html": "\r\n<p>I am getting a really strange behavior in Silverlight OOB Modules (note: NOT offline):</p>\r\n<p>If the modules are loaded during bootstrapping I do not experience the problem, but recently I moved the module load to after login so I could load modules based on user profile, and the problem started happening ... here is what is happening:</p>\r\n<p>The module being loaded is not the current version; I can tell this is the case because the debugger can't hit the breakpoint becuase no symbols are loaded and because the latest changes I made are not reflected in the module.</p>\r\n<p>Here is how I am loading the modules after login (in case it has bearing):</p>\r\n<pre style=\"padding-left:30px; font-family:consolas\"><span style=\"color:green\">//&nbsp;TODO:&nbsp;define&nbsp;available&nbsp;modules&nbsp;via&nbsp;non-coded&nbsp;meta&nbsp;data</span><br><span style=\"color:blue\">string</span>&nbsp;basePath&nbsp;=&nbsp;(<span style=\"color:#2b91af\">Application</span>.Current.IsRunningOutOfBrowser&nbsp;?&nbsp;<span style=\"color:#a31515\">&quot;http://localhost:65400/ClientBin/&quot;</span>&nbsp;:&nbsp;<span style=\"color:#a31515\">&quot;&quot;</span>);<br><span style=\"color:blue\">var</span>&nbsp;availableModules&nbsp;=&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">List</span>&lt;<span style=\"color:#2b91af\">ModuleInfo</span>&gt;()<br>{<br>    {<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;ReceptionModule&quot;</span>,&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Reception.xap&quot;</span>,&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.WhenAvailable&nbsp;}},<br>    {<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;NurseModule&quot;</span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Nurse.xap&quot;</span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.WhenAvailable&nbsp;}}<br>};<br><br><span style=\"color:green\">//&nbsp;Load&nbsp;modules&nbsp;identified&nbsp;in&nbsp;current&nbsp;users&nbsp;profile</span><br><span style=\"color:blue\">var</span>&nbsp;modules&nbsp;=&nbsp;availableModules.Where(m&nbsp;=&gt;&nbsp;userModules.Contains(m.ModuleName));<br><span style=\"color:blue\">foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;module&nbsp;<span style=\"color:blue\">in</span>&nbsp;modules)<br>{<br><span style=\"color:blue\">    this</span>.ModuleCatalog.AddModule(module);<br>}<br><br><span style=\"color:blue\">this</span>.ModuleManager.Run();<br></pre>\r\n<p>It gets even stranger because a complete reload of the dev environments and asp.net dev servers does not clear the problem ... but, loading the changed modules up via the bootstrapper will load the new changes ... then loading the modules after login will\r\n now have the latest changes.</p>\r\n<div id=\"x__mcePaste\" style=\"width:1px; height:1px; overflow:hidden; top:0px; left:-10000px\">\r\n&#65279;</div>\r\n",
    "PostedDate": "2011-01-21T15:27:43.48-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "554689",
    "ThreadId": "242807",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Since modules are loaded in the <a href=\"http://msdn.microsoft.com/en-us/library/gg430868(v=PandP.40).aspx\">\r\nPrism initialization sequence</a> by the Bootstrapper (which calls the <strong>ModuleManager.Run</strong> method), you shouldn&rsquo;t call that method by yourself, unless you override the\r\n<strong>InitializeModules</strong> method of your Bootstrapper to remove that call.</p>\r\n<p>Based on my understanding of your scenario, you could benefit from using on-demand module loading, for example like this:</p>\r\n<p>&nbsp;</p>\r\n<p><span lang=\"EN-US\" style=\"color:black; font-size:9.5pt\"></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Additionally, you might find some of the following threads useful, as they deal with the subject of login in Prism.</p>\r\n<ul>\r\n<li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=212991\">Login / Logout View Switching</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=237886\">Initiating a module from different module</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=235143\">How to show a view at application startup</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=84031\">Prism &#43; login page</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=65777\">Best practice to launch login modal before the shell</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=83910\">Login Page with Prism(CAG)</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=84032\">prism &#43; login page prior shell load or bootstaper run</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=58292\">Show login modal form before</a>\r\n</span></li><li><span lang=\"EN-US\" style=\"color:#30332d; font-size:9.5pt\"><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=213269\">Membership in Prism</a>\r\n</span></li></ul>\r\n<p>You can read more about modularity in the aforementioned chapter.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureModuleCatalog()\r\n{\r\n      Type moduleCType = <span style=\"color:blue\">typeof</span>(ReceptionModule);\r\n\r\n      <span style=\"color:blue\">this</span>.ModuleCatalog.AddModule(<span style=\"color:blue\">new</span> ModuleInfo()\r\n      {\r\n            ModuleName = moduleCType.Name,\r\n            ModuleType = moduleCType.AssemblyQualifiedName,\r\n            InitializationMode = InitializationMode.OnDemand\r\n      });\r\n&hellip;\r\n} \r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>You can read more about remote on-demand and remote module loading in <a href=\"http://msdn.microsoft.com/en-us/library/gg405479(v=PandP.40).aspx\">\r\nChapter 4: Modular Application Development</a> from the Prism documentation, as well as in the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921163(v=PandP.40).aspx\">Modularity QuickStart</a>, where you might find another example of how this is achieved.</p>\r\n",
    "PostedDate": "2011-01-24T14:38:55.947-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555178",
    "ThreadId": "242807",
    "Html": "\r\n<p>I get the same caching / debug (or lack thereof) after changing to load OnDemand, so it appears that it is an issue with Prism&#43;MEF&#43;Silverlight&#43;OOB; here is what I tried:</p>\r\n<p>I set all of the modules to OnDemand and have them configured in the catalog as follows:</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">class</span>&nbsp;<span style=\"color:#2b91af\">PatientJourneyBootstrapper</span>&nbsp;:&nbsp;<span style=\"color:#2b91af\">MefBootstrapper</span><br>{</pre>\r\n<pre style=\"font-family:consolas\">    ...</pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">    protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:#2b91af\">IModuleCatalog</span>&nbsp;CreateModuleCatalog()<br>    {<br><span style=\"color:blue\">        string</span>&nbsp;basePath&nbsp;=&nbsp;(<span style=\"color:#2b91af\">Application</span>.Current.IsRunningOutOfBrowser&nbsp;?&nbsp;<span style=\"color:#a31515\">&quot;http://localhost:9000/ClientBin/&quot;</span>&nbsp;:&nbsp;<span style=\"color:#a31515\">&quot;&quot;</span>);<br><span style=\"color:blue\">        var</span>&nbsp;availableModules&nbsp;=&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">List</span>&lt;<span style=\"color:#2b91af\">ModuleInfo</span>&gt;()<br>        {<br>            {<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;ReceptionModule&quot;</span>,&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Reception.xap&quot;</span>,&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.OnDemand&nbsp;}},<br>            {<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;NurseModule&quot;</span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Nurse.xap&quot;</span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.OnDemand&nbsp;}}<br>        };<br></pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">        return</span>&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleCatalog</span>(availableModules);<br>    }<br>}&nbsp;</pre>\r\n<p>Then I load the relevant modules after login as follows:</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">private</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;LoadUserModules(<span style=\"color:#2b91af\">List</span>&lt;<span style=\"color:blue\">string</span>&gt;&nbsp;userModules)<br>{<br><span style=\"color:blue\">    foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;moduleName&nbsp;<span style=\"color:blue\">in</span>&nbsp;userModules)<br>    {<br><span style=\"color:blue\">        this</span>.ModuleManager.LoadModule(moduleName);<br>    }<br>}</pre>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-25T11:28:26.377-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555601",
    "ThreadId": "242807",
    "Html": "\r\n<p>Hi,</p>\r\n<p>You could try specifying the type of your module when you instantiate the <a href=\"http://msdn.microsoft.com/en-us/library/microsoft.practices.prism.modularity.moduleinfo%28PandP.40%29.aspx\">\r\nModuleInfo</a> class (for example using <a href=\"http://msdn.microsoft.com/en-us/library/gg405644%28PandP.40%29.aspx\">\r\nthis overload of the constructor</a>). Another possibility would be to use other ways of creating a module catalog, for example creating configuration module catalog from a xaml catalog. You can read more about that in\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28PandP.40%29.aspx\">this chapter</a> from the Prism MSDN documentation.</p>\r\n<p>Additionally, you could try the approach mentioned in this thread, which might be helpful in case your modules are being cached:</p>\r\n<p><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=240811\"><span>browser caching module xap</span></a></p>\r\n<p>Let us know if you keep experiencing the same problem after trying out the aforementioned possibilities.</p>\r\n<p><span>I hope you find this helpful.</span></p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n<p><span><br>\r\n</span></p>\r\n",
    "PostedDate": "2011-01-26T07:25:37.587-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555738",
    "ThreadId": "242807",
    "Html": "\r\n<p>Loading from Xaml catalog would not have any bearing as it would be loading the same info in the bootstrapper regardless, and I don't quite follow you on the ModuleInfo overload, what type would the xap file be?</p>\r\n<p>But I looked into the browser caching module xap, and that resolved the problem by sending a varying query parameter (kind of ugly hack, but it worked) Thanks!:</p>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">class</span>&nbsp;<span style=\"color:#2b91af\">PatientJourneyBootstrapper</span>&nbsp;:&nbsp;<span style=\"color:#2b91af\">MefBootstrapper</span><br>{</pre>\r\n<pre style=\"font-family:consolas\">    ...</pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">    protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:#2b91af\">IModuleCatalog</span>&nbsp;CreateModuleCatalog()<br>    {<br><span style=\"color:blue\">        string</span>&nbsp;basePath&nbsp;=&nbsp;(<span style=\"color:#2b91af\">Application</span>.Current.IsRunningOutOfBrowser&nbsp;?&nbsp;<span style=\"color:#a31515\">&quot;http://localhost:9000/ClientBin/&quot;</span>&nbsp;:&nbsp;<span style=\"color:#a31515\">&quot;&quot;</span>);<br><span style=\"color:blue\">        string</span>&nbsp;noCache&nbsp;=&nbsp;(<span style=\"color:#2b91af\">Application</span>.Current.IsRunningOutOfBrowser&nbsp;&amp;&amp;&nbsp;System.Diagnostics.<span style=\"color:#2b91af\">Debugger</span>.IsAttached&nbsp;?&nbsp;<span style=\"color:#a31515\">&quot;?Unused=&quot;</span>&nbsp;&#43;&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">Guid</span>()&nbsp;:&nbsp;<span style=\"color:#a31515\">&quot;&quot;</span>);<br><span style=\"color:blue\">        var</span>&nbsp;availableModules&nbsp;=&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">List</span>&lt;<span style=\"color:#2b91af\">ModuleInfo</span>&gt;()<br>        {<br>        &nbsp;&nbsp;&nbsp;&nbsp;{<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;ReceptionModule&quot;</span>,&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Reception.xap&quot;</span>&nbsp;&#43;&nbsp;noCache,&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.OnDemand&nbsp;}},<br>        &nbsp;&nbsp;&nbsp;&nbsp;{<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleInfo</span>()&nbsp;{&nbsp;ModuleName&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;NurseModule&quot;</span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ref&nbsp;=&nbsp;basePath&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;PatientJourney.Nurse.xap&quot;</span>&nbsp;&#43;&nbsp;noCache,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializationMode&nbsp;=&nbsp;<span style=\"color:#2b91af\">InitializationMode</span>.OnDemand&nbsp;}}<br>        };</pre>\r\n<pre style=\"font-family:consolas\">&nbsp;</pre>\r\n<pre style=\"font-family:consolas\"><span style=\"color:blue\">        return</span>&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">ModuleCatalog</span>(availableModules);</pre>\r\n<pre style=\"font-family:consolas\">    }</pre>\r\n<pre style=\"font-family:consolas\">    ...<br>}</pre>\r\n<pre style=\"font-family:consolas\">&nbsp;</pre>\r\n",
    "PostedDate": "2011-01-26T10:12:11.957-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555759",
    "ThreadId": "242807",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I'm glad that you've solved your caching issue with the solution proposed in the thread I've sent to you.</p>\r\n<p>As for the type parameter of your ModuleInfo, you could specify the fully qualified name of your assembly. For example:</p>\r\n<p><span style=\"color:red\">ModuleType</span><span style=\"color:blue\">=&quot;NurseModule.NurseModule, NurseModule, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot;</span></p>\r\n<p>I've created a <a href=\"http://compositewpf.codeplex.com/workitem/7846\">work item</a> in the Issue Tracker for the caching issue you've experienced, so that it is considered for future releases.</p>\r\n<p>Thank you for your feedback.</p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-26T10:26:58.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]