[
  {
    "Id": "173377",
    "ThreadId": "51685",
    "Html": "I am building a composite application which uses a tab control as its main display region. When the user clicks on a menu item, modules are demand loaded and their single views are assigned to the tab control region. This is working fine. I have two problems though.<br>\r\n<br>\r\nFirst, I am having trouble using a theme with the application. If I set the implicit style manager on my layout root (a grid) and reference one of the themes (I'm using BureauBlue, but it doesn't matter which one) and set the apply mode to Auto, I get the theme applied to my Shell and all my module's views as expected, however, I was using the technique of setting TabControlRegionAdapter.ItemContainerStyle to data bind the text of the tab to a string provided in the view model (which is the data context of the views) like so:<br>\r\n<br>\r\n&lt;regions:TabControlRegionAdapter.ItemContainerStyle&gt;<br>\r\n    &lt;Style TargetType=&quot;basics:TabItem&quot;&gt;<br>\r\n        &lt;Setter Property=&quot;HeaderTemplate&quot;&gt;<br>\r\n            &lt;Setter.Value&gt;<br>\r\n                &lt;DataTemplate&gt;<br>\r\n                    &lt;TextBlock Text=&quot;{Binding HeaderInfo}&quot; /&gt;<br>\r\n                &lt;/DataTemplate&gt;<br>\r\n            &lt;/Setter.Value&gt;<br>\r\n        &lt;/Setter&gt;<br>\r\n    &lt;/Style&gt;<br>\r\n&lt;/regions:TabControlRegionAdapter.ItemContainerStyle&gt;<br>\r\n<br>\r\nThis &quot;works&quot;, except that the BeureaBlue style doesn't get applied to the tab item headers. After a little research, I realized that Silverlight doesn't support merging of styles, so it appears it is an all or nothing affair. So I bound a copy the BureauBlue xaml file as a resource and tried to modify the style in it for TabItems. This style consists of a few simple property setters and then a large ControlTemplate which does all the graphics for the presentation of the themed tab items. I tried adding a HeaderTemplate setter just before the large ControlTemplate which did the data binding, and this also &quot;works&quot;...I get the BureauBlue style tab headers with the header info string, except for this oddity: The views are UserControl's which are designed to fill their container and resize as the container is resized. If I have only one view in the tab control (i.e., one tab) this works fine, however, as soon as there are two or more, changing the selected tab causes the hosted UserControl to shrink to its design size, centered. This is even true of the first loaded tab, which starts out filling the tab and resizing properly, but if I switch to another tab and then back, it too is compressed and centered.<br>\r\n<br>\r\nMy second problem is also a sizing one. A few of these views can be rather large, and if the browser window (and hence the tab item) are too small, the control is just clipped. I want to be able to have scrollbars appear if the available space for the hosted control is smaller than some size, say 750x500, but I can't get that to work at all either. If I run the user control in its own page, i.e., setting it to RootVisual, I found I could use something like this (leaving out the namespace declarations to save space):<br>\r\n<br>\r\n&lt;UserControl Width=&quot;Auto&quot; Height=&quot;Auto&quot;&gt;<br>\r\n    &lt;Grid x:Name=&quot;LayoutRoot&quot;&gt;<br>\r\n        &lt;ScrollViewer HorizontalScrollBarVisibility=&quot;Auto&quot; VerticalScrollBarVisibility=&quot;Auto&quot;&gt;<br>\r\n            &lt;Grid Background=&quot;Blue&quot; MinWidth=&quot;400&quot; MinHeight=&quot;300&quot;&gt;<br>\r\n            &lt;/Grid&gt;<br>\r\n        &lt;/ScrollViewer&gt;<br>\r\n    &lt;/Grid&gt;<br>\r\n&lt;/UserControl&gt;<br>\r\n<br>\r\nIf I make this &quot;view&quot; the main page, I get the desired result: the control (which is just a blue square) fills the browser window, but if it is resized to where the inner grid would be smaller than 400x300, scroll bars appear. However, if I register this &quot;view&quot; to the tab control, the blue grid fills the tab item, but if it is resized to less than 400x300, no scroll bars appear and the grid is simply clipped. Of course, in my real case, this grid has a complex UI of buttons, combo boxes, text boxes, labels, etc.<br>\r\n<br>\r\nSorry for the long-winded explanation. I admit I am new to Silverlight, and so maybe I am making some stupid mistakes, but I am stumped with these two issues. In the end, I can give up on the theme if I have to, and just use the default, thought I really like the BureauBlue theme better. The second issue, though, seems like it would be a fairly common one: You define a view which requires a certain amount of screen space to work properly, and you want to deal with a situation where the user either makes the browser too small or perhaps even is using a monitor with a small screen, and so you want to scroll the view instead of just mashing it to the point of unusability or clipping it. I have to believe there is a way to deal with this. I suppose I could re-design the large views into multiple pages, but I really don't like making hard-coded assumptions about how mush screen space I have.<br>\r\n<br>\r\nAny advice greatly appreciated.<br>\r\n<br>\r\nDave<br>\r\n",
    "PostedDate": "2009-03-30T01:28:59.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "175001",
    "ThreadId": "51685",
    "Html": "Hi Dave,<div><br></div><div>I take it you're not a web development expert either (or if you are, these things happen anyway). I'd been looking for a solution to your sizing problem for days as I was having the same issue. Hopefully, what I found will also help you... in the HTML page that hosts your Silverlight control should exist the following code (or similar):</div><div><br></div><div><div>    &lt;div id=&quot;silverlightControlHost&quot;&gt;</div><div><span style=\"white-space:pre\">\t\t</span>&lt;object data=&quot;data:application/x-silverlight-2,&quot; type=&quot;application/x-silverlight-2&quot;&gt;</div><div><br></div><div>Add the fixed width and height that are definied in your control to be the same for the object that contains it, like so:</div><div><br></div><div><div>    &lt;div id=&quot;silverlightControlHost&quot;&gt;</div><div><span style=\"white-space:pre\">\t\t</span>&lt;object data=&quot;data:application/x-silverlight-2,&quot; type=&quot;application/x-silverlight-2&quot; width=&quot;400px&quot; height=&quot;300px&quot;&gt;</div><div><br></div><div>This should let the browser know that the object in that position is of the size 400x300 and if the window shrinks below that, that it should show the scroll bars to compensate.</div><div><br></div><div>Hope this helps!</div><div><br></div><div>Mark</div></div></div>",
    "PostedDate": "2009-04-02T13:58:39.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "197109",
    "ThreadId": "51685",
    "Html": "<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\"><span style=\"color:#000000\">You may already know this but I just tried to use the new&nbsp; Silverlight 3&nbsp;option to override the style using the attribute: BasedOn and it is working for me. Not sure if this helps in your example.</span></span></span></p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">&lt;font size=&quot;2&quot; color=&quot;#a31515&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#a31515&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#a31515&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">&lt;</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">Style</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> TargetType</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;controls:TabItem&quot;</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> BasedOn</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">StaticResource</span></span><span style=\"font-size:x-small;color:#ff0000\"><span style=\"font-size:x-small;color:#ff0000\"> TabItemStandardStyle</span></span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">}&quot;&gt;</span></span></p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">Have a great day.</span></span></p>\r\n<p>Jason</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"></span></p>\r\n</span></span></p>",
    "PostedDate": "2009-06-02T22:57:14.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]