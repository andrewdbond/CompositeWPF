[
  {
    "Id": "202707",
    "ThreadId": "59875",
    "Html": "<p>Hi,</p>\r\n<p>One thing I've noticed from the various quickstarts / RI is that whilst they show every possible way to communicate between views / modules they don't really offer any guidance as to when each is applicable.</p>\r\n<p>For example,</p>\r\n<p>The Digg / Twitter Search example which uses EventAggregator to ask each search provider to search.</p>\r\n<p>The StockTrader RI uses DelegateCommands hanging off a Controller to buy / sell stock, and CompositeCommands to Buy All / Sell All.</p>\r\n<p>I want to understand under which circumstances is it appropriate to use each. My instinct tells me that an Event should be used to publish the fact that something happened which might interest other people whilst a Command dictates that some action will occur Following this interpretation the Digg Search should use a Command and not an Event to get the Search to happen. An event would be appropriate when the Search Results are returned - for example maybe an advertising view would be interested in this to tailor adverts.</p>\r\n<p>What are other people's takes on when to Event and when to Command?</p>\r\n<p>Thanks,</p>\r\n<p>Graeme</p>",
    "PostedDate": "2009-06-17T18:12:36.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203344",
    "ThreadId": "59875",
    "Html": "<p>I do agree that Commands are deterministic whereas Events are&nbsp;not.</p>\r\n<p>Events are best for extensibility - providing ready notifications for unwritten plug-ins - e.g. new modules for more search engines that can be deployed onto&nbsp;the existing app.</p>",
    "PostedDate": "2009-06-19T07:14:14.083-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203437",
    "ThreadId": "59875",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">Hi Graeme,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri\"><span style=\"font-size:small\">There are some documents from the Prism-v2 documentation that provide some advice on when to <strong>Commands/Event Aggregator</strong>:</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458878.aspx\"><span style=\"font-family:Calibri;font-size:small\">Communication</span></a></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458915.aspx\"><span style=\"font-family:Calibri;font-size:small\">Event Aggregator</span></a></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:Symbol\"><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd458928.aspx\"><span style=\"font-family:Calibri;font-size:small\">Commands</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">I will provide some more information, that expresses my personal point of view.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">The <strong>EventAggregator</strong>, should be used to communicate between different modules to notify that a particular thing has happened. When you publish an event through <strong>EventAggregator</strong> you do not know who is listening, so perhaps no immediate action will be performed. For example, when you are processing some business logic (in controllers/presenters/viewmodels) and want to notify something to another module you could use <strong>EventAggregator</strong>.<span style=\"color:#1f497d\"> </span>Ward Bell <span style=\"color:#1f497d\"><a href=\"http://neverindoubtnet.blogspot.com/2009/05/event-aggregator-in-prism-explorer.html\"><span style=\"color:#0000ff\">posted a good explanation about the Event Aggregator Pattern</span></a>.</span></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><strong><span style=\"\" lang=EN-US>Commands </span></strong><span style=\"\" lang=EN-US>on the other hand &ldquo;know&rdquo; the code that will be executed when they are fired, it is always the same and are more UI related. If you require a specific action to be executed that is related to UI, you should use commands.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">If you feel that a particular scenario could be implemented with any of these, I would examine the pros and cons of each of the approaches and take the one that best suits the scenario.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">I hope my explanation has been useful, but I really recommend reading the above links (specially communication) which will probably provide much more information.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>",
    "PostedDate": "2009-06-19T10:31:40.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203646",
    "ThreadId": "59875",
    "Html": "<p>Hi Daniel,</p>\r\n<p>Thanks for the information - can I run a specific scenario past you to get some clarity - I'm getting a bit confused and suspect I'm complicating my own thoughts.</p>\r\n<p>I have a Shell which consists of 2 regions. I've called one the 'Customer Finder' and another the 'Customer Details'.</p>\r\n<p>Customer Finder is a simple search view which takes a name, then shows a list of customers. When the user selects a customer I want to show their details in the details region. The details region is not linked to the finder because I'd like other routes by which to show a customer - maybe deep linking from outside the application.</p>\r\n<p>I've currently got a CustomerUIService which has a method, ShowCustomer(id). The Customer Finder view model takes this in its constructor and calls it when you select a customer. The CustomerUIService keeps track of which customers are currently open and either shows an existing one, or adds a new one. View Discovery then takes care of loading all the views which show the details.&nbsp;What I keep going backwards and forwards on is if this interaction should be based on an event fired by the Customer Finder.</p>\r\n<p>Cons for an event are that when you select a customer it's pretty clear what needs to happen (in this particular usage). Also I think events are loaded with the expectation that nothing may happen. I don't like firing an event when I know something should happen.</p>\r\n<p>Pros for an event are that maybe other people are interested in the fact that a customer was selected. It also feels like how Prism wants me to communicate between views which aren't linked.</p>\r\n<p>I would love to know your take on this.</p>\r\n<p>Thanks,</p>\r\n<p>Graeme</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-20T04:46:13.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204614",
    "ThreadId": "59875",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Graeme,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">In this particular situation I agree with you, in the fact that an event should be published to notify that the customer was selected (in fact in a <span style=\"color:#1f497d\"><a href=\"http://blogs.southworks.net/dschenkelman/2009/06/23/webbrowser-control-quickstart-for-the-composite-application-guidance-for-wpf-and-silverlight-prism-v2/\">demo application</a></span> I have helped creating recently we did it like that).</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Actually what we did was creating a<span style=\"color:#1f497d\"> </span><strong>DelegateCommand</strong> with an attached behavior for the <strong>SelectionChanged</strong> event of a WPF DataGrid. Each time we selected a new customer, the command would be fired. The code for that command simply fired an event through event aggregator (passing the Customer as payload), which was handled by another view&rsquo;s presenter.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">In your scenario, the event could be handled by a &ldquo;module controller&rdquo; in the module that has the <strong>CustomerDetails</strong> view (by a &ldquo;module controller&rdquo; I mean something that knows things about the entire module, not just a single view like a Presenter/ViewModel).</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">This controller could use a service (I do not know how your <strong>CustomerUIService </strong>is implemented), or simply a list of the customer&rsquo;s whose details are already being shown. Then, if the customer is in that list, it could perform the logic to make it visible in the details region, and else create a new view and show it.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Although I do not know your application scenario, if you only show one customer details view at the same time (using a <strong>SingleActiveRegion</strong>), you could have a single instance of the <strong>CustomerDetails </strong>view, and just change the data context based on the selected customer. This is not completely related with your question, but it might save you unnecessary view creation.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:'Calibri','sans-serif';font-size:11pt\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></span></p>",
    "PostedDate": "2009-06-23T11:32:41.443-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204817",
    "ThreadId": "59875",
    "Html": "<p>Thanks for the info Dan,</p>\r\n<p>I'm actually presenting on this tomorrow night at a Perth (Australia) community event and worked over the weekend coming up with this approach. I wanted to introduce bits of Prism slowly -</p>\r\n<p>Firstly I have the search window. Part of the &quot;application requirements&quot; are to show user details when you select a customer. This is done with a ContentControl which is bound to the DataContext of the search results. These are CustomerViewModel objects and I use WPF Data Templates to marry the data object to the visual.</p>\r\n<p>Then the 2nd requirement is to allow other modules to plug-in to the view. So I add a TabRegion to the page with the name 'CustomerDetails'. Then when a customer is selected (binding from list box to property via ListBox.SelectedItem) I raise a Prism event 'SelectedCustomerChanged' which is subscribed to by the view in the separate module.</p>\r\n<p>I wanted to demonstrate RegionContext but it doesn't work with the pure ViewModel approach. Shame.</p>\r\n<p>Cheers,</p>\r\n<p>Graeme</p>",
    "PostedDate": "2009-06-23T23:14:55.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]