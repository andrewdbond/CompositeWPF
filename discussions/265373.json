[
  {
    "Id": "643174",
    "ThreadId": "265373",
    "Html": "\r\n<p>Hello Team,<br>\r\nThis issue happens only in PRISM 4 and works fine with PRISM 2.2 .<br>\r\nI have situation where I have the following XAML :-<br>\r\n<br>\r\n<br>\r\n<strong><em>&lt;controls:TabControl &nbsp;x:Name=&quot;tabControl&quot; &nbsp; Grid.Row=&quot;0&quot; &nbsp;VerticalAlignment=&quot;Stretch&quot; RenderTransformOrigin=&quot;0.5,0.5&quot; &nbsp;Regions:RegionManager.RegionName=&quot;MainRegion&quot; &nbsp;BorderThickness=&quot;1&quot; Background=&quot;White&quot;&gt; &nbsp; &nbsp;\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;Regions:TabControlRegionAdapter.ItemContainerStyle&gt; &nbsp; &nbsp;&nbsp;</em></strong><br>\r\n<strong><em>&lt;Style TargetType=&quot;controls:TabItem&quot;&gt; &nbsp;&nbsp;</em></strong><br>\r\n<strong><em>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Setter Property=&quot;HeaderTemplate&quot;&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</em></strong><br>\r\n<strong><em>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Setter.Value&gt;&lt;DataTemplate&gt; &nbsp; &nbsp; &nbsp;&nbsp;</em></strong><br>\r\n<strong><em>&lt;TextBlock MinWidth=&quot;45&quot; MaxWidth=&quot;50&quot; Text=&quot;{Binding Text}&quot; Margin=&quot;5&quot; /&gt; &nbsp;&nbsp;</em></strong><br>\r\n<strong><em>&lt;/DataTemplate&gt;&lt;/Setter.Value&gt;</em></strong><br>\r\n<strong><em>&lt;/Setter&gt;</em></strong><br>\r\n<strong><em>&lt;/Style&gt;&lt;/Regions:TabControlRegionAdapter.ItemContainerStyle&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</em></strong><br>\r\n<strong><em>&lt;/controls:TabControl&gt;</em></strong></p>\r\n<p><strong><em>&nbsp;</em></strong><br>\r\nI add a TextBlock in the code behind as follows :-</p>\r\n<p><br>\r\n<em><strong>&nbsp;_RegionManager.RegisterViewWithRegion(&quot;MainRegion&quot;, ()=&gt; new TextBlock { Text = &quot;First Tab&quot;, Height = 200 });</strong></em></p>\r\n<p>And I remove the tabitem from the TabControl as :-</p>\r\n<p><em><strong>tabControl.Items.RemoveAt(Convert.ToInt32(txtIndex.Text));</strong></em><br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>\r\nSo after I add an item(s) using above code and then remove an item and then again add an item, I get the following error :-</p>\r\n<p><br>\r\n<strong><em>{System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.Parameter name: index &nbsp; at System.Windows.PresentationFrameworkCollection`1.InsertImpl(Int32 index, Object value) &nbsp; at System.Windows.Controls.ItemCollection.InsertImpl(Int32\r\n index, Object value) &nbsp; at System.Windows.Controls.ItemCollection.InsertInternal(Int32 index, Object value) &nbsp; at System.Windows.PresentationFrameworkCollection`1.Insert(Int32 index, T value) &nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.TabControlRegionSyncBehavior.OnViewsChanged(Object\r\n sender, NotifyCollectionChangedEventArgs e) &nbsp; at System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(Object sender, NotifyCollectionChangedEventArgs e) &nbsp; at Microsoft.Practices.Prism.Regions.ViewsCollection.OnCollectionChanged(NotifyCollectionChangedEventArgs\r\n e) &nbsp; at Microsoft.Practices.Prism.Regions.ViewsCollection.NotifyAdd(IList items, Int32 newStartingIndex) &nbsp; at Microsoft.Practices.Prism.Regions.ViewsCollection.NotifyAdd(Object item) &nbsp; at Microsoft.Practices.Prism.Regions.ViewsCollection.SourceCollectionChanged(Object\r\n sender, NotifyCollectionChangedEventArgs e) &nbsp; at System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(Object sender, NotifyCollectionChangedEventArgs e) &nbsp; at System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs\r\n e) &nbsp; at System.Collections.ObjectModel.ObservableCollection`1.InsertItem(Int32 index, T item) &nbsp; at System.Collections.ObjectModel.Collection`1.Add(T item) &nbsp; at Microsoft.Practices.Prism.Regions.Region.InnerAdd(Object view, String viewName, IRegionManager\r\n scopedRegionManager) &nbsp; at Microsoft.Practices.Prism.Regions.Region.Add(Object view, String viewName, Boolean createRegionManagerScope) &nbsp; at Microsoft.Practices.Prism.Regions.Region.Add(Object view) &nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.AutoPopulateRegionBehavior.AddViewIntoRegion(Object\r\n viewToAdd) &nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.AutoPopulateRegionBehavior.OnViewRegistered(Object sender, ViewRegisteredEventArgs e)}</em></strong></p>\r\n<p>&nbsp;</p>\r\n<p>Please guide me.</p>\r\n",
    "PostedDate": "2011-07-15T16:32:25.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "643678",
    "ThreadId": "265373",
    "Html": "<p>Hi,</p>\r\n<p>The problem you're experiencing might be caused by the fact that you're modifying your region's hosting control's items directly, instead of interacting with the region.</p>\r\n<p>When you define a region in a control, the corresponding region adapter wraps the control in a region, and it is expected that you manipulate the contents of that region through the region, not through the control itself.</p>\r\n<p>Therefore, you could try using the <strong>Region.Remove</strong> method to remove the items from your region.</p>\r\n<p>Additionally, you should note that the <strong>RegisterViewWithRegion</strong> method (view discovery) does not add a view to a region, but rather registers that view with the region, so that, when a region with that name is created, the registered view is added to it. In order to programatically add a view to a region, the recommended approach is to use the <strong>Region.Add</strong> method (view injection).</p>\r\n<p>You can read more about this in the UI Composition chapter from the Prism MSDN documentation.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-07-18T05:48:10.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]