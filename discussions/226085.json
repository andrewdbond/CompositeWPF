[
  {
    "Id": "489312",
    "ThreadId": "226085",
    "Html": "<p>Hi all,</p>\r\n<p>I am working with Prism MVVM and CSLA in Silverlight. I wanted to use the databinding in CSLA to control the IsEnabled of a button. I used a CompositeCommand to tie the xaml to the ViewModel. That all worked great. In my case, I have a CSLA object that I want to use to control the IsEnabled of that button.&nbsp; The way it works now is that *if* I hook up a button using a CompositeCommand and do NOT use the CanExecute method, the buttons IsEnabled property in xaml is ignored (also just putting false in the isenabled of a button is ignored). I understand that this by design.</p>\r\n<p>What I was really wishing for was a way to connect a buttons click event to the ViewModel, but leave the rest to me. I think there should be an option to use &quot;commanding&quot; with a Silverlight button, but also be able to bind the IsEnabled to my own object and have it respected. Right now there seems to be no way to turn that part off.</p>\r\n<p>-Jeff</p>",
    "PostedDate": "2010-09-04T15:07:03.3-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "490136",
    "ThreadId": "226085",
    "Html": "<p>Jeff,</p>\r\n<p>Thank you for posting your question.</p>\r\n<p>Have you looked at the InvokeCommandAction and CallMethodAction behaviors in the Blend SDK?&nbsp; If you have Blend you can simply drag and&nbsp;drop them on your View.&nbsp; If not, you can download the Blend SDK and&nbsp;hand code the XAML to wire up your Button to either an ICommand or public method on your ViewModel.</p>\r\n<p>Does this help?</p>\r\n<p>Cheers,</p>\r\n<p>Karl</p>",
    "PostedDate": "2010-09-07T08:10:41.693-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]