[
  {
    "Id": "165435",
    "ThreadId": "49448",
    "Html": "I am developing a application using a docking control. The idea is that users will be able to add whatever controls we give them access to, and some of them multiple times to their screen.<br>\r\nI want to use Prism, so that the Portlets can be developed by various application teams, and then when complete we can add them to the library for users to add to their desktop.<br>\r\n<br>\r\nThe examples I have seen (stock trader etc) seem to load the modules to a single page, what I need to be able to do is to create a new frame control, and then add the modules to that frame so it can be docked. <br>\r\n<br>\r\nSo on startup their is just an empty (infragistics) dockmanager control.<br>\r\n<br>\r\nThe user selects the modules they want from a drop down list. For each module I create a new dockmanager window and load the module into that window. Potentially the same module could be added twice (as the module may be configurable to display different data)<br>\r\n<br>\r\nIs it possible to do this, and is their any sample code knocking around?\r\n",
    "PostedDate": "2009-03-06T10:05:32.77-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166198",
    "ThreadId": "49448",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">The Prism-v2 Desktop Reference Implementation shows an example on how to show a view in a different window by using a behavior (RegionPopupBehaviors) defined over the shell window, which is creating a <b>NewsReaderWindow </b>in a Popup Region. To see how this works you can debug the <b>ArticleView.xaml </b>code behind, starting with the <b>OpenButton_Click </b>handler method. The <b>ArticleView</b> is located <b>News</b> module inside the <b>Article</b> folder.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">To access the Reference Implementation you must open the folder where<span style=\"color:#1f497d\"> <a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=fa07e1ce-ca3f-4b9b-a21b-e3fa10d013dd&DisplayLang=en\"><span style=\"color:#0000ff\">Prism-v2</span></a> </span>was decompressed and open <b>$DecompressionDirectory$\\RI\\StockTraderRI_Desktop.sln</b> solution<span style=\"color:#1f497d\">.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:calibri\">On the other hand, some time ago, </span><a href=\"http://blogs.southworks.net/ibaumann/\"><span style=\"color:#0000ff;font-family:calibri\">Ignacio Baumann</span></a><span style=\"font-family:calibri\"> added a sample <b>Window Region Adapter</b> to the </span><a href=\"http://www.codeplex.com/CompositeWPFContrib\"><span style=\"color:#0000ff;font-family:calibri\">Prism Contrib Project</span></a><span style=\"font-family:calibri\"> that provides a way to show views in separate windows. In his approach, Ignacio defined a new region adapter associated to views of Window type<span style=\"color:#1f497d\">. </span>The sample was for Prism-v1 but with some adjustments you should be able to get it to work for this version if you required it. You can find the source code of the entire contrib project </span><a href=\"http://compositewpfcontrib.codeplex.com/SourceControl/ListDownloadableCommits.aspx\"><span style=\"color:#0000ff;font-family:calibri\">here</span></a><span style=\"font-family:calibri\">.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#1f497d;font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Both approaches should work on your application so you should pick the one that meet your requirements the best.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Another thing that could be useful for you, if you have a lot of modules and only some of them will be used, is loading the modules on demand. You could load them based on the drop down list selection, so only modules that the user selects are loaded.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">For more information about loading modules on demand you can check these articles:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://msdn.microsoft.com/en-us/library/dd458932.aspx\"><span style=\"color:#0000ff;font-family:calibri\">How to: Load Modules on Demand</span></a>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://msdn.microsoft.com/en-us/library/dd458902.aspx\"><span style=\"color:#0000ff;font-family:calibri\">Modularity QuickStarts for WPF</span></a>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\">And the Quickstarts’ solutions located in the <b>$Decompression Directory$\\Quickstarts\\Modularity </b>folder. The Modularity Quickstarts for WPF are:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><span style=\"font-family:calibri\">ConfigurationModularity</span>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><span style=\"font-family:calibri\">DefiningModulesInCodeQuickstart</span>\r\n<p style=\"margin:0cm 0cm 0pt 34.8pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><span style=\"font-family:calibri\">DirectoryLookupModularity</span>\r\n<p style=\"margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">For more information about the <b>Window Region Adapter </b>you can check the following articles:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://blogs.southworks.net/ibaumann/2008/09/26/windowregionadapter-for-compositewpf-prism/\"><span style=\"color:#0000ff;font-family:calibri\">WindowRegionAdapter for CompositeWPF (Prism)</span></a>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://blogs.southworks.net/ibaumann/2008/10/27/windowregionadapter-at-compositewpf-prism-contrib/\"><span style=\"color:#0000ff;font-family:calibri\">WindowRegionAdapter at CompositeWPF (Prism) Contrib</span></a>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span></span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n",
    "PostedDate": "2009-03-09T11:33:47.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]