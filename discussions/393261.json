[
  {
    "Id": "904802",
    "ThreadId": "393261",
    "Html": "\r\n<p>I&nbsp;implemented the IConfirmNavigationRequest in the ViewModel of a View.</p>\r\n<p>The problem is that the interface methods OnNavigatedFrom, OnNavigatedTo, etc. are not being executed when I perform RequestNavigate.</p>\r\n<p>But if I implement them in a view's code-behind file, they get executed properly. Is there a reason for that?</p>\r\n<p>How can I get these method get executed from the ViewModel?</p>\r\n<p>I'm using the MVVM approach in which each buton has a command that is executed in the viewmodel. Navigation is being requested from a button..</p>\r\n<div id=\"_mcePaste\" style=\"width:1px; height:1px; overflow:hidden; top:0px; left:-10000px\">\r\n&#65279;</div>\r\n",
    "PostedDate": "2012-08-27T14:36:34.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "905112",
    "ThreadId": "393261",
    "Html": "<p>Hi Rafael,</p>\r\n<p>Based on my understanding, you should be able to implement the <strong>IConfirmNavigationRequest </strong>on your view or view model class without problems. As an example, I believe you could check the <a href=\"http://msdn.microsoft.com/en-us/library/gg430881(v=pandp.40)\">View-Switching Navigation Quick Start</a>, which implements this interface in its <strong>ComposeEmailViewModel </strong>class<strong></strong>. Perhaps it could be useful to compare the differences with your own implementation.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-08-28T06:54:40.77-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "905275",
    "ThreadId": "393261",
    "Html": "\r\n<p>Allow me to show you what I have so far, I guess you will detect what I'm doing wrong.</p>\r\n<p>In my view I have a button whose sole purpose is to switch views, this button is bound to a DelegateCommand in the view's viewmodel.</p>\r\n<p><strong>The view swtching is working properly</strong>, but the IConfirmNavigationRequest methods are not been executed.</p>\r\n<p>Here's the view model:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomerSummaryViewModel : INotifyPropertyChanged, IConfirmNavigationRequest {\r\n\r\n   IRegionManager _regionManager;\r\n   IViewsCollection Views;\r\n   <span style=\"color:blue\">string</span> _nextView = <span style=\"color:#a31515\">&quot;CustomerOrdersView&quot;</span>;\r\n\r\n   <span style=\"color:blue\">public</span> CustomerSummaryViewModel(IRegionManager regionManager) {\r\n      ChangeView = <span style=\"color:blue\">new</span> DelegateCommand(OnChangeView, CanChangeView);\r\n\r\n      <span style=\"color:blue\">this</span>._regionManager = regionManager;\r\n   }\r\n\r\n   <span style=\"color:blue\">public</span> DelegateCommand ChangeView {\r\n      <span style=\"color:blue\">get</span>;\r\n      <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>;\r\n   }\r\n\r\n   <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanChangeView() {\r\n      <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n   }\r\n\r\n   <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> OnChangeView() {\r\n\r\n      <span style=\"color:green\">// THIS CALL TO REQUESTNAVIGATE SHOULD CALL IConfirmNavigationRequest METHODS, BUT THAT'S NOT HE CASE</span>\r\n      _regionManager.RequestNavigate\r\n      (\r\n            <span style=\"color:#a31515\">&quot;DetailsRegion&quot;</span>,\r\n            <span style=\"color:blue\">new</span> Uri(_nextView, UriKind.Relative),\r\n            a =&gt; {\r\n            }\r\n      );\r\n\r\n      <span style=\"color:blue\">switch</span> (_nextView) {\r\n         <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;CustomerDetailsView&quot;</span>:\r\n         _nextView = <span style=\"color:#a31515\">&quot;CustomerOrdersView&quot;</span>;\r\n         <span style=\"color:blue\">break</span>;\r\n\r\n         <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;CustomerOrdersView&quot;</span>:\r\n         _nextView = <span style=\"color:#a31515\">&quot;CustomerDetailsView&quot;</span>;\r\n         <span style=\"color:blue\">break</span>;\r\n      }\r\n   }\r\n\r\n   <span style=\"color:blue\">void</span> PostNavigationCallback(NavigationResult navigationResult) {\r\n      <span style=\"color:blue\">if</span> (navigationResult.Result == <span style=\"color:blue\">true</span>)\r\n         MessageBox.Show(<span style=\"color:#a31515\">&quot;Navigation Successful&quot;</span>);\r\n      <span style=\"color:blue\">else</span>\r\n         MessageBox.Show(<span style=\"color:#a31515\">&quot;Navigation Failed&quot;</span>);\r\n   }\r\n\r\n   <span style=\"color:blue\">private</span> Customer currentCustomer;\r\n\r\n   <span style=\"color:blue\">public</span> Customer CurrentCustomer {\r\n      <span style=\"color:blue\">get</span> {\r\n         <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.currentCustomer;\r\n      }\r\n      <span style=\"color:blue\">set</span> {\r\n         <span style=\"color:blue\">this</span>.currentCustomer = value;\r\n         <span style=\"color:blue\">this</span>.NotifyPropertyChanged(<span style=\"color:#a31515\">&quot;CurrentCustomer&quot;</span>);\r\n      }\r\n   }\r\n\r\n   <span style=\"color:blue\">#region</span> INotifyPropertyChanged Members\r\n\r\n   <span style=\"color:blue\">public</span> <span style=\"color:blue\">event</span> PropertyChangedEventHandler PropertyChanged;\r\n\r\n   <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> NotifyPropertyChanged(<span style=\"color:blue\">string</span> propertyName) {\r\n      <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.PropertyChanged != <span style=\"color:blue\">null</span>) {\r\n         <span style=\"color:blue\">this</span>.PropertyChanged(<span style=\"color:blue\">this</span>, <span style=\"color:blue\">new</span> PropertyChangedEventArgs(propertyName));\r\n      }\r\n   }\r\n\r\n   <span style=\"color:blue\">#endregion</span>\r\n\r\n   <span style=\"color:blue\">#region</span> IConfirmNavigationRequest Members\r\n\r\n   <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> ConfirmNavigationRequest(NavigationContext navigationContext, Action&lt;<span style=\"color:blue\">bool</span>&gt; continuationCallback) {\r\n      MessageBoxResult messageBoxResult =\r\n            MessageBox.Show(<span style=\"color:#a31515\">&quot;Should Navigate from Current View?&quot;</span>, <span style=\"color:#a31515\">&quot;Navigate&quot;</span>, MessageBoxButton.OKCancel);\r\n\r\n      <span style=\"color:blue\">bool</span> shouldNavigateFromCurrentView = messageBoxResult.HasFlag(MessageBoxResult.OK);\r\n\r\n      continuationCallback(shouldNavigateFromCurrentView);\r\n   }\r\n\r\n   <span style=\"color:blue\">#endregion</span>\r\n\r\n   <span style=\"color:blue\">#region</span> INavigationAware Members\r\n\r\n   <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> IsNavigationTarget(NavigationContext navigationContext) {\r\n      <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\r\n   }\r\n\r\n   <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedFrom(NavigationContext navigationContext) {\r\n      MessageBox.Show(<span style=\"color:#a31515\">&quot;We are within CustomerSummaryViewModel&quot;</span>);\r\n   }\r\n\r\n   <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnNavigatedTo(NavigationContext navigationContext) {\r\n      MessageBox.Show(<span style=\"color:#a31515\">&quot;We are within CustomerSummaryViewModel&quot;</span>);\r\n   }\r\n\r\n   <span style=\"color:blue\">#endregion</span>\r\n}\r\n</pre>\r\n</div>\r\n<p>Here's the entire ptoject</p>\r\n<p><a href=\"https://skydrive.live.com/#cid=228822BB183339A9&id=228822BB183339A9%21234\">https://skydrive.live.com/#cid=228822BB183339A9&amp;id=228822BB183339A9%21234</a></p>\r\n<p>&nbsp;</p>\r\n<p>Rafael</p>\r\n",
    "PostedDate": "2012-08-28T11:48:59.13-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "905326",
    "ThreadId": "393261",
    "Html": "<p>Hi,</p>\r\n<p>If I understood your scenario correctly what you are saying is that when you navigate to the <strong>CustomerDetailsView </strong>or <strong>CustomerOrdersView </strong>(in the <strong>DetailsRegion</strong>) the <strong>IConfirmNavigationRequest </strong>methods of the <strong>CustomerSummaryViewModel </strong>(which request the navigation) are not being executed.</p>\r\n<p>However, this is not an \"unusual\" behavior: When a navigation request is performed, <strong>Prism </strong>invokes the <strong>IConfirmNavigationRequest </strong>methods of the corresponding views and view models <span style=\"text-decoration: underline;\"><em>contained in the region where the navigation is performed</em></span>.</p>\r\n<p>For example, in this case when you perform a navigation request to the \"<strong>DetailsRegion</strong>,\" <strong>Prism </strong>would invoke the <strong>IConfirmNavigationRequest </strong>methods of the views and view models contained in it, that is, the <strong>CustomerDatailsView </strong>and <strong>CustomerOrdersView</strong> (in the sample you provided those views don't implement <strong>IConfirmNavigationRequest</strong>).</p>\r\n<p>You can find more information about this in the following section of <strong>Prism</strong>'s documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28v=pandp.40%29#sec9\">Chapter 8 - Navigation - View and View Model Participation in Navigation</a></li>\r\n</ul>\r\n<p>Also, I believe you can find the <a href=\"http://msdn.microsoft.com/en-us/library/gg430881%28v=pandp.40%29\">View-Switching Navigation Quick Start</a> mentioned by Agustin interesting.</p>\r\n<p>As a side note, it seems that you are not using the <strong>ConfirmNavigationRequest </strong>method. If that is so and you want to implement only the <strong>OnNavigateTo</strong>, <strong>OnNavigateFrom </strong>and <strong>IsNavigationTarget </strong>methods, I believe you could implement the <strong>INavigationAware </strong>interface instead of the <strong>IConfirmNavigationRequest</strong>.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-08-28T13:51:34.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]