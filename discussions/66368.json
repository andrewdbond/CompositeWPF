[
  {
    "Id": "225453",
    "ThreadId": "66368",
    "Html": "<p>Im using Prism to create a Silverlight application (SL3). I wanted to make some custom command behaviors to supplement Prism's built in command behavior which is at current just click on a button. I downloaded the following code snippet<br><br>http://www.silverlightplayground.org/post/2009/07/09/A-code-snippet-to-quickly-write-Prism-commands.aspx:<br><br>which, to the best of my knowledge appears to generate the correct code. Or it is at least similar to what is introduced here:<br><br>http://development-guides.silverbaylabs.org/Video/Prism-Commands<br><br>At any rate here is the code that I end up with to implement the mouse out command behavior<br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Net;\r\n<span style=\"color:Blue\">using</span> System.Windows;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls;\r\n<span style=\"color:Blue\">using</span> System.Windows.Documents;\r\n<span style=\"color:Blue\">using</span> System.Windows.Ink;\r\n<span style=\"color:Blue\">using</span> System.Windows.Input;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media.Animation;\r\n<span style=\"color:Blue\">using</span> System.Windows.Shapes;\r\n<span style=\"color:Blue\">using</span> Microsoft.Practices.Composite.Presentation.Commands;\r\n\r\n<span style=\"color:Blue\">namespace</span> MyProject.Infrastructure.Commands\r\n{\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MouseOutCommandBehavior : CommandBehaviorBase&lt;Control&gt;\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> MouseOutCommandBehavior(Control targetObject)\r\n            : <span style=\"color:Blue\">base</span>(targetObject)\r\n        {\r\n            targetObject.MouseLeave += (s, e) =&gt; <span style=\"color:Blue\">base</span>.ExecuteCommand();\r\n        }\r\n    }\r\n\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MouseOut\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty MouseOutBehaviorProperty =\r\n            DependencyProperty.RegisterAttached(\r\n                <span style=\"color:#A31515\">&quot;MouseOutBehaviorProperty&quot;</span>, <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior),\r\n                <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior), <span style=\"color:Blue\">null</span>);\r\n\r\n        <span style=\"color:Blue\">#region</span> CommandProperty\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty CommandProperty =\r\n            DependencyProperty.RegisterAttached(\r\n                <span style=\"color:#A31515\">&quot;Command&quot;</span>, <span style=\"color:Blue\">typeof</span>(ICommand), <span style=\"color:Blue\">typeof</span>(MouseOut),\r\n                <span style=\"color:Blue\">new</span> PropertyMetadata(CommandProperty_Changed));\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> ICommand GetCommand(DependencyObject obj)\r\n        {\r\n            <span style=\"color:Blue\">return</span> (ICommand)obj.GetValue(CommandProperty);\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> SetCommand(DependencyObject obj, ICommand value)\r\n        {\r\n            obj.SetValue(CommandProperty, value);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> CommandProperty_Changed(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Control targetObject = dependencyObject <span style=\"color:Blue\">as</span> Control;\r\n\r\n            <span style=\"color:Blue\">if</span> (targetObject != <span style=\"color:Blue\">null</span>)\r\n                GetOrCreateBehavior(targetObject).Command = e.NewValue <span style=\"color:Blue\">as</span> ICommand;\r\n        }\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n        <span style=\"color:Blue\">#region</span> CommandParameterProperty\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty CommandParameterProperty =\r\n            DependencyProperty.RegisterAttached(\r\n                <span style=\"color:#A31515\">&quot;CommandParameter&quot;</span>, <span style=\"color:Blue\">typeof</span>(<span style=\"color:Blue\">object</span>),\r\n                <span style=\"color:Blue\">typeof</span>(MouseOut), <span style=\"color:Blue\">new</span> PropertyMetadata(CommandParameterProperty_Changed));\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> ICommand GetCommandParameter(DependencyObject obj)\r\n        {\r\n            <span style=\"color:Blue\">return</span> (ICommand)obj.GetValue(CommandParameterProperty);\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> SetCommandParameter(DependencyObject obj, ICommand value)\r\n        {\r\n            obj.SetValue(CommandParameterProperty, value);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> CommandParameterProperty_Changed(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Control targetObject = dependencyObject <span style=\"color:Blue\">as</span> Control;\r\n\r\n            <span style=\"color:Blue\">if</span> (targetObject != <span style=\"color:Blue\">null</span>)\r\n                GetOrCreateBehavior(targetObject).CommandParameter = e.NewValue;\r\n        }\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> MouseOutCommandBehavior GetOrCreateBehavior(Control targetObject)\r\n        {\r\n            MouseOutCommandBehavior behavior = targetObject.GetValue(MouseOutBehaviorProperty) <span style=\"color:Blue\">as</span> MouseOutCommandBehavior;\r\n\r\n            <span style=\"color:Blue\">if</span> (behavior == <span style=\"color:Blue\">null</span>)\r\n            {\r\n                behavior = <span style=\"color:Blue\">new</span> MouseOutCommandBehavior(targetObject);\r\n                targetObject.SetValue(MouseOutBehaviorProperty, behavior);\r\n            }\r\n\r\n            <span style=\"color:Blue\">return</span> behavior;\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<br>And my XAML is as follows<br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MyProject.View.NavigationWidgetModule.NavigationWidgetControl</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span> \r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span> \r\n    <span style=\"color:Red\">xmlns:Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:Microsoft.Practices.Composite.Presentation.Commands;assembly=Microsoft.Practices.Composite.Presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:OtherCommand</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:MyProject.Infrastructure.Commands;assembly=MyProject.Infrastructure</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">400</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">White</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> <span style=\"color:Red\">OtherCommand:MouseOut.Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding MouseOutCommand}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<br>but everytime I run this I get a AG_E_PARSER_BAD_PROPERTY_VALUE error. Now if I replace the XAML with this (ie the built in Click command)</p>\r\n<p><br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MyProject.View.NavigationWidgetModule.NavigationWidgetControl</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span> \r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span> \r\n    <span style=\"color:Red\">xmlns:Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:Microsoft.Practices.Composite.Presentation.Commands;assembly=Microsoft.Practices.Composite.Presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:OtherCommand</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:MyProject.Infrastructure.Commands;assembly=MyProject.Infrastructure</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">400</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">White</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> <span style=\"color:Red\">Command:Click.Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding MouseOutCommand}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n... it works properly. Is the command behavior code correct or am I doing something wrong?</p>",
    "PostedDate": "2009-08-19T07:57:57.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225464",
    "ThreadId": "66368",
    "Html": "<p>I am not sure if this is completely the fix but the following look wrong:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty MouseOutBehaviorProperty =\r\n            DependencyProperty.RegisterAttached(\r\n                <span style=\"color:#A31515\">&quot;MouseOutBehaviorProperty&quot;</span>, <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior),\r\n                <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior), <span style=\"color:Blue\">null</span>);\r\n\r\n</pre>\r\n</div>\r\n<p>I think it should be:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty MouseOutCommandBehaviorProperty =\r\n            DependencyProperty.RegisterAttached(\r\n                <span style=\"color:#A31515\">&quot;MouseOutCommandBehavior&quot;</span>, <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior),\r\n                <span style=\"color:Blue\">typeof</span>(MouseOut), <span style=\"color:Blue\">null</span>);\r\n\r\n</pre>\r\n</div>\r\n<p>There are some name changes for consistency as well and so the code likely will need to be changed slightly for compilation.</p>\r\n<p>HTH</p>",
    "PostedDate": "2009-08-19T08:25:41.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225472",
    "ThreadId": "66368",
    "Html": "<p>Hey Fred,</p>\r\n<p>Thanks for the input! I tried it and it still failed at the same point. I've also tried the code suggested here:</p>\r\n<p>http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=66164</p>\r\n<p>Changing FrameworkPropertyMetadata to PropertyMetadata but I still get the exact same error. Is there a bug in SL3 or something?</p>",
    "PostedDate": "2009-08-19T08:34:31.473-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225500",
    "ThreadId": "66368",
    "Html": "<p>Hi</p>\r\n<p>I created the following attached behavior using <a href=\"http://blogs.southworks.net/dschenkelman/2009/08/13/c-code-snippet-to-create-commands-with-attached-behaviors-using-prism/\">this snippet</a>. I binding it to a button&nbsp;and moving&nbsp;in/out of it and it worked great.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MouseOut\r\n    </span>{\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty MouseOutCommandBehaviorProperty\r\n            = DependencyProperty.RegisterAttached(\r\n            <span style=\"color:#A31515\">&quot;MouseOutCommandBehavior&quot;</span>,\r\n            <span style=\"color:Blue\">typeof</span>(MouseOutCommandBehavior),\r\n            <span style=\"color:Blue\">typeof</span>(MouseOut),\r\n            <span style=\"color:Blue\">null</span>);\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty CommandProperty\r\n            = DependencyProperty.RegisterAttached(\r\n            <span style=\"color:#A31515\">&quot;Command&quot;</span>,\r\n            <span style=\"color:Blue\">typeof</span>(ICommand),\r\n            <span style=\"color:Blue\">typeof</span>(MouseOut),\r\n            <span style=\"color:Blue\">new</span> PropertyMetadata(OnSetCommandCallback));\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty CommandParameterProperty\r\n            = DependencyProperty.RegisterAttached(\r\n           <span style=\"color:#A31515\">&quot;CommandParameter&quot;</span>,\r\n           <span style=\"color:Blue\">typeof</span>(<span style=\"color:Blue\">object</span>),\r\n           <span style=\"color:Blue\">typeof</span>(MouseOut),\r\n           <span style=\"color:Blue\">new</span> PropertyMetadata(OnSetCommandParameterCallback));\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> ICommand GetCommand(Control control)\r\n        {\r\n            <span style=\"color:Blue\">return</span> control.GetValue(CommandProperty) <span style=\"color:Blue\">as</span> ICommand;\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> SetCommand(Control control, ICommand command)\r\n        {\r\n            control.SetValue(CommandProperty, command);\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> SetCommandParameter(Control control, <span style=\"color:Blue\">object</span> parameter)\r\n        {\r\n            control.SetValue(CommandParameterProperty, parameter);\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">object</span> GetCommandParameter(Control control)\r\n        {\r\n            <span style=\"color:Blue\">return</span> control.GetValue(CommandParameterProperty);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnSetCommandCallback\r\n            (DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Control control = dependencyObject <span style=\"color:Blue\">as</span> Control;\r\n            <span style=\"color:Blue\">if</span> (control != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                MouseOutCommandBehavior behavior = GetOrCreateBehavior(control);\r\n                behavior.Command = e.NewValue <span style=\"color:Blue\">as</span> ICommand;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnSetCommandParameterCallback\r\n            (DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            Control control = dependencyObject <span style=\"color:Blue\">as</span> Control;\r\n            <span style=\"color:Blue\">if</span> (control != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                MouseOutCommandBehavior behavior = GetOrCreateBehavior(control);\r\n                behavior.CommandParameter = e.NewValue;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> MouseOutCommandBehavior GetOrCreateBehavior(Control control)\r\n        {\r\n            MouseOutCommandBehavior behavior =\r\n                control.GetValue(MouseOutCommandBehaviorProperty) <span style=\"color:Blue\">as</span> MouseOutCommandBehavior;\r\n            <span style=\"color:Blue\">if</span> (behavior == <span style=\"color:Blue\">null</span>)\r\n            {\r\n                behavior = <span style=\"color:Blue\">new</span> MouseOutCommandBehavior(control);\r\n                control.SetValue(MouseOutCommandBehaviorProperty, behavior);\r\n            }\r\n            <span style=\"color:Blue\">return</span> behavior;\r\n        }\r\n    }\r\n\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> MouseOutCommandBehavior : CommandBehaviorBase&lt;Control&gt;\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> MouseOutCommandBehavior(Control control)\r\n            : <span style=\"color:Blue\">base</span>(control)\r\n        {\r\n            control.MouseLeave += OnMouseLeave;\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> OnMouseLeave(<span style=\"color:Blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            ExecuteCommand();\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p>Then in the XAML I used the following code to perform the binding (mou is the namespace where the class with attached behavior is):</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> <span style=\"color:Red\">mou:MouseOut.Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=MouseOutCommand}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span></pre>\r\n</div>\r\n<p>Please let me know if this helps</p>\r\n<p>Damian Schenkelman<br> <a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-08-19T09:36:45.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225519",
    "ThreadId": "66368",
    "Html": "<p>Hey Damian,</p>\r\n<p>Even using your code directly still doesnt work for me.</p>\r\n<p>Here is my XAML</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MyProject.View.NavigationWidgetModule.NavigationWidgetControl</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:Microsoft.Practices.Composite.Presentation.Commands;assembly=Microsoft.Practices.Composite.Presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:OtherCommand</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:MyProject.Infrastructure.Commands;assembly=MyProject.Infrastructure</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">400</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Height</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">300</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">White</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MyButton</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">OtherCommand:MouseOut.Command</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding MouseOutCommand}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>..and Codebehind</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:Blue\">using</span> System.Linq;\r\n<span style=\"color:Blue\">using</span> System.Net;\r\n<span style=\"color:Blue\">using</span> System.Windows;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls;\r\n<span style=\"color:Blue\">using</span> System.Windows.Documents;\r\n<span style=\"color:Blue\">using</span> System.Windows.Input;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media.Animation;\r\n<span style=\"color:Blue\">using</span> System.Windows.Shapes;\r\n\r\n<span style=\"color:Blue\">namespace</span> MyProject.View.NavigationWidgetModule\r\n{\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> NavigationWidgetControl : UserControl\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> NavigationWidgetControl(NavigationWidgetViewModel viewModel)\r\n        {\r\n            <span style=\"color:Blue\">this</span>.DataContext = viewModel;\r\n            InitializeComponent();\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n</p>\r\n<p>..and ViewModel</p>\r\n<p>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Net;\r\n<span style=\"color:Blue\">using</span> System.Windows;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls;\r\n<span style=\"color:Blue\">using</span> System.Windows.Documents;\r\n<span style=\"color:Blue\">using</span> System.Windows.Ink;\r\n<span style=\"color:Blue\">using</span> System.Windows.Input;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media.Imaging;\r\n<span style=\"color:Blue\">using</span> System.Windows.Media.Animation;\r\n<span style=\"color:Blue\">using</span> System.Windows.Shapes;\r\n<span style=\"color:Blue\">using</span> System.ComponentModel;\r\n<span style=\"color:Blue\">using</span> Microsoft.Practices.Composite.Presentation.Commands;\r\n<span style=\"color:Blue\">using</span> System.Threading;\r\n<span style=\"color:Blue\">using</span> System.Windows.Threading;\r\n\r\n<span style=\"color:Blue\">namespace</span> MyProject.View.NavigationWidgetModule\r\n{\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> NavigationWidgetViewModel : INotifyPropertyChanged\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> DelegateCommand&lt;<span style=\"color:Blue\">object</span>&gt; MouseOutCommand { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n\r\n\r\n        <span style=\"color:Blue\">public</span> NavigationWidgetViewModel()\r\n        {\r\n\r\n            <span style=\"color:Blue\">this</span>.MouseOutCommand = <span style=\"color:Blue\">new</span> DelegateCommand&lt;<span style=\"color:Blue\">object</span>&gt;(OnMouseOut);\r\n}\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> OnMouseOut(<span style=\"color:Blue\">object</span> o)\r\n        {\r\n\r\n        }\r\n\r\n        <span style=\"color:Blue\">#region</span> INotifyPropertyChanged Members\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">event</span> PropertyChangedEventHandler  PropertyChanged;\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> OnPropertyChanged(String s)\r\n        {\r\n            <span style=\"color:Blue\">if</span> (PropertyChanged != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                PropertyChanged(<span style=\"color:Blue\">this</span>, <span style=\"color:Blue\">new</span> PropertyChangedEventArgs(s));\r\n            }\r\n        }\r\n        <span style=\"color:Blue\">#endregion</span>\r\n\r\n    }\r\n}\r\n\r\n&lt;object&gt;&lt;object&gt;&lt;/object&gt;&lt;/object&gt;</pre>\r\n</div>\r\n</pre>\r\nCan you see anything wrong with that?</p>",
    "PostedDate": "2009-08-19T10:14:35.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225537",
    "ThreadId": "66368",
    "Html": "<p>Hi,</p>\r\n<p>I have created a small sample application that shows this scenario working, so you can compare the differences with your solution. You can download it from <a href=\"http://cid-09f63fc7ac065e5e.skydrive.live.com/self.aspx/p|0p Samples/MouseOutSample.zip\">here</a>. When you &quot;leave&quot; the button with the mouse the command shows a message box.</p>\r\n<p>I hope this is useful.</p>\r\n<p>Damian Schenkelman<br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-08-19T11:04:53.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "225551",
    "ThreadId": "66368",
    "Html": "<p>Hi Damian,</p>\r\n<p>Thank you so much for that! It helped me to solve my problem. I didnt use the quickstart project; I built mine up by myself. And what I omitted was a reference to the Infrastructure assembly in the Shell project. After I noticed you put your behavior class in the module, I tried that and it worked. That was the &quot;Ah ha&quot; moment. Thanks again!</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-08-19T11:30:13.843-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "232733",
    "ThreadId": "66368",
    "Html": "<p>Hello,</p>\r\n<p>i'm sorry but i cannot seem to find CommandBehaviorBase&lt;T&gt; on the CAL Composite.Presentation assembly.&nbsp;</p>\r\n<p>Which release are you using ?</p>\r\n<p>Francisco</p>",
    "PostedDate": "2009-09-09T08:58:20.413-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "499048",
    "ThreadId": "66368",
    "Html": "<p><span style=\"color:#888888\">Hi, You can use following URL great work by Brian :) </span></p>\r\n<p><span style=\"color:#888888\">\r\n<p><span style=\"color:#00ff00\">\r\n<p><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\">\r\n<p><a href=\"http://geekswithblogs.net/HouseOfBilz/archive/2009/08/21/adventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx\">http://geekswithblogs.net/HouseOfBilz/archive/2009/08/21/adventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx</a></p>\r\n</span></span></span></p>\r\n</span></p>\r\n<p><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\">&nbsp;</span></span></span>\r\n<p>\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">&nbsp;</span></p>\r\n</span></p>\r\n</span></p>\r\n<span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\"><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\"><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">&nbsp;</span></span></span></p>\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">&nbsp;</span></p>\r\n</span></p>\r\n</span></p>\r\n<span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\">\r\n<p><span style=\"text-decoration:underline\"><strong>@frantic:</strong></span> using<span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"color:#000000\"> Microsoft.Practices.Composite.Presentation.Commands; for CommanBehaviorBase&lt;T&gt; </span></span></span></p>\r\n<p><span style=\"color:#888888\"><span style=\"color:#00ff00\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\"><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\"><span style=\"font-size:x-small;color:#0000ff;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"color:#000000\">&nbsp;</span></span></span></span></span></span></span></span></span></span></span></p>\r\n</span></p>\r\n</span></p>\r\n</span></p>\r\n<p>\r\n<p>\r\n<p><span style=\"font-size:x-small;font-family:Consolas\"><span style=\"font-size:x-small;font-family:Consolas\">&nbsp;</span></span></p>\r\n</p>\r\n</p>\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n</span></p>\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>Regards.</p>",
    "PostedDate": "2010-09-27T10:27:01.507-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "499135",
    "ThreadId": "66368",
    "Html": "<p>Hi,</p>\r\n<p>Thanks for sharing this with the rest of the community. Please, take into account that the product team is working on the Prism v4 version, which is focused on MVVM, so you will find in the <a href=\"http://compositewpf.codeplex.com/releases/view/52647\">last drops</a> updated information on this topic.</p>\r\n<p>Additionally, there is a new section in the Prism v4 CHM, which provides guidance about CommandBehaviorBase&lt;T&gt;. For more information you could take a look a the following documentation section:</p>\r\n<ul>\r\n<li>Silverlight 3 Command Support (new)</li>\r\n</ul>\r\n<p><span><span style=\"color:#3c3c3c\">Fernando  Antivero</span></span><span><span style=\"color:#3c3c3c\">&nbsp;</span></span><span style=\"color:#3c3c3c\"><br><span><a href=\"http://blogs.southworks.net/fantivero\"><span style=\"color:#0066cc\">http://blogs.southworks.net/fantivero</span></a></span></span></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-27T13:39:25.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1292624",
    "ThreadId": "66368",
    "Html": "@frantic0: import the following namespace in your class:<br />\n<pre><code>using Microsoft.Practices.Prism.Interactivity;</code></pre>\n\n",
    "PostedDate": "2014-08-22T18:00:53.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]