[
  {
    "Id": "636828",
    "ThreadId": "263777",
    "Html": "\r\n<p>WPF4.</p>\r\n<p>I have a view which may be created on request during application lifetime. This view has 2 regions defined inside it, each region contains a subview. If I make this view a singleton (3rd parameter to true), it works alright. However if I make it non-singleton,\r\n it will give errors.&nbsp;</p>\r\n<pre>Region is not supposed to be created in non-root view level?</pre>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureContainer(){\r\n            RegisterTypeIfMissing(<span style=\"color:blue\">typeof</span>(IView), <span style=\"color:blue\">typeof</span>(View), <span style=\"color:blue\">false</span>);\r\n            RegisterTypeIfMissing(<span style=\"color:blue\">typeof</span>(ISubViewA), <span style=\"color:blue\">typeof</span>(SubViewA), <span style=\"color:blue\">false</span>);\r\n            RegisterTypeIfMissing(<span style=\"color:blue\">typeof</span>(ISubViewB), <span style=\"color:blue\">typeof</span>(SubViewB), <span style=\"color:blue\">false</span>);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<pre><br></pre>\r\n<pre>inner most exception msg: {&quot;Region with the given name is already registered: RegionA&quot;}</pre>\r\n<pre>inner most Stacktrace:</pre>\r\n<pre>at Microsoft.Practices.Prism.Regions.RegionManager.RegionCollection.Add(IRegion region)&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion()&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager()&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach()&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.RegionBehavior.Attach()&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.RegionBehaviorCollection.Add(String key, IRegionBehavior regionBehavior)&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)&nbsp; &nbsp;<br>at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)</pre>\r\n",
    "PostedDate": "2011-07-03T23:47:52.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "637049",
    "ThreadId": "263777",
    "Html": "<p>Hi,</p>\r\n<p>The <strong>RegionManager</strong> does not allow to add regions with the same name. Therefore, you should identify your regions with unique names.</p>\r\n<p>If you'd like to show a view twice, you could use <strong>Scoped Regions</strong>. By using scoped regions, when you add a view to a region, you create a scoped region manager for the regions that lie inside that view. Therefore, if you create multiple instances of a view that holds a region inside, multiple instances of that region (with the same name) are generated, but inside separate region managers.</p>\r\n<p>You could read more about <strong>Scoped Regions</strong> in Prism MSDN documentation <a href=\"http://msdn.microsoft.com/en-us/library/ff921098(v=PandP.40).aspx#sec42\">here</a>.</p>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-07-04T07:42:36.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]