[
  {
    "Id": "696417",
    "ThreadId": "278983",
    "Html": "\r\n<p>I want to build WPF client as thin as possible using prism (But not silverlight)</p>\r\n<p>(In other words most of th business logis should be in Server.)</p>\r\n<p>1) My question is will the Prism in the client have all the</p>\r\n<p>Model ,View Model and View?</p>\r\n<p>OR can i have</p>\r\n<p>Model/&quot;view model&quot; in the Server. &nbsp;&nbsp; If they can be in differnt places (cleint and Server) how are they they connected?&nbsp;</p>\r\n<p>Is there any example?</p>\r\n<p>&nbsp;</p>\r\n<p>2) I have Database connected to Entity frame work connected to Business logic via WCF</p>\r\n<p>Database</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; |</p>\r\n<p>Entiry Frame Work</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; |</p>\r\n<p>Business Logic</p>\r\n<p>&nbsp;&nbsp;&nbsp; | (WCF)</p>\r\n<p>Client WPF (Prism)</p>\r\n<p>&nbsp;</p>\r\n<p>Some one please say me and is there any exampele for enterprise level application using</p>\r\n<p>WCF,Prism,WPF,Entity framework,Enterprice lib&nbsp; I can't find any decent examples.</p>\r\n<p>Regards</p>\r\n",
    "PostedDate": "2011-11-10T05:47:38.257-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "696450",
    "ThreadId": "278983",
    "Html": "<p>Hi,</p>\r\n<p>The MVVM pattern is intended to be used on Client side applications. It is useful to separate business logic, presentation logic, and purely visual logic in the client side. Information is generally retrieved from the server side part of the application (which in turn has a data access layer) through a service (which might be a WCF service). This information is generally retrieved in the form of model objects. The role of WCF here is to communicate between the client and the server, and it does so by creating an auto-generated proxy class in the client.</p>\r\n<p>One interesting approach you could follow is to place most business logic in the server. You would, however, have to place your view model in the client application. Presentation logic usually involves transforming the model class and exposing it in a way that is consumable for the view. Therefore, if you wish to keep your client side view model class to a minimum, you could try exposing your model classes in a way that will be consumable for the view. You should take into account, however, that if you modify your models to be easily consumable by a specific type of view, you will be coupling your model to your view in a certain way, so you should try to avoid it whenever possible.</p>\r\n<p>You might find the following material useful to better understand the MVVM pattern and its benefits:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405484%28PandP.40%29.aspx\" target=\"_top\">Chapter 5: Implementing the MVVM Pattern</a>\r\n<div id=\"_mcePaste\" class=\"mcePaste\" style=\"position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow: hidden;\"><a href=\"http://msdn.microsoft.com/en-us/library/gg405494%28PandP.40%29.aspx\" target=\"_top\">Chapter 6: Advanced MVVM Scenarios</a></div>\r\n</li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405494%28PandP.40%29.aspx\" target=\"_top\">Chapter 6: Advanced MVVM Scenarios</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430857%28PandP.40%29.aspx\" target=\"_top\">Basic MVVM QuickStart</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430869%28PandP.40%29.aspx\" target=\"_top\">MVVM QuickStart</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405492%28PandP.40%29.aspx\" target=\"_top\">MVVM Reference Implementation</a><a class=\"l\" href=\"http://karlshifflett.wordpress.com/2010/11/07/in-the-box-ndash-mvvm-training/\"><em></em></a></li>\r\n<li><a class=\"l\" href=\"http://karlshifflett.wordpress.com/2010/11/07/in-the-box-ndash-mvvm-training/\">In the Box &ndash; MVVM Training &laquo; Karl On WPF &ndash; .Net</a></li>\r\n</ul>\r\n<p>As for your second concern, you might find the following blog post useful, where the subject of using WCF services in Prism is explained:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.southworks.net/gmaliandi/2011/10/using-wcf-services-in-prism-silverlight-applications/\">Using WCF services in Prism Silverlight applications</a></li>\r\n</ul>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-11-10T06:44:52.68-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "696976",
    "ThreadId": "278983",
    "Html": "<p>Hi Guidomaliandi</p>\n<p>Thanks for you reply and detail information.<br /> <br /> 1) So what I understand from you answer is MVVM is purley for Client Side WPF apps<br /> 2) \"VIEW\" and \"VIEW MODEL\"&nbsp; have to be in Client Side<br /> 3) If I try minimizing client side \"View model\" that will lead to Client \"View\" and client/server \"model\" to be coupled together.<br /> <br /> A)<br /> What we are trying to develop is a Huge application with same functionality&nbsp; in WPF and WEB (MVC 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -Not Silverlight<br /> So the idea is to keep as much as possible&nbsp; code and logic in Server that will be common to both WPF and WEB . (for easy maintenance and to avoid duplication )<br /> <br /> Now the million dollar question<br /> What approach woudld be best for this? <br /> <br /> We are very much sure MVC 3 is the best for Web. IS there any additional container for Web like \"Prism for WPF\" (Correct me if Iam worng)<br /> <br /> B)<br /> Which&nbsp; will go well in bellow list.<br /> <br /> (Prism wiht MVVM) for WPF and (MVC 3) for web<br /> (Prism wiht MVP)&nbsp; for WPF and (MVC 3) for web<br /> WPF with MVVM/MVP without Prism&nbsp; and (MVC 3) for web<br /> Or differnect approch</p>\n<p>&nbsp;</p>\n<p>Bearing in mind</p>\n<p>1) we are developing huge application same functionality in&nbsp; WPF and WEB (MVC 3)&nbsp;&nbsp;</p>\n<p>2) Code duplication should be avoided</p>\n<p>3) good for Testing</p>\n<p>4) easy for maintanence</p>\n<p>5) good&nbsp; future enancements and integaration</p>\n<p>6) we don't mind if its the hard and painful way of doing it. but ti should be the best way.</p>\n<p>&nbsp;</p>\n<p>Regards</p>\n<p>&nbsp;</p>\n<p>Nathan</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
    "PostedDate": "2011-11-11T04:31:32.277-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "697117",
    "ThreadId": "278983",
    "Html": "<p>Hi Nathan,</p>\r\n<p>Prism is a set of guidance provided to develop loosely-coupled client-side applications in <strong>WPF </strong>or <strong>Silverlight</strong>. Currently, there is no official support to develop applications in Prism with <strong>APS.NET MVC 3</strong>.</p>\r\n<p>If you wish to implement a WPF Prism application as a web application, you might find useful to deploy your WPF application as a <a href=\"http://msdn.microsoft.com/en-us/library/aa970060.aspx\">WPF XAML Browser Application</a>. However, have in mind that this approach is lees widely used with the apparition of Silverlight and there is no official support for it in the Prism guidance.</p>\r\n<p>Regarding the approaches you listed above, the MVVM pattern (which is the one suggested in the Prism guidance) is a specialization of the MVP pattern adapted to take advantage of the capabilities provided by the .NET framework, such as data bindings and commands, so you shouldn't find much differences when implementing MVVM or MVP.</p>\r\n<p>Also, if you wish to implement a web application using <strong>ASP.NET MVC 3</strong> following p&amp;p guidance to keep it maintainable, testable, and so forth, you might find the Silk project useful:</p>\r\n<ul>\r\n<li><a href=\"http://silk.codeplex.com/\">Project Silk in CodePlex</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\" target=\"_blank\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2011-11-11T10:09:21.47-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]