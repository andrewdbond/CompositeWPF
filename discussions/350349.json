[
  {
    "Id": "816677",
    "ThreadId": "350349",
    "Html": "\r\n<p>Hi</p>\r\n<p>I have a module which is loaded OnDemand (Parent).&nbsp; There is another module which DependsOn this OnDemand module(Child).</p>\r\n<p>In the module catalog I set the Child as<span style=\"color:#000000\"> InitializationMode=&quot;WhenAvailable&quot;. Now this does not work. And I kind of understand why it does not but it is the Error message which intrigues me and I wondered if anyone can explain\r\n what it's really saying: (and hopfully prove that is does work and that I am just missing something - apart from the obvious brain thing!)</span></p>\r\n<p><span style=\"color:#000000\">&nbsp;</span><strong>ErrMsg</strong>: Module Child is marked for automatic initialization when the application starts, but it depends on modules that are marked as OnDemand initialization. To fix this error,\r\n<strong>mark the dependency modules for InitializationMode=WhenAvailable</strong>, or\r\n<strong><span style=\"color:#000000\">remove this validation by extending the ModuleCatalog class</span></strong>.<br>\r\n<strong></strong></p>\r\n<ol>\r\n<li><strong>mark the dependency modules for InitializationMode=WhenAvailable<br>\r\n<span style=\"color:#800080\">I thought I had!<br>\r\n</span></strong><span style=\"color:#ccca84\">&lt;</span><span style=\"color:#ccca84\">prism</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">ModuleInfo</span><span style=\"color:#ccca84\">&nbsp;Ref</span><span style=\"color:#ccca84\">=</span><span style=\"color:#93b073\">&quot;Child.xap&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#ccca84\">&nbsp;ModuleName</span><span style=\"color:#ccca84\">=</span><span style=\"color:#93b073\">&quot;ChildModule&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#ccca84\">&nbsp;ModuleType</span><span style=\"color:#ccca84\">=</span><span style=\"color:#93b073\">&quot;Child.Module,</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ChildModule,&nbsp;</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version=1.0.0.0,&nbsp;Culture=neutral,&nbsp;PublicKeyToken=null&quot;</span><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp;<span style=\"color:#800080\">&nbsp;InitializationMode=</span></strong><span style=\"color:#93b073\"><span style=\"color:#800080\"><strong>&quot;WhenAvailable</strong>&quot;</span></span><span style=\"color:#ccca84\">&gt;</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:#ccca84\">&lt;</span><span style=\"color:#ccca84\">prism</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">ModuleInfo.DependsOn</span><span style=\"color:#ccca84\">&gt;</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:#ccca84\">&lt;</span><span style=\"color:#ccca84\">sys</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">String</span><span style=\"color:#ccca84\">&gt;</span><span style=\"color:#93b073\">ParentModule</span><span style=\"color:#ccca84\">&lt;/</span><span style=\"color:#ccca84\">sys</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">String</span><span style=\"color:#ccca84\">&gt;</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:#ccca84\">&lt;/</span><span style=\"color:#ccca84\">prism</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">ModuleInfo.DependsOn</span><span style=\"color:#ccca84\">&gt;</span><br>\r\n<span style=\"color:#93b073\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color:#ccca84\">&lt;/</span><span style=\"color:#ccca84\">prism</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">ModuleInfo</span><span style=\"color:#ccca84\">&gt;</span><br>\r\n<span style=\"color:#ccca84\">&lt;/</span><span style=\"color:#ccca84\">prism</span><span style=\"color:#ccca84\">:</span><span style=\"color:#ccca84\">ModuleCatalog</span><span style=\"color:#ccca84\">&gt;<br>\r\n<span style=\"color:#800080\">So what does the statemenat in the error message actually mean? Is it talking about the parent?</span></span>\r\n</li><li><span style=\"color:#ccca84\"><span style=\"color:#800080\">&nbsp;<strong><span style=\"color:#000000\">remove this validation by extending the ModuleCatalog class</span></strong>.<br>\r\nDoes anyone no of any blogs or tutorials which demponstrate how to do this?</span></span>\r\n</li></ol>\r\n<p>When set up the module catalog up this way&nbsp;I had hoped that dependant modules(Children) would be loaded when the onDemand Parent was loaded.<br>\r\n<br>\r\nI am guessing the solution is to manually load the children.&nbsp; Do I have to use module tracking to ensure that the parent has loaded before loading any dependant modules? or can I go ahead and load them all&nbsp;parent and children&nbsp;in the one For Loop?<br>\r\n<br>\r\nThanks<br>\r\n<br>\r\nJohn.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-03-28T10:38:36.437-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "817181",
    "ThreadId": "350349",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding this error is thrown because one of the validation used by the default implementation of the <strong>ModuleCatalog </strong>provided by Prism.</p>\r\n<p>As explained in the comments of the <strong>ModuleCatalog </strong>class, this implementation among other things verifies that there are no Invalid dependencies, such as a Module that's loaded at start up that depends on a module that might need to be retrieved. In my opinion the team considered that all modules loaded at start up might have all its dependencies loaded as well (on start-up).</p>\r\n<p>Therefore to avoid this error, as the message explains you could change your module dependency (\"<strong>ParentModule</strong>\") to <strong>InitializationMode</strong>=\"<strong>WhenAvailable</strong>\". Or as mentioned remove the aforementioned validation by extending the&nbsp; <strong>ModuleCatalog</strong> class.</p>\r\n<p>As explained in <a href=\"http://msdn.microsoft.com/en-us/library/gg430866(v=pandp.40).aspx#sec20\">Appendix E: Extending Prism,Adding Features to the Module Catalog</a>:</p>\r\n<p><em>There are several ways to extend the functionality of the <strong>ModuleCatalog</strong>:</em></p>\r\n<ul>\r\n<li><em>Derive from <strong>ModuleCatalog</strong>. If you need to change the behavior of <strong>ModuleCatalog</strong>, derive a new class and override one of the virtual methods.</em></li>\r\n<li><em>Write extension methods on <strong>IModuleCatalog</strong>. If you need additional functionality in your application where you use <strong>IModuleCatalog</strong>, write an extension method on the interface.</em></li>\r\n<li><em>Write extension methods on <strong>ModuleCatalog</strong>. If you need additional functionality, but only in places where you use <strong>ModuleCatalog</strong>, write an extension method on the concrete type.</em></li>\r\n</ul>\r\n<p><br />Hence, I believe you could created a <strong>CustomModuleCatalog </strong>class according to the requirements of your scenario. In which, you could derive from the default <strong>ModuleCatalog </strong>class, and for example override the <strong>Validate</strong>() method of this class, changing how you want the validation to be done, for example like in the following code snippet:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> Validate()\r\n        {\r\n            <span style=\"color: blue;\">this</span>.ValidateUniqueModules();\r\n            <span style=\"color: blue;\">this</span>.ValidateDependencyGraph();\r\n            <span style=\"color: blue;\">this</span>.ValidateCrossGroupDependencies();\r\n\r\n            <span style=\"color: green;\">//I Commented this line as an example to remove the aforementioned validation</span>\r\n            <span style=\"color: green;\">//  this.ValidateDependenciesInitializationMode();</span>\r\n\r\n            <span style=\"color: blue;\">this</span>.Validated = <span style=\"color: blue;\">true</span>;\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Then, once you have your <strong>CustomModuleCatalog </strong>you can override the&nbsp;<strong>CreateModuleCatalog </strong>method in your bootstrapper in order to create your own module catalog class,for example like this:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> IModuleCatalog CreateModuleCatalog()\r\n        {\r\n         <span style=\"color: blue;\">return</span>  CustomModuleCatalog.CreateFromXaml(<span style=\"color: blue;\">new</span> Uri(<span style=\"color: #a31515;\">\"/Prism.Workshop.Shell;component/ModulesCatalog.xaml\"</span>, UriKind.Relative));\r\n        }\r\n\r\n</pre>\r\n</div>\r\n</p>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a>ï»¿</p>",
    "PostedDate": "2012-03-29T07:08:50.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "817201",
    "ThreadId": "350349",
    "Html": "<p>What an awsome answer. Thank you vey much.</p>\r\n<p>Best regards</p>\r\n<p>John.</p>",
    "PostedDate": "2012-03-29T07:36:17.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]