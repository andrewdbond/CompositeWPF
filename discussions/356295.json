[
  {
    "Id": "838156",
    "ThreadId": "356295",
    "Html": "<p>This is using Silverlight 5.</p>\n<p>This is a bit of a long shot but, we're seeing some whacky differences between our development environments (Visual Studio 2010 sp1) and our integration test servers (Server 2008 r2).</p>\n<p>Currently we've had at least 2&nbsp;occurrences&nbsp;where everything runs fine in dev, but there are runtime errors on the test server. &nbsp;99% of the time our deployments to our test server have been working fine (for months) and we use it regularly for client review/acceptance  testing.</p>\n<p>In one case we had to set IsKeepAlive to true when subscribing to events.</p>\n<p>In Dev, if we didn't, the app still ran fine. &nbsp;No errors and everything worked correctly. &nbsp;There were some cases before this where even in dev we would see run time errors when IsKeepAlive was not set to true so we started always setting IsKeepAlive to true.  &nbsp;But in this case, in dev it worked, only on the test server did it kill the app at runtime. &nbsp;This was a nightmare to track down as it would show as simply as a top level object composition failure. &nbsp;The event subscription was many Imports deep. &nbsp;Once we set  the one value of IsKeepAlive on the one event things were fine again. &nbsp;And yes, we have hundreds of other events (all set to IsKeepAlive = true for Silverlight).</p>\n<p>Yesterday and today I've been facing a similar problem where it runs fine in Dev but gets run-time composition errors on the test server.</p>\n<p>I'm currently debugging it so I have no idea what the problem will be this time.</p>\n<p>However, my question here is what suggestions does anyone have that can help me make sure my development environment matches my server environment so I can debug and solve these problems in development, not after promoting to our test servers.</p>\n<p>My biggest issue is the only way I can debug the test servers is to make code changes (usually commenting out Imports in one file at a time) then building the solution, deploying to the test server, running it, waiting for failure, then reviewing the log  files.</p>\n<p>This is a horrible way to try and solve a problem.</p>\n<p>All suggestions are welcome from trying to fix the environments to better ways to debug on a server.</p>\n<p>Cheers</p>",
    "PostedDate": "2012-05-18T07:58:36.393-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "838181",
    "ThreadId": "356295",
    "Html": "<p>So at this point it looks like this one line is the problem:</p>\r\n<p>[Import] &nbsp;&nbsp;<br />private IEventManager eventManager { get; set; }</p>\r\n<p>As you can see, someone coded this as a private property.</p>\r\n<p>When I change it to a public property there are no activation errors.</p>\r\n<p>My problem with this is that in dev, it doesn't matter. &nbsp;I can leave it as a private property and I get no activation errors from MEF/Prism and the entire application works just fine.</p>\r\n<p>Only when I publish this to our test server does this turn into an activation error when trying to compose the view model to the view.</p>\r\n<p>We have 2 sets of test servers which are set up quite differently. &nbsp;The application has been working just fine on both until this error popped up (we've been making ongoing code changes so I can't tell for sure at this point when this might have changed).</p>\r\n<p>That private property breaks the app on both sets of servers.</p>\r\n<p>Any insight out there as to why this doesn't cause a problem in dev? &nbsp;I really wish it did :)</p>",
    "PostedDate": "2012-05-18T08:49:38.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "838241",
    "ThreadId": "356295",
    "Html": "<p>Hi,</p>\r\n<p>Based on your description, it seems that this problem is related to the environment of the testing servers rather than <strong>Prism </strong>or <strong>MEF</strong>. So far we haven't been notified of any behavior similar to the one you are describing.</p>\r\n<p>As a starting point you could check if your <strong>Silverlight </strong>application is running as a <strong>full trusted application</strong> or<strong> medium/partial trusted application</strong> in your test servers. For example, this can cause problems when <strong>MEF </strong>tries to <em><strong>import</strong></em> an instance into a <strong>private </strong>property / member like the <strong>eventManager </strong>property you mentioned above. This is described in the <strong>MEF </strong>programing guide:</p>\r\n<ul>\r\n<li><a href=\"http://mef.codeplex.com/wikipage?title=Declaring%20Imports&amp;referringTitle=Guide\">Declaring Imports</a></li>\r\n</ul>\r\n<p>If this is not the case, you could also check if the development and testing environments are using the same versions and settings of the <strong>.NET Framework, Silverlight, Prism, MEF</strong> and any other library / functionality you might be using. Also, I believe you might find the following chapter of the <strong>Prism </strong>documentation useful when moving a <strong>Prism </strong>application for development to production / testing:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430856%28v=pandp.40%29\">Chapter 11 - Deploying Prism Applications</a></li>\r\n</ul>\r\n<p>I hope this helps.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-05-18T11:58:30.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]