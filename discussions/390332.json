[
  {
    "Id": "895708",
    "ThreadId": "390332",
    "Html": "\r\n<p>I am following the&nbsp;<em>'Stock Trader RI'</em>&nbsp;example by the Prism team, but it does not address this exactly :</p>\r\n<p>I have a&nbsp;<strong><em>Shell</em></strong>&nbsp;with a&nbsp;<strong><em>Main Region</em></strong>&nbsp;in it.</p>\r\n<p>In this shell I have some filter fields and a grid.</p>\r\n<p>When I press on a button - I would like to load a screen that allows me to change the filters,</p>\r\n<p>and then press&nbsp;<em>'Save'</em>. This would then call a service to update the fields, and close the pop-up.</p>\r\n<p>Here is an illustration of the 'Shell' before pressing the button (left) and after (right) :</p>\r\n<p><a rel=\"nofollow\" href=\"http://s7.postimage.org/d245q0j2h/This_To_This.png\">Illustration :</a></p>\r\n<p><img src=\"http://s7.postimage.org/d245q0j2h/This_To_This.png\" alt=\"Illustration : \"></p>\r\n<p>Problems are :</p>\r\n<ol>\r\n<li>The 'Stock Trader RI' sample app only uses a modaless dialog popup. I need a&nbsp;<strong>MODAL</strong>&nbsp;pop-up (background will continue to refresh, but user will not have access to it as long as pop-up is active).\r\n</li><li>Need to have Silverlight-like effect when pop-up shows, meaning - 'Shell' needs to appear 'disabled' (like a gray mask over it).\r\n</li><li>Pop-up window should have no 'X' button and no 'minimize' or 'maximize' buttons. The pop-up window should be simply a rectangle with curved-corners.\r\n</li><li>I don't think I can use a 'Notification Window' or a 'Confirmation Window' because I cannot put inside them whatever I want. This is an example with 2 fields, but the pop-up might be much more complex with tabs, and a lot of information shown to the user.\r\n</li></ol>\r\n<p>So how do I show a modal pop-up from my &quot;WPF&#43;PRISM&quot; Shell-View-Model once the 'Edit' button is pressed ? (Meaning, once the 'EditCommand' is executed...)</p>\r\n",
    "PostedDate": "2012-08-05T05:10:26.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "896190",
    "ThreadId": "390332",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I believe you could benefit from using <strong>Interaction Requests</strong> to achieve this kind of scenarios. Take into account that, different triggers and actions can be defined to support custom interaction mechanisms. By default\r\n<strong>Prism </strong>only provides the <strong>InteractionRequestTrigger </strong>\r\nand <strong>PopupChildWindowAction </strong>implementations that can be used as a basis for the development of your own triggers and actions, this way you could create your own implementation to show your custom popup views.</p>\r\n<p>For example, you could check the custom <strong>TriggerAction </strong>implementation provided by Karl Shifflett in his\r\n<a href=\"http://karlshifflett.wordpress.com/2010/11/07/in-the-box-ndash-mvvm-training/\">\r\nIn the Box - MVVM Training</a> (MVVM Scenarios section), which allows showing an <strong>\r\noverlay UI dialog</strong> for notifications. In my opinion this could be an useful starting point to achieve the scenario you mentioned.</p>\r\n<p>Take into account that when raising an interaction request the context parameter passed will be set as the data context of the view displayed, and once the popup is closed, this context is passed back to the view model, along with any updated values, via\r\n the callback method. This could be useful to send and receive information from your pop up views.</p>\r\n<p>For more information about the use of <strong>Interaction Requests</strong> you could check the following section of the\r\n<strong>Prism </strong>documentation at <strong>MSDN</strong>:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405494%28v=pandp.40%29.aspx#sec12\">Chapter 6: Advanced MVVM Scenarios,Using Interaction Request Objects</a>\r\n</li></ul>\r\n<p>Also, for additional examples using<strong> Interaction Requests</strong> and custom\r\n<strong>TriggerAction </strong>implementations in <strong>WPF</strong>, I believe you could find the following blog post by Damian Cherubini interesting:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.southworks.net/dcherubini/2012/05/24/popupwindowaction-using-custom-views-instead-of-windows-in-wpf-and-prism/\">PopupWindowAction: using custom views instead of windows in WPF and Prism</a>\r\n</li></ul>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br>\r\nhttp://blogs.southworks.net/aadami</a></p>\r\n",
    "PostedDate": "2012-08-06T12:02:40.493-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]