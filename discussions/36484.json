[
  {
    "Id": "121014",
    "ThreadId": "36484",
    "Html": "I have a module were I show a new window. How do I get hold of the Shell instance to set the corresponding Window.Owner property?\r\n",
    "PostedDate": "2008-09-25T10:10:57.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121136",
    "ThreadId": "36484",
    "Html": "I would&nbsp;use the following 4 steps:<br>\r\n<br>\r\n<strong>1.&nbsp;&nbsp;create an interface in one of my infrastructure&nbsp;interface libraries<br>\r\n<br>\r\n</strong>public interface IShell {}<br>\r\n<br>\r\n<strong>2. Update my Shell to implement the interface<br>\r\n<br>\r\n</strong>public partial class Shell : Window, IShell<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; public Shell()<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\n<strong>3. Update my&nbsp;BootStrapper.cs to resolve the interface<br>\r\n<br>\r\n</strong>protected override DependencyObject CreateShell()<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; Container.RegisterType&lt;IShell, Shell&gt;();<br>\r\n&nbsp;&nbsp;&nbsp; Shell shell = (Shell)Container.Resolve&lt;IShell&gt;();<br>\r\n&nbsp;&nbsp;&nbsp; shell.Show();<br>\r\n&nbsp;&nbsp;&nbsp; return shell;<br>\r\n}<br>\r\n<br>\r\n<strong>4.&nbsp; From the applicable module resolve and cast to get my Window reference<br>\r\n<br>\r\n</strong>[Dependency]<br>\r\npublic IShell Shell { get; set; }<br>\r\n<br>\r\npublic void Initialize()<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; Window shell = (Window)Shell;<br>\r\n&nbsp;&nbsp;&nbsp; ...<br>\r\n&nbsp;&nbsp;&nbsp; ...<br>\r\n}\r\n",
    "PostedDate": "2008-09-26T04:27:10.453-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121148",
    "ThreadId": "36484",
    "Html": "Thankx BillKrat. Your steps are well document and I have implemented it (I just learned a lot about Dependency Property!).<br>\r\n<br>\r\nI do get the shell instance, but when I do the following statement<br>\r\n<span style=\"color:#008000;font-size:13px\"><span style=\"color:#008000;font-size:13px\">\r\n<p>view.Owner = (Window)this.Shell;</p>\r\n</span></span>it crashes with the following message:<br>\r\n<br>\r\n&quot;Cannot set Owner property to a Window that has not been shown previously&quot;<br>\r\n<br>\r\nThe Window is definitly there since I use a MenuItem, which then uses an Event to call the function.<br>\r\n(The code where the&nbsp;view.Owner = (Window)this.Shell; is within the EventHandler.)<br>\r\nCould that be the reason?\r\n",
    "PostedDate": "2008-09-26T05:49:32.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121154",
    "ThreadId": "36484",
    "Html": "It is working now. In step 3 above, I change the following<br>\r\nfrom<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;Container.RegisterType&lt;IShell, Shell&gt;();<br>\r\nto<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;Container.RegisterType&lt;IShell, Shell&gt;(<strong>new ContainerControlledLifetimeManager()</strong>);<br>\r\n<br>\r\nThankx, again!\r\n",
    "PostedDate": "2008-09-26T06:38:54.03-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121239",
    "ThreadId": "36484",
    "Html": "Right, that should do the trick.<br>\r\nBut if you want to further abstract where you are showing your views, you could use a region adapter for displaying the views that are in a region in separate windows.<br>\r\nIgnacio Baumann has written sample code on how to achieve this here: <a href=\"http://blogs.southworks.net/ibaumann/2008/09/26/windowregionadapter-for-compositewpf-prism/\" rel=bookmark>WindowRegionAdapter for CompositeWPF (Prism)</a><br>\r\n<br>\r\nThis way you add your view as you would do it with any other region.<br>\r\n<br>\r\nJulian Dominguez<br>\r\n<a href=\"http://blogs.southworks.net/jdominguez\">http://blogs.southworks.net/jdominguez</a><br>\r\n",
    "PostedDate": "2008-09-26T13:16:29.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "126268",
    "ThreadId": "36484",
    "Html": "I just learned that one can do the following (where this is a View):<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">public</span></span><span style=\"font-size:13px\"> XxxxxView()\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>InitializeComponent();</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">this</span></span><span style=\"font-size:13px\">.Owner = </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">Application</span></span><span style=\"font-size:13px\">.Current.MainWindow;\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2008-10-20T05:47:56.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]