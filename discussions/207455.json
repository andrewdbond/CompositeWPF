[
  {
    "Id": "424230",
    "ThreadId": "207455",
    "Html": "<p>For a WPF application using Prism and MVVM, what are folks thoughts on handling what really are UI events?</p>\r\n<p>For example, sorting.&nbsp; Should the event handler for sorting be in the code-behind or in the view model?&nbsp; So, we would either have code-behind code that references the view model property or we would have, say, a DelegateCommand in the view model which the view binds to which then leads to updating&nbsp;the property.&nbsp;</p>\r\n<p>In previous MVVM applications, the mandate set from on high (read: the in-house&nbsp;architect) was to have NO code in the code-behind.&nbsp; I have also done apps where there was no such mandate so we did some UI&nbsp;event handling in the code-behind.&nbsp; I realize there is probably not a right answer, but in developing a new WPF Prism app that I am currently working on, I thought I'd get folks opinions.</p>\r\n<p>So, your thoughts?&nbsp;</p>",
    "PostedDate": "2010-03-26T12:25:08.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "424241",
    "ThreadId": "207455",
    "Html": "<p>Hi Gorter</p>\r\n<p>Everything you can do in the code behind can be done with Attached property and DelegateCommand.&nbsp;Note that the&nbsp;MVVM patern&nbsp;doesn't mean zero &quot;code&quot; in the code-behind but less code.</p>\r\n<p>The philosophy of the MVVM is to get benefits&nbsp;from the&nbsp;binding and ensure a better collaboration between the developers and the designers. I've written a lot of viewmodels</p>\r\n<p>in my last project with no code in my code-behing. But it depends on how you feel with MVVM or PM or any other patern.</p>\r\n<p>Try to google a little bit on MVVM. There are a lot of articles and blogs that address this patern.</p>\r\n<p>Good luck</p>",
    "PostedDate": "2010-03-26T13:14:14.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "424247",
    "ThreadId": "207455",
    "Html": "<p>As I stated, I too have done this both ways.&nbsp; I'm just trying gauge other people's opinion on how things SHOULD be done, <span style=\"text-decoration:underline\">in their opinion</span>.&nbsp; I've read tons of articles on MVVM/PM, but I still don't see much consistency for using the code-behind or not.&nbsp; It's always the developers choice, etc.&nbsp;&nbsp; I just want to hear about other developers opinions.&nbsp;</p>",
    "PostedDate": "2010-03-26T13:32:25.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "424326",
    "ThreadId": "207455",
    "Html": "<p>My opinion: when using MVVM then I aim for no code-behind. BUT if I need to have a little, I wont stress about it :).</p>\r\n<p>I am developing an app that is targeting SL and Windows Mobile. There are&nbsp;shared VMs but not all events are easily transferred between them and become&nbsp;platform dependent and therefore live in the code-behind files (although I have also used platfrorm specific partial classes to handle some scenarios).</p>\r\n<p>*shrug* like most things it's what works that counts :)</p>\r\n<p>Cheers</p>\r\n<p>&nbsp;</p>\r\n<p>Mark</p>",
    "PostedDate": "2010-03-26T18:21:36.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]