[
  {
    "Id": "123784",
    "ThreadId": "37316",
    "Html": "I'm new to most of this, but i've got really far with this guidance. <br>\r\n<br>\r\nHas anyone got any good ideas about implementing undo / redo? <br>\r\n<br>\r\nMy prototype has one data model, with five presenter / view pairs corresponding to five regions. I'm looking at delegate commands in the presenters which are executed by the xaml views. This is fine for UI only interactions, but sometimes I want to effect the data back in the data model.<br>\r\n<br>\r\nSo i am intending to use Composite commands, like in the RI. The presenters will add their commands to these composite commands. The xaml views will refer to these composite commands.&nbsp; Then i'm guessing that i will need a undo / redo controller of some sort that will add it's own delegate commands to these composite commands. This controller will maintain a stack of commands and do/undo/redo them against the model.<br>\r\n<br>\r\nAnyone got any helpful advice?<br>\r\n<br>\r\nTIA<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-10-08T08:51:07.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152381",
    "ThreadId": "37316",
    "Html": "I was getting to a point in my application where I'm starting to think of my strategy for undo / redo.<br>\r\n<br>\r\nI was thinking it would make sense to subclass the DelegateCommand and / or RoutedUICommand and add an &quot;undo&quot; method, and use a &quot;command manager&quot; class to manage the stack of commands.<br>\r\n<br>\r\nBut then I was thinking of RoutedUICommands that are bound to built-in objects (such as the RichTextBox builtin command binding for the Copy / Cut / Paste / Delete, etc commands)<br>\r\n<br>\r\nDoes anyone have any thoughts on coming up with an architecture to support undo / redo?<br>\r\n<br>\r\nThanks,<br>\r\n<br>\r\nJeff\r\n",
    "PostedDate": "2009-01-29T18:22:25.9-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]