[
  {
    "Id": "234713",
    "ThreadId": "68980",
    "Html": "<p>Hi,</p>\r\n<p>I'm developing an application, using Silverlight Navigation Framework, the MVVM pattern, and some features provided by Prism (commands).</p>\r\n<p>In order ViewModels to communicate each other, I'm using Prism Event Aggregator so, each time I want to &quot;exchange&quot; parameters between methods belonged to different ViewModel or &quot;inform&quot; that an event is occured, I publish/subscribe an event. Is this a right approach to the problem?</p>\r\n<p>Moreover, my application is composed by about 90 Page, and the communication between the ViewModels of these pages is not very hight, because all these Pages exchange data (throught WCF services) with the model on the server. The problem is that I have very often popup and wizard that are opened in these page. So, the communication is very high between the view models of the Page and the ChildWindow. In this case, is the right approach to use eventAggregator for this type of communication? I have read that the right pattern is the mediator one. The Event Aggregator implement this pattern?</p>\r\n<p>Are there other features of Prism or other solution that I can access in order to make this communication simpler?</p>\r\n<p>Thank you very much</p>",
    "PostedDate": "2009-09-15T06:42:39.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "234733",
    "ThreadId": "68980",
    "Html": "<p>I find that sharing the View Model simplifies life greatly, particularly when working with WCF Services where the various views are sharing the data, e.g., Summary and Detail information.&nbsp;&nbsp;&nbsp;Note: When I have multiple views sharing a common View Model (concern) I'll register&nbsp;it as a singleton.</p>",
    "PostedDate": "2009-09-15T07:41:31.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]