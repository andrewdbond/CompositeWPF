[
  {
    "Id": "681767",
    "ThreadId": "275240",
    "Html": "\r\n<p>Hi.</p>\r\n<p>I'm trying to implement the interface IPartImportsSatisfiedNotification but unfortunately it does not work. This bug I have only the prism. I can't understand why this is happening.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> App : Application, IPartImportsSatisfiedNotification\r\n{\r\n    [Import]\r\n    <span style=\"color:blue\">public</span> IPlugin plugin { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n    <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnStartup(StartupEventArgs e)\r\n    {\r\n        <span style=\"color:blue\">base</span>.OnStartup(e);\r\n        <span style=\"color:blue\">var</span> bootstrapper = <span style=\"color:blue\">new</span> Bootstrapper();\r\n        bootstrapper.Run();\r\n    }\r\n\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> OnImportsSatisfied() <span style=\"color:green\">// This code is not called</span>\r\n    {\r\n        <span style=\"color:blue\">var</span> x = plugin;\r\n    }\r\n}\r\n<a href=\"https://skydrive.live.com/?cid=4e1f0617c9aaf89e&permissionsChanged=1&id=4E1F0617C9AAF89E!120#\"><br>Test Application</a>\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2011-10-09T03:59:55.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "682713",
    "ThreadId": "275240",
    "Html": "<p>Hi,</p>\r\n<p>The <strong>Application </strong>class <em>\"Encapsulates a Windows Presentation Foundation (WPF) application.\"</em>, and it is created implicitly when you start a WPF application, in case you define it using markup, or markup and code-behind (which is the case when using the Silverlight Application template in Visual Studio 2010).</p>\r\n<p>Your instance of the <strong>App</strong> class (which inherits from <strong>Application</strong>) is treated as a singleton, holded by the <strong>Application.Current</strong> static property, and this is done, as previously mentioned, in an implicit manner, before the creation of the <strong>MEF </strong>container (because it's the first thing done when you start your application).</p>\r\n<p>Therefore, based on my understanding, the container won't instantiate this class by default, and thus it won't be able to satisfy imports in it. Even if you decorate your <strong>App </strong>class with the <strong>Export</strong> attribute,  the instance that is implicitly generated on application start-up won't be composed by the container.</p>\r\n<p>So, in order to workaround this issue you're experiencing, there are multiple alternatives:</p>\r\n<ul>\r\n<li>You could compose the already existing instance of the <strong>App </strong>class into the container (which in Silverlight is done through the <strong><a href=\"http://msdn.microsoft.com/en-us/library/ff382873%28v=vs.95%29.aspx\">CompositionInitializer.SatisfyImports</a></strong> method). However, take into account that in WPF there is no <a href=\"http://msdn.microsoft.com/en-us/library/ff382766%28v=VS.95%29.aspx\"><strong>CompositionInitializer</strong></a> class. You might find this <a href=\"http://reedcopsey.com/2010/03/26/mef-compositioninitializer-for-wpf/\">blog post</a> by Reed Copsey Jr. useful, as it proposes a way to have something similar in WPF.</li>\r\n<li>You could manage yourself the creation of the App class. To this regard, you should create and initialize the <strong>MEF </strong>container before creating the App class, which is not the default scenario in Prism, so you might have to make some modifications to the Prism Library (especially in the bootstrapper class).</li>\r\n<li>You could obtain a reference to the component you need through the <strong>ServiceLocator</strong>, which does not need that your class is composed by the bootstrapper in order to use it. You can find more information about the service locator in the following <a href=\"http://msdn.microsoft.com/en-us/library/ff921140(v=PandP.40).aspx#sec10\">link</a> of the Prism documentation.</li>\r\n<li>In case it's possible, you could place your import on other components (for example, a service or controller instantiated by the Bootstrapper, or in the Shell), which is in my opinion a better design decision.</li>\r\n</ul>\r\n<p>I hope you find this helpful.</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-10-11T10:59:50.337-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]