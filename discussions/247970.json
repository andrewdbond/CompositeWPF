[
  {
    "Id": "573737",
    "ThreadId": "247970",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I use the Stocktrader RI RegionPopupBehavior technique to implement a &quot;popup region&quot; in my application to open several views in a new window.&nbsp;</p>\r\n<p>This works so far, but I wanted the new opened window to lock the main region behind it, so I wanted a\r\n<strong>modal window</strong> instead a normal window. I changed the Show() method in WindowWrapper.cs to call\r\n<strong>this.window.ShowDialog() </strong>instead of this.window.Show(), which brought the required functionality. Works as well, but with one drawback: Doing so, I am not able any more to publish events to the new window using EventAggregator. I have the following\r\n call:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>regionManager.RequestNavigate(RegionNames.PopupRegion, <span style=\"color:blue\">new</span> Uri(<span style=\"color:#a31515\">&quot;/TestView&quot;</span>, UriKind.Relative));           \r\n<span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;DossierDocumentOpenEvent&gt;().Publish(document);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>In the TestView constructor, I subscribte to the Event, but using a modal window (ShowDialog), the event is not published until the modal window is closed. So code execution is halted on regionManager.RequestNavigate till the window is closed.&nbsp;</p>\r\n<p>Any guess, how to solve this?&nbsp;<br>\r\nIs it possible to use a modal window with working EventAggregation?&nbsp;</p>\r\n<p>Best regards</p>\r\n<p>Andreas</p>\r\n",
    "PostedDate": "2011-03-01T02:33:17.257-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "573902",
    "ThreadId": "247970",
    "Html": "<p>Hi Andreas,</p>\r\n<p>Since the behaviour of the Modal Window is synchronous, the execution is halted until you close the window. One possibility would be to fire the event before calling the <strong>RequestNavigate </strong>method, or in the <strong>OnNavigatedFrom </strong>method of the view that is in place before calling the modal window.</p>\r\n<p>Other than that, there are no known issues with Event Aggregation when using modal windows. It's possible also to publish events from within the modal window.</p>\r\n<p>You might also find the following blog post by Tim Heuer useful:<a id=\"viewpost_ascx_TitleUrl\" class=\"title\" title=\"Title of this entry.\" href=\"http://timheuer.com/blog/archive/2009/05/10/silverlight-childwindow-non-modal-refactor.aspx\"></a></p>\r\n<p><a id=\"viewpost_ascx_TitleUrl\" title=\"Title of this entry.\" href=\"http://timheuer.com/blog/archive/2009/05/10/silverlight-childwindow-non-modal-refactor.aspx\">Refactoring Silverlight ChildWindow for a non-modal use</a></p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-01T08:39:57.3-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "622716",
    "ThreadId": "247970",
    "Html": "<p>Andreas,</p>\r\n<p>I feel your pain. &nbsp;I had similar problems with dialogs in our WPF - MVVM - PRISM app. &nbsp;As Guido said, the ShowDialog() method is synchronous. &nbsp;This unfortunately has the unwanted behavior of blocking the prism navigation pipeline. &nbsp;When I added a ShowDialog method to the WindowWrapper class, the OnNavigatedTo method of the INavigationAware interface that was implemented in our view models didn't get called until the dialog was closed. &nbsp;The view models were relying on the OnNavigatedTo methods to get called for retrieving data from the navigation context. &nbsp;I found a way using some Win32 dll calls to create a non-blocking modal window, but had a few issues with the behavior of nested dialogs. &nbsp; In the end I called the BeginInvoke method on the dispatcher to call the show dialog method. &nbsp; &nbsp;So below are my two methods in the WindowWrapper class one for show as non-modal and one for showing a modal dialog. &nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div style=\"color: black; background-color: white;\"><pre>��<span style=\"color: gray;\">///</span><span style=\"color: green;\">�&lt;summary&gt;</span>\r\n��������<span style=\"color: gray;\">///</span><span style=\"color: green;\">�Opens�the�Window.</span>\r\n��������<span style=\"color: gray;\">///</span><span style=\"color: green;\">�&lt;/summary&gt;</span>\r\n��������<span style=\"color: blue;\">public</span>�<span style=\"color: blue;\">void</span>�Show()\r\n��������{\r\n������������<span style=\"color: blue;\">this</span>.window.Show();\r\n��������}\r\n \r\n��������<span style=\"color: gray;\">///</span><span style=\"color: green;\">�&lt;summary&gt;</span>\r\n��������<span style=\"color: gray;\">///</span><span style=\"color: green;\">�Opens�the�Window�as�a�modal�dialog�window</span>\r\n��������<span style=\"color: gray;\">///</span><span style=\"color: green;\">�&lt;/summary&gt;</span>\r\n��������<span style=\"color: blue;\">public</span>�<span style=\"color: blue;\">void</span>�ShowDialog()\r\n��������{\r\n \r\n������������<span style=\"color: blue;\">this</span>.window.Dispatcher.BeginInvoke(<span style=\"color: blue;\">new</span>�Action(()�=&gt;\r\n����������������{\r\n��������������������<span style=\"color: blue;\">this</span>.window.ShowDialog();\r\n����������������}));\r\n��������}\r\n</pre>\r\n</div>\r\n</pre>\r\n<p>Good luck, and I hope that helps you.</p>\r\n<p>&nbsp;</p>\r\n<p>Kind Regards,</p>\r\n<p>Bernie</p>",
    "PostedDate": "2011-06-03T12:05:22.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]