[
  {
    "Id": "927445",
    "ThreadId": "399608",
    "Html": "\r\n<p>Hi.</p>\r\n<p>I am a beginner for both <strong>Prism </strong>and <strong>Web API</strong>. And interested in both. I want to know that is it possible to use both of them together.</p>\r\n<p>If possible, please give me some samples.</p>\r\n<p>Thanks.</p>\r\n",
    "PostedDate": "2012-10-16T08:02:13.687-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "927568",
    "ThreadId": "399608",
    "Html": "<p>Hi,</p>\r\n<p>I don't have any experience using <strong>Web API</strong>, but in my opinion, as a <strong>WPF</strong> application can consume a <strong>Web API HTTP Service</strong> you should be able to use it also in a <strong>WPF Prism</strong> application.</p>\r\n<p>As far as I know, the only differences you should take into account when using it in a <strong>Prism </strong>application, compared to a pure <strong>WPF </strong>application, are where to initialize the <strong>HttpClient </strong>used to reach the service and how to consume it in different modules while maintaining a loosely coupled pattern.</p>\r\n<p>Based on my understanding, I believe you could initialize the <strong>HttpClient </strong>in the main project (for example in the bootstrapper) and in case you want to consume it in different modules, you could wrap it in a <em><strong>shared service</strong></em> that could be used by the different parts of your application to reach the <strong>HTTP Service</strong>. Then, you could also register the aforementioned <em><strong>shared service</strong></em> in the <em><strong>dependency injection container</strong></em> of your application, so that it could be later injected (for example, when using constructor injection or property injection) in the views, view models, etc, of any module.</p>\r\n<p>So far, I am unaware of the existence of a sample that portrays a <strong>Prism </strong>application consuming <strong>Web API HTTP Services</strong>. However, as a starting point, I believe you could find the following <strong>ASP.NET Hands on Lab</strong> useful as it details how to create a basic <strong>WPF </strong>application that interacts with a <strong>HTTP Service</strong>:</p>\r\n<ul>\r\n<li><a href=\"http://www.asp.net/web-api/overview\">ASP.NET Web API - Calling a Web API From a WPF Application (C#)</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-10-16T10:34:29.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928171",
    "ThreadId": "399608",
    "Html": "<p>Hi Damian,</p>\r\n<p>Thank you for your valued feedback!</p>",
    "PostedDate": "2012-10-17T10:08:09.963-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928539",
    "ThreadId": "399608",
    "Html": "<p>. . . And, Is that all?</p>\r\n<p>No any response from the developers of Prism?</p>\r\n<p>I need the support from the Prism developers.</p>\r\n<p>Waiting for your reply...</p>",
    "PostedDate": "2012-10-17T22:44:09.863-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928775",
    "ThreadId": "399608",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding, as Damian mentioned <strong>Prism </strong>should not introduce any difference from the approach mentioned in this <a href=\"http://www.asp.net/web-api/overview/web-api-clients/calling-a-web-api-from-a-wpf-application\">article</a>.&nbsp;</p>\r\n<p>In <strong>Prism</strong>, you can create and set a new instance of your <strong>HttpClient</strong>, and make further calls in your applications  without problems. This approach could be implemented in any part of your  application.</p>\r\n<p>The only difference you may find when using <strong>Prism</strong>, is that in case you want to share the same <strong>HttpClient </strong>instance, in order to consume it in a loosely coupled component, you may have to implement the logic to pass this instance, for example by benefiting of dependency injection containers or shared services as mentioned above.</p>\r\n<p>Please, let us know if you have any issues when following this approach.</p>\r\n<p>Regards,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-10-18T07:51:26.503-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928936",
    "ThreadId": "399608",
    "Html": "<p>Hi Adami,</p>\r\n<p>I got the Web API part. Its Ok now. Then I will try the Prism part.</p>\r\n<p>Thank You!</p>",
    "PostedDate": "2012-10-18T11:48:06.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]