[
  {
    "Id": "152742",
    "ThreadId": "45763",
    "Html": "I have a module that displays an explorer treeview. I have 3 instances of the module in my window. I pubish a CompositeWpfEvent with a LocationItem class when an item is selected. How can a subscriber distinguish between the three?<br>\r\n<br>\r\nI think I know the answer but I want to make sure there isn't another way. My guess is that I have to declare some sort of id on the LocationItem, when the instance of the module is created I have to set that id on the viewmodel and when the event is published I have to publish the LocationItem with the id from the viewmodel. My subscriber will have to filter on that item. <br>\r\n",
    "PostedDate": "2009-01-30T17:19:44.477-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "153448",
    "ThreadId": "45763",
    "Html": "<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">You are right about you will need an <b>ID</b> in your LocationItem class to be able to filter the event before the registered handler is called. The filter could be supplied as a lambda expression, as shown in the following bold code:</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">FundAddedEvent fundAddedEvent = eventAggregator.GetEvent&lt;FundAddedEvent&gt;();</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">fundAddedEvent.Subscribe(FundAddedEventHandler, ThreadOption.UIThread, false, <b>fundOrder =&gt; fundOrder.CustomerId == _customerId</b>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">                                                                                 </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">//...</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">public void FundAddedEventHandler(FundOrder fundOrder)</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 1in\"><span style=\"font-size:10pt;font-family:'courier new'\">//...</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Perhaps you could find useful the <b>EventAggregation Quickstart</b>. This sample application uses a filter expression to define a condition that the event's argument must meet for the event handler to be invoked.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><b><span style=\"font-family:calibri\"> </span></b></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"><b>Note</b>: I assume that you are referring to 3 instances of a view that belongs to the same module, since the module is initialized only once.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Mariano Converti </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><a href=\"http://blogs.southworks.net/mconverti\"><span style=\"font-family:calibri\">http://blogs.southworks.net/mconverti</span></a> </p>\r\n",
    "PostedDate": "2009-02-02T12:04:14.02-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]