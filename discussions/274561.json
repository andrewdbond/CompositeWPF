[
  {
    "Id": "679232",
    "ThreadId": "274561",
    "Html": "\r\n<p>Hi am working on Silverlight application by using Prism Framwor.</p>\r\n<p>I got confused in implementing Commanding in my application.</p>\r\n<p>There is a <strong>ICommand </strong>interface in <strong>System.Windows.Input\r\n</strong>namespace</p>\r\n<p><span style=\"color:#000000\">as well as there is <strong>DelegateCommand </strong>\r\nin <strong>Microsoft.Practices.Prism.Commands </strong>namespace</span></p>\r\n<p><span style=\"color:#000000\">which&nbsp; one i got to use in my application.</span></p>\r\n",
    "PostedDate": "2011-10-02T23:44:03.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "679457",
    "ThreadId": "274561",
    "Html": "<p>Hi,</p>\r\n<p>You could use the <strong>DelegateCommand </strong>class which is the implementation provided by Prism of the <strong> ICommand </strong>interface . This class inherits from the <strong> DelegateCommandBase </strong>class, which implements the <strong>ICommand </strong>interface.</p>\r\n<p>The  ICommand interface defines an <strong>Execute </strong>method, which encapsulates the operation  itself, and a <strong>CanExecute </strong>method, which indicates whether the command can be  invoked at a particular time.</p>\r\n<p>You might find more information in the  Prism documentation</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405484(v=PandP.40).aspx#sec10\">Chapter 5 Implementing the MVVM Pattern: Commands</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx#sec1\">Chapter 9 Communicating  Between Loosely Coupled Components: Commanding</a></li>\r\n</ul>\r\n<p>I hope you find this useful.</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-10-03T11:50:53.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]