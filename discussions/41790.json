[
  {
    "Id": "138673",
    "ThreadId": "41790",
    "Html": "The objective: <div>Use authorization logic from an existing project to secure various aspects of all views in all modules of my new Composite WPF application. <div><br></div><div>My solution: </div><div>Use ASP.NET application services to leverage existing membership and roles, create a GenericPrincipal and GenericIdentity and register it for use across all threads created in the application domain using AppDomain.CurrentDomain.SetThreadPrincipal(principal);</div><div><br></div><div>My problem: </div><div>When doing an IsInRole check on a supporting view, Thread.CurrentPrincipal is a blank, new GenericPrincipal with an empty unauthenticated GenericIdentity. It appears new threads aren't being created with the principal registered with the AppDomain. </div><div><br></div><div>My question:</div><div>Sup with that, and if this isn't the right way, how should I do it? I could maybe use a static property, but then I lose my code access security.</div></div>",
    "PostedDate": "2008-12-08T10:38:33.107-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138993",
    "ThreadId": "41790",
    "Html": "Inserting a reply to keep this post from falling off. Cross posted to WPF MSDN forum...",
    "PostedDate": "2008-12-09T08:43:14.317-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]