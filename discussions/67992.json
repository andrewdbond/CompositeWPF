[
  {
    "Id": "231166",
    "ThreadId": "67992",
    "Html": "<p>Hi,</p>\r\n<p>I have a custom user control composed by a ChildWindow containing some controls. I manage this Child Window through a ViewModel and I use Prism library in order to implement commanding. With other controls, all works correctly, but with this ChildWindow I have a problem.</p>\r\n<p>&nbsp;I created the custom ChildWindowClosed command (through common files pair: ChildWindowClosed.cs and ChildWIndowClosedBehaviour.cs), then I attached this command to the ChildWindow in this way:</p>\r\n<p>&nbsp;</p>\r\n<pre>&lt;<span>basics:ChildWindow</span><br><span>    xmlns=</span><span>&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span>    xmlns:x=</span><span>&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span>    xmlns:d=</span><span>&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span>    xmlns:mc=</span><span>&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span><br><span>    mc:Ignorable=</span><span>&quot;d&quot;</span><br><span>    xmlns:basics=</span><span>&quot;clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls&quot;</span><br><span>    xmlns:CArtData=</span><span>&quot;clr-namespace:ComponentArt.Silverlight.UI.Data;assembly=ComponentArt.Silverlight.UI.Data&quot;</span><br><span>    xmlns:VM=</span><span>&quot;clr-namespace:BusinessCube.VM&quot;</span><br><span>    xmlns:commands=</span><span>&quot;clr-namespace:BusinessCube.VM.Commands&quot;</span><br><span>    x:Class=</span><span>&quot;BusinessCube.Popup.PopupPDVNew&quot;</span><br>    Title=&quot;&quot;<br>   <br><span>    DataContext=</span><span>&quot;{Binding Path=., Source={StaticResource popupVM}}&quot;</span><br><span>    commands:ChildWindowClosed.Command=</span><span>&quot;{Binding ClosedPopup}&quot;</span><br><span>    commands:ChildWindowClosed.CommandParameter=</span><span>&quot;{Binding RelativeSource={RelativeSource Self}}&quot;</span><br>    &gt; <br><br>   &lt;<span>basics:ChildWindow.Resources</span>&gt;<br>        &lt;<span>VM:PopupVM</span><span> x:Key=</span><span>&quot;popupVM&quot;</span>&gt;&lt;/<span>VM:PopupVM</span>&gt;<br>    &lt;/<span>basics:ChildWindow.Resources</span>&gt;<br><br>...</pre>\r\n&nbsp;\r\n<p>Now, in the view Model, I have:</p>\r\n<p>&nbsp;</p>\r\n<pre><span>public class</span> PopupVM: ViewModelBase<br>{<br>   <span>public</span> DelegateCommand&lt;<span>object</span>&gt; ClosedPopup { <span>get</span>; <span>set</span>; }<br>   <span>public</span> PopupVM()<br>   {<br>     ClosedPopup = <span>new</span> DelegateCommand&lt;<span>object</span>&gt;<br>     (<br>       o =&gt;<br>        {<br>         OnClosedPopup((ChildWindow)o);<br>        },<br>      o =&gt; <span>true</span><br>      );<br>   }<br><br>   <span>public void</span> OnClosedPopup(ChildWindow childWindow)<br>   {<br>     <span>//do something</span><br>   }<br>}</pre>\r\n<p>&nbsp;When I click on the OK button in the childWindow, I set&nbsp; (for now, in the code behind..I have to move also this method in the view model)</p>\r\n<p>&nbsp;<span>this</span>.DialogResult = <span>true</span>;</p>\r\n<p>then the closed event is called (I know this because I tried to attach, for test, an event handler on the childwindow.closed, in the code behind) but the ViewModel is not able to manage it, I mean, the OnClosedPopup is not called.</p>\r\n<p>Some helps?</p>",
    "PostedDate": "2009-09-04T08:28:57.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "231837",
    "ThreadId": "67992",
    "Html": "<p>Hi</p>\r\n<p>I have created a small sample application that executes a command in the <strong>ChildWindow's ViewModel</strong> when it is closed. The attached behavior for the command was created using <a href=\"http://blogs.southworks.net/dschenkelman/2009/08/13/c-code-snippet-to-create-commands-with-attached-behaviors-using-prism/\">this snippet</a>. You can download the sample application from <a href=\"http://cid-09f63fc7ac065e5e.skydrive.live.com/self.aspx/p|0p Samples/ChildWindowSamplewithCommands.zip\">here</a>.</p>\r\n<p>You might consider using the Closing event instead of the Closed event. This will depend on your requirements, but remember that the <strong>Closing</strong> event is fired before the <strong>ChildWindow</strong> is closed, while the <strong>Closed</strong> event is raised after.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p>Damian Schenkelman   <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-09-07T07:30:21.08-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]