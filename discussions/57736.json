[
  {
    "Id": "195194",
    "ThreadId": "57736",
    "Html": "<p>I'm trying to use Prism and the MVVM pattern to develop an application. In my UI, I have a previous and next button defined. For use in a calling web services, I've defined an enum that will tell me the direction I need to traverse. So, in this instance, the buttons map directly to an enum value. The enum definition is very simple and is as follows:</p>\r\n<hr>\r\n<p><span>namespace</span><span> </span><span>CodeExpert</span><span>.</span><span>Book</span><span>.</span><span>Helpers</span><span><br></span><span>{</span><span><br>&nbsp; &nbsp; </span><span>public</span><span> </span><span>enum</span><span> </span><span>BookDirection</span><span> </span><span>{</span><span> </span><span>Previous</span><span> </span><span>=</span><span> </span><span>-</span><span>1</span><span>,</span><span> </span><span>NotSet</span><span> </span><span>=</span><span> </span><span>0</span><span>,</span><span> </span><span>Next</span><span> </span><span>=</span><span> </span><span>1</span><span>,</span><span> </span><span>}</span><span><br></span><span>}</span><span><br></span>\r\n<p>I've defined my command and delegate in my ViewModel and assigned the propery correctly. The relevant code is:</p>\r\n<hr>\r\n<p>&nbsp;&nbsp;&nbsp; public DelegateCommand PreviousNextCommand { get; set; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; public IndexEntriesViewModel(GlobalVariables globalVariable, IndexEntryOperations currentOperator)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp; &nbsp;//a bunch of initialization code.<br>&nbsp;&nbsp;&nbsp; &nbsp;InitializeCommands();<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; void InitializeCommands()<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp; &nbsp;PreviousNextCommand =<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;new DelegateCommand(OnPreviousNextCommandExecute);<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; private void OnPreviousNextCommandExecute(BookDirection parameter)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp; &nbsp;//Code to process based on BookDirection<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<hr>\r\n<p>So, based on this config, I want to pass a BookDirection enum value to the CommandParameter.&nbsp; I can't, however, get the XAML right for this. Here's the XAML I've tried that seems the most correct to me:</p>\r\n<hr>\r\n<p>&lt;UserControl xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; mc:Ignorable=&quot;d&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; x:Class=&quot;CodeExpert.Book.Views.Index&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; d:DesignWidth=&quot;1024&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; d:DesignHeight=&quot;768&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:helpers=&quot;clr-namespace:CodeExpert.Book.Helpers&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:command=&quot;clr-namespace:Microsoft.Practices.Composite.Presentation.Commands;assembly=Microsoft.Practices.Composite.Presentation&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:common=&quot;clr-namespace:System.Windows;assembly=System.Windows.Controls&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:controls=&quot;clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:vsm=&quot;clr-namespace:System.Windows;assembly=System.Windows&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; xmlns:input=&quot;clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input&quot;&gt;<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; &nbsp;&lt;Button x:Name=&quot;ButtonPrevious&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; HorizontalAlignment=&quot;Left&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Margin=&quot;2,1,0,1&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Width=&quot;25&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Content=&quot;&lt;&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Grid.Column=&quot;1&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Grid.Row=&quot;1&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Height=&quot;20&quot;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; command:Click.Command=&quot;{Binding Path=CurrentIndexViewModel.PreviousNextCommand}&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;command:Click.CommandParameter&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&lt;helpers:BookDirection.Previous /&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;/command:Click.CommandParameter&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&lt;/Button&gt;<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; &lt;/UserControl&gt;</p>\r\n<hr>\r\n<p>I get no intellisense for the BookDirection for the enum and get an error at design &amp; compile time saying The type 'BookDirection' does not contain adefinition for 'Previous'.&nbsp; Is there no way to pass that enum, or am I simply missing something?&nbsp; I have it working now by setting the parameter type to `string` instead of `BookDirection`, but then I have to parse text and the code smells. I've done some Google searches and the closest thing I've come to an answer is here - <a href=\"http://stackoverflow.com/questions/359699/passing-an-enum-value-as-command-parameter-from-xaml\">http://stackoverflow.com/questions/359699/passing-an-enum-value-as-command-parameter-from-xaml</a>. Unfortunately, Silverlight doesn't support the x:static binding extension, so I can't use the exact technique described in that answer.</p>\r\n<p>Any help would be much appreciated.<br></p>\r\n</p>\r\n<hr>",
    "PostedDate": "2009-05-28T06:45:14.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "195303",
    "ThreadId": "57736",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Corwin,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">As you said, there is no x:static in Silverlight, which would be the way to go in WPF. Therefore, I thought of a workaround that might suit your scenario:</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">1.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Create a class named <strong>BookDirectionValues</strong>.</span></span></span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">2.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">In that class, create a property for each of the different enum values. Like this:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 34.2pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>public BookDirection Next { get { return BookDirection.Next; } }</span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">3.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">Add a resource to your view that represents the class:<br></span></span><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&lt;UserControl.Resources&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;helpers:BookDirectionValues x:Key=&quot;BookDirectionValues&quot; /&gt;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .</span></p>\r\n<p style=\"text-indent:35.4pt;margin:0cm 0cm 0pt -1.2pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>&lt;/UserControl.Resources&gt;</span></p>\r\n<p style=\"text-indent:-18pt;margin:0cm 0cm 0pt 36pt\"><span style=\"\" lang=EN-US><span style=\"\"><span style=\"font-family:Calibri;font-size:small\">4.</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>Now you can bind you the <strong>enum</strong> values to your command parameter like this:</span><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US></span></span></span></p>\r\n<p style=\"text-indent:16.2pt;margin:0cm 0cm 0pt 18pt\"><span style=\"font-family:'Courier New';font-size:10pt\" lang=EN-US>command:Click.CommandParameter=&quot;{Binding Path=Next, Source={StaticResource BookDirectionValues}}</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Take into account that this might not be the best approach, but I hope it is useful for you.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-family:Calibri;font-size:small\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>",
    "PostedDate": "2009-05-28T10:19:03.22-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]