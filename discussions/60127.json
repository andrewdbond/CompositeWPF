[
  {
    "Id": "203555",
    "ThreadId": "60127",
    "Html": "<p>I'm wondering what the suggested approach is for passing initialization parameters to a module? &nbsp;Eg. if you want the Module's <strong>Initialize </strong>method to react in different ways based on some kind of startup state.</p>\r\n<p>When the<strong> ModuleManager</strong> loads a module, the parameterless<strong> Initialize() </strong>method is invoked, and there doesn't seem to be a formal way to inject starup parameters into the Module.</p>\r\n<p>Should that be passed via a &quot;Shared Service&quot; perhaps? &nbsp;Or is there a better way to do this?</p>\r\n<p>--</p>\r\n<p>Thanks</p>\r\n<p><strong>Phil</strong></p>",
    "PostedDate": "2009-06-19T16:23:13.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204611",
    "ThreadId": "60127",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Phil,</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">One of the possible ways could be, as you mentioned, through a &ldquo;Shared Service&rdquo;. This service, let&rsquo;s call it State of the application, could be <span style=\"color:#1f497d\"><a href=\"http://msdn.microsoft.com/en-us/library/dd458912.aspx\"><span style=\"color:#0000ff\">registered</span></a></span> in the container at startup (probably as a Singleton since the application shares the same state).</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Then you could resolve the State through the container and modify it in different places of your application. Afterwards, you will be able to perform different initializations based on it.<span style=\"color:#1f497d\"> </span></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Remember that you should always keep your application decoupled, so the information kept in the state should not break the decoupling.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"color:#1f497d\" lang=EN-US>&nbsp;</span><span style=\"\" lang=EN-US></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>",
    "PostedDate": "2009-06-23T11:30:31.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204631",
    "ThreadId": "60127",
    "Html": "Great, thanks Damian.<div><br></div><div>That's helpful confirmation of this approach...nice to know I'm not off in the weeds.  Cheers!</div><div><br></div><div><br><br><div>On Tue, Jun 23, 2009 at 11:30 AM, dschenkelman <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex\">   <div> <p>From: dschenkelman</p> <div><p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi Phil,</span></span></span></p>\r\n\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\"> </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">One of the possible ways could be, as you mentioned, through a “Shared Service”. This service, let’s call it State of the application, could be <span style=\"color:#1f497d\"><a href=\"http://msdn.microsoft.com/en-us/library/dd458912.aspx\"><span style=\"color:#0000ff\">registered</span></a></span> in the container at startup (probably as a Singleton since the application shares the same state).</span></span></span></p>\r\n\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Then you could resolve the State through the container and modify it in different places of your application. Afterwards, you will be able to perform different initializations based on it.<span style=\"color:#1f497d\"> </span></span></span></span></p>\r\n\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\"> </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Remember that you should always keep your application decoupled, so the information kept in the state should not break the decoupling.</span></span></span></p>\r\n\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"color:#1f497d\" lang=EN-US> </span><span lang=EN-US></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Please let me know if this helps.</span></span></span></p>\r\n<p><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\"> </span></span></span></p>\r\n<p><span lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Damian Schenkelman</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span lang=EN-US><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"font-family:Calibri;font-size:small\">http://blogs.southworks.net/dschenkelman</span></a></span></p>\r\n</div><div> <div> <p>Read the <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=60127&ANCHOR#Post204611\">full discussion online</a>.</p> <p>To add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com?subject=[CompositeWPF:60127]\">CompositeWPF@discussions.codeplex.com</a>)</p>\r\n <p>To start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com\">CompositeWPF@discussions.codeplex.com</a></p> <p>You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/60127\">unsubscribe</a> on codePlex.com.</p>\r\n <p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at <a href=\"http://codeplex.com\">codeplex.com</a></p> </div> </div></div> </blockquote>\r\n</div><br></div>",
    "PostedDate": "2009-06-23T12:39:05.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]