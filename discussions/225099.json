[
  {
    "Id": "485764",
    "ThreadId": "225099",
    "Html": "<p>Hello,</p>\r\n<p>I'm having a strange problem where one of my modules isn't being initialized if I use Unity to register one of its types. Here's what I think is happening:</p>\r\n<p>I'm using configfile-based Unity configuration.&nbsp;The Module1 assembly is loaded into the AppDomain when Container.LoadConfiguration is called (3rd line of method, below).</p>\r\n<pre style=\"font-family:consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">protected</span>&nbsp;<span style=\"color:blue\">override</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ConfigureContainer()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">base</span>.ConfigureContainer();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Container.RegisterType&lt;<span style=\"color:#2b91af\">IUnityContainer</span>&gt;();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Container.LoadConfiguration();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></pre>\r\n<pre style=\"font-family:consolas\">When the UnityBootstrapper.InitializeModules executes, the module's initialization is passed over because it is seen as already loaded in the AppDomain. That's my theory, anyway.</pre>\r\n<pre style=\"font-family:consolas\">The config file is shown below. Any ideas on what I'm doing wrong, or on a possible workaround?</pre>\r\n<pre style=\"font-family:consolas\"><pre style=\"font-family:consolas\"><span style=\"color:blue\">&lt;?</span><span style=\"color:#a31515\">xml</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">version</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">1.0</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">encoding</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">utf-8</span>&quot;<span style=\"color:blue\">&nbsp;?&gt;</span><br><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">configuration</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">configSections</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">section</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">name</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">unity</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">type</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,&nbsp;Microsoft.Practices.Unity.Configuration</span>&quot;<span style=\"color:blue\">/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">section</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">name</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">modules</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">type</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Microsoft.Practices.Composite.Modularity.ModulesConfigurationSection,&nbsp;Microsoft.Practices.Composite</span>&quot;<span style=\"color:blue\">/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">configSections</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">runtime</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">assemblyBinding</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">xmlns</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">urn:schemas-microsoft-com:asm.v1</span>&quot;<span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">probing</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">privatePath</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">modules</span>&quot;<span style=\"color:blue\">/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">assemblyBinding</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">runtime</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">unity</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">xmlns</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">http://schemas.microsoft.com/practices/2010/unity</span>&quot;<span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">container</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">register</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">type</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">CommonLibrary.ICalculator,&nbsp;CommonLibrary</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">name</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">classic</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">mapTo</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">ClassLibrary1.ClassicCalculator,&nbsp;ClassLibrary1</span>&quot;<span style=\"color:blue\">&nbsp;/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">register</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">type</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">CommonLibrary.ICalculator,&nbsp;CommonLibrary</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">name</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">new</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">mapTo</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">ClassLibrary1.PostmodernCalculator,&nbsp;ClassLibrary1</span>&quot;<span style=\"color:blue\">&nbsp;/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">register</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">type</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">CommonLibrary.IPart,&nbsp;CommonLibrary</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">name</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">MainPart</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">mapTo</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module1.UserControl1,&nbsp;Module1</span>&quot;<span style=\"color:blue\">&gt;&lt;/</span><span style=\"color:#a31515\">register</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">container</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">unity</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">modules</span><span style=\"color:blue\">&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">module</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">assemblyFile</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module1.dll</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">moduleType</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module1.Module1</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">moduleName</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module1</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">startupLoaded</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">true</span>&quot;<span style=\"color:blue\">/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">module</span><span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">assemblyFile</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module2.dll</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">moduleType</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module2.Module2</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">moduleName</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">Module2</span>&quot;<span style=\"color:blue\">&nbsp;</span><span style=\"color:red\">startupLoaded</span><span style=\"color:blue\">=</span>&quot;<span style=\"color:blue\">true</span>&quot;<span style=\"color:blue\">/&gt;</span><br><span style=\"color:blue\">&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">modules</span><span style=\"color:blue\">&gt;</span><br><br><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">configuration</span><span style=\"color:blue\">&gt;</span></pre>\r\nBTW, Module2 is being initialized. I think this is because it isn't being loaded into memory by Unity.</pre>\r\n<pre style=\"font-family:consolas\">Thanks in advance!</pre>",
    "PostedDate": "2010-08-27T10:52:58.883-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "489042",
    "ThreadId": "225099",
    "Html": "<p>Hi,</p>\r\n<p id=f4f867d0-999d-012d-da65-123139182258>I do not know your exact scenario. Anyway, let me share  some ideas that could help you with this scenario:</p>\r\n<ul>\r\n<li>Update the moduletype in your configuration file to use a full assembly name  qualified, as it is shown in bold below:&nbsp; </li>\r\n</ul>\r\n<p id=f4f89bc0-999d-012d-da66-123139182258>&nbsp;&nbsp;&nbsp; &lt;module  assemblyFile=&quot;ModularityWithUnity.Desktop.ModuleF.dll&quot;</p>\r\n<p id=f4f8d580-999d-012d-da67-123139182258><strong>moduleType=&quot;ModularityWithUnity.Desktop.ModuleF,  ModularityWithUnity.Desktop.ModuleF, Version=1.0.0.0, Culture=neutral,  PublicKeyToken=null&quot;</strong>&nbsp;</p>\r\n<p id=f4f91060-999d-012d-da68-123139182258>moduleName=&quot;ModuleF&quot;  startupLoaded=&quot;false&quot;&gt;</p>\r\n<ul>\r\n<li>Try to define the Module1 in your code, it is only for checking if it loaded  with no issues. </li>\r\n<li>How are you verifying that modules are loaded? </li>\r\n<li>When you use unity to resolve, could you resolve types from module1 or  module2 assemblies? </li>\r\n</ul>\r\n<p id=f4f95920-999d-012d-da69-123139182258>If you continue experiencing this  problem, you could share any additional information to clarify this situation.</p>\r\n<p>Please let me know if this helps.</p>\r\n<p id=dcb73a70-943d-012d-58e7-1231391803fb>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-09-03T13:05:53.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "490198",
    "ThreadId": "225099",
    "Html": "<p><span style=\"color:#1f497d;font-size:11pt\">Hi Fernando,</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">Thank you for replying! Unfortunately, the suggestion to use the full assembly name made no difference. I reverted back.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">In response to your bullets:</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">* I&rsquo;m not sure what you are asking.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">* I&rsquo;m setting a breakpoint in the Initialize method of the IModule implementations. The breakpoints never get hit.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">* Yes. However, if I register (via config file) a dependency in Module1, Module1&rsquo;s Initialize won&rsquo;t get called. Same with Module2. As long as I&rsquo;m not registering any dependencies in the config file the modules get initialized. The following will illustrate:</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">NOTE: Module1 looks like this as well; bare-bones.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; public class Module2 : IModule</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private readonly IUnityContainer _container;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Module2(IUnityContainer container)</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _container = container;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// Notifies the module that it has be initialized.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Initialize()</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _container.RegisterType&lt;IWeatherForcaster, WeatherForcaster&gt;();</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; public class Bootstrapper : UnityBootstrapper</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected override DependencyObject CreateShell()</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MainWindow shell = (MainWindow)Container.Resolve(typeof(MainWindow));</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shell.Show();</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return shell;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected override IModuleCatalog GetModuleCatalog()</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new DirectoryModuleCatalog() { ModulePath = @&quot;.\\modules&quot; };</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected override void ConfigureContainer()</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.ConfigureContainer();</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Container.RegisterType&lt;IUnityContainer&gt;();</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Container.LoadConfiguration();</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; }</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;configuration&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&lt;configSections&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;section name=&quot;unity&quot; type=&quot;Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration&quot;/&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;section name=&quot;modules&quot; type=&quot;Microsoft.Practices.Composite.Modularity.ModulesConfigurationSection, Microsoft.Practices.Composite&quot;/&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;/configSections&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;runtime&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;assemblyBinding xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot;&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;probing privatePath=&quot;modules&quot;/&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;/assemblyBinding&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;/runtime&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&lt;unity xmlns=&quot;http://schemas.microsoft.com/practices/2010/unity&quot;&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;container&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;register type=&quot;CommonLibrary.ICalculator, CommonLibrary&quot; name=&quot;classic&quot; mapTo=&quot;ClassLibrary1.ClassicCalculator, ClassLibrary1&quot; /&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;register type=&quot;CommonLibrary.ICalculator, CommonLibrary&quot; name=&quot;new&quot; mapTo=&quot;ClassLibrary1.PostmodernCalculator, ClassLibrary1&quot; /&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; </span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&lt;register type=&quot;CommonLibrary.IPart, CommonLibrary&quot; name=&quot;MainPart&quot; mapTo=&quot;Module1.UserControl1, Module1&quot;&gt;&lt;/register&gt;--&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;register type=&quot;CommonLibrary.IPart, CommonLibrary&quot; name=&quot;MainPart&quot; mapTo=&quot;Module2.UserControl1, Module2&quot;&gt;&lt;/register&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;/container&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;/unity&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&lt;modules&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;module assemblyFile=&quot;Module1.dll&quot; moduleType=&quot;Module1.Module1&quot; moduleName=&quot;Module1&quot; startupLoaded=&quot;true&quot;/&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp; &lt;module assemblyFile=&quot;Module2.dll&quot; moduleType=&quot;Module2.Module2&quot; moduleName=&quot;Module2&quot; startupLoaded=&quot;true&quot;/&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&lt;/modules&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&lt;/configuration&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">As shown, Module1&rsquo;s Initialize method is getting called. However, Module2&rsquo;s Initialize method is not. However, if you change the config file to look like the following then Module2&rsquo;s Initialize method will get called and Module1&rsquo;s will not.</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;register type=&quot;CommonLibrary.IPart, CommonLibrary&quot; name=&quot;MainPart&quot; mapTo=&quot;Module1.UserControl1, Module1&quot;&gt;&lt;/register&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&lt;register type=&quot;CommonLibrary.IPart, CommonLibrary&quot; name=&quot;MainPart&quot; mapTo=&quot;Module2.UserControl1, Module2&quot;&gt;&lt;/register&gt;--&gt;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">I&rsquo;m really not doing anything fancy. I&rsquo;m surprised this is happening. Any other ideas?</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">&nbsp;</span></p>\r\n<p><span style=\"color:#1f497d;font-size:11pt\">Thanks!</span></p>",
    "PostedDate": "2010-09-07T09:13:15.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "497753",
    "ThreadId": "225099",
    "Html": "<p>Hi,</p>\r\n<p>I tried it myself, and found no issues. So, I would like to share with you some ideas that might help to solve your scenario:</p>\r\n<ul>\r\n<li>The unity configuration section looks like the following:</li>\r\n</ul>\r\n<blockquote>\r\n<p>&nbsp; &lt;unity xmlns=&quot;&hellip;&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &lt;containers&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &lt;container&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;types&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;type  type=&quot;CommonLibrary.IPart, CommonLibrary&quot; mapTo=&quot;ModuleA.PartA, ModuleA&quot;  name=&quot;Test&quot;&gt;&lt;/type&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/types&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &lt;/container&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/containers&gt;<br>&nbsp;  &lt;/unity&gt;</p>\r\n</blockquote>\r\n<ul>\r\n<li>It is necessary to configure my container programmatically using the following  code:</li>\r\n</ul>\r\n<blockquote>\r\n<pre>IUnityContainer container = new UnityContainer();\r\nUnityConfigurationSection section\r\n  = (UnityConfigurationSection)ConfigurationManager.GetSection(&quot;unity&quot;);\r\nsection.Containers.Default.Configure(youContainer);</pre>\r\n</blockquote>\r\n<p>For more information about this you could take a look at the following  documentation section: <a href=\"http://msdn.microsoft.com/en-us/library/ff647848.aspx\">Configuring  Containers at Design Time</a></p>\r\n<p>I hope this helps,</p>\r\n<p>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-09-23T13:16:17.55-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]