[
  {
    "Id": "162215",
    "ThreadId": "48583",
    "Html": "Hi all,<br>\r\n<br>\r\nI currently investigate how a global (meaning accessible from all modules) configuration can be used in Composite WPF. As far as I understand it, the default settings are linked to a project (module) and therefore not shared application wide. This should work for user settings and application settings.<br>\r\n<br>\r\nIs there a neat way of doing this?<br>\r\n<br>\r\nThanks,<br>\r\nChristoph<br>\r\n",
    "PostedDate": "2009-02-26T01:26:04.99-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "162314",
    "ThreadId": "48583",
    "Html": "I blog on the topic here (with link to source code for functional demo).  The functional demo actually uses an IServerConfiguration interface (not IConfigInfo as the blog indicates).<br>\r\n<br>\r\nI've since upgraded the process to where it reads all of the AppSettings and ConnectionStrings from the Web.Config (as well as providing supplemental information from the ASP.NET default.aspx.cs file).   This effectively allows me to have a &quot;single&quot; configuration file for my Unit Test, ASP.NET, Silverlight and WCF Services (via Unity); I havn't updated the demo to support WCF services yet but will try to migrate the changes into the demo this weekend.<br>\r\n<br>\r\n<a href=\"http://www.global-webnet.net/blogengine/post/2009/01/12/Passing-Server-information-to-Silverlight-Client.aspx\">http://www.global-webnet.net/blogengine/post/2009/01/12/Passing-Server-information-to-Silverlight-Client.aspx</a><br>\r\n<br>\r\n",
    "PostedDate": "2009-02-26T06:37:04.37-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]