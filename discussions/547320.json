[
  {
    "Id": "1252078",
    "ThreadId": "547320",
    "Html": "<strong>Unity 3.x</strong><br />\n<br />\nHi,<br />\n<br />\nI can use the <em>ViewModelLocator</em> in the <strong>Shell Window</strong>, but how do you get it to work on a <strong>UserControl</strong> that's inside a <em>Project Library</em> that will be injected into the <strong>Shell Window</strong>? <br />\n<pre><code>&lt;Fluent:RibbonWindow \n    x:Class=&quot;NathsarTS.Master.Views.Shell&quot;\n    x:Name=&quot;NatsarTurahStudyMaster&quot; \n    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n    xmlns:prism=&quot;http://www.codeplex.com/prism&quot; \n    xmlns:common=&quot;clr-namespace:NathsarTS.Common.Shared;assembly=NathsarTS.Common&quot;\n    xmlns:Fluent=&quot;clr-namespace:Fluent;assembly=Fluent&quot;\n    xmlns:Mvvm=&quot;clr-namespace:Microsoft.Practices.Prism.Mvvm;assembly=Microsoft.Practices.Prism.Mvvm.Desktop&quot;\n    Mvvm:ViewModelLocator.AutoWireViewModel=&quot;True&quot;\n    Title=&quot;Natsar Turah Study Master&quot; Height=&quot;768&quot; Width=&quot;1024&quot; WindowStartupLocation=&quot;CenterScreen&quot; WindowState=&quot;Maximized&quot;\n    ScrollViewer.HorizontalScrollBarVisibility=&quot;Auto&quot; ScrollViewer.VerticalScrollBarVisibility=&quot;Auto&quot;&gt;\n    &lt;DockPanel LastChildFill=&quot;True&quot; x:Name=&quot;ShellContentGrid&quot;&gt;\n        &lt;ContentControl \n            DockPanel.Dock=&quot;Top&quot;\n            x:Name=&quot;ShellContent&quot; \n            prism:RegionManager.RegionName=&quot;{x:Static common:RegionNames.ActionRegion}&quot;&gt;\n\n        &lt;/ContentControl&gt;\n\n        &lt;ItemsControl prism:RegionManager.RegionName=&quot;{x:Static common:RegionNames.MainRegion}&quot; DockPanel.Dock=&quot;Top&quot;/&gt;\n    &lt;/DockPanel&gt;\n&lt;/Fluent:RibbonWindow&gt;</code></pre>\n\nI'm injecting <strong>UserControl:FluentRibbonView</strong> into the <em>ActionRegion</em>.  Is it best to use the <strong>ShellViewModel</strong> for all the actions for the <strong>UserControl:FluentRibbonView</strong> instead of trying to <em>locate</em> another <em>ViewModel</em>?<br />\n<br />\nBut, I would like to use the ViewModelLocator in other parts of the Application when I inject views from a Project Library without using <strong>Code-Behind</strong> or <strong>UserControl Resource</strong>.<br />\n<br />\nBecause, most of the time I use parameterized constructors.<br />\n<br />\nThanks!...<br />\n",
    "PostedDate": "2014-06-02T10:32:46.52-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1252411",
    "ThreadId": "547320",
    "Html": "Hi,\r<br />\n<br />\nIt would be helpful if you could provide us the issues you are facing when using the ViewModelLocator in your user control?\r<br />\n<br />\nThanks,\r<br />\nEz.\r<br />\n<a href=\"http://blogs.southworks.net\" rel=\"nofollow\">http://blogs.southworks.net</a><br />\n",
    "PostedDate": "2014-06-03T07:46:26.157-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1252647",
    "ThreadId": "547320",
    "Html": "Hi,<br />\n<br />\nThanks for the response.  Sure!<br />\n<br />\nI have a project library with a <strong>FluentRibbonView : UserControl, IView</strong>:<br />\n<pre><code>&lt;UserControl \n    x:Class=&quot;NathsarTS.FluentRibbon.Views.FluentRibbonView&quot;\n    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n    xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; \n    xmlns:Fluent=&quot;clr-namespace:Fluent;assembly=Fluent&quot;\n    xmlns:Mvvm=&quot;clr-namespace:Microsoft.Practices.Prism.Mvvm;assembly=Microsoft.Practices.Prism.Mvvm.Desktop&quot;\n    Mvvm:ViewModelLocator.AutoWireViewModel=&quot;True&quot;\n    xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; \n    mc:Ignorable=&quot;d&quot; d:DesignHeight=&quot;768&quot; d:DesignWidth=&quot;1064&quot;&gt;\n    &lt;Fluent:Ribbon &gt;\n        &lt;!--Backstage--&gt;\n        &lt;Fluent:Ribbon.Menu&gt;\n            &lt;Fluent:Backstage&gt;\n            &lt;/Fluent:Backstage&gt;\n        &lt;/Fluent:Ribbon.Menu&gt;\n        &lt;!--Tabs--&gt;\n        &lt;Fluent:RibbonTabItem Header=&quot;Tab&quot;&gt;\n            &lt;Fluent:RibbonGroupBox Header=&quot;Group&quot;&gt;\n                &lt;Fluent:Button Name=&quot;buttonGreen&quot; Header=&quot;Green&quot; Icon=&quot;Images\\Green.png&quot; LargeIcon=&quot;Images\\GreenLarge.png&quot; /&gt;\n                &lt;Fluent:Button Name=&quot;buttonGray&quot; Header=&quot;Grey&quot; Icon=&quot;Images\\Gray.png&quot; LargeIcon=&quot;Images\\GrayLarge.png&quot; /&gt;\n            &lt;/Fluent:RibbonGroupBox&gt;\n        &lt;/Fluent:RibbonTabItem&gt;\n    &lt;/Fluent:Ribbon&gt;\n&lt;/UserControl&gt;\n</code></pre>\n\nI will be injecting into the <strong>Shell : RibbonWindow, IView</strong> (Above).  The <em>FluentRibbonView</em> has a <strong>FluentRibbonViewModel : BindableBase</strong>, but its not finding the <em>ViewModel</em>.  The file structure is named properly as the <strong>Shell's</strong>.<br />\n<br />\nTo check to see if its working I placed a Debug.WriteLine(&quot;FluentRibbonViewModel instantiation&quot;); in the <em>ViewModel's</em> constructor.<br />\n<pre><code>Step into: Stepping over non-user code 'NathsarTS.Master.App..ctor'\nStep into: Stepping over non-user code 'NathsarTS.Master.App.Main'\nStep into: Stepping over non-user code 'NathsarTS.Master.App.InitializeComponent'\nShellViewModel instantiation\nCommonModule Constructor instantiation\nCommonModule instantiation\nCommonModule LoadModuleCompleted\nFluentRibbonModule Constructor instantiation\nFluentRibbonModule instantiation\nCommonModule LoadModuleCompleted\nFluentRibbonModule LoadModuleCompleted\nTurahStudyUIModule Constructor instantiation\nTurahStudyUIModule instantiation\nCommonModule LoadModuleCompleted\nFluentRibbonModule LoadModuleCompleted\nTurahStudyUIModule LoadModuleCompleted\n</code></pre>\n\nEverything works fine except the <strong>UserControl</strong> is not finding its <em>ViewModel</em>.<br />\n",
    "PostedDate": "2014-06-03T18:00:19.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1252900",
    "ThreadId": "547320",
    "Html": "Hi,<br />\n<br />\nThanks for sharing this. <br />\n<br />\nPrism’s <strong>ViewModelLocator</strong> class has an attached property, <strong>AutoWireViewModel</strong> that when set to true (as in your scenario) will try to locate the view model of the view, and then set the view’s data context to an instance of the view model. To locate the corresponding view model, the <strong>ViewModelLocationProvider</strong> first attempts to resolve the view model from any mappings that may have been registered by the <strong>Register</strong> method of the <strong>ViewModelLocationProvider</strong> class. If the view model cannot be resolved using this approach, for instance if the mapping wasn't created, the <strong>ViewModelLocationProvider</strong> falls back to a convention-based approach to resolve the correct view model type. This convention assumes that view models are in the same assembly as the view types, that view models are in a <strong>.ViewModels</strong> child namespace, that views are in a <strong>.Views</strong> child namespace, and that view model names correspond with view names and end with &quot;ViewModel.&quot;<br />\n<br />\nIf you don't have any mapping registered, it might be possible that this is failing because your ViewModel is not following the default naming convention (It should be named FluentRibbonViewViewModel instead of FluentRibbonViewModel) <br />\n<br />\nIf your View Models are in different assembly, then you will have to override the logic of the ViewModelLocator.<strong>SetDefaultViewTypeToViewModelTypeResolve</strong>.<br />\n<br />\nI hope you find this helpful.<br />\nThanks,<br />\nEz<br />\n<a href=\"http://blogs.southworks.net\" rel=\"nofollow\">http://blogs.southworks.net</a> <br />\n",
    "PostedDate": "2014-06-04T08:50:17.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1253073",
    "ThreadId": "547320",
    "Html": "Thanks!  My models were not name properly after their views and now everything is fine now! :)<br />\n",
    "PostedDate": "2014-06-04T16:03:11.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]