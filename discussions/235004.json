[
  {
    "Id": "523147",
    "ThreadId": "235004",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I need to register 2 custom region adapters in the ConfigureRegionAdapterMappings in my MefBootstrapper. I couldnt find a way to do it yet anywhere. How do we do it?</p>\r\n<p>Cheers!</p>\r\n<p><span style=\"font-size:x-small; color:#ffffff; font-family:Consolas\"><span style=\"font-size:x-small; color:#ffffff; font-family:Consolas\"><span style=\"font-size:x-small; color:#ffffff; font-family:Consolas\"></p>\r\n<p>ConfigureRegionAdapterMappings</p>\r\n</span></span></span>\r\n<p></p>\r\n",
    "PostedDate": "2010-11-17T03:14:58.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "523420",
    "ThreadId": "235004",
    "Html": "\r\n<p>Hi,</p>\r\n<p>For achieving this scenario, it is necessary to override the <strong>ConfigureRegionAdapterMappings</strong> method in your\r\n<strong>Bootstrapper </strong>to add your own custom region adapter mappings. That said, your code might be similar to the following:</p>\r\n<pre><span style=\"color:blue\">protected override </span>RegionAdapterMappings ConfigureRegionAdapterMappings()<br>{<br>    RegionAdapterMappings mappings = <span style=\"color:blue\">base</span>.ConfigureRegionAdapterMappings();<br>    mappings.RegisterMapping(<span style=\"color:blue\">typeof</span>(ControlToAdapt1), <span style=\"color:blue\">new </span>CustomRegionAdapter1());<br>    mappings.RegisterMapping(<span style=\"color:blue\">typeof</span>(ControlToAdapt2), <span style=\"color:blue\">new </span>CustomRegionAdapter2());<br>    <span style=\"color:blue\">return </span>mappings;<br>}<br></pre>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-11-17T12:07:39.19-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525711",
    "ThreadId": "235004",
    "Html": "\r\n<p>Hi Fernando,</p>\r\n<p>The problem is I cannot do a new CustomRegionAdapter() as it needs a IRegionBehaviourFactory in its constructor. I was thinking of putting a Export tag on the CustomRegionAdapter and adding to the AggregateCatalog. And then I can fetch it from the Container\r\n like below.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[Export]\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomRegionAdapter : RegionAdapterBase&lt;Grid&gt;\r\n{\r\n}\r\n</pre>\r\n</div>\r\n<p>And then in the ConfigureAggregateCatalog</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureAggregateCatalog()\r\n{\r\n            <span style=\"color:blue\">base</span>.ConfigureAggregateCatalog();\r\n\r\n            AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(<span style=\"color:blue\">typeof</span>(CustomRegionAdapter).Assembly));\r\n}\r\n</pre>\r\n</div>\r\n<p>And then in the ConfigureRegionAdapters</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> RegionAdapterMappings ConfigureRegionAdapterMappings()\r\n{\r\n            <span style=\"color:blue\">var</span> mappings = <span style=\"color:blue\">base</span>.ConfigureRegionAdapterMappings();\r\n           mappings.RegisterMapping(<span style=\"color:blue\">typeof</span>(Grid), Container.GetExportedValue&lt;CustomRegionAdapter&gt;());\r\n<span style=\"color:blue\">return</span> mappings;\r\n}\r\n</pre>\r\n</div>\r\n<p>Would this not work?</p>\r\n",
    "PostedDate": "2010-11-23T00:50:12.413-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525858",
    "ThreadId": "235004",
    "Html": "\r\n<p>Hi,</p>\r\n<p>It seems to be a possible approach for achieving your scenario. Please take into account that if your Custom Region Adapter has to be created using a non-default constructor, you will need to specify to the composition engine the constructor that you want\r\n use by decorating it with the <strong>ImportingContructor attribute</strong>. So your code might be similar to the following:</p>\r\n<p>[Export]</p>\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomRegionAdapter : RegionAdapterBase&lt;Grid&gt;<br>{<span><span id=\"x_ctl00_MTCS_main_ctl81_ctl00_ctl09\"><pre id=\"x_ctl00_MTCS_main_ctl81_ctl00_ctl09_code\">  <strong>[ImportingConstructor]    </strong><br><span style=\"color:blue\">  public</span> void CustomRegionAdapter (IRegionBehaviourFactory regionBehaviourFactory)<br></pre>\r\n</span></span>}<br></pre>\r\n<p>This way the the IRegionBehaviorFactory is declarer automatically. For more information on this topic, you could take a look at the following documentation section on MSDN:\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ee155691.aspx\" target=\"_top\">Attributed Programming Model Overview</a>, see the\r\n<em>Prerequisites Imports</em> section.</p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-11-23T07:27:43.31-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525864",
    "ThreadId": "235004",
    "Html": "\r\n<div><font size=\"2\" color=\"navy\" face=\"Arial\">Yes. You are right. I missed that out. I guess rest should work then.\r\n<br>\r\n<br>\r\nThanks. </font></div>\r\n<br>\r\n<div>\r\n<hr size=\"2\" width=\"100%\" align=\"center\" tabindex=\"-1\">\r\n<font face=\"Tahoma\" size=\"2\"><b>From</b>: fantivero &lt;notifications@codeplex.com&gt; <br>\r\n<b>To</b>: Shivshankar, Ganesh (IT/IN) <br>\r\n<b>Sent</b>: Tue Nov 23 20:57:51 2010<br>\r\n<b>Subject</b>: Re: Registering custom region adapters in MefBootstrapper [CompositeWPF:235004]\r\n<br>\r\n</font><br>\r\n</div>\r\n<p>From: fantivero</p>\r\n<div id=\"x_x_ThreadNotificationPostBody\">\r\n<p>Hi,</p>\r\n<p>It seems to be a possible approach for achieving your scenario. Please take into account that if your Custom Region Adapter has to be created using a non-default constructor, you will need to specify to the composition engine the constructor that you want\r\n use by decorating it with the <strong>ImportingContructor attribute</strong>. So your code might be similar to the following:</p>\r\n<p>[Export]</p>\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomRegionAdapter : RegionAdapterBase&lt;Grid&gt;<br>{<span><span id=\"x_x_x_ctl00_MTCS_main_ctl81_ctl00_ctl09\"><pre id=\"x_x_x_ctl00_MTCS_main_ctl81_ctl00_ctl09_code\">  <strong>[ImportingConstructor]    </strong><br><span style=\"color:blue\">  public</span> void CustomRegionAdapter (IRegionBehaviourFactory regionBehaviourFactory)<br></pre>\r\n</span></span>}<br></pre>\r\n<p>This way the the IRegionBehaviorFactory is declarer automatically. For more information on this topic, you could take a look at the following documentation section on MSDN:\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ee155691.aspx\" target=\"_top\">Attributed Programming Model Overview</a>, see the\r\n<em>Prerequisites Imports</em> section.</p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n<p></p>\r\n</div>\r\n<div id=\"x_x_ThreadNotificationFooter\">\r\n<p>Read the <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=235004&ANCHOR#Post525858\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:CompositeWPF@discussions.codeplex.com@discussions.codeplex.com?subject=[CompositeWPF:235004]\">CompositeWPF@discussions.codeplex.com@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:CompositeWPF@discussions.codeplex.com@discussions.codeplex.com\">\r\nCompositeWPF@discussions.codeplex.com@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://compositewpf.codeplex.com/discussions/235004/unsubscribe/\">unsubscribe</a> on CodePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com</p>\r\n</div>\r\n<div><font face=\"Arial\" size=\"2\"><span>This e-mail (including any attachments) is confidential, may contain\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>proprietary or privileged information and is intended for the named\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>recipient(s) only. Unintended recipients are prohibited from taking\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>action on the basis of information in this e-mail and must delete all\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>copies. Nomura will not accept responsibility or liability for the\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>accuracy or completeness of, or the presence of any virus or disabling\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>code in, this e-mail. If verification is sought please request a hard\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>copy. Any reference to the terms of executed transactions should be\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>treated as preliminary only and subject to formal written confirmation\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>by Nomura. Nomura reserves the right to monitor e-mail communications\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>through its networks (in accordance with applicable laws). No\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>confidentiality or privilege is waived or lost by Nomura by any\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>mistransmission of this e-mail. Any reference to &quot;Nomura&quot; is a\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>reference to any entity in the Nomura Holdings, Inc. group.\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>Please read our Electronic Communications Legal Notice which forms\r\n</span></font></div>\r\n<div><font face=\"Arial\" size=\"2\"><span>part of this e-mail: http://www.Nomura.com/email_disclaimer.htm\r\n</span></font></div>\r\n",
    "PostedDate": "2010-11-23T07:32:30.957-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]