[
  {
    "Id": "512457",
    "ThreadId": "232293",
    "Html": "\r\n<p>I have been building a small sample app using the code from WPF StockTraderRI from Prism v4 - Drop 10 as a guide.</p>\r\n<p>I have added the bootstrapper and one module which I have referenced in my shell. bootstrapper.Run() is throwing an exception.</p>\r\n<p>I believe it has something to do with AutoPopulateExportedViewsBehavior, but I do not understand enough about AddIfMissing() to determine if that is the exact problem. If I comment out the AddIfMissing() statement I get my shell without the module. I have\r\n checked and recheck to make sure that I have the appropriate attributes and that the name of the region matches the ViewExport[].</p>\r\n<p>Does anyone know of what might be the issue or where I should start looking? I can post some of the source if needed or send the entire project.<br>\r\n<br>\r\nAn exception occurred while trying to create region objects. <br>\r\n&nbsp;&nbsp;&nbsp; - The most likely causing exception was: 'System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; Microsoft.Practices.Prism.Regions.Behaviors.RegionCreationException: An exception occurred\r\n while creating a region with name 'MainRegion'. The exception was: Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type AutoPopulateExportedViewsBehavior, key &quot;&quot; ---&gt; Microsoft.Practices.ServiceLocation.ActivationException:\r\n Activation error occured while trying to get instance of type AutoPopulateExportedViewsBehavior, key &quot;&quot;<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.MefExtensions.MefServiceLocatorAdapter.DoGetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorFactory.CreateFromKey(String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName).&nbsp; ---&gt; Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while\r\n trying to get instance of type AutoPopulateExportedViewsBehavior, key &quot;&quot; ---&gt; Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type AutoPopulateExportedViewsBehavior, key &quot;&quot;<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.MefExtensions.MefServiceLocatorAdapter.DoGetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionBehaviorFactory.CreateFromKey(String key)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.AttachDefaultBehaviors(IRegion region, T regionTarget)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Initialize(T regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionAdapterBase`1.Microsoft.Practices.Prism.Regions.IRegionAdapter.Initialize(Object regionTarget, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(DependencyObject targetElement, String regionName)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion()<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(Object sender, EventArgs e)<br>\r\n&nbsp;&nbsp; --- End of inner exception stack trace ---<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.RuntimeMethodHandle.InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeType typeOwner)<br>\r\n&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvokeImpl(Object[] args)<br>\r\n&nbsp;&nbsp; at System.Delegate.DynamicInvoke(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Events.WeakDelegatesManager.Raise(Object[] args)<br>\r\n&nbsp;&nbsp; at Microsoft.Practices.Prism.Regions.RegionManager.UpdateRegions()'.<br>\r\n&nbsp;&nbsp;&nbsp; But also check the InnerExceptions for more detail or call .GetRootException().</p>\r\n",
    "PostedDate": "2010-10-25T17:01:20.61-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "513023",
    "ThreadId": "232293",
    "Html": "\r\n<p>I figured it out after stepping through the prism source.</p>\r\n<p>DoGetInstance(Type serviceType, string key) was actually throwing the error.<br>\r\n&quot;AutoPopulateExportedViewsBehavior&quot; was not in compositionContainer.</p>\r\n<p>This was because I never added the assembly to AggregateCatalog!</p>\r\n",
    "PostedDate": "2010-10-26T15:22:45.613-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "513044",
    "ThreadId": "232293",
    "Html": "\r\n<p>I'm having the exact same issue. I'm following the&nbsp;StockTraderRI (Silverlight) Code.&nbsp;&nbsp;Your post just saved me :)&nbsp; I've been working on this for hours now.&nbsp;</p>\r\n<p>What's not obvious in the StockTraderRIBootstrapperCode is that in the&nbsp;ConfigureAggregateCatalog() Method this line of Code is called right after the Bootstrapper is loaded into the Catalog, which basically loads the entire Infrastructure Library, which\r\n is where&nbsp;the AutoPopulateExportedViewBehaviors Class is located.&nbsp; It just hit me when&nbsp;you said&nbsp;the Assembly was never added to the AggregateCatalog. I went back to my code, and I did not have this line of code.</p>\r\n<p><span style=\"color:blue\">// This loads the Infrastructure Assembly</span></p>\r\n<p><span style=\"color:blue\">this</span>.AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">AssemblyCatalog</span>(<span style=\"color:blue\">typeof</span>(<span style=\"color:#2b91af\">StockTraderRICommands</span>).Assembly));</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks a BUNCH!</p>\r\n<p>Devaron Ruggiero</p>\r\n",
    "PostedDate": "2010-10-26T16:03:58.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "571439",
    "ThreadId": "232293",
    "Html": "<p>I also received the SystemActivationException. &nbsp;My case was a little different as I was trying to manually wire the view to a region in my module-init using MEF instead of using the AutoPopulation behavior class provided in the stock trader example.</p>\r\n<p>I was trying to put together the most basic example I could think of after reading through some of this. &nbsp;My Shell has a ContentControl with a region named \"Main\". &nbsp;I created a module DLL and registered it in my App.config file to try one of the dynamic loading capabilities of MEF. &nbsp;</p>\r\n<p>My Module DLL simply has a Module class and a WPF UserControl that I wanted to target the \"Main\" region with. &nbsp;</p>\r\n<p>This is my Module code:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>    [ModuleExport(<span style=\"color: blue;\">typeof</span>(FirstModule))]\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> FirstModule :  IModule\r\n    {\r\n        [Import]\r\n        <span style=\"color: blue;\">public</span> IRegionManager RegionManager\r\n        {\r\n            <span style=\"color: blue;\">get</span>;\r\n            <span style=\"color: blue;\">set</span>;\r\n        }\r\n\r\n        <span style=\"color: blue;\">#region</span> IModule Members\r\n\r\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Initialize()\r\n        {\r\n            <span style=\"color: blue;\">this</span>.RegionManager.RegisterViewWithRegion(RegionNames.Main, <span style=\"color: blue;\">typeof</span>(UserControl1));\r\n        }\r\n\r\n        <span style=\"color: blue;\">#endregion</span>\r\n    }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>My View was just a standard WPF user-control. &nbsp;When I tried running this code I would get SystemActivationException because the MEF container couldn't resolve UserControl1. &nbsp;I figured that maybe I forgot to mark the control to be Exported and sure enough that was the case. &nbsp;So I changed my UserControl to look like this and it worked.</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>    [Export(<span style=\"color: blue;\">typeof</span>(UserControl1))]\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> UserControl1 : UserControl\r\n    {\r\n        <span style=\"color: blue;\">public</span> UserControl1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2011-02-24T04:31:59.94-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]