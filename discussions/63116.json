[
  {
    "Id": "214455",
    "ThreadId": "63116",
    "Html": "<p>We are using PRISM for all of our new applications.&nbsp; We are developing a PRISM Shell Wpf Application to be used with a number of solution application domains.</p>\r\n<p>What is the best way to structure the Visual Studio solution for each new application?</p>\r\n<p>Do we Copy the shell application to each team project or solution subfolder?</p>\r\n<p>Can we just refer to the common shell and somehow provide a new configuration file for the shell?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-21T11:33:07.307-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "214858",
    "ThreadId": "63116",
    "Html": "<p>Hi cscnut,&nbsp;</p>\r\n<p>This will greatly depend on your specific requirements and scenario, but beside the two approaches you suggested you might also consider creating VS templates with the &quot;common shell&quot; code. This will not only allow you to have a standard starting solution structure for all projects but in the future you might also enchase it will custom recipes for usual tasks. This is the approach which is used in p&amp;p software factories (for example in the <a href=\"http://msdn.microsoft.com/en-us/library/bb264518.aspx\">WCSF</a> you have templates for <a href=\"http://msdn.microsoft.com/en-us/library/cc304890.aspx\">creating new Web Sites and WAP solutions</a>).&nbsp;</p>\r\n<p>This approach is similar to your first suggestion but automatized and integrated with VS but more difficult to achieve. So it will depend on how many new solutions based on this structure you will be creating to decide whether or not it worth the effort.<br>If you decide taking this approach you might find useful the following posts as starting point:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.msdn.com/dphill/\">David Hill</a> created templates for Prism-v2. You can check them in <a href=\"http://blogs.msdn.com/dphill/archive/2009/05/29/prism-quick-start-kit.aspx\">Prism Quick Start</a> and <a href=\"http://blogs.msdn.com/dphill/archive/2009/06/15/prism-quick-start-kit-update.aspx\">Prism Quick Start Kit Update</a></li>\r\n<li><a href=\"http://blogs.southworks.net/ejadib/\">Ezequiel Jadib</a> created temapltes for prism-v1. You can check them in <a href=\"http://blogs.southworks.net/ejadib/2008/07/03/composite-application-guidance-for-wpf-visual-studio-templates/\">Composite Application Guidance for WPF Visual Studio Templates</a> &nbsp;&nbsp; &nbsp;</li>\r\n</ul>\r\n<p>Compared with your second suggestion it's different regarding updates. Using your second approach updates/modifications to the &quot;common shell&quot; will automatically propagate to all projects. This might be both good or bad depending on your requirements. Using the VS templates approach (or the xcopy one) each project can make customization to the &quot;common shell&quot; without affecting other projects.</p>\r\n<p>Hope it helps!&nbsp;</p>\r\n<p>Matias Bonaventura<br><a href=\"http://blogs.southworks.net/\">http://blogs.southworks.net/matiasb</a></p>",
    "PostedDate": "2009-07-22T10:06:33.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "214869",
    "ThreadId": "63116",
    "Html": "<br><br>\r\nThank you for your suggestions.  I will investigate these blogs and\r\ntry and figure out if they will work for us.\r\n<br>",
    "PostedDate": "2009-07-22T10:28:34.293-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]