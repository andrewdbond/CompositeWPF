[
  {
    "Id": "911604",
    "ThreadId": "395299",
    "Html": "\r\n<p>I have a Silverlight project that I am using as a web part in Sharepoint 2010. When the application starts up I would like&nbsp;to gather the current user logged in to Sharepoint inside of my Appl.xaml.cs file.</p>\r\n<p>The reason being is I want to set up a user object inside the App.xaml.cs, pass that object into my Bootstrapper.cs. Once inside the Bootstrapper.cs, I would like to add that object into my Container so when any of my modules constructors need that user\r\n object all they need is to define it as part of the module constructor and have it as needed. I have done this logic with another object. Some code snippets on how I did it follows. I would like to do the same with a Current User object.</p>\r\n<p>App.xaml.cs</p>\r\n<pre><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Startup(<span style=\"color:blue\">object</span> sender, StartupEventArgs e)\r\n        {\r\n            Bootstrapper bootStrapper = <span style=\"color:blue\">new</span> Bootstrapper(<span style=\"color:blue\">this</span>.SetupMapPrincipal());\r\n            bootStrapper.Run();\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Exit(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> ReachCalculatorMapPrincipal SetupMapPrincipal()\r\n        {\r\n            ReachCalculatorMapPrincipal principal = <span style=\"color:blue\">new</span> ReachCalculatorMapPrincipal(\r\n                    <span style=\"color:#a31515\">&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/GeographicalforMediaReachTiled/MapServer&quot;</span>,\r\n                    <span style=\"color:#a31515\">&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/AirportsforMediaReachTiled/MapServer&quot;</span>,\r\n                    <span style=\"color:#a31515\">&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/CountiesforMediaReachTiled/MapServer&quot;</span>,\r\n                    <span style=\"color:#a31515\">&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/DMAsforMediaReachTiled/MapServer&quot;</span>,\r\n                    <span style=\"color:#a31515\">&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/RoadsforMediaReachTiled/MapServer&quot;</span>);\r\n            <span style=\"color:green\">//ReachCalculatorMapPrincipal principal = new ReachCalculatorMapPrincipal(&quot;http://dg2k8esridev1/ArcGISDevelopment/rest/services/BaseMapforIAnalyzeUS/MapServer&quot;);</span>\r\n            <span style=\"color:blue\">return</span> principal;\r\n        }\r\n</pre>\r\n</div>\r\n</pre>\r\n<pre>Bootstrapper.cs</pre>\r\n<pre><div style=\"color:black; background-color:white\"><pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Bootstrapper : UnityBootstrapper\r\n    {\r\n        ReachCalculatorMapPrincipal mapPrincipal;\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> DependencyObject CreateShell()\r\n        {\r\n            Shell rootShell = <span style=\"color:blue\">new</span> Shell();\r\n            Application.Current.RootVisual = rootShell;\r\n            <span style=\"color:blue\">return</span> rootShell;\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureContainer()\r\n        {\r\n            Container.RegisterInstance(<span style=\"color:blue\">typeof</span>(ReachCalculatorMapPrincipal), mapPrincipal, <span style=\"color:blue\">new</span> ContainerControlledLifetimeManager());\r\n\r\n            <span style=\"color:blue\">base</span>.ConfigureContainer();\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> Bootstrapper(ReachCalculatorMapPrincipal mPrincipal)\r\n        {\r\n            <span style=\"color:blue\">this</span>.mapPrincipal = mPrincipal;\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> IModuleCatalog CreateModuleCatalog()\r\n        {\r\n            ModuleCatalog modules = <span style=\"color:blue\">new</span> ModuleCatalog();\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.Map.MapModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.Layers.LayersModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.Locations.LocationsModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.AreaSelection.AreaSelectionModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.Demographics.DemographicsModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.ProgressBar.ProgressBarModule));\r\n            modules.AddModule(<span style=\"color:blue\">typeof</span>(Geomentum.ReachCalculator.Modules.Overlays.OverlaysModule));\r\n            <span style=\"color:blue\">return</span> modules;\r\n        }\r\n    }\r\n\r\nA module whose constructor needs the Map Principal</pre>\r\n<pre><div style=\"color:black; background-color:white\"><pre>            <span style=\"color:blue\">public</span> MapViewModel(IMapView view, IEventAggregator eventAggregator, ReachCalculatorMap map)\r\n        {\r\n            View = view;\r\n            View.Model = <span style=\"color:blue\">this</span>;\r\n            _map = map;\r\n\r\n            BaseMapLayerService = CreateMapLayers(map);\r\n            <span style=\"color:blue\">this</span>.eventAggregator = eventAggregator;\r\n\r\n            DemographicOverlayList = <span style=\"color:blue\">new</span> ObservableCollection&lt;DemographicCriteriaModel&gt;();\r\n            AreaSelectionList = <span style=\"color:blue\">new</span> ObservableCollection&lt;AreaSelectionsModel&gt;();\r\n            areaDetails = <span style=\"color:blue\">new</span> ObservableCollection&lt;PopulationGeographyDetails&gt;();\r\n            demoDetails = <span style=\"color:blue\">new</span> ObservableCollection&lt;PopulationDemographicsDetails&gt;();\r\n\r\n            populationModel = <span style=\"color:blue\">new</span> ObservableCollection&lt;Infrastructure.Models.PopulationModel&gt;();\r\n            mediaReceptivityModel = <span style=\"color:blue\">new</span> ObservableCollection&lt;Infrastructure.Models.MediaReceptivityModel&gt;();\r\n\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;MapLayersUpdated&gt;().Subscribe(<span style=\"color:blue\">this</span>.updateLayerList);\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;LocationOverlaysUpdated&gt;().Subscribe(<span style=\"color:blue\">this</span>.updateLocationLayer);\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;LocationOverlaysRemoved&gt;().Subscribe(<span style=\"color:blue\">this</span>.removeLocationLayer);\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;MapDemographicsUpdated&gt;().Subscribe(<span style=\"color:blue\">this</span>.updateDemographicOverlays);\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;MapDemographicsCleared&gt;().Subscribe(<span style=\"color:blue\">this</span>.clearDemographicOverlays);\r\n\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;MapMediaTypesCleared&gt;().Subscribe(<span style=\"color:blue\">this</span>.clearMediaTypeOverlays);\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;MapMediaTypesUpdated&gt;().Subscribe(<span style=\"color:blue\">this</span>.updateMediaTypeOverlays);\r\n\r\n            <span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;AreaSelectionUpdate&gt;().Subscribe(<span style=\"color:blue\">this</span>.updateAreaSelections);\r\n        }\r\n\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</pre>\r\n",
    "PostedDate": "2012-09-12T08:07:32.083-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "911703",
    "ThreadId": "395299",
    "Html": "<p>Hi,</p>\r\n<p>If your problem is how to obtain the currently logged user in <strong>Sharepoint 2010 </strong>inside your <strong>Silverlight </strong>application, I believe you could find the following threads interesting:</p>\r\n<ul>\r\n<li><a href=\"http://forums.silverlight.net/t/191264.aspx/1\">How to get the sharepoint current logged in user name in silverlight application using object model</a></li>\r\n<li><a href=\"http://social.msdn.microsoft.com/Forums/en-US/sharepoint2010general/thread/f2a632dd-79e6-410d-adbc-9a9709d115f6/\">How we can access the Sharepoint 2010 login credentials in a silverlight webpart hosted on the same site?</a></li>\r\n<li><a href=\"http://social.technet.microsoft.com/Forums/en-US/sharepoint2010programming/thread/4c85ffb1-1c8e-4900-b881-a9eb8174cd4d/\">Get current loggedin user using silverlight client object model SharePoint 2010?</a></li>\r\n</ul>\r\n<p>Also, you might find the following <strong>MSDN </strong>article useful:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg701782.aspx\">Silverlight and SharePoint Integration (Professional SharePoint Branding and User Interface Design)</a></li>\r\n</ul>\r\n<p>It seems that your problem is more related to how to integrate <strong>Sharepoint </strong>and <strong>Silverlight </strong>than to <strong>Prism</strong>. Therefore, I believe you could find better support regarding this subject in the <a href=\"http://social.msdn.microsoft.com/forums/en-US/category/sharepoint/\">Sharepoint forums</a>.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-09-12T10:34:00.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "911800",
    "ThreadId": "395299",
    "Html": "<p>Damian,</p>\r\n<p>I looked at the links you provided before I create this discussion. In each of those it looks like they are getting the ClientContext when the user is already in the silverlight application, most notably in the Shell.xaml or Mainpage.xaml. I put this question in here because I am using Prism and want to get the ClientContext at the application startup instead of in the Shell.xaml, Mainpage.xaml or any modules inside my application.</p>\r\n<p>I will ask the same in Sharepoint forums.</p>\r\n<p>Thanks for your help.</p>\r\n<p>&nbsp;</p>\r\n<p>Dave</p>",
    "PostedDate": "2012-09-12T13:03:52.18-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]