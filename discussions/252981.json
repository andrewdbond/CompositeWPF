[
  {
    "Id": "593620",
    "ThreadId": "252981",
    "Html": "\r\n<p>On my master view model I am publishing an event with the contents that I want to pass to the detail.</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>ViewSettings storeViewSettings = <span style=\"color:blue\">new</span> ViewSettings();\r\nstoreViewSettings.ViewName = ViewNames.CurrencyDetailView;\r\nstoreViewSettings.RegionName = RegionNames.SecondaryRegion;\r\nstoreViewSettings.CurrentItem = viewData.CurrentItem;\r\n\r\n<span style=\"color:blue\">this</span>.eventAggregator.GetEvent&lt;ModuleChangeEvent&gt;().Publish(storeViewSettings);\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>A control is subscribing to the event and activates the correct view.</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DisplayView(ViewSettings viewSettings)\r\n{\r\n    <span style=\"color:blue\">this</span>.ViewSettings = viewSettings;\r\n\r\n    <span style=\"color:blue\">string</span> viewName = viewSettings.ViewName;\r\n\r\n    <span style=\"color:green\">// Default to the main region if no region was specified.</span>\r\n    <span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrWhiteSpace(viewSettings.RegionName))\r\n    {\r\n        viewSettings.RegionName = RegionNames.MainRegion;\r\n    }\r\n\r\n    <span style=\"color:green\">// Check to see if the region exists.</span>\r\n    <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.regionManager.Regions.ContainsRegionWithName(viewSettings.RegionName))\r\n    {\r\n        IRegion region = <span style=\"color:blue\">this</span>.regionManager.Regions[viewSettings.RegionName];\r\n\r\n        <span style=\"color:blue\">object</span> currentView = region.GetView(viewName);\r\n\r\n        <span style=\"color:green\">// If the view already exists in the region remove it.</span>\r\n        <span style=\"color:blue\">if</span> (currentView != <span style=\"color:blue\">null</span>)\r\n        {\r\n            region.Remove(currentView);\r\n        }\r\n\r\n        <span style=\"color:blue\">try</span>\r\n        {\r\n            <span style=\"color:green\">// Get a new instance of the view.</span>\r\n            currentView = ServiceLocator.Current.GetInstance&lt;IView&gt;(viewName);\r\n        }\r\n        <span style=\"color:blue\">catch</span> (ActivationException activationException)\r\n        { \r\n                logger.Log(activationException.ToString(), Category.Exception, Priority.High);\r\n                <span style=\"color:blue\">return</span>;\r\n        }\r\n\r\n        <span style=\"color:green\">// Add the view to the region.</span>\r\n        region.Add(currentView, viewName);\r\n\r\n        <span style=\"color:green\">// Activate the view.</span>\r\n        region.Activate(currentView);\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>My values are injected with the constructor and everything works.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[ImportingConstructor]\r\n<span style=\"color:blue\">public</span> CurrencyDetailViewModel(IGeneralController generalController)\r\n{\r\n    <span style=\"color:blue\">this</span>.generalController = generalController;\r\n\r\n    <span style=\"color:blue\">this</span>.currency = <span style=\"color:blue\">this</span>.generalController.ViewSettings.CurrentItem <span style=\"color:blue\">as</span> Currency;\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>When I send a second value from the master view model, the detail view model's constructor is not called and my data is not changed..<br>\r\n<br>\r\nWhat do I need to do set my values every time or have the constructor injected every time?<br>\r\n<br>\r\nI have tried to follow TransactionInfo from the StockTrader example but I still cannot seem to figure it out.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-04-07T09:31:24.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "593679",
    "ThreadId": "252981",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding of your scenario, you need to decorate your <em>CurrencyDetailViewModel</em> class with the <strong>PartCreationPolicy </strong>attribute as <strong>NonShared</strong>. By doing this, a new instance of the exported view model will be created each time it is resolved. For example in your code it would look like this:</p>\r\n<pre>[Export(<span style=\"color: blue;\">typeof</span>(ICurrencyDetailViewModel))]\r\n[PartCreationPolicy(CreationPolicy.NonShared)]\r\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> CurrencyDetailViewModel : ICurrencyDetailViewModel\r\n{\r\n    [ImportingConstructor]\r\n    <span style=\"color: blue;\">public</span> CurrencyDetailViewModel(IGeneralController generalController)\r\n    {\r\n       <span style=\"color: blue;\">this</span>.generalController = generalController;\r\n \r\n       <span style=\"color: blue;\">this</span>.currency = <span style=\"color: blue;\">this</span>.generalController.ViewSettings.CurrentItem <span style=\"color: blue;\">as</span> Currency;\r\n    }\r\n}</pre>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"></span></p>\r\n&nbsp;",
    "PostedDate": "2011-04-07T11:22:39.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "593755",
    "ThreadId": "252981",
    "Html": "<p>Miguel Bronzovic,</p>\r\n<p>I went back and checked to make sure that the ViewModel's PartCreationPolicy was set to NonShared, and it was.</p>\r\n<p>The problem turned out to be that the PartCreationPolicy on the View was set to Shared. Doh!</p>\r\n<p>Thanks for quick response.</p>",
    "PostedDate": "2011-04-07T13:11:29.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]