[
  {
    "Id": "185973",
    "ThreadId": "55088",
    "Html": "Hi all,<br>\r\n<br>\r\nI encounter a strange problem registering a view in MainRegion . This is the case :<br>\r\n<br>\r\nIn Module B Initalize method , I subsribe to event for registering ModuleView in the MainRegion . Then in Module A when something happen I publish an event to show the view. Here is the code :<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>EventAggregator.GetEvent&lt;</p>\r\n</span>\r\n<p><span style=\"color:#2b91af;font-size:13px\">GenericEvent</span><span style=\"font-size:13px\">&lt;</span><span style=\"color:#0000ff;font-size:13px\">string</span><span style=\"font-size:13px\">&gt;&gt;().Subscribe(<br>\r\ns =&gt;<br>\r\n{<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">if</span><span style=\"font-size:13px\"> (s.Topic == </span><span style=\"color:#2b91af;font-size:13px\">EventTopics</span><span style=\"font-size:13px\">.ShowDashBoard)<br>\r\n{<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">      DashBoradView</span><span style=\"font-size:13px\"> <span style=\"color:#2b91af;font-size:13px\">dashBoradView </span>View = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"color:#2b91af;font-size:13px\"> DashBoradView </span><span style=\"font-size:13px\">();<br>\r\n      RegionManager.RegisterViewWithRegion(</span><span style=\"color:#2b91af;font-size:13px\">RegionNames</span><span style=\"font-size:13px\">.MainRegion, () =&gt; <span style=\"color:#2b91af;font-size:13px\">dashBoradView </span>); <br>\r\n      RegionManager.Regions[</span><span style=\"color:#2b91af;font-size:13px\">RegionNames</span><span style=\"font-size:13px\">.MainRegion].Activate(<span style=\"color:#2b91af;font-size:13px\">dashBoradView </span>);<br>\r\n}<br>\r\n}<br>\r\n);<br>\r\n<br>\r\nThe subscribtion doesn't work this way. I tried to write down a simple code instead in the subscribtion say Debug.Write(s.Topic) only for test to see what the problem then the subscribtion works. When I changed the follwong code :<br>\r\n<span style=\"font-size:13px\"><span style=\"color:#2b91af\"><br>\r\nDashBoradView</span> <span style=\"color:#2b91af\">dashBoradView</span> View = <span style=\"color:#0000ff\">new</span> <span style=\"color:#2b91af\">DashBoradView</span> ();<br>\r\nRegionManager.RegisterViewWithRegion(<span style=\"color:#2b91af\">RegionNames</span>.MainRegion, () =&gt; <span style=\"color:#2b91af\">dashBoradView</span> ); </span><br>\r\n<br>\r\nEventAggregator.GetEvent&lt;<span style=\"color:#2b91af;font-size:13px\">GenericEvent</span><span style=\"font-size:13px\">&lt;</span><span style=\"color:#0000ff;font-size:13px\">string</span><span style=\"font-size:13px\">&gt;&gt;().Subscribe(<br>\r\ns =&gt;<br>\r\n{<span style=\"color:#2b91af;font-size:13px\">    </span><br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">if</span><span style=\"font-size:13px\"> (s.Topic == </span><span style=\"color:#2b91af;font-size:13px\">EventTopics</span><span style=\"font-size:13px\">.ShowDashBoard)<br>\r\n{<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">     </span><span style=\"font-size:13px\">      RegionManager.Regions[</span><span style=\"color:#2b91af;font-size:13px\">RegionNames</span><span style=\"font-size:13px\">.MainRegion].Activate(<span style=\"color:#2b91af;font-size:13px\">dashBoradView </span>);<br>\r\n}<br>\r\n}<br>\r\n);<br>\r\n<br>\r\nThen evey thing is fine. <br>\r\nIs it a problem to put the registration to the view inside the event aggregator action.<br>\r\n<br>\r\nThanks...<br>\r\n</span><br>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2009-05-01T12:42:36.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186272",
    "ThreadId": "55088",
    "Html": "I'm not entirely clear when your Publishing of the event occurs but if I were to guess I'd say that the most likely reason this isn't working as you expect is because the Publish is called <em>after</em> the Subscribe. In this case the event aggregator will loose the event. Can you step through your code and see if Publish is being called before the view is registered and subscribes to the event.<br>\r\n<br>\r\nAde<br>\r\n",
    "PostedDate": "2009-05-03T07:56:55.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186318",
    "ThreadId": "55088",
    "Html": "Thank you for the reply,<br>\r\n<br>\r\n1. The event is published by button clicking. So , it's sure the subscription comes after the publish.<br>\r\n2. The same code is working like the second example I supplied , only the first one example doesn't work.<br>\r\n<br>\r\nThe important thing it's working for me now although in the second way, but I was so surprised about the problem.<br>\r\n<br>\r\nThanks.\r\n",
    "PostedDate": "2009-05-03T12:08:21.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186654",
    "ThreadId": "55088",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I have been able to reproduce your situation and found the cause for it. When you use the first approach, you are instantiating your view inside the event handler. Thus, you are not creating a view unless the event is fired.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">However, in the second approach you create the view whether the event is handled or not. By doing that you are preventing the subscriber in the module initializer from being Garbage Collected, which is the reason the event handler is executed.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:calibri\">The Composite Application Library was designed with this scenario in mind. What you can do to use the first approach is keep a reference of the subscriber. You can read more about this </span><a href=\"http://msdn.microsoft.com/en-us/library/dd458904.aspx\"><span style=\"font-family:calibri\">here</span></a><span style=\"font-family:calibri\">. This could be memory leak prone, so you should unsubscribe when you don’t need the handler to be executed any more. The </span><a href=\"http://msdn.microsoft.com/en-us/library/dd458918.aspx\"><span style=\"color:#0000ff;font-family:calibri\">Event Aggregation Quickstart</span></a><span style=\"font-family:calibri\"> shows how to unsubscribe and subscribe to events.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The following blog post also talks about a  similar situation:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-align:justify\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://neverindoubtnet.blogspot.com/2009/05/prism-event-aggregator-subscription.html\"><span style=\"font-family:calibri\">Prism Event Aggregator Subscription Blues</span></a>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></span></span></p>\r\n",
    "PostedDate": "2009-05-04T12:48:00.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]