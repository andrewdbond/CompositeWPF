[
  {
    "Id": "171109",
    "ThreadId": "51053",
    "Html": "Hi all,<br>\r\n<br>\r\nI'm having an issue that I could do with some help with.<br>\r\n<br>\r\nI'm running an application with 2 modules (ModuleA &amp; ModuleB). Before Silverlight 3 Beta was released I was using a simple custom navigation model in which I would navigate directly to an object rather than to a URI. Now I'm trying to migrate to using the proper navigation framework provided.<br>\r\n<br>\r\nI've setup my UriMappings in App.xaml to point to a view within a module (a .xap package) like so:<br>\r\n<br>\r\n&lt;navcore:UriMapping Uri=&quot;MyViewA&quot; MappedUri=&quot;/ModuleA;component/Views/MyView.xaml&quot;/&gt;<br>\r\n&lt;navcore:UriMapping Uri=&quot;MyViewB&quot; MappedUri=&quot;/ModuleB;component/Views/MyView.xaml&quot;/&gt;<br>\r\n<br>\r\nNow when I browse to MyViewA or MyViewB the navigation system successfully finds the right .xaml file but is then unable to find the class which the XAML file references (x:Class=&quot;...&quot;). I've tracked down the cause of this issue to the fact that the navigation framework loops through all the available AssemblyPart instances (Deployment.Current.Parts) and tries to find a matching assembly within the list. These are, of course, the list of assemblies defined in in the AppManifest.xaml file.<br>\r\n<br>\r\nWith Prism 2, both of my modules are loaded dynamically and so don't have any reference in AppManifest.xaml and so there will never be a match. However, the type that is required is still loaded by the Silverlight client it just isn't in the Parts collection. Type.GetType(&quot;ModuleA.MyView&quot;) would still work, but never gets called.<br>\r\n<br>\r\nSo, what I'm looking for is a way to dynamically add a dynamically loaded assembly from a package into the Deployment.Current.Parts collection and to be recognised.<br>\r\n<br>\r\nI've tried adding several assembly parts, but none of them will be resolved in a call to Application.GetResourceStream(Uri):<br>\r\n<br>\r\n- new AssemblyPart { Source = &quot;/ModuleA&quot; }<br>\r\n- new AssemblyPart { Source = &quot;/ModuleA.xap&quot; }<br>\r\n- new AssemblyPart { Source = &quot;/ModuleA;component/ModuleA.dll&quot; }<br>\r\n- new AssemblyPart { Source = &quot;/ModuleA.xap;component/ModuleA.dll&quot; }<br>\r\n<br>\r\nIs anybody aware of a URI that I could use that would resolve from a call to Application.GetResourceStream(Uri) (which System.Windows.Navigation does, not me, so I can't use the overload which allows a package stream to be passed in).<br>\r\n<br>\r\nThanks in advance,<br>\r\nScriv\r\n",
    "PostedDate": "2009-03-23T17:23:27.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172015",
    "ThreadId": "51053",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Scriv,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">I have been able to reproduce your issue but could not find a fix/workaround for it. My approach updating the code of the <b>LoadAssemblyFromStream </b>method of the <b>XapModuleTypeLoader</b> class provided by the CAL (this is not the best approach, but if it had worked you could have created a custom module type loader):</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">    private static void LoadAssemblyFromStream(Stream sourceStream, AssemblyPart assemblyPart)</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        {</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            Stream assemblyStream = Application.GetResourceStream(</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                new StreamResourceInfo(sourceStream, null),</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">                new Uri(assemblyPart.Source, UriKind.Relative)).Stream;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            assemblyPart.Load(assemblyStream);</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            <b>Deployment.Current.Parts.Add(assemblyPart); //This is the new line.</b></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">        }</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">This behavior however, only takes place when loading modules remotely (I have tried loading modules statically and been able to perform navigation successfully).</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:calibri\">Bear in mind that Prism-v2 was not focused on providing navigation support, not even for WPF. If you feel that a future version of Prism (which will target Siliverlight 3.0 &amp; WPF 4.0 as </span><a href=\"http://blogs.msdn.com/dphill/\"><span style=\"color:#0000ff;font-family:calibri\">David Hill</span></a><span style=\"font-family:calibri\"> says in </span><a href=\"http://blogs.msdn.com/dphill/archive/2009/03/18/mix-09.aspx\"><span style=\"color:#0000ff;font-family:calibri\">this post</span></a><span style=\"font-family:calibri\">) should have this feature, or another one included, you could create an item in the </span><a href=\"http://compositewpf.codeplex.com/WorkItem/List.aspx\"><span style=\"color:#0000ff;font-family:calibri\">IssueTracker</span></a><span style=\"font-family:calibri\">, so people can vote for it. The team might take it into account for future versions.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span>\r\n",
    "PostedDate": "2009-03-25T12:55:15.42-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]