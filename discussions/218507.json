[
  {
    "Id": "463933",
    "ThreadId": "218507",
    "Html": "<p>Hello everybody,</p>\r\n<p>As you all know, I've been working on the new version of my smart client&nbsp;framework, <a title=\"Genesis Smart Client Framework\" href=\"http://genesissmartclient.codeplex.com\">The Genesis Smart Client Framework</a>, building it from the ground up using only the best standards and practices. This include for one, using the Composite Application Library to achieve better modularization than what I had in the previous version, and of course open the framework up to a broader audience skilled in its methodologies. One of the other standards that I'm implementing is the use of the Microsoft ASP.NET Membership Security Model.</p>\r\n<p>I have applied an ASP.NET Membership database, and by using the Application Services I have exposed an Authentication, Membership and Profile WCF service to the client.</p>\r\n<p>My problem is that Microsoft by default implements the Client Services (a.k.a. Application Services) for Windows Forms applications, and while this is available for use with WPF, it is sadly not available for Silverlight. I have implemented my own client calls for the Authentication, Membership and Profile WCF services that compile on both WPF and Silverlight (BTW: I am attempting a 100% Multi-Targeted development for this project, with as much code-reuse between WPF and Silverlight as possible) and that enable access to the back-end services from a single code base.</p>\r\n<p>I need some guidance on the correct approach to implement the login dialog box for WPF and Silverlight to prevent any loading of the Shell until a user has been authenticated. I'd also like some basic support for Unauthenticated users as well, so maybe the shell should load, however only the modules should be loaded for the Authenticated user once they've signed in. Any ideas are welcome.</p>\r\n<p>Please download my latest checkin on <a title=\"Changeset 48420\" href=\"http://genesissmartclient.codeplex.com/SourceControl/changeset/changes/48420\">Changeset 48420</a>&nbsp;and review the <strong>Ruby</strong> project.</p>\r\n<p>The services are located in the BlueMarble.Genesis.Service project.</p>\r\n<p>The Security classes are located in the BlueMarble.Genesis.Infrastructure, Desktop &amp; Web projects under the Security folder.</p>\r\n<p>The Bootstrapper has been modified to allow the initial authentication.</p>\r\n<p>Thanks in advance,</p>\r\n<p>Stephan</p>",
    "PostedDate": "2010-07-06T13:04:51.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "464883",
    "ThreadId": "218507",
    "Html": "<p>Hi Stephan,</p>\r\n<p>Nice to see that you are building your framework based on the guidance that p&amp;p provided. Regarding the login topic, it was also discussed in the following threads:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=84031\">Prism + login page</a> </li>\r\n<li><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=65777\">Best practice to launch login modal before the shell</a> </li>\r\n<li><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=83910\">Login Page with Prism(CAG)</a> </li>\r\n<li><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=84032\">prism + login page prior shell load or bootstaper run</a> </li>\r\n<li><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=58292\">Show login modal form before</a> </li>\r\n</ul>\r\n<p>Please let me know if this helps.</p>\r\n<p>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n<p><strong>&nbsp;</strong></p>",
    "PostedDate": "2010-07-08T08:17:55.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "465053",
    "ThreadId": "218507",
    "Html": "<p>Hi Fernando,</p>\r\n<p>Thanks for the reply, I found the articles to be very informative. However all of these articles focus on enforcing the authentication before the user is allowed to access the system. One briefly mentions allowing the user access to the software before authentication without much elaboration.</p>\r\n<p>I'd like to have the potential for Anonymous users for this release of Genesis. My idea is that I can provide a working surface similar to <a href=\"http://www.Google.com/ig\">www.Google.com/ig</a>, Sharepoint or DotNetNuke. Anonymous users should have access to the system, and depending on the developer implementation of his/her application, there could be public modules, or none at all.</p>\r\n<p>I have no intention of writing a Content Management System, however PRISM, with dynamic module loading and IOC, lends itself so nicely to the idea. Users are already used to being able to drag and drop their own &quot;modules&quot; to where they like to use them on a screen layout that they are comfortable with. I'd like to be able to provide some level of user-personalization support in this version of Genesis.</p>\r\n<p>If you have a look at the standard Silverlight Business/Navigation applications, users have anonymous access until they click on the Login link, whereafter the application is aware of who the user is. This implementation has no real intelligence as to what screens to show/hide based on authentication. Custom code has to be written on each screen to prevent unauthorized access. If the developer chooses to apply Role requirements to the RIA services, he/she still has to write code to prevent an unauthorized user from accessing a view that would call the RIA method. If they did not, an ugly exception is shown to the user, in most cases not even telling the user what he/she did wrong.</p>\r\n<p>I am also not looking for a de-facto implementation of said security system, I am really asking for some idea's from the community at this point in time. I have been playing with the security in Genesis for the last two weeks and I feel that I'm just not being creative enough. ie. Today I was thinking of running two bootstrappers, one for authentication and then the main application one. However all of my thinking keeps along the lines of sign-in-first.</p>\r\n<p>I have to take into account that <a href=\"http://www.google.com/ig\">www.google.com/ig</a> allows no customization until the user has been authenticated, however Sharepoint and DotNetNuke allow for anonymous access. Facebook is useless until you've signed in, and Twitter allows you to read the public tweets. My problem is that I don't know what applications I, or anybody else using Genesis, will develop on the framework. I cannot enforce a model, it has to be flexible to allow the developer to choose how he/she wants the application to behave.</p>\r\n<p>Any feedback is appreciated</p>\r\n<p>Regards</p>\r\n<p>Stephan Johnson<br><a href=\"http://www.bluemarble.co.za/blogs/stephan.aspx\">http://www.bluemarble.co.za/blogs/stephan.aspx</a></p>",
    "PostedDate": "2010-07-08T13:17:21.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]