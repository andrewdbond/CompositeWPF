[
  {
    "Id": "78813",
    "ThreadId": "23523",
    "Html": "\r\nCurrently use CAB+SCSFContrib WPF port as a basis for a WPF composite application.<br /><br />The paradigm we use: (an altered version of SCSF MVP)<br />A) AbstractPresenter&lt;TView&gt; inherits from DependencyObject<br />B) Services are exposed as DependencyProperties of the Presenter (They are offcourse injected to the presenter by CAB)<br />C) Abstract presenter sets itself as the datacontext of its view<br />D) View widgets bind to properties exposed by the services exposed by the presenter (the presenter is the data context...)<br /><br />We found that because our view binds to data this way and use ICommand.CanExecute there is almost nothing in most of our IViews (i.e the interfaces which hide the view implementation from the presenter).<br /><br />What is the paradigm for Prism?<br /><br />Acer<br /><br /><br /><br />",
    "PostedDate": "2008-03-06T12:06:01.673-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]