[
  {
    "Id": "156539",
    "ThreadId": "46803",
    "Html": "<p>Hi,</p>\r\n<p>Why in ModuleManager you have IEnumerable collection of\r\nloaders with single loader inside it?</p>\r\n<p>Best regards,<br>\r\nAlexey Zakharov.</p>\r\n",
    "PostedDate": "2009-02-10T22:20:14.947-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156643",
    "ThreadId": "46803",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Alexey,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The reason there is only a single loader is because the <b>XapModuleTypeLoader</b> is the only class that implements the <b>IModuleTypeLoader</b> interface (in Silverlight) out-of-the-box, in the Composite Application Library. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">You could create your custom type loader/retriever, by implementing the aforementioned interface and set the <b>TypeLoaders</b> IEnumerable collection.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span>\r\n",
    "PostedDate": "2009-02-11T06:17:49.57-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156646",
    "ThreadId": "46803",
    "Html": "Thanks Damian, now everything is clear.<br>\r\n",
    "PostedDate": "2009-02-11T06:34:04.013-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]