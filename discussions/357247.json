[
  {
    "Id": "841236",
    "ThreadId": "357247",
    "Html": "\r\n<p>I am facing a problem switching to a view. Here is the code using composite Command :<br>\r\nShell View Model :</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Navigate(<span style=\"color:blue\">object</span> navigatePath) <span style=\"color:green\">// this method handls a composite command with a path set in XAML CommandParameter=&quot;{x:Type ViewModels:MainViewModel}&quot;</span>\n    {\n        <span style=\"color:blue\">if</span> (navigatePath != <span style=\"color:blue\">null</span>)\n        {\n           _regionManager.RequestNavigate(RegionNames.ContentRegion, navigatePath.ToString());\n        }\n    }\n\nIn the ModuleA Initialize method :\n_container.RegisterType&lt;IMainView,MainView&gt;();\n_container.RegisterTypeForNavigation&lt;MainViewModel&gt;();\n\n\nRegisterTypeForNavigation <span style=\"color:blue\">is</span> a Unity extension <span style=\"color:blue\">set</span> like <span style=\"color:blue\">this</span> :\n\n <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> RegisterTypeForNavigation&lt;T&gt;(<span style=\"color:blue\">this</span> IUnityContainer container)\n    {\n        container.RegisterType(<span style=\"color:blue\">typeof</span>(Object), <span style=\"color:blue\">typeof</span>(T), <span style=\"color:blue\">typeof</span>(T).FullName);\n    }\n</pre>\r\n</div>\r\n<p>When I click on the navigate button: I get only the full name of the view model Like : ModuleA.ViewModels.MainViewModel in the shell ! Am I doing anything wrong ?</p>\r\n",
    "PostedDate": "2012-05-26T10:31:59.717-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "841771",
    "ThreadId": "357247",
    "Html": "<p>Hi,</p>\r\n<p>As you are using <strong>view model </strong>first approach, when you navigate to an specific <strong>view model</strong>, that <strong>view model </strong>will be injected in the <strong>Region</strong>, not its corresponding <strong>view</strong>. And as the <strong>view model</strong> does not have a visual representation on its own, it's rendered as its <strong>string </strong>representation.</p>\r\n<p>Based on my understanding, if you wish to use navigation and <strong>view model first</strong> approach you will need to use <strong>DataTemplates </strong>in the corresponding regions as mentioned by Guido Maliandi in <a href=\"http://compositewpf.codeplex.com/discussions/250936\">this thread</a>.</p>\r\n<p>For example, if you have a region named \"<em><strong>MainRegion</strong></em>\" and you will navigate on that region using <strong>view model first</strong>, you could define a <strong>DataTemplate </strong>for each view model you have, so that it creates the associated view when a view model of the corresponding type is injected in the region:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ItemsControl</span> <span style=\"color: red;\">Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MainRegion</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">cal:RegionManager.RegionName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MainRegion</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ItemsControl.ItemTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">DataTemplate</span> <span style=\"color: red;\">DataType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">viewModels:MainViewModel</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">views</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">MainView</span><span style=\"color: blue;\">/&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">DataTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ItemsControl.ItemTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ItemsControl</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>The view model you injected into the region will be automatically set as the <strong>DataContext </strong>of the view.</p>\r\n<p>However, I believe a better approach could be to have each view model to hold a reference to its corresponding view and show that view through <strong>data binding</strong>. For example, if all of your view models implement an interface named <strong>IViewModel </strong>which defines a <strong>View </strong>property, which will be used by the view models to expose their views, you can simply define a generic <strong>DataTemplate </strong>that should work for all of your view models in a more decoupled fashion:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ItemsControl</span> <span style=\"color: red;\">Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MainRegion</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">cal:RegionManager.RegionName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MainRegion</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ItemsControl.ItemTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">DataTemplate</span> <span style=\"color: red;\">DataType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">infra:IViewModel</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ContentControl</span> <span style=\"color: red;\">Content</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding View}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">DataTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ItemsControl.ItemTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ItemsControl</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>Also, I believe you could find the following thread interesting were a similar topic was discussed:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/284238\">Using MVVMP with navigation</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-05-28T12:13:35.047-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "842247",
    "ThreadId": "357247",
    "Html": "<p>Hi&nbsp;DCherubini,</p>\r\n<p>I would like to thank you about your intresting reply.</p>\r\n<p>Fortunately I knew my mistake.</p>\r\n<p>Mr.Brian Lagunas has&nbsp;recommended&nbsp;me using View first approach. so I've changed all my project implementing it. and everything is working well up to now.</p>\r\n<p>Thnaks</p>",
    "PostedDate": "2012-05-29T13:06:24.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]