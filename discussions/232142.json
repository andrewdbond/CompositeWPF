[
  {
    "Id": "511844",
    "ThreadId": "232142",
    "Html": "\r\n<p>I'm trying to figure out an issue I'm having with Regions.</p>\r\n<p>I have a UserControl that registers 3 regions in my main silverlight app.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;telerik:RadRibbonBar Grid.Row=&quot;0&quot; IsMinimized=&quot;True&quot; Margin=&quot;0&quot;\r\n                                            HelpButtonVisibility=&quot;Collapsed&quot;&gt;\r\n            &lt;telerik:RadRibbonBar.QuickAccessToolBar&gt;\r\n                &lt;telerik:QuickAccessToolBar x:Name=&quot;RootToolbarRegion&quot; Regions:RegionManager.RegionName=&quot;RootToolbarRegion&quot; common:QATBRegionAdapter.ItemContainerStyle=&quot;{StaticResource QATBRegionStyle}&quot;   &gt;\r\n                    &lt;!-- ItemsSource=&quot;{Binding QATBButtons}&quot; ItemTemplate=&quot;{StaticResource QATBTemplate}&quot; --&gt;\r\n                &lt;/telerik:QuickAccessToolBar&gt;\r\n            &lt;/telerik:RadRibbonBar.QuickAccessToolBar&gt;\r\n            &lt;telerik:RadRibbonBar.ApplicationMenu&gt;\r\n                &lt;telerik:ApplicationMenu x:Name=&quot;RootApplicationMenuRegion&quot; Regions:RegionManager.RegionName=&quot;RootApplicationMenuRegion&quot; &gt;\r\n                &lt;/telerik:ApplicationMenu&gt;\r\n            &lt;/telerik:RadRibbonBar.ApplicationMenu&gt;\r\n        &lt;/telerik:RadRibbonBar&gt;\r\n        &lt;sdk:TabControl Grid.Row=&quot;1&quot; Grid.RowSpan=&quot;2&quot; HorizontalAlignment=&quot;Stretch&quot; Margin=&quot;0&quot; Name=&quot;RootContentRegion&quot; VerticalAlignment=&quot;Stretch&quot;\r\n                        Regions:RegionManager.RegionName=&quot;RootContentRegion&quot;\r\n                        Regions:TabControlRegionAdapter.ItemContainerStyle=&quot;{StaticResource CustomTabItemStyle}&quot;\r\n                        &gt;\r\n        &lt;/sdk:TabControl&gt;\r\n</pre>\r\n<pre>In a module, I try to register with the regions. </pre>\r\n<pre>This code works fine.</pre>\r\n<pre style=\"color:black; background-color:white\"><pre>            IRegion _rootContentRegion = _regionManager.Regions[GlobalRegionNames.RootContentRegion];\r\n            _rootContentRegion.Add(_module1RootTemplateView, ReflectionUtility.GetPropertyName(() =&gt; _module1RootTemplateView));\r\n</pre>\r\n<pre>However, the RootContentRegion is the only region I see when I break in so this code fails.</pre>\r\n<pre>&nbsp;</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><font face=\"Consolas\" size=\"2\"><p>&nbsp;</p></font></span></span></span><p><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"></p><p><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"></p><p><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">//IRegion _rootToolBarRegion = _regionManager.Regions[GlobalRegionNames.RootToolbarRegion];</span></p></span><p></p></span><p></p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><font face=\"Consolas\" size=\"2\"><p>&nbsp;</p></font></span></span></span><p><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">//_rootToolBarRegion.Add(_rootToolBarView, ReflectionUtility.GetPropertyName(() =&gt; _rootToolBarView));</span></span></span></p><p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">&nbsp;</span></span></span></span></span>&nbsp;</p><p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">However, what really doesn't make sense, if I run this code, </span></span></span></span></span></p><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><p>IRegionManager</p></span></span></span><p>&nbsp;</p></span><p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">_rootToolBarRegion = _regionManager.RegisterViewWithRegion(</span></span><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\">GlobalRegionNames</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">.RootToolbarRegion, </span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">typeof</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">(</span></span><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\">RootToolBarView</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"> </p><p><span style=\"font-family:Consolas; font-size:x-small\">));</span></p></span><p></p><p><span style=\"color:#0000ff\">Then it successufully registers the view with the Region.  If the region isn't there, how does RegisterViewWithRegion find it and register the view?  Or conversely, if the region is present, then when I set a break point, why can't I see the region in the regionManager?&nbsp;</span></p><p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">&#65279;</span></span></span></span></span></p><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\"><span style=\"font-family:Consolas; color:#008000; font-size:x-small\">&nbsp;</span></span></span></pre>\r\n</pre>\r\n<pre style=\"color:black; background-color:white\">&nbsp;</pre>\r\n<pre> </pre>\r\n</div>\r\n",
    "PostedDate": "2010-10-24T15:17:03.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "512278",
    "ThreadId": "232142",
    "Html": "\r\n<p>Hi,</p>\r\n<p>There are two techniques in Prism for <a href=\"http://msdn.microsoft.com/en-us/library/ff921098%28PandP.20%29.aspx\">\r\nUI Composition</a>. The first one is View Injection , while the other is named View Discovery, and both of them can be used for composing the UI of your application.</p>\r\n<p>However, they are used for different situations. For more information on this topic, you could take a look at the following documentation section on MSDN:\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921075%28PandP.20%29.aspx\">UI Composition</a>, see the\r\n<em>When to Use View Discovery vs. View Injection </em>section.</p>\r\n<p>That said, when you use the Add method in the Region class, you are using View Injection. This technique requires for an existent region in the Region Manager. So, if you receive an exception when adding views, it might be possible that the region has not\r\n been added to your Region Manager.</p>\r\n<p>It may occurs because:</p>\r\n<ol>\r\n<li>The view which contains the region that you are using is not present in the Region Manager.\r\n</li><li>The UI control which is exposed as a region does not derive from <strong>System.Windows.Controls.ContentControl, System.Windows.Controls.Primitives.Selector, System.Windows.Controls.ItemsControl or Silverlight TabControl</strong>.\r\n<br>\r\nTherefore, you will need to write your custom region adapter. For more information on this topic you could check the following documentation section on MSDN:\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921129%28PandP.20%29.aspx\">How to: Create a Custom Region Adapter</a>\r\n</li></ol>\r\n<p>On the other hand, when you use the RegisterViewWithRegion method in the RegionManager class, you are using View Discovery. In this case, this technique does not require to create regions previously, since this allows you to set up a relationship between\r\n a region's name and the type of a view.</p>\r\n<p>From the MSDN documentation: <em>View Discovery... when a region is created, the region looks for all the\r\n<strong>ViewTypes</strong> associated with the region and automatically instantiates and loads the corresponding views</em>.</p>\r\n<p><strong></strong>Therefore, I would recommend you to review which technique fits better in your scenario and after that it might be necessary to create a custom region adapter for your UI control.</p>\r\n<p>Hope this helps.</p>\r\n<p>Fernando Antivero <br>\r\n<a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>\r\n",
    "PostedDate": "2010-10-25T10:43:13.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "512301",
    "ThreadId": "232142",
    "Html": "\r\n<p>Ok, I guess the confusion on my part is thinking that the RegionAdapter was for implementing a style template when things get added.</p>\r\n<p>You are correct, the Region that's showing up is in a Content control.&nbsp; The other regions are in 3rd party controls.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-10-25T11:19:04.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "512422",
    "ThreadId": "232142",
    "Html": "\r\n<p>Having time to research this, the control I'm putting the the region in does inherit from ItemsControl.</p>\r\n<p>I tried creating a RegionAdapter anyway but still it's not showing up in the RegionManager.&nbsp;</p>\r\n<p>It's a part of the Sample I posted on the other issue.</p>\r\n<p><a href=\"http://cid-ff05a29e13af7bfd.office.live.com/self.aspx/.Public/ModuleTemplate.rar\">http://cid-ff05a29e13af7bfd.office.live.com/self.aspx/.Public/ModuleTemplate.rar</a></p>\r\n<p>RootShellTemplate.xaml is the file where Regions are being defined.</p>\r\n<p>The RootToolbarRegion &amp; RootApplicationMenuRegion are the regions that aren't showing up.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-10-25T15:32:49.397-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]