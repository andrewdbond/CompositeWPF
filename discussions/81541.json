[
  {
    "Id": "279930",
    "ThreadId": "81541",
    "Html": "<p>The native PRISM's modulariy mechanism support loading modules by path to assembly, containing this module. I want to have availability to store modules' views (XAML) in database in order end user could change and customize them. Database is chosen as it is simpler to store and retrieve information and requires no recompilation and making of binaries. The problem is that View consists of XAML and codebehind and we need to divide(?) them and store separately and when we need them we must clue them and load to module (with reflection or something else?) but I don't know how and if it is possible at all?<br><br></p>",
    "PostedDate": "2010-01-21T00:50:00.307-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "280547",
    "ThreadId": "81541",
    "Html": "<p id=516f6ee0-e8bf-012c-3d81-12313b049c51>Hi,</p>\r\n<p id=516f79a0-e8bf-012c-3d82-12313b049c51>Prism does not provide any support for this particular scenario. You could try asking this question in the <a href=\"http://social.msdn.microsoft.com/forums/en-US/wpf/threads/\">WPF forum</a>, where you might get a thorough response as how this can be done with WPF.</p>\r\n<p>To avoid the issue with the code behind, you could use automatic data templates (explained <a href=\"http://blogs.southworks.net/jdominguez/2008/09/presentation-model-with-datatemplates-in-compositewpf-prism-sample/\">here</a>). In the &quot;RegisterResources&quot; piece from the blog post, you would probably need to download and cache the xaml, and register a path to it.</p>\r\n<p id=516f85b0-e8bf-012c-3d83-12313b049c51>I hope this helps.</p>\r\n<p id=516f9250-e8bf-012c-3d84-12313b049c51>Damian Schenkelman <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-22T05:08:00.143-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]