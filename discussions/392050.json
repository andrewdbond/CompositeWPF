[
  {
    "Id": "900675",
    "ThreadId": "392050",
    "Html": "\r\n<p>Unable to Create the Modules Catalog via the Xaml file,<br>\r\nIt was easy&nbsp; to set it up via code, but found the Xaml method more practical, Although I couldn't make it run !<br>\r\n<br>\r\n<strong>**The Error :**</strong><br>\r\n<br>\r\n<em>&nbsp;&nbsp;&nbsp; If this error occurred when using MEF in a </em><br>\r\n<em>&nbsp;&nbsp;&nbsp; Silverlight application, please ensure that the CopyLocal property of the reference to the MefExtensions assembly</em><br>\r\n<em>&nbsp;&nbsp;&nbsp;&nbsp; is set to true </em><br>\r\n<br>\r\n<strong>**Code :**</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> IModuleCatalog CreateModuleCatalog()\n        {\n            Uri uri = <span style=\"color:blue\">new</span> Uri(String.Format(&quot;/{0};component\n                 /XamlCatalog.xaml&quot;,\n                Assembly.GetExecutingAssembly()),\n                UriKind.Relative);\n\n            <span style=\"color:green\">//Application.LoadComponent(uri);</span>\n\n            <span style=\"color:blue\">return</span>    Microsoft.Practices.Prism.Modularity.ModuleCatalog.CreateFromXaml(uri);\n        }\n</pre>\n</div>\n<br><br><br>I saw in the discussions here or some other places on a very few topics and not informative Q/A s<br>that this happened for people going this approach,<br>and As I guess based on some points on those topics,<br>I could say I have to make the <strong>CopyLocal </strong>of Most the Prism related DLLs to false and set a few to &quot;true&quot;<br><br><strong>Assume the structure should be similar to this :</strong><br><br><span style=\"text-decoration:underline\"><strong>\n<pre>Shell\n DLLs --&gt; Prism , Unity, ...\n\nModule1\n DLLS --&gt; Prism , Unity, ...</pre>\n</strong></span><br><br>Which Item's <strong>CopyLocal </strong>should be set to true which not ?!<br><br>Another important part that may be related to this problem could be about copying the Built module into the bin Folder of the Shell as I understood yet, <br>I did this also without getting the expected result<br><br> &nbsp;<br></pre>\r\n</div>\r\n",
    "PostedDate": "2012-08-17T07:50:59.52-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "900797",
    "ThreadId": "392050",
    "Html": "<p>Hi,</p>\r\n<p>I believe the error you are experiencing could be related to the known issues described in the following work items:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/7215\">Issue with ModuleCatalog.CreateFromXaml for WPF application with MEF Bootstrapper</a> (when using <strong>MEF</strong>)</li>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/7661\">Bug in LoadModuleType() of MefFileModuleTypeLoader.Desktop.cs</a> (when using <strong>Unity</strong>)</li>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/9452\">[Desktop] Relative file paths in \"Ref\"-attribute for modules registered in Xaml are not resolved correctly</a> (when using <strong>Unity</strong>)</li>\r\n</ul>\r\n<p>Take into account that when defining a module catalog in <strong>XAML </strong>in a <strong>WPF </strong>application, the properties of the module catalog (for example the <strong>Ref </strong>property) might have to be set differently that when using it in <strong>Silverlight</strong>. As a starting point, you can check the following sample that uses a module catalog defined in <strong>XAML </strong>inside a <strong>WPF + MEF + Prism</strong> application:</p>\r\n<ul>\r\n<li><a href=\"http://cid-12a8b70137345033.office.live.com/self.aspx/p%5E0p%20Samples/LoadingModulesFromXAMLSample.zip\">LoadingModulesFromXAMLSample.zip</a></li>\r\n</ul>\r\n<p>Based on my understanding, defining a module catalog in <strong>XAML </strong>is an approach usually used for <strong>Silverlight</strong>. Although it can be used in a <strong>WPF </strong>application, the recommended approach for <strong>WPF </strong>is to define a module catalog in a <strong>configuration file</strong>. You can find more information about defining a module catalog in a <strong>configuration file</strong> in the following section of the <strong>Prism </strong>documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28v=pandp.40%29#sec21\">Chapter 4 - Modular Application Development - Registering Modules Using a Configuration File</a></li>\r\n</ul>\r\n<p>Regarding the setting of the <strong>CopyLocal </strong>property of <strong>Prism</strong>'s assemblies, as far as I know, the only assembly that can cause problems if not set correctly is the <strong>Mef Extensions </strong>assembly (<strong><em>Microsoft.Practices.Prism.MefExtensions.dll</em></strong>.) This assembly should only be referenced when using <strong>MEF </strong>as the container in <strong>Prism </strong>(hence, if you are using <strong>Unity </strong>you should not use this assembly) and it should be set with <strong>CopyLocal = True</strong> in the Shell project and with <strong>CopyLocal = False</strong> in the other projects.</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-08-17T11:17:54.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "900853",
    "ThreadId": "392050",
    "Html": "\r\n<p>Your post is really helpful, thanks</p>\r\n<p>Will go back to this manner to find the real problem and solution,</p>\r\n<p>now returned back to it's alternative method.</p>\r\n",
    "PostedDate": "2012-08-17T13:51:57.773-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]