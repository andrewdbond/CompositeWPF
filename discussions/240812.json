[
  {
    "Id": "545262",
    "ThreadId": "240812",
    "Html": "\r\n<p>Hi there,</p>\r\n<p>&nbsp;</p>\r\n<p>I have been using Unity for a while now in ASP.NET MVC and it appears here in PRISM v4 it can also be used but i am confused about weather i should use MEF or UNITY for the DI? My new project with Prism v4 is with silverlight.</p>\r\n<p>&nbsp;</p>\r\n<p>It appears that MEF and Unity both do DI - am i correct here?</p>\r\n<p>&nbsp;</p>\r\n<p>If i am not mistaken then MEF is used to also load MODULES on demand like plugins.</p>\r\n<p>&nbsp;</p>\r\n<p>I suppose my problem here is do i continue to use UNITY or should i change over to MEF for the DI considering that MEF is needed for modular loading.</p>\r\n<p>&nbsp;</p>\r\n<p>Unity seems to have good documentation but MEF i can't seem to find good documentation. I would appreciate any feedback.</p>\r\n<p>&nbsp;</p>\r\n<p>Is Prism working towards combining MEF and unity, is it going to drop support for 1 over the other?</p>\r\n<p>&nbsp;</p>\r\n<p>Any help or information reallly appreciated</p>\r\n",
    "PostedDate": "2011-01-07T00:58:54.22-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "545385",
    "ThreadId": "240812",
    "Html": "\r\n<p>Yes they both do DI.</p>\r\n<p>Both will load modules equally the same</p>\r\n<p>If you are more familiar using Unity stick with what you know.</p>\r\n<p>MEF has docs at http://mef.codeplex.com</p>\r\n<p>As far as I have seen, no they are keeping them separate implementations.</p>\r\n",
    "PostedDate": "2011-01-07T06:36:31.15-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "545393",
    "ThreadId": "240812",
    "Html": "\r\n<p>Hi,</p>\r\n<p>As explained in <a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28PandP.40%29.aspx\">\r\nthis chapter</a> from the Prism MSDN documentation, Prism is container agnostic, so you can leverage either MEF or Unity or any other Dependency Injection mechanism for your application. From the documentation,\r\n<em>&quot;Dependency injection containers, often referred to as just &quot;containers,&quot; are used to satisfy dependencies between components; satisfying these dependencies typically involves registration and resolution. The Prism Library provides support for the Unity\r\n container and for MEF, but it is not container-specific&quot;</em></p>\r\n<p>The choice for which container to use depends on your preference<em>. </em>You can download and load modules on demand using Unity, as well as MEF. For example, there is a\r\n<strong>MefXapModuleTypeLoader </strong>class and a <strong>XapModuleTypeLoader </strong>\r\nclass available in the Prism Library, which handle remote module downloading for MEF and other containers, respectively. You can read more about this in the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28PandP.40%29.aspx\">Modularity chapter</a> of the Prism MSDN documentation.</p>\r\n<p>As for the MEF documentation, you might find the following resources useful:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/dd460648.aspx\">Managed Extensibility Framework Overview</a>\r\n</li><li><a href=\"http://mef.codeplex.com/wikipage?title=Guide&referringTitle=Home\">MEF Programming Guide</a>\r\n</li><li><a href=\"http://mef.codeplex.com/discussions\">MEF Codeplex forum</a> </li></ul>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi<br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-07T06:47:07.35-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]