[
  {
    "Id": "166769",
    "ThreadId": "49825",
    "Html": "I've been banging my head against the keyboard for a while now, and I'm probably missing something really obvious...<br>\r\n<br>\r\n(Should also note that I'm new to Prism, so I'm still trying to get my head around how it all hangs together)<br>\r\n<br>\r\nI've putting together a test case app (just to make sure that what I want to do is all going ot work relatively easily), and I've used Erwin's Outlook sample as the basis. First thing I've done is try and port the app to Silverlight, but I can't seem to sort out the toolbar button binding (from the MainUsesCases). The buttons all load fine, but I can't seem to hook the button to the delegate ICommand - I'm using the Commands:Click.Command={Binding ...} approach, but it keeps choking on that. <br>\r\n<br>\r\nThe error I keep getting is &quot;Unknown attribute Click.Command on element Button&quot;<br>\r\n<br>\r\nIt's probably (hopefully) a ridiculously simple solution, and I'll look like a goose for not being able to work it out myself, but whatever.... :(<br>\r\n<br>\r\nI currently have in the header<br>\r\nxmlns:cmds=&quot;clr-namespace:Microsoft.Practices.Composite.Presentation.Commands;assembly=Microsoft.Practices.Composite.Presentation&quot;<br>\r\n<br>\r\nAnd in the toolbar content area (problem child in bold):<br>\r\n&lt;Grid Grid.Row=&quot;0&quot; Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot; x:Name=&quot;ToolbarContent&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ItemsControl x:Name=&quot;MainToolbar&quot; ItemsSource=&quot;{Binding MainUseCases}&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HorizontalAlignment=&quot;Left&quot; VerticalAlignment=&quot;Top&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ItemsControl.ItemTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button Content=&quot;{Binding Path=Name}&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>cmds:Click.Command=&quot;{Binding Path=ActivateUseCaseCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}&quot;</strong>/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ItemsControl.ItemTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ItemsControl&gt;<br>\r\n&lt;/Grid&gt;<br>\r\nEvery thing else is pretty much as is from the sample (however, it should be noted that I have ported the Outlook.Infrastructure app to VB.NET, as I'm a little more comfortable working in it)<br>\r\n<br>\r\n- Matt<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-11T00:24:29.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166792",
    "ThreadId": "49825",
    "Html": "Hi Matt!<br>\r\n<br>\r\nOne generic problem what is obvious to me is that RelativeSource property does not exists in Silverlight.<br>\r\n<br>\r\nOnly the following properties supported as of Silverlight 2:<br>\r\n•Converter <br>\r\n•ConverterCulture <br>\r\n•ConverterParameter <br>\r\n•Mode <br>\r\n•Source <br>\r\n•Path <br>\r\n•NotifyOnValidationError <br>\r\n•ValidatesOnExceptions <br>\r\n<br>\r\nOn the other hand the Stock Trader Reference implementation is quite a complete sample where you can find a sample for everything what you should need for your first Prism based app (I've already experienced this :-)).<br>\r\n<br>\r\nCheck out WatchListView.xaml file. In that view they're using ObservableCommand as StaticResource as a workaround due to the lack of RelativeSource support in Silverlight.<br>\r\n<br>\r\nHope this helps,<br>\r\nAttila \r\n",
    "PostedDate": "2009-03-11T01:34:04.913-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166964",
    "ThreadId": "49825",
    "Html": "Hi gaffa,<br>\r\n<br>\r\nYou have stumbled on an interesting point, which we've also ran into when we were building Prism. &quot;You can't do relative binding in Silverlight. &quot;<br>\r\n<br>\r\nYou basically have two options to solve this 'problem'.<br>\r\n1. Implement the activation command on the items in the collection (in the case of the outlook style app, that would be on the IActiveAwareUseCaseControllers<br>\r\n2. As Attila mentiones: Place your command in a static resource. Look in the StockTrader RI in the PositionSummaryView.xaml (the BuyCommand and SellCommand use this trick)<br>\r\n<br>\r\nHOpe this helps.<br>\r\nErwin\r\n",
    "PostedDate": "2009-03-11T10:11:35.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "167016",
    "ThreadId": "49825",
    "Html": "I have run into the same binding issue.  I looked at the PositionSummary and have implemented the ObservableCommand class in my Infrastructure module.<div><br></div><div><br><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\"><span style=\"color:rgb(0, 0, 255)\">namespace</span> FuzzyConfig.Infrastructure</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">{</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(43, 145, 175)\"><span style=\"color:rgb(0, 0, 0)\">    </span><span style=\"color:rgb(0, 0, 255)\">public</span><span style=\"color:rgb(0, 0, 0)\"> </span><span style=\"color:rgb(0, 0, 255)\">class</span><span style=\"color:rgb(0, 0, 0)\"> </span>ObservableCommand<span style=\"color:rgb(0, 0, 0)\"> : </span>ObservableObject<span style=\"color:rgb(0, 0, 0)\">&lt;</span>ICommand<span style=\"color:rgb(0, 0, 0)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">    {</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">    }</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">}</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\"></p><div>I added the Resources to  my user control<br></div><div><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">    <span style=\"color:rgb(0, 0, 255)\">&lt;</span>UserControl.Resources<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">        <span style=\"color:rgb(0, 0, 255)\">&lt;</span>infrastructure<span style=\"color:rgb(0, 0, 255)\">:</span>ObservableCommand<span style=\"color:rgb(255, 0, 0)\"> x</span><span style=\"color:rgb(0, 0, 255)\">:</span><span style=\"color:rgb(255, 0, 0)\">Key</span><span style=\"color:rgb(0, 0, 255)\">=&quot;RemoveSetCommand&quot; /&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">        <span style=\"color:rgb(0, 0, 255)\">&lt;</span>infrastructure<span style=\"color:rgb(0, 0, 255)\">:</span>ObservableCommand<span style=\"color:rgb(255, 0, 0)\"> x</span><span style=\"color:rgb(0, 0, 255)\">:</span><span style=\"color:rgb(255, 0, 0)\">Key</span><span style=\"color:rgb(0, 0, 255)\">=&quot;EditSetCommand&quot; /&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">    <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>UserControl.Resources<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><div><span style=\"color:rgb(0, 0, 255);font-family:helvetica;font-size:10px\"><br></span></div><div>Below is the mark up for my ListBox</div><div><br></div><div><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(0, 0, 255)\"><span style=\"color:rgb(163, 21, 21)\">            </span>&lt;<span style=\"color:rgb(163, 21, 21)\">ListBox</span><span style=\"color:rgb(255, 0, 0)\"> x</span>:<span style=\"color:rgb(255, 0, 0)\">Name</span>=&quot;InputSetList&quot;<span style=\"color:rgb(255, 0, 0)\"> MinHeight</span>=&quot;150&quot;<span style=\"color:rgb(0, 0, 0)\"> </span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(255, 0, 0)\"><span style=\"color:rgb(0, 0, 0)\">                    </span> ItemsSource<span style=\"color:rgb(0, 0, 255)\">=&quot;{</span><span style=\"color:rgb(163, 21, 21)\">Binding</span> FuzzyBlock<span style=\"color:rgb(0, 0, 255)\">.</span>InputSets<span style=\"color:rgb(0, 0, 255)\">}&quot;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(255, 0, 0)\"><span style=\"color:rgb(0, 0, 0)\">                    </span> SelectedItem<span style=\"color:rgb(0, 0, 255)\">=&quot;{</span><span style=\"color:rgb(163, 21, 21)\">Binding</span> SelectedFuzzySet<span style=\"color:rgb(0, 0, 255)\">,</span> Mode<span style=\"color:rgb(0, 0, 255)\">=TwoWay}&quot;&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                <span style=\"color:rgb(0, 0, 255)\">&lt;</span>ListBox.ItemTemplate<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                    <span style=\"color:rgb(0, 0, 255)\">&lt;</span>DataTemplate<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                        <span style=\"color:rgb(0, 0, 255)\">&lt;</span>Border<span style=\"color:rgb(255, 0, 0)\"> BorderThickness</span><span style=\"color:rgb(0, 0, 255)\">=&quot;1&quot;</span><span style=\"color:rgb(255, 0, 0)\"> BorderBrush</span><span style=\"color:rgb(0, 0, 255)\">=&quot;BurlyWood&quot;&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(0, 0, 255)\"><span style=\"color:rgb(163, 21, 21)\">                            </span>&lt;<span style=\"color:rgb(163, 21, 21)\">StackPanel</span><span style=\"color:rgb(255, 0, 0)\"> x</span>:<span style=\"color:rgb(255, 0, 0)\">Name</span>=&quot;InputSetPanel&quot;<span style=\"color:rgb(255, 0, 0)\"> Orientation</span>=&quot;Horizontal&quot;<span style=\"color:rgb(255, 0, 0)\"> Margin</span>=&quot;2 2&quot;&gt;</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                                <span style=\"color:rgb(0, 0, 255)\">&lt;</span>TextBlock<span style=\"color:rgb(255, 0, 0)\"> x</span><span style=\"color:rgb(0, 0, 255)\">:</span><span style=\"color:rgb(255, 0, 0)\">Name</span><span style=\"color:rgb(0, 0, 255)\">=&quot;Name&quot;</span><span style=\"color:rgb(255, 0, 0)\"> Text</span><span style=\"color:rgb(0, 0, 255)\">=&quot;{</span>Binding<span style=\"color:rgb(255, 0, 0)\"> SetName</span><span style=\"color:rgb(0, 0, 255)\"> }&quot;</span><span style=\"color:rgb(255, 0, 0)\"> Width</span><span style=\"color:rgb(0, 0, 255)\">=&quot;240&quot;/&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(0, 0, 255)\"><span style=\"color:rgb(163, 21, 21)\">                                </span>&lt;<span style=\"color:rgb(163, 21, 21)\">Button</span><span style=\"color:rgb(255, 0, 0)\"> x</span>:<span style=\"color:rgb(255, 0, 0)\">Name</span>=&quot;RemoveSet&quot;<span style=\"color:rgb(255, 0, 0)\"> Content</span>=&quot;-X-&quot;<span style=\"color:rgb(255, 0, 0)\"> Click</span>=&quot;RemoveSet_Click&quot;<span style=\"color:rgb(255, 0, 0)\"> Tag</span>=&quot;{<span style=\"color:rgb(163, 21, 21)\">Binding</span><span style=\"color:rgb(255, 0, 0)\"> Current</span>}&quot; /&gt;</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                                <span style=\"color:rgb(0, 0, 255)\">&lt;</span>Button<span style=\"color:rgb(255, 0, 0)\"> x</span><span style=\"color:rgb(0, 0, 255)\">:</span><span style=\"color:rgb(255, 0, 0)\">Name</span><span style=\"color:rgb(0, 0, 255)\">=&quot;EditSet&quot;</span><span style=\"color:rgb(255, 0, 0)\"> Content</span><span style=\"color:rgb(0, 0, 255)\">=&quot;-E-&quot;</span><span style=\"color:rgb(0, 0, 0)\"> </span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(255, 0, 0)\"><span style=\"color:rgb(0, 0, 0)\">                                       </span> commands<span style=\"color:rgb(0, 0, 255)\">:</span>Click.Command<span style=\"color:rgb(0, 0, 255)\">=&quot;{</span><span style=\"color:rgb(163, 21, 21)\">Binding</span> Path<span style=\"color:rgb(0, 0, 255)\">=Value,</span> Source<span style=\"color:rgb(0, 0, 255)\">={</span><span style=\"color:rgb(163, 21, 21)\">StaticResource</span> EditSetCommand<span style=\"color:rgb(0, 0, 255)\">}}&quot;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">                                       <span style=\"color:rgb(255, 0, 0)\"> commands</span><span style=\"color:rgb(0, 0, 255)\">:</span><span style=\"color:rgb(255, 0, 0)\">Click.CommandParameter</span><span style=\"color:rgb(0, 0, 255)\">=&quot;{</span><span style=\"color:rgb(163, 21, 21)\">Binding</span><span style=\"color:rgb(255, 0, 0)\"> Current</span><span style=\"color:rgb(0, 0, 255)\">}&quot;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">                                       <span style=\"color:rgb(0, 0, 255)\"> /&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                            <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>StackPanel<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                        <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>Border<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                    <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>DataTemplate<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">                <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>ListBox.ItemTemplate<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\">            <span style=\"color:rgb(0, 0, 255)\">&lt;/</span>ListBox<span style=\"color:rgb(0, 0, 255)\">&gt;</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\"><span style=\"color:rgb(0, 0, 255)\"><br></span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica;color:rgb(163, 21, 21)\"><span style=\"color:rgb(0, 0, 0);font-family:times;font-size:16px\"><div>The EditSet command button displays for each item in the list.  But when I click the button, the EventHandler attached to the ViewModel code is not being executed.  My previous workaround was to use the code behind as shown in the RemoveSet Command.</div><div><br></div><div>To complete the remaining of my code, in the ViewModel I have declared the commands as shown below.</div><div><br></div><div><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        <span style=\"color:rgb(0, 0, 255)\">public</span> <span style=\"color:rgb(43, 145, 175)\">ICommand</span> RemoveSetCommand { <span style=\"color:rgb(0, 0, 255)\">get</span>; <span style=\"color:rgb(0, 0, 255)\">private</span> <span style=\"color:rgb(0, 0, 255)\">set</span>; }</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        <span style=\"color:rgb(0, 0, 255)\">public</span> <span style=\"color:rgb(43, 145, 175)\">ICommand</span> EditSetCommand { <span style=\"color:rgb(0, 0, 255)\">get</span>; <span style=\"color:rgb(0, 0, 255)\">private</span> <span style=\"color:rgb(0, 0, 255)\">set</span>; }</p><div><span style=\"font-family:helvetica;font-size:10px\"><br></span></div><div><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">         <span style=\"color:rgb(0, 0, 255)\">this</span>.RemoveSetCommand = <span style=\"color:rgb(0, 0, 255)\">new</span> <span style=\"color:rgb(43, 145, 175)\">DelegateCommand</span>&lt;<span style=\"color:rgb(43, 145, 175)\">IFuzzySet</span>&gt;(OnRemoveSet);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">         <span style=\"color:rgb(0, 0, 255)\">this</span>.EditSetCommand = <span style=\"color:rgb(0, 0, 255)\">new</span> <span style=\"color:rgb(43, 145, 175)\">DelegateCommand</span>&lt;<span style=\"color:rgb(43, 145, 175)\">IFuzzySet</span>&gt;(OnEditSet);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\"></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\"><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        <span style=\"color:rgb(0, 0, 255)\">public</span> <span style=\"color:rgb(0, 0, 255)\">void</span> OnRemoveSet(<span style=\"color:rgb(43, 145, 175)\">IFuzzySet</span> fuzzySet)</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        {</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">            eventAggregator.GetEvent&lt;<span style=\"color:rgb(43, 145, 175)\">FuzzySetEvent</span>&gt;().Publish(fuzzySet);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        }</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        <span style=\"color:rgb(0, 0, 255)\">public</span> <span style=\"color:rgb(0, 0, 255)\">void</span> OnEditSet(<span style=\"color:rgb(43, 145, 175)\">IFuzzySet</span> fuzzySet)</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        {</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">            eventAggregator.GetEvent&lt;<span style=\"color:rgb(43, 145, 175)\">FuzzySetEvent</span>&gt;().Publish(fuzzySet);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\">        }</p><div><br></div></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;font:normal normal normal 10px/normal helvetica\"></p><div><span style=\"font-family:helvetica;font-size:10px\"><span style=\"font-family:times;font-size:16px\"> What am I missing?</span><br></span></div><div><br></div><div>Thanks in advance</div></div></div></span></p></div></div></div>",
    "PostedDate": "2009-03-11T11:52:53.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "167024",
    "ThreadId": "49825",
    "Html": "Check out PositionSummaryView.xaml.cs for the Set accessor for the Model property.<br>\r\n<br>\r\nThat's where the bound member Value get it's real value from the PositionSummaryPresentationModel's constructor:<br>\r\n<br>\r\nView.Model = this;<br>\r\n<br>\r\nhope this helps,<br>\r\nAttila \r\n",
    "PostedDate": "2009-03-11T12:11:17.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "167046",
    "ThreadId": "49825",
    "Html": "Thanks attiah,<div><br></div><div>Feeling very foolish for not thinking to look at the code behind, but it makes perfect sense and it's working.</div><div><br></div><div>But this makes a more interesting point.  Since the solution of this involved adding code to the code behind to use the binding syntax, and my working example was to simply add the click event handlers to the code behind that called the event handler on the ViewModel it appears to be a toss up as to which work around is better.  Certainly the Button wire up is simpler from an implementation standpoint, considering declaring the static resources for the user control and having to add the setter logic to the code behind.</div><div><br></div><div><br></div><div><br></div><div><br></div>",
    "PostedDate": "2009-03-11T12:57:42.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "167111",
    "ThreadId": "49825",
    "Html": "Thanks to everyone who took the time to reply... looking a bit closer, I must have been tired, as I knew that the RelativeSource wasn't in Silverlight.... that wouldn't have solved my problem, but I probably wouldn't have felt so stupid either.<br>\r\n<br>\r\nI'll have a play around with the suggestions above and see what I can sort out. I'm really trying to keep my View code behind empty to stop business logic leaking into it...<br>\r\n<br>\r\n- Matt<br>\r\n",
    "PostedDate": "2009-03-11T15:49:09.01-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]