[
  {
    "Id": "552548",
    "ThreadId": "242576",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I work in a WPF .NET 4.0 project with PRISM 2.0.1.0. After a migration from VS2008 / .NET 3.5 to VS2010 / .NET 4.0, i've got an error only under Visual Studio in debug or release mode. When I execute my application in the\r\n<em>/bin</em> folder (.exe), everything works fine.</p>\r\n<p>My error occurs during modules loading phase in bootstapper. I use a <em>DirectoryModuleCatalog\r\n</em>to load dynamically all modules containing in a <em>/Modules</em> subdirectory.&nbsp;</p>\r\n<p>Here is my code :</p>\r\n<pre><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> IModuleCatalog GetModuleCatalog()\r\n        {\r\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> DirectoryModuleCatalog() { ModulePath = <span style=\"color:#a31515\">@&quot;.\\Modules&quot;</span> }; \r\n        }\r\n</pre>\r\n</div>\r\n</pre>\r\n<p>My stack strace under Visual Studio 2010 :&nbsp;</p>\r\n<pre><pre>System.BadImageFormatException was unhandled\r\n  Message=Could not load file or assembly 'file:///C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\bin\\Debug\\P.S.Host.vshost.exe' or one of its dependencies. Tentative de chargement d'un programme de format incorrect.\r\n  Source=mscorlib\r\n  FileName=file:///C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\bin\\Debug\\P.S.Host.vshost.exe\r\n  FusionLog==== Pre-bind state information ===\r\nLOG: User = CA-P\\nm\r\nLOG: Where-ref bind. Location = C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\bin\\Debug\\P.S.Host.vshost.exe\r\nLOG: Appbase = file:///C:/TNSlot1/S/S - D/src/Host/P.S.Host/bin/Debug/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : (Unknown).\r\n===\r\nLOG: This is an inspection only bind.\r\nLOG: Using application configuration file: C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\bin\\Debug\\P.S.Host.exe.config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from c:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Attempting download of new URL file:///C:/TNSlot1/S/S - D/src/Host/P.S.Host/bin/Debug/P.S.Host.vshost.exe.\r\nERR: Failed to complete setup of assembly (hr = 0x8007000b). Probing terminated.\r\n\r\n  StackTrace:\r\n       at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)\r\n       at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)\r\n       at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection, Boolean suppressSecurityChecks)\r\n       at System.Reflection.RuntimeAssembly.InternalLoadFrom(String assemblyFile, Evidence securityEvidence, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm, Boolean forIntrospection, Boolean suppressSecurityChecks, StackCrawlMark&amp; stackMark)\r\n       at System.Reflection.Assembly.ReflectionOnlyLoadFrom(String assemblyFile)\r\n       at Microsoft.Practices.Composite.Modularity.DirectoryModuleCatalog.InnerModuleInfoLoader.LoadAssemblies(IEnumerable`1 assemblies) in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite\\Modularity\\DirectoryModuleCatalog.Desktop.cs:line 183\r\n       at Microsoft.Practices.Composite.Modularity.DirectoryModuleCatalog.InnerModuleInfoLoader.LoadAssemblies(IEnumerable`1 assemblies)\r\n       at Microsoft.Practices.Composite.Modularity.DirectoryModuleCatalog.InnerLoad() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite\\Modularity\\DirectoryModuleCatalog.Desktop.cs:line 86\r\n       at Microsoft.Practices.Composite.Modularity.ModuleCatalog.Load() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite\\Modularity\\ModuleCatalog.cs:line 175\r\n       at Microsoft.Practices.Composite.Modularity.ModuleCatalog.Initialize() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite\\Modularity\\ModuleCatalog.cs:line 343\r\n       at Microsoft.Practices.Composite.Modularity.ModuleManager.Run() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite\\Modularity\\ModuleManager.cs:line 69\r\n       at Microsoft.Practices.Composite.UnityExtensions.UnityBootstrapper.InitializeModules() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite.UnityExtensions\\UnityBootstrapper.cs:line 236\r\n       at Microsoft.Practices.Composite.UnityExtensions.UnityBootstrapper.Run(Boolean runWithDefaultConfiguration) in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite.UnityExtensions\\UnityBootstrapper.cs:line 112\r\n       at Microsoft.Practices.Composite.UnityExtensions.UnityBootstrapper.Run() in C:\\Projets\\My Source Codes\\PRISM 2.2\\CAL\\Desktop\\Composite.UnityExtensions\\UnityBootstrapper.cs:line 69\r\n       at P.S.Host.App.RunBootstrapper() in C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\App.xaml.cs:line 67\r\n       at P.S.Host.App.OnStartup(StartupEventArgs e) in C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\App.xaml.cs:line 48\r\n       at System.Windows.Application.&lt;.ctor&gt;b__1(Object unused)\r\n       at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n       at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)\r\n       at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n       at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n       at System.Threading.ExecutionContext.runTryCode(Object userData)\r\n       at System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)\r\n       at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Windows.Threading.DispatcherOperation.Invoke()\r\n       at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n       at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\r\n       at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\r\n       at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n       at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n       at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)\r\n       at System.Windows.Threading.Dispatcher.InvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n       at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n       at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG&amp; msg)\r\n       at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n       at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n       at System.Windows.Threading.Dispatcher.Run()\r\n       at System.Windows.Application.RunDispatcher(Object ignore)\r\n       at System.Windows.Application.RunInternal(Window window)\r\n       at System.Windows.Application.Run(Window window)\r\n       at System.Windows.Application.Run()\r\n       at P.S.Host.App.Main() in C:\\TNSlot1\\S\\S - D\\src\\Host\\P.S.Host\\obj\\Debug\\App.g.cs:line 0\r\n       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\r\n       at System.AppDomain.nExecuteAssembly(RuntimeAssembly assembly, String[] args)\r\n       at System.Runtime.Hosting.ManifestRunner.Run(Boolean checkAptModel)\r\n       at System.Runtime.Hosting.ManifestRunner.ExecuteAsAssembly()\r\n       at System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext activationContext, String[] activationCustomData)\r\n       at System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext activationContext)\r\n       at System.Activator.CreateInstance(ActivationContext activationContext)\r\n       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssemblyDebugInZone()\r\n       at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Threading.ThreadHelper.ThreadStart()\r\n  InnerException: \r\n</pre>\r\n</pre>\r\n<p>In VS console, we can see two lines at the end of execution :&nbsp;</p>\r\n<pre>A first chance exception of type 'System.BadImageFormatException' occurred in mscorlib.dll\r\nA first chance exception of type 'System.BadImageFormatException' occurred in Microsoft.Practices.Composite.dll</pre>\r\n<pre><br></pre>\r\n<p>With the same code, everything is OK in debug mode under VS2008 and even after migration to VS2010. .NET 4.0 seems to make some troubleshoots but i'm not sure.&nbsp;</p>\r\n",
    "PostedDate": "2011-01-20T05:14:00.303-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552804",
    "ThreadId": "242576",
    "Html": "\r\n<p id=\"x_ebae7cb0-06eb-012e-8172-123139154a75\">Hi,</p>\r\n<p id=\"x_ebae8440-06eb-012e-8173-123139154a75\">You might find <a href=\"http://support.microsoft.com/kb/967163\">\r\nthis article</a> handy as it shows a possible cause for the issue you're experiencing. As explained in\r\n<em>Cause Section</em>: &ldquo;&hellip;<em>if your application is compiled to target a specific platform (x86 or x64), but attempts to load and execute an assembly that targets a different platform, the\r\n<strong>BadImageFormatException</strong> will occur</em>&hellip;&rdquo;</p>\r\n<p id=\"x_ebae8e20-06eb-012e-8174-123139154a75\">In the other hand, you might find the\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921073%28v=PandP.40%29.aspx\">Appendix D: Upgrading from Previous Versions</a> useful, as it could give you some hints regarding the migration process.</p>\r\n<p id=\"x_ebae99b0-06eb-012e-8175-123139154a75\">I hope you find this information useful.</p>\r\n<p id=\"x_ebaea4f0-06eb-012e-8176-123139154a75\">Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-20T12:06:21.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552805",
    "ThreadId": "242576",
    "Html": "\r\n<p>which version of Prism are you using?</p>\r\n",
    "PostedDate": "2011-01-20T12:06:42.82-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552854",
    "ThreadId": "242576",
    "Html": "\r\n<p>Thanks for your replies.&nbsp;</p>\r\n<p>I'm using PRISM 1.2.0.1 with Ent Lib 5 (for Unity).</p>\r\n<p>I've try to make a sample program which just create a boostrapper and load a simple module by the&nbsp;<em>DirectoryModuleCatalog.\r\n</em>Same result, same error. Tomorrow (hour of Paris), I'm gonna see your documentation and make some tests.</p>\r\n<p>One more information, when I load my module by a module catalog. All works fine, no problem with VS2010 in debug mode. That's very strange...&nbsp;</p>\r\n<p>If you have any additionnal information, will be great. :)</p>\r\n<p>Best regards</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-20T13:33:31.923-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552891",
    "ThreadId": "242576",
    "Html": "\r\n<p>you sure?&nbsp; I see PRISM 2.2 in your error output there, reason I ask is cause there are somethings that are very different in the current release v4 and the release you appear to be using.</p>\r\n",
    "PostedDate": "2011-01-20T15:06:37.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553036",
    "ThreadId": "242576",
    "Html": "\r\n<p>Excuse me mvermef, I was tired last evening. ^^</p>\r\n<p>I use PRISM 2.0.1.0 and for Microsoft.Practices.Unity 2.0.50727.</p>\r\n",
    "PostedDate": "2011-01-21T00:45:01.533-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553174",
    "ThreadId": "242576",
    "Html": "\r\n<p>I think I've found the problem for VS2010. When the <em>DirectoryModuleCatalog\r\n</em>parses the execution directory (before the <em>ModulePath</em>) to load assemblies of .exe context first, the module try to load the vshost.exe files and this assembly loading crashes.</p>\r\n<p>In the PRISM source code of <em>DirectoryModuleCatalog.cs</em>, we can see :&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Drives the main logic of building the child domain and searching for the assemblies.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> InnerLoad()\r\n        {\r\n            <span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrEmpty(<span style=\"color:blue\">this</span>.ModulePath))\r\n                <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> InvalidOperationException(Resources.ModulePathCannotBeNullOrEmpty);\r\n\r\n            <span style=\"color:blue\">if</span> (!Directory.Exists(<span style=\"color:blue\">this</span>.ModulePath))\r\n                <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> InvalidOperationException(\r\n                    <span style=\"color:blue\">string</span>.Format(CultureInfo.CurrentCulture, Resources.DirectoryNotFound, <span style=\"color:blue\">this</span>.ModulePath));\r\n\r\n            AppDomain childDomain = <span style=\"color:blue\">this</span>.BuildChildDomain(AppDomain.CurrentDomain);\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                List&lt;<span style=\"color:blue\">string</span>&gt; loadedAssemblies = <span style=\"color:blue\">new</span> List&lt;<span style=\"color:blue\">string</span>&gt;();\r\n\r\n                <span style=\"color:blue\">var</span> assemblies = (\r\n                                     <span style=\"color:blue\">from</span> Assembly assembly <span style=\"color:blue\">in</span> AppDomain.CurrentDomain.GetAssemblies()\r\n                                     <span style=\"color:blue\">where</span> !(assembly <span style=\"color:blue\">is</span> System.Reflection.Emit.AssemblyBuilder)\r\n                                           &amp;&amp; !String.IsNullOrEmpty(assembly.Location)\r\n                                     <span style=\"color:blue\">select</span> assembly.Location\r\n                                 );\r\n\r\n                loadedAssemblies.AddRange(assemblies);\r\n\r\n                Type loaderType = <span style=\"color:blue\">typeof</span> (InnerModuleInfoLoader);\r\n\r\n                <span style=\"color:blue\">if</span> (loaderType.Assembly != <span style=\"color:blue\">null</span>)\r\n                {\r\n<strong>                    <span style=\"color:blue\">var</span> loader =\r\n                        (InnerModuleInfoLoader)\r\n                        childDomain.CreateInstanceFrom(loaderType.Assembly.Location, loaderType.FullName).Unwrap();\r\n                    loader.LoadAssemblies(loadedAssemblies);\r\n                    <span style=\"color:blue\">this</span>.Items.AddRange(loader.GetModuleInfos(<span style=\"color:blue\">this</span>.ModulePath));</strong>\r\n                }\r\n            }\r\n            <span style=\"color:blue\">finally</span>\r\n            {\r\n                AppDomain.Unload(childDomain);\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>The method <em>LoadAssemblies </em>crashes with a list of assemblies which contains the vshost.exe file.</p>\r\n<p>I've try to replace this code by an assembly loading one by one and with an exclusion of vshost.exe file and all works fine :&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>                    <span style=\"color:blue\">var</span> loader =\r\n                        (InnerModuleInfoLoader)\r\n                        childDomain.CreateInstanceFrom(loaderType.Assembly.Location, loaderType.FullName).Unwrap();\r\n\r\n                    <span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">var</span> assemblyToLoad <span style=\"color:blue\">in</span> loadedAssemblies)\r\n                    {\r\n                        <span style=\"color:blue\">try</span>\r\n                        {\r\n                            <span style=\"color:blue\">if</span> (!assemblyToLoad.EndsWith(<span style=\"color:#a31515\">&quot;vshost.exe&quot;</span>))\r\n                            {\r\n                                List&lt;<span style=\"color:blue\">string</span>&gt; test = <span style=\"color:blue\">new</span> List&lt;<span style=\"color:blue\">string</span>&gt;();\r\n                                test.Add(assemblyToLoad);\r\n                                loader.LoadAssemblies(test);\r\n                            }\r\n                        }\r\n                        <span style=\"color:blue\">catch</span> (Exception ex)\r\n                        {\r\n                            MessageBox.Show(ex.StackTrace.ToString());\r\n                        }\r\n                    }\r\n    \r\n                    <span style=\"color:blue\">this</span>.Items.AddRange(loader.GetModuleInfos(<span style=\"color:blue\">this</span>.ModulePath));\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>What is the particularity of the vshost.exe file under VS2010 / .NET 4.0 ? Why this file is not correctly loaded with VS2010 / .NET 4.0?</p>\r\n",
    "PostedDate": "2011-01-21T05:05:33.343-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553352",
    "ThreadId": "242576",
    "Html": "\r\n<p id=\"x_e608a010-07a1-012e-be6d-12313d0311fa\">Hi,</p>\r\n<p id=\"x_e608a8d0-07a1-012e-be6e-12313d0311fa\">The <a href=\"http://msdn.microsoft.com/en-us/library/ms185331%28v=VS.90%29.aspx\">\r\nvshost.exe</a>, as shown in the MSDN documentation &ldquo;&hellip;<em>is a feature in Visual Studio that improves debugging performance</em>...&rdquo;. It&acute;s only purpose is just to help when debugging applications, so that is the reason why when you load\r\n your application from the bin folder, you don&acute;t get any exception.</p>\r\n<p id=\"x_e608b3f0-07a1-012e-be6f-12313d0311fa\">Therefore, one possibility would be that after the migration, some referenced assemblies didn&acute;t update correctly. You could try cleaning and rebuilding your solution, and also removing the references of your\r\n projects and adding them again, so as to make sure that there are no old references to .NET 3.5 assemblies in your application, which could cause this kind of problem.</p>\r\n<p id=\"x_e608c090-07a1-012e-be70-12313d0311fa\">Let me know if this information helps you.</p>\r\n<p id=\"x_e608cce0-07a1-012e-be71-12313d0311fa\">Thanks,</p>\r\n<p>Miguel Bronzovic<br>\r\n<a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-21T09:50:42.847-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553370",
    "ThreadId": "242576",
    "Html": "\r\n<p>I think the problem is a more generic.</p>\r\n<p>I've download PRISM 4.0 source codes and I've tried to modify the Hello word sample with a\r\n<em>DirectoryModuleCatalog</em>. And same problem. :-)</p>\r\n<p>Here is my sample if you want to try :&nbsp;<a href=\"http://dl.free.fr/i6FntlBGP\">http://dl.free.fr/i6FntlBGP</a></p>\r\n",
    "PostedDate": "2011-01-21T10:23:56.833-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555138",
    "ThreadId": "242576",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I've checked the sample you've uploaded, and I've found that if I run it as is, no exception is thrown, but if I replace the references to the compiled Prism assemblies I experience the exception you're mentioning.</p>\r\n<p>After examining your solution, I've found that you weren't copying the latest build of your module into the Modules folder. Therefore, when you change the references to the compiled Prism assemblies to the projects, you experience that exception because\r\n you're trying to load a different version of the <strong>Microsoft.Practices.Prism</strong> assembly.</p>\r\n<p>You could use a post <a href=\"http://msdn.microsoft.com/en-us/library/ke5z92ks%28VS.80%29.aspx\">\r\nbuild event</a> to your module, so that it is copied to the Modules folder you are getting your modules from.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br>\r\n<a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>\r\n",
    "PostedDate": "2011-01-25T10:00:08.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "555437",
    "ThreadId": "242576",
    "Html": "\r\n<p>Hi,</p>\r\n<p>Thanks a lot for your response.</p>\r\n<p>I've already set a post build event to copy the last module version in the output dIrectory. For my sample,&nbsp;<em>COPY $(ProjectName).* &quot;$(SolutionDir)\\HelloWorld.Desktop\\$(OutputPath)Modules\\&quot;.\r\n</em>With this post build event, I get the same error.</p>\r\n<p>I don't understand why. Maybe, my VS2010 configuration is corrupted (company configuration). When I try my sample at home (with my personnal VS2010, I don't have this error, very strange...).</p>\r\n",
    "PostedDate": "2011-01-26T01:05:00.253-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]