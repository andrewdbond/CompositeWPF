[
  {
    "Id": "994597",
    "ThreadId": "431526",
    "Html": ".<br />\n",
    "PostedDate": "2013-01-31T02:10:36.903-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "995124",
    "ThreadId": "431526",
    "Html": "Hi,\r<br />\n<br />\nBased on my understanding of your scenario, what you experiencing is a timing issue as you should be subscribed to this event before this is being published in order to receive the corresponding <strong>selectedProduct</strong>. For example, as as possible approach in order to ensure this, I believe you could set <strong>ModuleA</strong> to have a dependency on <strong>ModuleB</strong>, this way you will ensure that <strong>ModuleB</strong> will be subscribed to this event before the products are selected from the list in <strong>ModuleA</strong>.\r<br />\nOn the other hand, if this is not possible for your scenario, so far the only alternative I could think of, is to have a shared service to store the current <strong>selectedProduct</strong> this way when your <strong>ModuleB</strong> is loaded you could retrieve the <strong>selectedProduct</strong> so the initialization is performed as expected.\r<br />\n<br />\nI hope you find this handy,\r<br />\n<br />\nAgustin Adami\r<br />\n<a href=\"http://blogs.southworks.net/aadami\" rel=\"nofollow\">http://blogs.southworks.net/aadami</a><br />\n",
    "PostedDate": "2013-02-01T04:26:31.14-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]