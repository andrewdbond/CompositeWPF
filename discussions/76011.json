[
  {
    "Id": "259977",
    "ThreadId": "76011",
    "Html": "<p>Hi,</p>\r\n<p>I've finished my first prism wpf app and I'm now wondering how to efficiently hook in a menu item that launches a simple dialog showing version numbers etc.&nbsp; It feels wasteful to create a Module/assembly just for an about box dialog.&nbsp; Seems like this is something that should live with boot strapper, app.xaml, etc.&nbsp;</p>\r\n<p>I guess there is no reason I can't include a Module in my App.UI.Desktop project.&nbsp;</p>\r\n<p>Just thinkin' out loud here folks.</p>\r\n<p>John</p>",
    "PostedDate": "2009-11-23T13:39:21.323-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "260302",
    "ThreadId": "76011",
    "Html": "<p id=3e078fe0-bb49-012c-2d0b-12313b030c61>Hi John,</p>\r\n<p id=3e079e90-bb49-012c-2d0c-12313b030c61>There is not A right answer, but I hope the points I will raise below help. In this kind of situation, what you have to decide is how you are going to show the About Box. Is it going to simply be a <strong>UserControl</strong> with the same text every time is pops up,&nbsp; will it depend on the context (use a ViewModel) or will it be invoked through a service? There are many different options, and you should take the one you feel best suits your application (and you).</p>\r\n<p id=3e07b200-bb49-012c-2d0d-12313b030c61>If you decide to go with the simple dialog with no logic, I would place it in an common Infrastructure project. There is no need to create a module that you are not going to use right now, and if one is needed, eventually you can create one with no problem using Prism.</p>\r\n<p id=3e07c950-bb49-012c-2d0e-12313b030c61>Please let me know if this helps.</p>\r\n<p id=3e07e000-bb49-012c-2d0f-12313b030c61>Damian Schenkelman    <br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-11-24T10:54:32.253-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]