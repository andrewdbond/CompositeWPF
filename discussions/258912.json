[
  {
    "Id": "617867",
    "ThreadId": "258912",
    "Html": "<p>Hi,</p>\n<p>I'm using Prism 4 and MEF in my Silverlight application.</p>\n<p>I'm declaring my Modules with the Export attribute, and declare my imports as public properties (to allow recomposition).</p>\n<p>The problem is with the Initialize() method of the IModule interface - could it be that the Initialize() method will be called before all imports have been satisfied?</p>\n<p>If so, how can this be solved?</p>",
    "PostedDate": "2011-05-25T00:42:07.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "618722",
    "ThreadId": "258912",
    "Html": "<p>Hi,</p>\r\n<p>The scenario you're mentioning is a valid possibility. To mitigate this situation, you could put the imports in the module's constructor (decorating it with the <strong>ImportingConstructor </strong>attribute). That way, you would guarantee that, at the time the Initialize method is called, the imports are fulfilled.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-05-26T07:27:32.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "618729",
    "ThreadId": "258912",
    "Html": "<p>Thanks for you reply!</p>\r\n<p>Using ImportingConstructor is a good workaround, but it prevents the module (and hence the entire xap?) from supporting recomposition.</p>\r\n<p>My solution was to implement a MefModule class that simply synchronized the Initialize&nbsp;method of IModule with the OnImportsSatisfied method of&nbsp;IPartImportsSatisfiedNotification.</p>\r\n<p>Maybe such a class could be part of the Prism.MefExtensions project?</p>",
    "PostedDate": "2011-05-26T07:36:24.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "618730",
    "ThreadId": "258912",
    "Html": "<p>Hi,</p>\r\n<p>That seems to be a good idea to support that scenario. If you'd like that to be included on a future version, you could create a work item in the issue tracker requesting the feature.</p>\r\n<p>Additionally, it would be helpful if you could provide us with the implementation you've made of this, so that users facing similar scenarios can benefit from your idea.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-05-26T07:39:52.99-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]