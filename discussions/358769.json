[
  {
    "Id": "846203",
    "ThreadId": "358769",
    "Html": "\r\n<p>I'm not sure if I'm doing it wrong but I have a Controller that I would like to be able to ask the user for input. I've looked through the Advanced MVVM sections on an interaction service and interaction request.</p>\r\n<p>It seems that one method I could do is implement a service that I could use to request user interaction. But from reading the book and the forums an interaction request seems to be the preferred method. I'm not entirely sure how interaction requests work,\r\n but in the examples I've seen and downloaded they always bind to it from the view to the viewmodel in some way.</p>\r\n<p><strong>My problem is that I have neither a view or viewmodel in this instance.&nbsp;</strong>My\r\n<strong>controller </strong>does the following:</p>\r\n<p>1. It interacts with the menu service to add commands to the application's main menu</p>\r\n<p>2. It creates views for the module and subscribes to events that handle showing the views and hiding the views</p>\r\n<p>The menu commands allow the user to select a view for the module to show it. <strong>\r\nThey <span style=\"text-decoration:underline\">also</span>&nbsp;allow the user to create a file or open a file.</strong> This is where I need user interaction to ask the user for a filename etc. &nbsp;The controller register's these commands with the menu service\r\n by giving it {text, command, image uri, etc.}. &nbsp;The MenuService is completely separate and realizes the menu via data templates in a resource file. Its template will bind to the command which is implemented in the Controller. This &quot;open file&quot; command\r\n would need to interact with the user more.</p>\r\n<p>1. Is it incorrect for my Controller to want to interact with the user?</p>\r\n<p>2. What's the best way to do it? Is it possible with interaction requests? Without XAML?</p>\r\n<p>3. How do I create a custom dialog to handle the interaction request?</p>\r\n<p>I've looked at all the examples but they ALL assume that I'm trying to interact from the ViewModel and have a View that is bound to it. I have neither...?</p>\r\n",
    "PostedDate": "2012-06-07T12:02:44.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "846596",
    "ThreadId": "358769",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding using the <strong>Interaction Requests </strong>approach, is useful when you want to preserve a clean separation between the view model and the view, as the view model will encapsulate the presentation logic and the view will handle the visual aspects of the interaction. Basically, in this approach the view model exposes an event that can be raised to the view, and in the view the <strong>InteractionRequestTrigger </strong>binds to the exposed event in your view model, firing the defined behavior when the raised event happens.</p>\r\n<p>Hence, in your case as you don't have a view or a view model, this approach might not be suitable.</p>\r\n<p>Also, for more information about <strong>Interaction Requests</strong>, I believe you could find the following blog post interesting:</p>\r\n<ul>\r\n<li><a href=\"http://briannoyes.net/2010/11/15/PromptingTheUserFromAViewModelndashPrism4Gems.aspx\">Prompting the User From a View Model&ndash;Prism 4 Gems</a></li>\r\n</ul>\r\n<p>On the other hand, based on my understanding of your scenario, using an <strong>Interaction Service </strong>to keep separation of concerns by encapsulating the visual implementation of your desired interaction in a separated service component, which could be consumed by your <strong>Controller </strong>seems to be a valid approach.</p>\r\n<p>Take into account that the custom implementation of this service will depend on your personal preferences and the requirements of your scenario. For example you can achieve this by using a <strong>MessageBox </strong>or by showing a modal pop up window in it.</p>\r\n<p>One thing you should&nbsp; considered, as mentioned in the related section of the <strong>Prism </strong>documentation (<a href=\"http://msdn.microsoft.com/en-us/library/gg405494%28v=pandp.40%29#sec11\">Using an Interaction Service</a>), is passing a callback when calling the service, this way you could have an asynchronous implementation, which will allow you to react when the interaction completes.</p>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-06-08T07:13:59.42-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "846600",
    "ThreadId": "358769",
    "Html": "<p><strong>Thanks!</strong></p>\r\n<p><strong></strong>This helps a lot. I had finally figured out the interaction requests example after searching around yesterday and downloading \"in the box\" which has a WPF example (book only has silverlight, WPF doesn't include default implementations). After figuring it out, I noticed that indeed the view itself was specifying exactly how to display the custom dialog. My reaction was something like, screw it just use a service it will be easy, but I still wasn't sure that would be the best approach. It is good to hear your understanding of it because that really helps me understand that it is likely the best choice in my scenario.</p>",
    "PostedDate": "2012-06-08T07:22:13.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]