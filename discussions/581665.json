[
  {
    "Id": "1355093",
    "ThreadId": "581665",
    "Html": "Hi,\r<br />\n<br />\nI'm very new to PRISM. I've following questions.<br />\n<ol>\n<li>\nCan  an application using Prism be created without Module?<br />\n</li>\n<li>\nHow to navigate from one region to another region?<br />\n</li>\n<li>\nWe say View is part of User Interface. Then how and where do we combine the views and show in the User Interface?<br />\n</li>\n</ol>\nKindly for the response.\r<br />\n<br />\nThanks,\r<br />\nSantosh<br />\n",
    "PostedDate": "2015-02-23T21:55:31.95-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1355176",
    "ThreadId": "581665",
    "Html": "Hi Santosh,\r<br />\nWelcome to Prism! (Minor nit - it is Prism, not PRISM - not an acronym for anything)<br />\n<ol>\n<li>Absolutely. You can benefit from leveraging pretty much all the other features like the MVVM support with BindableBase, ViewModelLocator, Commands, PubSubEvents, Regions, Navigation, without using modules at all. Modules are intended to help you break up the functionality of your app into loosely coupled pieces, which can be useful in maintenance, but is primarily an extensibility mechanism, so you don't have to use it if you are ok with all of your functionality being compiled into your app at deployment time.</li>\n<li>Navigation is a feature within a single region - it is a way of swapping or selecting views (depending on the container control on the region) within the region to achieve navigation from a user's perspective. I'm not clear what you mean by navigating from one region to another - a region is a container within which views are swapped. You can nest regions - so you can load a view into a region at the shell level for example, and then have a region inside that view in which you navigate. But it is not really navigating between regions.</li>\n<li>\nYou can combine views in a hierarchy following the MVVM pattern alone (parent views contain child views up to the shell which is the parent view of them all, and each view can have a view model), or you can use the Regions feature to dynamically plug in child views into containing parent views.<br />\n</li>\n</ol>\nHope that helps. Recommend you check out Brian Lagunas' intro course on Prism on Pluralsight and mine on Prism for Windows Runtime (if you are going to be doing Windows Store apps):\r<br />\n<a href=\"http://www.pluralsight.com/courses/prism-introduction\" rel=\"nofollow\">http://www.pluralsight.com/courses/prism-introduction</a>\r<br />\n<a href=\"http://www.pluralsight.com/courses/building-windows-store-business-applications-prism\" rel=\"nofollow\">http://www.pluralsight.com/courses/building-windows-store-business-applications-prism</a>\r<br />\n<a href=\"http://www.pluralsight.com/courses/prism-50-whats-new\" rel=\"nofollow\">http://www.pluralsight.com/courses/prism-50-whats-new</a>\r<br />\n<br />\nIf you don't have a Pluralsight subscription, contact me brian.noyes on gmail and I can get you a one month trial.\r<br />\nThanks\r<br />\nBrian<br />\n",
    "PostedDate": "2015-02-24T04:07:57.263-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1355462",
    "ThreadId": "581665",
    "Html": "Thank you very much Brian. Sure, I'll contact on gmail for Pluralsight subscription.<br />\n",
    "PostedDate": "2015-02-24T20:43:07.257-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]