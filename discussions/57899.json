[
  {
    "Id": "195740",
    "ThreadId": "57899",
    "Html": "<p>I have a user control that I am using in a &nbsp;databinding scenario. &nbsp;The control is being bound inside a datagrid. &nbsp; This control has a viewModel and I when I try to implement the following construct</p>\r\n<p>public MediaBuyControl( IMediaBuyViewModel viewModel)</p>\r\n<p>I am gettign an AG_Parser_Error.</p>\r\n<p>In my module, I have the view model registered as I do other viewModel.</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;container.RegisterType&lt;IMediaBuyViewModel, MediaBuyViewModel&gt;();</p>\r\n<p>The control I am binding to is not currently registered with the regionManager because it is not intended to be a view. &nbsp;Is it possible to use the Unity Container in this manner when databinding a control?</p>",
    "PostedDate": "2009-05-29T09:23:27.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "195814",
    "ThreadId": "57899",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hi djnelson, </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Some time ago there was a discussion about a similar issue that might help in your scenario:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"\" lang=EN-US><a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=54967\"><span style=\"font-size:small;font-family:Calibri\">Xaml and Dependency Injection&nbsp; </span></a><span style=\"font-size:small\"><span style=\"font-family:Calibri\">&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">So, as that discussion explains, you won't be able instantiate an object through XAML using a constructor with parameters. </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">On the other hand, as you said you don't necessarily need to register an object in the container for it to be injected. If you want properties and other injection performed to an instance when you do not control its construction, you can use the <strong>BuildUp</strong> method of the Unity container. This will make the object go through the container strategies that can be executed after object creation, such as property or method injection. This approach might help you inject some dependencies in your control AFTER it has been initialized.</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><em><span style=\"color:#1f497d\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></em></strong></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>For more information about BuildUp method you can check:<strong><em><span style=\"color:#1f497d\"></span></em></strong></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt;text-indent:-18pt\"><span style=\"color:#1f497d;font-family:Symbol\" lang=EN-US><span style=\"\"><span style=\"font-size:small\">&middot;</span><span style=\"font:7pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style=\"color:#1f497d\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd203136.aspx\"><span style=\"font-size:small;color:#0000ff;font-family:Calibri\">Using BuildUp to Wire Up Objects Not Created by the Container</span></a></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Hope it helps!</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Matias Bonaventura</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"\" lang=EN-US><span style=\"font-size:small;color:#0000ff;font-family:Calibri\">http://blogs.southworks.net/matiasb</span></span></a><span style=\"\" lang=EN-US></span></p>",
    "PostedDate": "2009-05-29T12:43:53.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "195834",
    "ThreadId": "57899",
    "Html": "<p>Hi Matias,</p>\r\n<p>Thanks for the reply. &nbsp;I looked at the buildup examples and they show the code starting with myContainer. &nbsp;Thats turning out to be the rub. &nbsp;I can create a new instance of the UnityContainer. but I really need to get to the instance of the container that was created Bootstrapper. &nbsp;</p>\r\n<p>So maybe this is a better way to phrase my problem. &nbsp;I have a control that I am binding in datagrid. &nbsp;I need to wire this control to the event aggregator to subscribe to some events. &nbsp;As from the earlier discussion, I can not use the dependency injection as the XAML needs an empty constructor. &nbsp;So from inside this constructor, how would it be possible to reference to the EventAggregator?</p>\r\n<p>OK, the lights came on I have a most simple solution for this. &nbsp;In the bootstrapper, I add the Container object and the EventAggregator object to the Application.Current.Resources and then in the constructor of my bound control I now have the references. &nbsp;While I really like DI, it did put on the blinders as this solution did not occur to me sooner.</p>\r\n<p>Take care and thanks again.</p>",
    "PostedDate": "2009-05-29T13:36:21.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "196118",
    "ThreadId": "57899",
    "Html": "<p>Hi djnelson!</p>\r\n<p>&nbsp;</p>\r\n<p>Sorry to say, but maybe these kind of errors can be a design issue in the application, but can't tell this from the original mail.</p>\r\n<p>So to focus on the solution I'd consider using ServiceLocator in your project. (<a href=\"http://commonservicelocator.codeplex.com/\">http://commonservicelocator.codeplex.com/</a><a href=\"http://servicelocator.codeplex.com\"></a>) that solves your problem, since you can access your container thru the ServiceLocator.Current and it can be initialized in the bootstrapper.</p>\r\n<p>&nbsp;</p>\r\n<p>We're using it in different scenarios, this way we don't have to pass around container instances in some rare situations where the container really needed. (For example external components).</p>\r\n<p>&nbsp;</p>\r\n<p>hth,</p>\r\n<p>Attila</p>",
    "PostedDate": "2009-05-31T05:05:04.79-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "196225",
    "ThreadId": "57899",
    "Html": "<p>Thanks Attila,</p>\r\n<p>I reviewed the service locator and I can see where this would be useful, yet digging into it a bit, I can not really see what the difference from using Application.Current.Resources() for a reference for both the UnityContainer and the the EventAggregator.&nbsp; The dictionary objects in this storage location can only be set once.</p>\r\n<p>It is very common to want to bind user controls in&nbsp;a DataGrid or an ItemsCollection.&nbsp; These items are required to have a parameterless constructor.&nbsp; So, my challenge was how to get the EventAggregator to this control (more correctly, it's&nbsp;ViewModel&nbsp;to listen for StateChanges which are external ( Duplexing (Push) in my case).&nbsp; By simply setting the Applcation.Current.Resource in the bootstrapper, I could now subscribe to the needed events in the constructor for the bound control.</p>\r\n<p>I think both the UnityContainer and the EventAggregator are first class application resources and this is the simplest thing I could do solve my problem.</p>\r\n<p>Doug</p>",
    "PostedDate": "2009-05-31T19:21:26.95-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]