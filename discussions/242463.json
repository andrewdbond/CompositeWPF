[
  {
    "Id": "552159",
    "ThreadId": "242463",
    "Html": "\r\n<p>I get an intermittent error (happens over 70% of the time) module load error (NotFound) when running Silverlight out of browser while launching the application; then rerunning (sometimes it takes 4-5 attempts) the application launches without an error.&nbsp;\r\n I had experienced this on occasion when running in browser, but it was far more rare.&nbsp;</p>\r\n<p>Best analogy I can come up with the symptoms is that it is similar to executing JavaScript on a web page before the page (DOM) and/or JavaScript has fully been loaded in the browser.&nbsp; The problem does not seem to occur when running without debugging\r\n (hard to say that is the case definitively since the problem is intermittent).</p>\r\n<p>I have been through the copy local references of all my modules many times (copy local&nbsp;= true in main&nbsp;xap, copy local = false in modules)&nbsp;... so please don't reply asking if I have checked that.&nbsp; Second, I have seen seemingly related\r\n posts on MEF for &quot;offline&quot; out of browser, but in my case I am running online only.</p>\r\n<p>Here is corresponding error detail / call stack:</p>\r\n<p>&nbsp;</p>\r\n<p>Microsoft.Practices.Prism.Modularity.ModuleTypeLoadingException was unhandled by user code</p>\r\n<p>Message=Failed to load type for module NurseModule.</p>\r\n<p>&nbsp;</p>\r\n<p>If this error occurred when using MEF in a Silverlight application, please ensure that the CopyLocal property of the reference to the MefExtensions assembly is set to true in the main application/shell and false in all other assemblies.</p>\r\n<p>&nbsp;</p>\r\n<p>Error was: The remote server returned an error: NotFound..</p>\r\n<p>ModuleName=NurseModule</p>\r\n<p>StackTrace:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.Modularity.ModuleManager.HandleModuleTypeLoadingEr</p>\r\n<p>ror(ModuleInfo moduleInfo, Exception exception)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.Modularity.ModuleManager.IModuleTypeLoader_LoadMod</p>\r\n<p>uleCompleted(Object sender, LoadModuleCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.MefExtensions.Modularity.MefXapModuleTypeLoader.Ra</p>\r\n<p>iseLoadModuleCompleted(LoadModuleCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.MefExtensions.Modularity.MefXapModuleTypeLoader.Ra</p>\r\n<p>iseLoadModuleCompleted(ModuleInfo moduleInfo, Exception error)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.MefExtensions.Modularity.MefXapModuleTypeLoader.Ha</p>\r\n<p>ndleDownloadCompleted(DeploymentCatalog deploymentCatalog, AsyncCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>Microsoft.Practices.Prism.MefExtensions.Modularity.MefXapModuleTypeLoader.De</p>\r\n<p>ploymentCatalog_DownloadCompleted(Object sender, AsyncCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadComple</p>\r\n<p>ted(AsyncCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.ComponentModel.Composition.Hosting.DeploymentCatalog.HandleOpenReadCo</p>\r\n<p>mpleted(Object sender, OpenReadCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.Net.WebClient.OnOpenReadCompleted(OpenReadCompletedEventArgs e)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Net.WebClient.OpenReadOperationCompleted(Object arg)</p>\r\n<p>InnerException: System.Net.WebException</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Message=The remote server returned an error: NotFound.</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StackTrace:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Net.Browser.AsyncHelper.BeginOnUI(SendOrPostCallback</p>\r\n<p>beginMethod, Object state)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.Net.Browser.BrowserHttpWebRequest.EndGetResponse(IAsyncResult</p>\r\n<p>asyncResult)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Net.WebClient.GetWebResponse(WebRequest request, IAsyncResult result)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Net.WebClient.OpenReadAsyncCallback(IAsyncResult</p>\r\n<p>result)</p>\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;InnerException: System.Net.WebException</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Message=The remote server returned an error: NotFound.</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StackTrace:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.Net.Browser.BrowserHttpWebRequest.InternalEndGetResponse(IAsyncResult</p>\r\n<p>asyncResult)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at</p>\r\n<p>System.Net.Browser.BrowserHttpWebRequest.&lt;&gt;c__DisplayClass5.&lt;EndGetResponse&gt;</p>\r\n<p>b__4(Object sendState)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at</p>\r\n<p>System.Net.Browser.AsyncHelper.&lt;&gt;c__DisplayClass2.&lt;BeginOnUI&gt;b__0(Object</p>\r\n<p>sendState)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InnerException:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-19T13:05:21.663-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552588",
    "ThreadId": "242463",
    "Html": "<p>Hi,</p>\n<p>The exception you're experiencing could be because of a Cross-Domain issue. From the information you have provided, the <strong>ModuleTypeLoadingException </strong>is most likely being thrown because a call to a web service is failing (returning a 404-not found error). As that exception is being thrown, MEF is unable to compose the module, thus making the <strong>ModuleManager</strong> throw a module type loading exception.</p>\n<p>You might find the following resources useful to deal with Cross-Domain issues in Silverlight, as well as other errors in a WCF or web service:</p>\n<ul>\n<li><a id=\"x_viewpost_ascx_TitleUrl\" title=\"Title of this entry.\" href=\"http://timheuer.com/blog/archive/2008/06/10/silverlight-services-cross-domain-404-not-found.aspx\">Silverlight cross domain services and a helpful tool</a> </li>\n<li><a href=\"http://forums.silverlight.net/forums/t/64696.aspx\">WCF Error - The remote server returned an error: NotFound</a> </li>\n<li><a href=\"http://mokosh.co.uk/post/2009/06/15/silverlight-and-wcf-wcf-logs-and-debugging/\">Silverlight and WCF &ndash; WCF Logs and Debugging</a> </li>\n<li><a href=\"http://mokosh.co.uk/post/2009/03/31/silverlight-and-wcf-essentials-fiddler/\">Silverlight and WCF Essentials &ndash; Fiddler</a> </li>\n</ul>\n<p>Also, you should take into account that it's possible that Silverlight displays a <em>not found</em> error when there is an exception in a web service or WCF service (regardless of whether that exception is or not a not found exception), so one possibility would be to debug your service to see if there is anything that could cause intermitent  exceptions.</p>\n<p>After further research, we&rsquo;ve found that the cause of the intermittent issue you&rsquo;ve mentioned is not related to Prism, as we&rsquo;ve been able to reproduce it using two simultaneous web client requests for a local file in a non-Prism Silverlight OOB application. Additionally, we&rsquo;ve only been able to reproduce it using Cassini. When we deployed the solution to IIS, we didn&rsquo;t face the issue anymore. You can find the sample we&rsquo;ve created <a href=\"http://cid-12a8b70137345033.office.live.com/self.aspx/p%5E0p%20Samples/WebClientIntermittentIssueSample.zip\">here</a>.</p>\n<p>We found out that the necessary elements to trigger the intermittent error in Prism are having two modules load simultaneously via <strong>XapModuleTypeLoader </strong>(used when you use Unity or other DI container) or <strong>MefXapModuleTypeLoader </strong>(used when you use MEF), as both of them internally use a <strong>WebClient</strong> to download the modules. Therefore, the issue is caused by neither Unity nor MEF.</p>\n<p>One possible workaround for you to avoid experiencing this issue would be to host your application in a different place, such as IIS Express. Another possibility would be to alter the timing of your module loading, so that you don&rsquo;t make two simultaneous requests. For example, if you set your second module to be loaded after the initialization of the first one, the intermittent issue shouldn&rsquo;t appear. To illustrate this:</p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> Module1 : IModule</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp; {</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> IModuleManager moduleManager;</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;<br /></span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ImportingConstructor]</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> Module1(IModuleManager manager)</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">this</span>.moduleManager = manager;</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Initialize()</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; moduleManager.LoadModule(<span style=\"color: #a31515;\">\"Module2\"</span>);</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\n<p><span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp; }</span></p>\n<p>&nbsp;</p>\n<p>I hope you find this helpful.</p>\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-01-20T06:32:01.043-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "553473",
    "ThreadId": "242463",
    "Html": "\r\n<p>Thanks for the suggestions; however I get the error at a point when no WCF service is being called by the modules.</p>\r\n<p>In fact, given the two different modules I am currently working with I can load either one individually without any error, but when I load them both, I get the error.</p>\r\n<p>This seems to point to a duplicate export or assembly reference across the two modules; however as I mentioned earlier the problem is intermittent and I have been through the assembly list multiple times.</p>\r\n",
    "PostedDate": "2011-01-21T15:17:50.1-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "660049",
    "ThreadId": "242463",
    "Html": "<p>[oops, wrong forum]</p>",
    "PostedDate": "2011-08-18T07:47:13.22-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]