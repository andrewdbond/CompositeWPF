[
  {
    "Id": "725968",
    "ThreadId": "286333",
    "Html": "<p>Hi All!</p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">I have a Prism/MEF/MVVM solution with several Modules, that can appear in Regions of a Shell module. The Modules communicate with each other via an EventAggregator, and that&rsquo;s all ok. </span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">One of the Modules is a MainMenu, and that publishes Events when a menu-item is clicked. Other Modules react to that via subscription, hence the TitleBarModule shows the name-property of the chosen menu-item. That&rsquo;s the framework and it works. What I would like to add now, is a ModuleManager, that would also react to the Events from the MainMenuModule. The responsibility of the ModuleManager would be to load the requested Module. </span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span><span style=\"color: #1f497d;\" lang=\"EN-US\">The code I use for the Modules is &ndash; following MVVM principles &ndash; structured as follows: every View has the responsibility to instantiate it&rsquo;s ViewModel with an instruction like this:</span></p>\n<p><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; </span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">&lt;</span><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">UserControl.DataContext</span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">&gt;</span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">&lt;</span><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">vm</span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">:</span><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">StartViewModel</span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">/&gt;</span></p>\n<p><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; </span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">&lt;/</span><span style=\"color: #a31515; font-size: 9pt;\" lang=\"EN-US\">UserControl.DataContext</span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">&gt;</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span><span style=\"color: #1f497d;\" lang=\"EN-US\">The View has no other codebehind than its own IntializeComponent. &nbsp;That fires up the ViewModel allright. All the ViewModels need the EventAggregator (and some more shared functionality, like e.g. the NotifyPropertyChanged) so I have a BaseViewModel, from which they all Inherit. Here&rsquo;s the relevant part of that BaseViewModel:</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Imports</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> System.ComponentModel.Composition</span></p>\n<p><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Imports</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> Microsoft.Practices.Prism.Modularity</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Public</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> <span style=\"color: blue;\">MustInherit</span> <span style=\"color: blue;\">Class</span> <span style=\"color: #2b91af;\">Base_ViewModel</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Implements</span> <span style=\"color: #2b91af;\">INotifyPropertyChanged</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; &lt;<span style=\"color: #2b91af;\">Import</span>()&gt; <span style=\"color: blue;\">Public</span> Local_EventAggregator <span style=\"color: blue;\">As</span> Microsoft.Practices.Prism.Events.<span style=\"color: #2b91af;\">IEventAggregator</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; &lt;<span style=\"color: #2b91af;\">Import</span>()&gt; <span style=\"color: blue;\">Public</span> Local_ModuleManager <span style=\"color: blue;\">As</span> <span style=\"color: #2b91af;\">IModuleManager</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"><span style=\"color: #2b91af;\">&nbsp;</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"color: #1f497d;\" lang=\"EN-US\">And this is how the ViewModel inherits and is instantiated:</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Imports</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> System.ComponentModel.Composition</span></p>\n<p><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Imports</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> Microsoft.Practices.Prism.Modularity</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"color: blue; font-size: 9pt;\" lang=\"EN-US\">Public</span><span style=\"font-size: 9pt;\" lang=\"EN-US\"> <span style=\"color: blue;\">Class</span> <span style=\"color: #2b91af;\">StartViewModel</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Inherits</span> <span style=\"color: #2b91af;\">Base_ViewModel</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"><span style=\"color: #2b91af;\">&nbsp;</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Public</span> <span style=\"color: blue;\">Sub</span> <span style=\"color: blue;\">New</span>()</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">If</span> <span style=\"color: blue;\">Not</span> IsDesignTime <span style=\"color: blue;\">Then</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: #2b91af;\">CompositionInitializer</span>.SatisfyImports(<span style=\"color: blue;\">Me</span>)</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SubscribeToEvents()</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Sub</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"><span style=\"color: blue;\">&nbsp;</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Private</span> <span style=\"color: blue;\">Sub</span> SubscribeToEvents ()</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Local_EventAggregator.GetEvent(<span style=\"color: blue;\">Of</span> <span style=\"color: #2b91af;\">MenuGeselecteerd_Event</span>).Subscribe(<span style=\"color: blue;\">AddressOf</span> ReactOnMenuChoice, <span style=\"color: blue;\">True</span>)</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Sub</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"><span style=\"color: blue;\">&nbsp;</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\"></span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;</span><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Private</span> <span style=\"color: blue;\">Sub</span> ReactOnMenuChoice (<span style=\"color: blue;\">B</span></span><span style=\"font-size: 9pt;\" lang=\"EN-US\"><span style=\"color: blue;\">yVal</span> MenuChoice <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">String</span>)</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">If</span> <span style=\"color: blue;\">Not</span> MenuChoice = <span style=\"color: blue;\">String</span>.Empty <span style=\"color: blue;\">Then</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Select</span> <span style=\"color: blue;\">Case</span> MenuChoice</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Case</span> <span style=\"color: #a31515;\">\"#####\"</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Local_ModuleManager.LoadModule(<span style=\"color: #a31515;\">\"#####Init\"</span>) <span style=\"color: #00b050;\">&lsquo;##### is replaced by concrete MenuNames of course!</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &hellip;</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &hellip;</span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">Case Else</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Select</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span></span></p>\n<p><span style=\"font-size: 9pt;\" lang=\"EN-US\">&nbsp;&nbsp;&nbsp; </span><span style=\"color: blue; font-size: 9pt;\">End</span><span style=\"font-size: 9pt;\"> <span style=\"color: blue;\">Sub</span></span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">As soon as the SatisfyImports is hit, this is the resulting error, pointing to the XAML at the location that is quoted above in this email:</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><em><span style=\"color: #e46c0a;\" lang=\"EN-US\">1) No valid exports were found that match the constraint '((exportDefinition.ContractName == \"Microsoft.Practices.Prism.Modularity.IModuleManager\") AndAlso (exportDefinition.Metadata.ContainsKey(\"ExportTypeIdentity\") AndAlso \"Microsoft.Practices.Prism.Modularity.IModuleManager\".Equals(exportDefinition.Metadata.get_Item(\"ExportTypeIdentity\"))))', invalid exports may have been rejected.\" &amp; vbCrLf &amp; \"\" &amp; vbCrLf &amp; \"Resulting in: Cannot set import 'Shell.StartViewModel.Locale_ModuleManager (ContractName=\"Microsoft.Practices.Prism.Modularity.IModuleManager\")' on part 'Shell.StartViewModel'.\" &amp; vbCrLf &amp; \"Element: Shell.StartViewModel.Locale_ModuleManager (ContractName=\"Microsoft.Practices.Prism.Modularity.IModuleManager\") --&gt;&nbsp; Shell.StartViewModel\" &amp; vbCrLf &amp; \"\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.ComponentModel.Composition.CompositionResult.ThrowOnErrors(AtomicComposition atomicComposition)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(CompositionBatch batch)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch batch)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.ComponentModel.Composition.CompositionInitializer.SatisfyImports(ComposablePart part)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.ComponentModel.Composition.CompositionInitializer.SatisfyImports(Object attributedPart)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij Shell.StartViewModel..ctor()\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; --- Einde van intern uitzonderingsstackpad ---\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij Shell.StartView.InitializeComponent()\" &amp; vbCrLf &amp; \"&nbsp;&nbsp; bij Shell.StartView..ctor()}</span></em></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">I read from this that there were </span><span style=\"color: red;\" lang=\"EN-US\">no valid Exports found in the IModuleManager</span><span style=\"color: #1f497d;\" lang=\"EN-US\">??? What am I missing here, of do I need to refer to anything else/more???</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">When I leave out the import of the IModuleManager in the Base_ViewModel, everything works fine &ndash; except of course that I do not have a ModuleManager. </span><span style=\"color: red;\" lang=\"EN-US\">Should the ModuleManager be instantiated differently? </span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">I have also tried to instantiate the ViewModel from the View&rsquo;s code behind, but that gives another strange effect: When I do that, the import of the EventAggregator and the ModuleManager has to move to the ViewModel, because it cannot be inherited like in all the other Modules. That gives a non-responsive EventAggregator (another instance???) so no reaction after subscription. And thus the ReactOnMenuChoice is never hit (while all other modules still perfectly react!)</span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">There are some more variants I have been experimenting with, but they all come to the same or comparable &ndash; and disappointing - results. </span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">I am anxious to get to know the truth behind this strange behavior of the IModuleManager.&nbsp;</span><span style=\"color: #1f497d;\" lang=\"EN-US\">&nbsp;</span></p>\n<p><span style=\"color: #1f497d;\" lang=\"EN-US\">Peter Klein</span></p>",
    "PostedDate": "2012-01-16T12:26:49.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "726528",
    "ThreadId": "286333",
    "Html": "<p>Hi Peter,</p>\r\n<p>As explained in a blog post by <strong>Bob Brumfield</strong>, it seems that the <strong>CompositionInitializer </strong>class utilizes its own container, which is different from the container initialized by your bootstrapper. Based on my understanding, the <strong>ModuleManager</strong> should be registered in the container that is initialized in your bootstrapper and that is usually used by Prism, but it's not available in the container used by the <strong>CompositionInitializer</strong>; and thus, when trying to resolve the dependencies the exception you mentioned is raised.</p>\r\n<p>You can find more information about this as well as a work around to force the <strong>CompositionInitializer </strong>class to use the same container than Prism in the aforementioned blog post:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.msdn.com/b/bobbrum/archive/2010/11/22/prism-4-in-silverlight-with-mef-compositioninitializer.aspx\">Prism 4 in Silverlight with MEF CompositionInitializer</a></li>\r\n</ul>\r\n<p>Also, you might find the QuickStarts and Reference Implementations provided by prism useful, as they show different approaches of how to initialize view models and resolve their dependencies:</p>\r\n<ul>\r\n<li><a href=\"http://www.microsoft.com/download/en/details.aspx?id=16800\">Visual Basic Prism 4 Reference Implementations, QuickStarts, and Hands-on Labs</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-01-17T09:30:07.987-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "726720",
    "ThreadId": "286333",
    "Html": "<p>Hi Damian,</p>\r\n<p>Thanks for your reply. I have tried to follow the suggestion as given in your first reference and added the relevant code to the bootstrapper:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">Protected</span> <span style=\"color: blue;\">Overrides</span> <span style=\"color: blue;\">Function</span> CreateContainer() <span style=\"color: blue;\">As</span> CompositionContainer\r\n\t<span style=\"color: blue;\">Dim</span> Local_Container = <span style=\"color: blue;\">MyBase</span>.CreateContainer()\r\n\t<span style=\"color: green;\">' Initialize the CompositionHost so we can use CompositionInitializer       </span>\r\n\tCompositionHost.Initialize(Local_Container)\r\n\t<span style=\"color: blue;\">Return</span> Local_Container\r\n<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Function</span>\r\n\r\n</pre>\r\n</div>\r\n<p>I presume this will instantiate the \"right\" container, but adding this (and only this) to my code does not give the so much desired result...</p>\r\n<p>The other documentation is (among other stuff)&nbsp;the standard ModularityWithMef example. The part I cannot get working in my project&nbsp;is the simple reference to the command:<strong> ModuleManager.LoadModule(\"ModuleName\"). </strong>That won't work for me, and I have spent more than a few hours studying those examples, I can assure!!</p>\r\n<p>Perhaps some other suggestion or source for further reading?</p>\r\n<p>Regards,</p>\r\n<p>Peter</p>",
    "PostedDate": "2012-01-17T13:54:48.97-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "727221",
    "ThreadId": "286333",
    "Html": "<p>Hi Peter,</p>\r\n<p>We tried to recreate the scenario you are describing and we could reproduce the issue you are mentioning. However, we also applied the code snippet provided in the aforementioned blog post and it seems to resolve this problem.</p>\r\n<p>You can find a repro-sample application portraying this in my SkyDrive account with the following name:</p>\r\n<ul>\r\n<li><a href=\"https://skydrive.live.com/?ppud=4#cid=99307B6105BC060D&amp;id=99307B6105BC060D!107\">HelloWorldWithSatisfyImports.zip</a></li>\r\n</ul>\r\n<p>This sample is a version of the <strong>Hello World QuickStart</strong> modified to use <strong>MEF </strong>which include a mocked version of the classes you posted above. When running the application you should see a <strong>Button </strong>that, when clicked, will show a <strong>MessageBox </strong>showing the <strong>ModuleManager </strong>and the <strong>EventAggregator</strong>.</p>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-01-18T12:21:38.673-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "728370",
    "ThreadId": "286333",
    "Html": "<p>Hi Damian,</p>\r\n<p>Thanks for your answer and providing me with a working example of how to achieve (more or less) what I am looking for. From examinig the sourcecode you provide, I get the impression that it is solved by moving the call to the IModuleManager to another module than the \"core\" application where the Shell is started from.</p>\r\n<p>Does this actually mean that IModuleManager should NOT be called from the Shell-application? Or is this just a feasable workaround? I have changed my solution into this variant, but would appreciate very much to hear if this is just <em>temporary </em>or <em>permanent </em>because of fixed (mis??)behaviour of the IModuleManager. Hope to hear....</p>\r\n<p>Best regards,</p>\r\n<p>Peter</p>",
    "PostedDate": "2012-01-20T10:46:28.11-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "728389",
    "ThreadId": "286333",
    "Html": "<p>Hi Peter,</p>\r\n<p>Based on my understanding, you should be able to call the <strong>ModuleManager </strong>from the \"Shell\" project without problems. As a possible way to check this, you could move the view and view models from the <strong>HelloWorldModule </strong>project to the <strong>HelloWorld.Silverlight</strong> project (the \"Shell\" project) and consume it from that project.</p>\r\n<p>Based on this, I believe the problem you were experiencing is not related to the location of the view model which imports the <strong>IModuleManager</strong>.</p>\r\n<p>Regards,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-01-20T11:16:23.733-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "728579",
    "ThreadId": "286333",
    "Html": "<p>Thanks Damian,</p>\r\n<p>In the mean time I have been restructuring my solution a little bit, to avoid any objections the IModuleManager might have. I intruduced a \"broker\" module, connecting the \"need\" for a certain module to the \"satisfier\" if that need, using the IModuleManager in that broker module. That is a very flexible setup for my purposes and helps to keep the application architecture as clear as possible.</p>\r\n<p>I will&nbsp; - in spare (???) time - try what you suggested and experiment with moving around between modules of the IModuleManager.</p>\r\n<p>But what keeps me puzzled is: what went wrong in my initial setup?</p>\r\n<p>Best regards,</p>\r\n<p>Peter</p>",
    "PostedDate": "2012-01-21T01:07:34.1-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]