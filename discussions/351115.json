[
  {
    "Id": "819647",
    "ThreadId": "351115",
    "Html": "\r\n<p>Hi there, let me first start by saying that I do *not* want to start a war.... Merely, I want to gather some opinion on whether Prism is considered more orientated towards View-First or ViewModel-First development, or whether they are (like God said) created\r\n equal!?</p>\r\n<p>If someone knows of a good place that discusses the Pros/Cons of both in detail, that would also be very useful! At the moment myself and the other developer are not in agreement about how best to proceed, I think we should use VM-First, he V-First. Before\r\n we make a decision either way, I'd like to make sure that I know all the facts.</p>\r\n<p>Is there any difference in the amount of resources available for one over the other? Is there more documentation? Samples? etc.</p>\r\n",
    "PostedDate": "2012-04-04T01:31:46.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "820004",
    "ThreadId": "351115",
    "Html": "<p>Hi,</p>\r\n<p>Based on my understanding, <strong>Prism </strong>supports both <strong>View-First</strong> and <strong>ViewModel-First</strong> approaches. Which one you should use would depend mostly of the requirements of your scenario.</p>\r\n<p>As a personal opinion, I believe that Prism is more oriented to the <strong>View-First</strong> approach. This can be seen mainly when using the UI composition capabilities of <strong>Prism</strong>, as it seems that <strong>Region</strong>s, <strong>RegionBehavior</strong>s and <strong>Navigation </strong>are more oriented to work with views and their <strong>DataContext</strong>s, rather that <strong>ViewModels</strong>.</p>\r\n<p>I believe that you might find some existing discussions in this forum useful that contains different opinions and valuable information about the implementation of the <strong>ViewModel-First</strong> approach. Below you can find some examples of related discussions:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/267584\">How to use view-model first approach with the region feature? </a></li>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/225637\">Viewmodel-first: \"generally to be avoided\"?</a></li>\r\n<li><a href=\"http://compositewpf.codeplex.com/discussions/284238\">Using MVVMP with navigation</a></li>\r\n</ul>\r\n<p>Additionally, the following blog posts by David Hill might be handy too:</p>\r\n<ul>\r\n<li><a href=\"http://blogs.msdn.com/b/dphill/archive/2008/12/05/ui-composition-patterns.aspx\">UI Composition Patterns</a></li>\r\n<li><a href=\"http://blogs.msdn.com/b/dphill/archive/2009/05/18/viewmodel-and-dependency-injection.aspx\">ViewModel and Dependency Injection</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-04-04T11:52:19.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "820286",
    "ThreadId": "351115",
    "Html": "<p>Thanks a great deal, that was a very helpful response.&nbsp;</p>",
    "PostedDate": "2012-04-05T02:38:49.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]