[
  {
    "Id": "472997",
    "ThreadId": "221509",
    "Html": "<p>Hi,</p>\r\n<p>I am new to Prism WPF world, have one simple question.</p>\r\n<p>I have registered my view and viewmodel in the module initialise method like below</p>\r\n<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var</span><span> navigatorView </span><span>=</span><span> </span><span>new</span><span> </span><span>NavigationMenu</span><span>.</span><span>View</span><span>.</span><span>NavigationBarView</span><span>();</span><span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; navigatorView</span><span>.</span><span>DataContext</span><span> </span><span>=</span><span> m_Container</span><span>.</span><span>Resolve</span><span>&lt;</span><span>NavigationMenuViewModel</span><span>&gt;();</span><span>&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span>var</span><span> regionManager </span><span>=</span><span> m_Container</span><span>.</span><span>Resolve</span><span>&lt;</span><span>IRegionManager</span><span>&gt;();</span><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; regionManager</span><span>.</span><span>Regions</span><span>[</span><span>RegionNames</span><span>.</span><span>NavigationMenuRegion</span><span>].</span><span>Add</span><span>(</span><span>navigatorView</span><span>);</span><span>&nbsp;</span></p>\r\n<p>Now if I want to modify my ViewModel then the only way i am able to do that is through ViewModel class only, is there any other way where I can update the viewmodel object registered with the unity container. Also i would like to know how can i get the object instance registered with the unity container.</p>\r\n<p>Thanks and Regards,</p>\r\n<p>Harish</p>",
    "PostedDate": "2010-07-26T23:50:56.207-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "476037",
    "ThreadId": "221509",
    "Html": "<p id=afbb3810-8078-012d-7705-12313b101d47>Hi Harish,</p>\r\n<p>Before going into your questions, it&rsquo;s worth noting that the most common  scenario in MVVM is to have the View instantiate the ViewModel&nbsp;through <a href=\"With that in mind, it%E2%80%99s important to note that in the code you%E2%80%99ve shown, you haven%E2%80%99t registered your ViewModel in the container.\">Constructor  Injection</a>.&nbsp;For example, if the constructor of your <strong>NavigationBarView </strong>was like this:</p>\r\n<p id=afc076b0-8078-012d-770e-12313b101d47><span style=\"font-family:consolas\">&nbsp;</span></p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> NavigationBarView(NavigationMenuViewModel viewModel)\r\n\r\n{\r\n\r\n<span style=\"color:blue\">this</span>.DataContext=viewModel;\r\n\r\n(&hellip;)\r\n\r\n}\r\n</pre>\r\n</div>\r\n<p id=afc15dc0-8078-012d-7712-12313b101d47><span style=\"font-family:consolas\">&nbsp;</span></p>\r\n<p id=afc1a070-8078-012d-7713-12313b101d47>the container would create a new  instance of your ViewModel when your View is resolved. Therefore, the code in  the <strong>Initialize </strong>method of your module would look like  this:</p>\r\n<p><span style=\"font-family:consolas\">\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> navigatorView = m_Container.Resolve&lt;NavigationMenu.View.NavigationBarView&gt;(); \r\n<span style=\"color:blue\">var</span> regionManager = m_Container.Resolve&lt;IRegionManager&gt;(); \r\nregionManager.Regions[RegionNames.NavigationMenuRegion].Add(navigatorView);\r\n</pre>\r\n</div>\r\n</span></p>\r\n<p>Now, as for&nbsp;your questions,&nbsp;when you resolve a type with the <a href=\"http://msdn.microsoft.com/en-us/library/ff647202.aspx\">Unity  Container</a>, you don&rsquo;t necessarily have to register it beforehand. As  mentioned in <a href=\"http://msdn.microsoft.com/en-us/library/ff660864(PandP.20).aspx\">this  article</a>, when you call the <strong>Resolve</strong> method on a type that is  not registered, the container simply calls the constructor for that type and  returns the result.</p>\r\n<p id=afbc6f80-8078-012d-7707-12313b101d47>By <a href=\"http://msdn.microsoft.com/en-us/library/ff660923(PandP.20).aspx\">registering  a type in the container</a>, you are specifying how the container creates  instances of that type. For example, a <a href=\"http://msdn.microsoft.com/en-us/library/ff660923(PandP.20).aspx#registertype_mapping\">type  mapping</a> ties a base class or interface to a concrete class that implements  it, so that when you resolve the base class/interface an instance of the  concrete class is created.</p>\r\n<p id=afbc93b0-8078-012d-7708-12313b101d47>In your code, there is an example of  the use of type mappings in this line:</p>\r\n<p id=afbcb680-8078-012d-7709-12313b101d47><span style=\"font-family:consolas\">\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> regionManager = m_Container.Resolve&lt;IRegionManager&gt;();\r\n</pre>\r\n</div>\r\n</span></p>\r\n<p id=afbdd180-8078-012d-770a-12313b101d47>where you are resolving the  <strong>IRegionManager </strong>interface, but obtaining an instance of the  <strong>RegionManager</strong> class. This is because a type mapping was  specified between them, like this:</p>\r\n<p><span style=\"font-family:Consolas\">\r\n<div style=\"color:black;background-color:white\">\r\n<pre>m_Container.RegisterType&lt;IRegionManager, RegionManager&gt;();\r\n</pre>\r\n</div>\r\n</span></p>\r\n<p>With that in mind, it&rsquo;s important to note that in the code you&rsquo;ve shown, you  haven&rsquo;t registered your ViewModel in the container. If you wish to modify the  ViewModel without having to alter the <strong>NavigationMenuViewModel</strong> class and recompile your application, one possibility is to create several  implementations of your ViewModel and register an interface mapping in a  configuration file so that you can change between them by simply editing that  file.</p>\r\n<p id=3436e4b0-813b-012d-115f-123139180334>For example, you could have something  like this in your configuration file:</p>\r\n<p id=34371c80-813b-012d-1160-123139180334>&lt;register  type=&quot;INavigationMenuViewModel&quot; mapTo=&quot;SomeViewModel&quot; /&gt;</p>\r\n<p id=343751c0-813b-012d-1161-123139180334><span style=\"font-family:treb\"><span style=\"font-family:Trebuchet MS\">and change it to this:</span></span></p>\r\n<p id=343787a0-813b-012d-1162-123139180334>&lt;register  type=&quot;INavigationMenuViewModel&quot; mapTo=&quot;SomeOtherViewModel&quot; /&gt;</p>\r\n<p id=3437bd60-813b-012d-1163-123139180334><span style=\"font-family:treb\"><span style=\"font-family:Trebuchet MS\">when you want to use another implementation.</span></span></p>\r\n<p id=3437f2c0-813b-012d-1164-123139180334>You can read more about this in these  articles from the Unity 2.0 Documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff660935(PandP.20).aspx\">Using  Design-Time Configuration</a> </li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff660914(PandP.20).aspx\">The  Unity Configuration Schema</a> </li>\r\n</ul>\r\n<p id=34382a20-813b-012d-1165-123139180334>As for your second question,  regardless of whether you register a type or not, the container generates by  default a new instance of that object each time you call the  <strong>Resolve</strong> method. If you want to get the same instance every time  you resolve it, you have to <a href=\"http://msdn.microsoft.com/en-us/library/ff660923(PandP.20).aspx#runtime_register_lifemgr\">register  the type as a singleton</a>. Note that you should carefully consider if you need to have a type registered as a singleton, since that object will stay in memory until you close the application.</p>\r\n<p id=afc1dce0-8078-012d-7714-12313b101d47>I hope you find this helpful.</p>\r\n<p id=afc22890-8078-012d-7715-12313b101d47>Guido Leandro Maliandi <br><a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2010-08-03T10:21:48.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]