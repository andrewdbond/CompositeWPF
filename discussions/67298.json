[
  {
    "Id": "228749",
    "ThreadId": "67298",
    "Html": "<p>We have an existing winform application and want to move forward using wpf. We will need to keep many parts of the app as winforms so a total conversion is not an option. One of the objectives I want to achieve here is where new wpf content is developed &ndash; that it will only exist in a window that contains pure wpf (i.e. not a mixture of winform usercontrols and wpf usercontrols). This is due to repaint / scale layout issues.</p>\r\n<p>Currently when a user clicks a toolbar button to see a report &ndash; a modeless window is created (which contains user controls). If the user was to click the same toolbar item again &ndash; a second instance of the view would be created in a second window. Both views share underlying model data (we use mvc). This requirement must be kept moving forward...</p>\r\n<p>If we were to use prism how could we go about doing this &ndash; I see two possibilities...</p>\r\n<ol>\r\n<li>Create a shell per toolbar item click and thus &lsquo;share&rsquo; the unity container across the two so that sharing of model data / services could occur.</li>\r\n<li>Have one shell which is &lsquo;hidden&rsquo; and on each toolbar click invoke a &lsquo;popped out&rsquo; region hosting a module &ndash; if this is even possible?</li>\r\n</ol>\r\n<p>&nbsp;</p>\r\n<p>Which way seems &lsquo;best&rsquo;? Or is there another way of doing this? Any feedback would greatly be appreciated.</p>",
    "PostedDate": "2009-08-28T08:43:34.097-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]