[
  {
    "Id": "643824",
    "ThreadId": "265593",
    "Html": "\r\n<p>Hello!<br>\r\n<br>\r\nI'm using Prism 4 in my application and I want to display a &quot;Stay on Top&quot; windows like.<br>\r\n<br>\r\nI can see that Regions have an Activate method to bring the window but not a TopMost property (such as normal Window WPF)</p>\r\n<p>After all the wiring this is my function that displays a new window/usercontrol</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">&nbsp;</span></span></span></p>\r\n<p><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">public</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n</span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">void</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n OpenView(</span></span><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\">IRegionManager</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n regionManager, </span></span><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\">IUnityContainer</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n container, </span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">string</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n regionName, </span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">string</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n viewName, </span></span><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\"><span style=\"font-family:Consolas; color:#2b91af; font-size:x-small\">Type</span></span></span><span style=\"font-family:Consolas; font-size:x-small\">\r\n<span style=\"font-family:Consolas; font-size:x-small\">interfaceType) <br>\r\n</span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">{<br>\r\n</span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">&nbsp; var</span></span></span><span style=\"font-family:Consolas; font-size:x-small\">\r\n<span style=\"font-family:Consolas; font-size:x-small\">region = regionManager.Regions[regionName];<span style=\"font-family:Consolas; font-size:x-small\">\r\n<br>\r\n</span></span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">&nbsp; var</span></span></span><span style=\"font-family:Consolas; font-size:x-small\">\r\n<span style=\"font-family:Consolas; font-size:x-small\">view = region.GetView(viewName);<span style=\"font-family:Consolas; font-size:x-small\">\r\n</span></span></span></p>\r\n<p><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">&nbsp; if</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">\r\n (view == </span></span><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\"><span style=\"font-family:Consolas; color:#0000ff; font-size:x-small\">null</span></span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">)\r\n<br>\r\n&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;view = container.Resolve(interfaceType);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; region.Add(view, viewName);<br>\r\n&nbsp; } </p>\r\n<p></p>\r\n<p>&nbsp; region.Activate(view);<br>\r\n}<br>\r\n<br>\r\nSomeone already have faced a similar problem?<br>\r\n<br>\r\nHave a nice day!</p>\r\n<p></p>\r\n</span></span>\r\n<p></p>\r\n<p></p>\r\n",
    "PostedDate": "2011-07-18T10:31:03.7-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "644379",
    "ThreadId": "265593",
    "Html": "<p>Hi,</p>\n<p>Thank you for sharing this concern with the rest of the community. Please take into account that Regions do act as wrappers for the control that hosts them in terms of adding views to it, but they are not intended to expose other functionality of the control behind them.</p>\n<p>Therefore, you could manually edit the hosting control's <strong>TopMost </strong>property via a custom service of your own, or you could add a custom logic to your region via a region behavior. You might find the <strong>IHostAwareRegionBehavior </strong>region behavior useful to this purpose.</p>\n<p>If you think this should be included in Prism out of the box, you could create a work item in the <a href=\"http://compositewpf.codeplex.com/workitem/list/advanced\">Issue Tracker</a>, for the product team to consider this for future versions.</p>\n<p>Thanks,</p>\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-07-19T07:52:40.01-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]