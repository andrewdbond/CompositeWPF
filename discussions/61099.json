[
  {
    "Id": "207176",
    "ThreadId": "61099",
    "Html": "<p>Hallo,</p>\r\n<p>I read this article&nbsp;<a href=\"http://blogs.southworks.net/jdominguez/2008/09/presentation-model-with-datatemplates-in-compositewpf-prism-sample/\">http://blogs.southworks.net/jdominguez/2008/09/presentation-model-with-datatemplates-in-compositewpf-prism-sample/</a>&nbsp;and aplyed Julian's suggestion to my new Project.&nbsp;</p>\r\n<p>Now i am trying to use RegisterViewWithRegion. It seems that the&nbsp;Regions I created in the C#-Code, aren't connected to the Register of the Views.</p>\r\n<p>I hope the Code will make it clear.</p>\r\n<p>Module 1 Infront of Module 2</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>_regionManager.RegisterViewWithRegion(<span style=\"color:#A31515\">&quot;SubMenuRegion&quot;</span>, <span>() =&gt; _container.Resolve&lt;</span><span style=\"color:#2b91af\"><span style=\"color:#2b91af\">ISubMenuEntryViewModel</span></span><span>&gt;());</span></pre>\r\n</div>\r\n<p>Module 2 After Module 1</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span>SubMenuRegion = <span style=\"color:Blue\">new</span> Region()\r\nregionManager.Regions.Add(<span style=\"color:#A31515\">&quot;SubMenuRegion&quot;</span>, SubMenuRegion);</span></pre>\r\n</div>\r\n<p>Is this a bug(missing feature) of me or Prism v2? Is there a work around?</p>\r\n<p>Thanks &amp; Gru&szlig; Timo</p>",
    "PostedDate": "2009-06-30T11:13:14.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207635",
    "ThreadId": "61099",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>Hi GiCo, </span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"color:#1f497d\" lang=EN-US><a href=\"http://msdn.microsoft.com/en-us/library/dd490826.aspx\"><span style=\"font-size:small;color:#0000ff;font-family:Calibri\">View Discovery</span></a></span><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US> was introduced in Prism-v2 and the post you mention from Julian Dominguez targets Prism-v1. On the other hand, when you create regions by code region behaviors are not attached. As Julian says in his post:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><em><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;&quot;One drawback of this particular implementation is that if I have a more complex Control that not only binds, but interacts with a region, there is no out-of-the-box behavior that will use </span></span><a href=\"http://msdn.microsoft.com/en-us/library/cc707863.aspx\"><span style=\"\" lang=EN-US><span style=\"font-size:small;color:#0000ff;font-family:Calibri\">Region Adapters</span></span></a></em><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><em><span style=\"\" lang=EN-US> to enhance this binding (in the example the ItemsControl just binds to the Views collection exposed by the region and that&rsquo;s it).&quot;</span></em></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><em><span style=\"\" lang=EN-US>&nbsp;</span></em></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>To workaround this issue you might register the <strong>AutoPopulateRegionBehavior</strong> (which is in charge of listening to the <strong>IRegionViewRegistry</strong> changes and populate the region content) for the regions you create by code (this is automatically done by region adapters when regions are registered in XAML). The code should be similar to the following:</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:black\">SubMenuRegion </span>= new </span></span><span style=\"font-size:10pt;color:#2b91af;font-family:'Courier New'\">Region</span><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>();</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MainRegion.Behaviors.Add(</span></span><span style=\"font-size:10pt;color:#2b91af;font-family:'Courier New'\">AutoPopulateRegionBehavior</span><span style=\"\" lang=EN-US><span style=\"font-size:small;font-family:Calibri\">.BehaviorKey, unityContainer.Resolve&lt;</span></span><span style=\"font-size:10pt;color:#2b91af;font-family:'Courier New'\">AutoPopulateRegionBehavior</span><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>&gt;());</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regionManager.Regions.Add<span style=\"color:black\">(</span><span style=\"color:#a31515\">&quot;SubMenuRegion&quot;</span><span style=\"color:black\">, </span>MainRegion);</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"\" lang=EN-US><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Depending on your scenario, you might need to register other behaviors. You can find prism behaviors&nbsp; in the <strong>Region/Behaviors</strong> folder of the <strong>Composite.Presentation.Desktop</strong> project.<span style=\"color:#993366\"> </span>You can also you the <strong style=\"\">IRegionBehaviorFactory</strong> to get the default behaviors<span style=\"color:#993366\"> </span></span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span><span style=\"\" lang=EN-US></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>Hope it helps!</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\"><span style=\"\" lang=EN-US>&nbsp;</span></span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:small\"><span style=\"font-family:Calibri\">Matias Bonaventura</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><a href=\"http://blogs.southworks.net/\"><span style=\"font-size:small;font-family:Calibri\">http://blogs.southworks.net/matiasb</span></a></p>",
    "PostedDate": "2009-07-01T10:26:05.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207908",
    "ThreadId": "61099",
    "Html": "<p>Thank you a lot! Now everything works fine.</p>\r\n<p>I like prism a lot, great work. Articles like the one of Julian Dominguez helped me also a lot.</p>\r\n<p>Gru&szlig;&nbsp;Timo</p>",
    "PostedDate": "2009-07-02T05:12:52.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]