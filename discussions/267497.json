[
  {
    "Id": "651357",
    "ThreadId": "267497",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I am trying to build a proof-of-concept with WPF 4, Prism 4 &#43; MEF.&nbsp; The concept I am trying to prove out is to build out a 'dumb shell' that does nothing but hosts two navigation regions and has a ViewModel that contains a collection of modules.&nbsp;\r\n The shell contains two regions, &quot;MainContentRegion&quot; and &quot;MainNavigationRegion&quot;.&nbsp; below the navigation region is a list box that uses an item template to display a series of hyperlinks, one for each module loaded by MEF.&nbsp; The goal is to have MEF load\r\n the modules which would then show a hyperlink in the list box for each module.&nbsp; When the user clicks the link, the module would load the appropriate navigation view into the MainNavigationRegion.&nbsp; Each navigation view would have a set of hyperlinks\r\n which would in turn load the appropriate view into the MainContentRegion.</p>\r\n<p>Pretty basic stuff.</p>\r\n<p>Anyway, this all works like a champ except for this: when you click a hyperlink in the list box\r\n<strong><em>the second time </em></strong>the RequestNavigate call simply goes off into the ether.&nbsp; NOTE: The first time works perfectly.&nbsp; The second time navigation does not occur, but neither does the call throw an exception, and if I pass in a\r\n callback to check the NavigationResult, the callback is never called.&nbsp; It's like Prism is swallowing an exception somewhere in the API.</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">Each module class implements this interface:</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">interface</span> IRQOneModule\r\n    {\r\n        <span style=\"color:blue\">string</span> Title { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n        <span style=\"color:blue\">string</span> NavigationPaneViewName { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n        <span style=\"color:blue\">void</span> RegisterViews();\r\n\r\n        Type NavigationViewType { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n\r\n    }\r\n</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">Here's a sample of the code-behind for one of the navigation views in a module:</span></span></pre>\r\n<pre><div style=\"color:black; background-color:white\"><pre>    [Export(<span style=\"color:#a31515\">&quot;OrderEntryNavigationView&quot;</span>)]\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> OrderEntryNavigationView : UserControl\r\n    {\r\n        <span style=\"color:blue\">public</span> OrderEntryNavigationView()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        [Import]\r\n        <span style=\"color:blue\">public</span> OrderEntryNavigationViewModel ViewModel\r\n        {\r\n            <span style=\"color:blue\">set</span> { <span style=\"color:blue\">this</span>.DataContext = value; }\r\n        }\r\n\r\n    }\r\n</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"></span>Here's the method from the ViewModel that attempts to call RequestNavigate:</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"></span></pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Navigate()\r\n        {\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                _regionManager.RequestNavigate(RegionNames.MainNavigationRegion, <span style=\"color:blue\">new</span> Uri(_module.NavigationPaneViewName, UriKind.Relative));\r\n            }\r\n            <span style=\"color:blue\">catch</span> (Exception e)\r\n            {\r\n                <span style=\"color:blue\">string</span> message = e.Message;\r\n            }\r\n        }\r\n</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></span></span></span></pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></span></span></span>Again, when you start the app and click the first hyperlink in the list box, everything works.  I have two modules currently and either one will work if you click it first.  </pre>\r\n<pre>It's when you click the second one that that the RequestNavigate call just evaporates into the ether.</pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></span></span></span></pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">Any help is appreciated.</span></span></span></span></pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></span></span></span></span></span></span></span></pre>\r\n<pre><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></span></span></span>Dan</pre>\r\n</div>\r\n</span></span></pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</span></span>\r\n<p></p>\r\n",
    "PostedDate": "2011-08-02T13:20:44.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "651770",
    "ThreadId": "267497",
    "Html": "<p>Hi Dan,</p>\r\n<p>Currently in Prism, when an error occurs with a navigation request, the error is handled and thus not shown as an unhandled exception.</p>\r\n<p>As for the problem you're experiencing, you could try decorating your views with the <strong>PartCreationPolicy </strong>attribute set to <strong>CreationPolicy.NonShared</strong>, so that they are not exported as singleton instances; that might solve your problem. If that doesn't help you fix this undesired behavior, you could debug the call to the <strong>RequestNavigate</strong> method to find the exact exception that is causing this. Note that you must place a reference to the Prism Library projects instead of the compiled binaries in order to be able to debug that method call.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-08-03T07:33:31.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "651923",
    "ThreadId": "267497",
    "Html": "<p>Thanks for the suggestions Guido.&nbsp; I ended up debugging through the prism code and the root cause was my fault.&nbsp; I had created a NavigationAwareViewModelBase class that implements IConfirmNavigationRequest but had an empty implementation for ConfirmNavigationRequest.&nbsp; Thus, the prism framwork was dutifully calling ConfirmNavigationRequest but my code wasn't doing anything with the continuationCallback.&nbsp; Thus, it just canceled the navigation like it was supposed to.</p>\r\n<p>I don't think I would have found that without debugging through the RequestNavigate call.</p>\r\n<p>Thanks a million!</p>\r\n<p>Dan</p>\r\n<div id=\"_mcePaste\" class=\"mcePaste\" style=\"position: absolute; width: 1px; height: 1px; overflow: hidden; top: 0px; left: -10000px;\">ï»¿</div>",
    "PostedDate": "2011-08-03T12:00:07.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "685169",
    "ThreadId": "267497",
    "Html": "<p>Dan,</p>\r\n<p>You might find the following blog post useful, which contains more information about this:<a href=\"http://blogs.southworks.net/gmaliandi/2011/08/how-to-prevent-region-navigation-from-hiding-exceptions-in-prism/\"></a></p>\r\n<p><a href=\"http://blogs.southworks.net/gmaliandi/2011/08/how-to-prevent-region-navigation-from-hiding-exceptions-in-prism/\">How to prevent Region Navigation from hiding exceptions in Prism</a></p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi <br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-10-17T06:25:30.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]