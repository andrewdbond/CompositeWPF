[
  {
    "Id": "693697",
    "ThreadId": "278297",
    "Html": "\r\n<p>I am having a strange&nbsp; problem with my implementation of prism. I am doing the following:</p>\r\n<p>(1) Load a View in a Region (using EventAggregator to send message to a class that manages loading/clearing Views in Region)</p>\r\n<p>(2) Load data in to the created View (again using EventAggregator to send and populate the data in the newly created View)</p>\r\n<p>(3) I have a base class for my Views. In this base class, I am trying to access the parent of the View (using VisualTreeHelper.GetParent). This I am doing in an EventHandler (method) that is called when the datacontext of the View is changed</p>\r\n<p>The problem is VisualTreeHelper.GetParent gives me 'null' sometimes, and the proper container on other times. Again, this is quite random.</p>\r\n<p>While debugging, I found that the View is correctly getting loaded in the intended Region even when VisualTreeHelper.GetParent returns null.</p>\r\n<p>Any help will be a blessing to me.</p>\r\n<p>Thanks in advance,</p>\r\n<p>Dharmesh</p>\r\n",
    "PostedDate": "2011-11-03T23:13:20.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "693820",
    "ThreadId": "278297",
    "Html": "<p>Dharmesh,</p>\r\n<p>Based on my understanding of your scenario, this might be happening due to a timing issue. That is to say, there might be some times in which the <strong>DataContext </strong>is set on your view while it's still not loaded in the visual tree (in which case the <strong>VisualTreeHelper.GetParent</strong> method will be returning null), and some other times where it is already loaded in the visual tree (in which case it will return the correct parent). You could try hooking to some other event less likely to be affected by this timing factor.</p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-11-04T05:24:51.87-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "694536",
    "ThreadId": "278297",
    "Html": "<p>Thanks Guido, however is there any way I can 'wait and watch' in code till the loading in the visual tree is finished?</p>\n<p>&nbsp;</p>\n<p>So my base class for view is like:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>  <span style=\"color: blue;\">public</span> ViewBase()\n        {\n            <span style=\"color: blue;\">this</span>.DataContextChanged += <span style=\"color: blue;\">new</span> DependencyPropertyChangedEventHandler(ViewBase_DataContextChanged);            \n        }\n\n<span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">void</span> ViewBase_DataContextChanged(<span style=\"color: blue;\">object</span> sender, DependencyPropertyChangedEventArgs e)\n        {            \n            <span style=\"color: blue;\">if</span> (e.NewValue <span style=\"color: blue;\">is</span> ViewModelBase)\n            {\n                SetBinding(IsViewBusyProperty, <span style=\"color: blue;\">new</span> Binding() { Source = ((ViewModelBase)e.NewValue).IsFormBusy, Mode= BindingMode.OneWay});\n            }\n        }\n\n\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">readonly</span> DependencyProperty IsViewBusyProperty = DependencyProperty.Register(<span style=\"color: #a31515;\">\"IsViewBusy\"</span>, <span style=\"color: blue;\">typeof</span>(Boolean), <span style=\"color: blue;\">typeof</span>(ViewBase), <span style=\"color: blue;\">new</span> PropertyMetadata(<span style=\"color: blue;\">new</span> PropertyChangedCallback(OnIsViewBusyChanged)));\n\n\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> OnIsViewBusyChanged(DependencyObject element, DependencyPropertyChangedEventArgs e)\n        {            \n            DependencyObject parent = VisualTreeHelper.GetParent(element);            \n                         \n            <span style=\"color: blue;\">while</span> (!(parent <span style=\"color: blue;\">is</span> PodControl))\n            {\n                <span style=\"color: blue;\">if</span> (parent == <span style=\"color: blue;\">null</span>) { <span style=\"color: blue;\">break</span>; }\n                parent = VisualTreeHelper.GetParent(parent);\n            }\n            <span style=\"color: blue;\">if</span> (parent != <span style=\"color: blue;\">null</span>)\n            {\n                ((PodControl)parent).podBusyIndicator.IsBusy = (<span style=\"color: blue;\">bool</span>)e.NewValue;\n            }\n        }\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>So in OnIsViewBusyChanged above, the behavior of VisualTreeHelper.GetParent is random.</strong></p>\n<p>&nbsp;</p>\n<p><strong><br /></strong></p>\n<p>My View is:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> ParticipantDetailsView : ViewBase, IParticipantDetailsView\n    {\n        <span style=\"color: blue;\">public</span> ParticipantDetailsView(ParticipantDetailsViewModel model)\n        {\n            InitializeComponent();\n\n            <span style=\"color: blue;\">this</span>.Loaded += (s, e) =&gt;\n            {\n                <span style=\"color: blue;\">this</span>.DataContext = model;                \n            };\n\n        }\n    }\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">interface</span> IParticipantDetailsView : IView\n    {\n    }\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
    "PostedDate": "2011-11-06T14:45:20.247-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "694571",
    "ThreadId": "278297",
    "Html": "<p>I solved it.</p>\r\n<p>I used LayoutUpdated event instead of Loaded event as suggested in:</p>\r\n<p>\"Loaded and Control Object Lifetime\" section in <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.frameworkelement.loaded%28v=vs.95%29.aspx\" target=\"_blank\">http://msdn.microsoft.com/en-us/library/system.windows.frameworkelement.loaded%28v=vs.95%29.aspx</a></p>\r\n<p>Thanks anyways,</p>\r\n<p>Dharmesh</p>",
    "PostedDate": "2011-11-06T21:02:23.547-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "694674",
    "ThreadId": "278297",
    "Html": "<p>Hi,</p>\r\n<p>I'm glad that you solved your problem, and thanks for sharing it with the rest of the community.</p>\r\n<p>Thanks,</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-11-07T04:27:54.373-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]