[
  {
    "Id": "211764",
    "ThreadId": "62388",
    "Html": "<p>Hi,</p>\r\n<p>I&nbsp; have two views A and B which belong to the same module.&nbsp; View B is a user control which I use in view A.</p>\r\n<p>Each view has its own ViewModel.</p>\r\n<p>I register view A like this :</p>\r\n<p>_regionManager.RegisterViewWithRegion(&quot;SourceListRegion&quot;, () =&gt; _container.Resolve&lt;IViewA&gt;().View);</p>\r\n<p>_regionManager.RegisterViewWithRegion(&quot;SourceListRegion&quot;, () =&gt; _container.Resolve&lt;IViewB&gt;().View);</p>\r\n<p>and then :</p>\r\n<p>_container.RegisterType&lt;IViewA, ViewA&gt;();<br> _container.RegisterType&lt;IViewAViewModel, ViewAViewModel&gt;();<br>_container.RegisterType&lt;IViewB, ViewB&gt;();<br> _container.RegisterType&lt;IViewBViewModel, ViewBViewModel&gt;();</p>\r\n<p>Ok, as you can see I resolve view B when registering with the same region as view A. Is this the correct way to do it ? I find it strange to have to register a view with a region when this view is actually contained in a view (view A) already registered with that region.</p>\r\n<p>Second issue, which might more a MVVM problem : In the constructors of my views, I register the model with the view like that :</p>\r\n<p>public ViewAViewModel(IEventAggregator aggregator,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IViewA view)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View = view;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.SetViewModel(this);</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; }.</p>\r\n<p>public ViewBViewModel(IEventAggregator aggregator,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IViewB view)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View = view;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.SetViewModel(this);</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>For a reason I can't explain, view B ends up having its ViewModel set to the one of view A..... how come ?</p>\r\n<p>&nbsp;</p>\r\n<p>thanks !</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-14T09:19:39.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "212532",
    "ThreadId": "62388",
    "Html": "<p>Hi</p>\r\n<p><strong><span style=\"text-decoration:underline\">About View Registration<br></span></strong>As you say the code above is registering both views in the same region, which is not what you want if <strong>ViewB</strong> should be inside <strong>ViewA</strong>. The approach in this situation is creating a region inside <strong>ViewA </strong>and register/inject <strong>ViewB</strong> into that region. For some situation<span style=\"color:#1f497d\">s</span> <a href=\"http://msdn.microsoft.com/en-us/library/dd458914.aspx\">creating a scoped region</a> is also useful, so perhaps you might take it into account.</p>\r\n<p><strong><span style=\"text-decoration:underline\">About Having the Same Model in both Views<br></span></strong>From the code above I cannot find the reason why this would be happening. You can debug your solution to check why both views are getting the same model and take a look at the Reference Implementation solution that comes with the guidance, which uses PresenationModels/MVVM and check if your code has any differences with it. If you cannot find the cause and the error persist, please provide some more code so we can reproduce the error and find a possible fix.</p>\r\n<p><strong>Side Note: </strong>The code above is resolving the Views and trying to get a View property:<br><span style=\"font-size:10pt\" lang=EN-US>_regionManager.RegisterViewWithRegion(&quot;SourceListRegion&quot;, () =&gt; _container.Resolve&lt;IViewA&gt;().View);</span><span style=\"font-size:10pt\" lang=EN-US>&nbsp;</span></p>\r\n<p>The common approach is having a View property in the model:<br><span style=\"font-size:10pt\" lang=EN-US>_regionManager.RegisterViewWithRegion(&quot;SourceListRegion&quot;, () =&gt; _container.Resolve&lt;IViewAViewModel&gt;().View);</span></p>\r\n<p>This most likely is an error when you posted your question, but in case it is not it could have something to do with having the same ViewModel in both views.</p>\r\n<p>I hope my answer was useful.</p>\r\n<p>Damian Schenkelman<br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-07-16T05:22:44.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "212539",
    "ThreadId": "62388",
    "Html": "<p>Hi Damian,</p>\r\n<p>I had a look at scoped region but I did not realize it was what I needed to use.... You are also saying that I can create a region inside ViewA, how can I do that ? Do you have a code example ?</p>\r\n<p>&nbsp;</p>\r\n<p>You are right, it was a typo when I posted my code. I do have a View property in my ViewModel.</p>\r\n<p>I forgot to post the code of the SetViewModel function :</p>\r\n<p>public void SetViewModel(ISourceFilterViewModel viewModel)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataContext = viewModel;<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>As you can see I set the DataContext of the view to the viewModel passed as parameter (see first post). I believe that when I set the DataContext for ViewA, it also sets it for ViewB... But I don't know how to prevent this from happening.</p>",
    "PostedDate": "2009-07-16T05:40:58.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213044",
    "ThreadId": "62388",
    "Html": "<p>Hi</p>\r\n<p>To create a region inside a view you simply need to add the code you would to create a region in the Shell to a view. For example:<span style=\"color:#1f497d\" lang=EN-US></span></p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">xmlns:cal</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation</span><span style=\"color:Black\">&quot; ...</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">LayoutRoot</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Null}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t...\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ItemsControl</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">OrdersItemsControl</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">BorderThickness</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">cal:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">OrdersRegion</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Margin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0,10,0,10</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;<br>\t...<br></span></pre>\r\n<pre>      <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span></pre>\r\n</div>\r\n<p>Please let me know if this helps.</p>\r\n<p>Damian Schenkelman<br><a href=\"http://blogs.southworks.net/dschenkelman\">http://blogs.southworks.net/dschenkelman</a></p>",
    "PostedDate": "2009-07-17T07:01:00.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "499225",
    "ThreadId": "62388",
    "Html": "<p>Are you sure you can do this?</p>\r\n<p>I have a problem at the moment when i add a region inside another region (similar to the way you just described it, using RegionManager.RegionName=&quot;...&quot;) and it causes RegionCreationExceptions and/or doesn't dispose the views.</p>\r\n<p>I thought with View Discovery composition it can only be one region deep, is that correct?</p>",
    "PostedDate": "2010-09-27T17:30:03.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "499600",
    "ThreadId": "62388",
    "Html": "<p id=25f60c50-ad49-012d-754d-12313b030022>Hi,</p>\r\n<p>There is no known restriction regarding nested regions in the View Discovery approach. Therefore, the exception you are&nbsp;experiencing might be caused by the following reasons:</p>\r\n<ul>\r\n<li>The&nbsp;application creates&nbsp;two regions with the same name:<strong> </strong>unless you use <a href=\"http://msdn.microsoft.com/en-us/library/dd458914.aspx\">scoped regions</a>, you can&rsquo;t set two regions with the same name, even if they are nested within each other. That&rsquo;s because a <strong>RegionManager</strong> cannot hold two regions with the same name. In case you use scoped regions, you would be using a separate <strong>RegionManager</strong> for each region, so it wouldn&rsquo;t throw an exception.</li>\r\n<li>You could be setting the region in an inappropriate control: out-of-the-box,<strong> </strong><a href=\"http://msdn.microsoft.com/en-us/library/ff921164(PandP.20).aspx\">regions</a> can only be defined in a control that derives from <strong>ItemControl</strong>, <strong>ContentControl</strong> or <strong>Selector</strong>. If you try to create a region in a control that does not derive from any of the mentioned, an exception will be thrown.</li>\r\n</ul>\r\n<p id=25f620c0-ad49-012d-754f-12313b030022>I hope this helps.</p>\r\n<p><span><span style=\"color:#3c3c3c\">Fernando Antivero</span></span><span><span style=\"color:#3c3c3c\">&nbsp;</span></span><span style=\"color:#3c3c3c\"><br><span><a href=\"http://blogs.southworks.net/fantivero\"><span style=\"color:#0066cc\">http://blogs.southworks.net/fantivero</span></a></span></span></p>",
    "PostedDate": "2010-09-28T12:10:29.917-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]