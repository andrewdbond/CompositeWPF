[
  {
    "Id": "1170551",
    "ThreadId": "501447",
    "Html": "In a Ribbon control, I have the following Tabs:<br />\n<pre><code>Home\n     Main\n     Recent \n     New Student\n     New Course\nStudents\n     Save\n     New\n     Delete\n     Search\n     Print\nCourses\n    Save\n    New\n    Delete\n    Print\nHelp\n</code></pre>\n\nFor Home when you click Recent, Home, New Student or New Course, I am using regionmanger to navigate to the form.<br />\n<br />\nWhen I am in Students tab of the ribbon, Search can do the same to navigate using region manager to take me to a Search Form. Easy work :)<br />\n<br />\nWhen I am in a New Student Form, the Save, and Delete button must use the commands of the New student form viewmodel.<br />\n<br />\nFor print, I will have to use the regioncontext information from New Form to pass to print preview based on what they wanted to print from the student form.<br />\n<br />\nMy question is how do I bind the delegate command of the NewStudentViewModel that has SaveCommand, DeleteCommand to the Save and Delete Buttons in the RibbonControl? <br />\n<br />\nThe same requirement is there for the Courses Tab<br />\n<br />\nMy Shell is<br />\nTopRegion (Ribbon)<br />\nLeftRegion (Some search capability)<br />\nMainRegion (Main Content where New Student Form will be displayed)<br />\n<br />\nWith the above structure, My TopRegion (Call it AppMenu) does not have access to the NewStudentViewModel or NewCourseViewModel.<br />\n<br />\nI am kinda stuck here on the approach. If this approach not correct, please advise any better ideas<br />\n",
    "PostedDate": "2014-01-16T08:34:42.577-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1170662",
    "ThreadId": "501447",
    "Html": "Hi isakavis,\r<br />\n<br />\nIf I understood correctly, you would have a <strong>TopRegion</strong> that shows each of the 3 tabs with their corresponding buttons as described in the structure like <strong><em>Save</em></strong> and <strong><em>Delete</em></strong>. Then, each <strong>Student</strong> or <strong>Course</strong> form would be displayed in the <strong>MainRegion</strong>. \r<br />\n<strong>Prism</strong> provides a simple way for communication between <strong>Regions</strong> by using the <strong>Event Aggregator</strong>. You may find how it works in the following <strong>Prism Guide</strong> chapter:<br />\n<h1></h1>\n<ul>\n<li>\n<a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=pandp.40).aspx\" rel=\"nofollow\">9: Communicating Between Loosely Coupled Components</a><br />\n</li>\n</ul>\nWhat you would need to do, is to bind the command buttons on their corresponding datacontext <strong>ViewModel</strong> just like any other command. So now, you would get the <strong><em>Save</em></strong> or <strong><em>Delete</em></strong> delegate commands publish and raise an <em>Event</em> on the <strong>EventAggregator</strong>, which it would be handled by the <strong>NewStudentViewModel</strong> or <strong>NewCourseViewModel</strong> event handler. In order to get the event handled, you would need the <strong>NewStudentViewModel</strong> and <strong>NewCourseViewModel</strong> subscribe to the corresponding <em>Event</em> that they would handle.\r<br />\n<br />\nNotice that you may need different events for the <strong><em>Save</em></strong> and <strong><em>Delete</em></strong> command as each one would be handled in a different way.\r<br />\n<br />\nI hope this helped you,\r<br />\nRegards.\r<br />\n<br />\nGabriel Ostrowsky\r<br />\n<a href=\"https://blogs.southworks.net/gostrowsky\" rel=\"nofollow\">https://blogs.southworks.net/gostrowsky</a><br />\n",
    "PostedDate": "2014-01-16T09:51:23.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-01-17T04:50:07.933-08:00"
  }
]