[
  {
    "Id": "652852",
    "ThreadId": "267850",
    "Html": "<p>Hi,</p>\n<p>&nbsp;</p>\n<p>After having all my client and Server projects strong named with a keypair, I get this exception when starting the application:</p>\n<p>&nbsp;</p>\n<p>Microsoft JScript runtime error: Unhandled Error in Silverlight Application Unable to retrieve the module type SalesContactManagement.Modules.ContactModule.ContactModule, SalesContactManagement.Modules.ContactModule, Version=1.0.0.0, Culture=neutral, PublicToken=null  from the loaded assemblies. &nbsp;You may need to specify a more fully-qualified type name. &nbsp; at Microsoft.Practices.Prism.Modularity.ModuleInitializer.HandleModuleInitializationError(ModuleInfo moduleInfo, String assemblyName, Exception exception)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.ModuleInitializer.Initialize(ModuleInfo  moduleInfo)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.ModuleManager.LoadModulesThatAreReadyForLoad()&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.ModuleManager.IModuleTypeLoader_LoadModuleCompleted(Object sender, LoadModuleCompletedEventArgs e)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.XapModuleTypeLoader.RaiseLoadModuleCompleted(LoadModuleCompletedEventArgs  e)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.XapModuleTypeLoader.HandleModuleDownloaded(DownloadCompletedEventArgs e)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.XapModuleTypeLoader.IFileDownloader_DownloadCompleted(Object sender, DownloadCompletedEventArgs  e)&nbsp; &nbsp;at Microsoft.Practices.Prism.Modularity.FileDownloader.WebClient_OpenReadCompleted(Object sender, OpenReadCompletedEventArgs e)&nbsp; &nbsp;at System.Net.WebClient.OnOpenReadCompleted(OpenReadCompletedEventArgs e)&nbsp; &nbsp;at System.Net.WebClient.OpenReadOperationCompleted(Object  arg)</p>\n<p>&nbsp;</p>\n<p>I wonder if somebody could help me how to fix this? Do I have to change the namespace to something else?</p>\n<p>&nbsp;</p>\n<p>This is my config:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleCatalog</span> \n    <span style=\"color: red;\">xmlns:Modularity</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:Microsoft.Practices.Prism.Modularity;assembly=Microsoft.Practices.Prism</span><span style=\"color: black;\">\"</span>\n    <span style=\"color: red;\">xmlns</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color: black;\">\"</span>\n    <span style=\"color: red;\">xmlns:x</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">xmlns:sys</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:System;assembly=mscorlib</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfoGroup</span> <span style=\"color: red;\">InitializationMode</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">WhenAvailable</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfo</span> <span style=\"color: red;\">Ref</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">SalesContactManagement.Modules.ContactModule.xap</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ModuleName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">ContactModule</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ModuleType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">SalesContactManagement.Modules.ContactModule.ContactModule, SalesContactManagement.Modules.ContactModule, Version=1.0.0.0, Culture=neutral, PublicToken=xxx</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfo</span> <span style=\"color: red;\">Ref</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">SalesContactManagement.Modules.NavigationModule.xap</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ModuleName</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">NavigationModule</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ModuleType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">SalesContactManagement.Modules.NavigationModule.NavigationModule, SalesContactManagement.Modules.NavigationModule, Version=1.0.0.0, Culture=neutral, PublicToken=xxx</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfo.DependsOn</span><span style=\"color: blue;\">&gt;</span>\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">sys</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">String</span><span style=\"color: blue;\">&gt;</span>ContactModule<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">sys</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">String</span><span style=\"color: blue;\">&gt;</span>\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfo.DependsOn</span><span style=\"color: blue;\">&gt;</span>\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfo</span><span style=\"color: blue;\">&gt;</span>        \n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleInfoGroup</span><span style=\"color: blue;\">&gt;</span>\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Modularity</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">ModuleCatalog</span><span style=\"color: blue;\">&gt;</span>\n</pre>\n</div>\n<p>&nbsp;</p>\n<pre><span><pre><span>PublicToken=xxx  is my public GUID that I got by doing sn.exe -T Contact.Module.dll</span></pre>\n<pre><span>I hope this is what was required.</span></pre>\n&nbsp;&nbsp;&nbsp;&nbsp;</span></pre>\n<p>&nbsp;</p>\n<p>Thanks,</p>\n<p>Houman</p>",
    "PostedDate": "2011-08-04T23:46:14.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "653274",
    "ThreadId": "267850",
    "Html": "<p>Hi Houman,</p>\r\n<p>Based on our understanding of your situation, there doesn't seem to be any problems with what you're showing here. In my opinion, you shouldn't need to change the namespace.</p>\r\n<p>Additionally, the exception is saying that the PublicToken is null; is that exception shown when using the module catalog you're describing here?</p>\r\n<p>Thanks,</p>\r\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-08-05T10:07:59.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "653316",
    "ThreadId": "267850",
    "Html": "<p>Hi Guido,</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks for the response. &nbsp;Good catch, the initial exception was from last night when I had forgotten putting the public key in there as described above. Hence the null value you have spotted.</p>\r\n<p>But this morning I had a vision and realized it, i have retrieved the GUID as above and ran it again. It made no difference&nbsp;unfortunately. But I forgot to update the initial exception error in this message.</p>\r\n<p>So when you say there is nothing wrong, that's a bad news for me. I am quite stuck on this. :(</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-08-05T10:50:26.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "653621",
    "ThreadId": "267850",
    "Html": "<p>Hi Guido,</p>\r\n<p>&nbsp;</p>\r\n<p>I have made some great progress in this case and have almost the solution. I wonder if you could give me an advice this regarding please.</p>\r\n<p><br />I have deactivated the ModulesCatalog.xaml and am trying to do the same thing in code instead. The first attempt was replicating it exactly and it still failed with the same error message:</p>\r\n<pre><div style=\"color: black; background-color: white;\"><pre><span style=\"color: #0000ff;\"><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> IModuleCatalog CreateModuleCatalog()\r\n        {\r\n            <span style=\"color: green;\">//return Microsoft.Practices.Prism.Modularity.ModuleCatalog.CreateFromXaml(new Uri(\"/SalesContactManagement.Shell;component/ModulesCatalog.xaml\", UriKind.Relative));</span>\r\n\r\n            ModuleCatalog moduleCatalog = <span style=\"color: blue;\">new</span> ModuleCatalog();\r\n\r\n            moduleCatalog.AddGroup(InitializationMode.WhenAvailable, <span style=\"color: #a31515;\">\"SalesContactManagement.Modules.ContactModule.xap\"</span>,\r\n                                   <span style=\"color: blue;\">new</span> ModuleInfo()\r\n                                       {\r\n                                           ModuleName = <span style=\"color: #a31515;\">\"ContactModule\"</span>,\r\n                                           ModuleType =\r\n                                               <span style=\"color: #a31515;\">\"SalesContactManagement.Modules.ContactModule.ContactModule, SalesContactManagement.Modules.ContactModule, Version=1.0.0.0, Culture=neutral, PublicToken=xxx\"</span>,\r\n                                           Ref = <span style=\"color: #a31515;\">\"SalesContactManagement.Modules.ContactModule.xap\"</span>\r\n                                       },\r\n                                   <span style=\"color: blue;\">new</span> ModuleInfo()\r\n                                       {\r\n                                           ModuleName = <span style=\"color: #a31515;\">\"NavigationModule\"</span>,\r\n                                           ModuleType =\r\n                                               <span style=\"color: #a31515;\">\"SalesContactManagement.Modules.NavigationModule.NavigationModule, SalesContactManagement.Modules.NavigationModule, Version=1.0.0.0, Culture=neutral, PublicToken=xxx\"</span>,\r\n                                           Ref = <span style=\"color: #a31515;\">\"SalesContactManagement.Modules.NavigationModule.xap\"</span>,\r\n                                           DependsOn = <span style=\"color: blue;\">new</span> Collection&lt;<span style=\"color: blue;\">string</span>&gt; { <span style=\"color: #a31515;\">\"ContactModule\"</span> }\r\n                                       });\r\n<span style=\"color: blue;\">             return</span> moduleCatalog;\r\n}\r\n</pre>\r\n</div>\r\n<br /></span></pre>\r\n</div>\r\n<br /></pre>\r\n<pre>Then I tried to add them directly by referencing the modules to the Shell:</pre>\r\n<pre><pre><br /></pre>\r\n<pre><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> IModuleCatalog CreateModuleCatalog()\r\n{\r\n\r\n            Type contactModuleType = <span style=\"color: blue;\">typeof</span>(ContactModule);\r\n            Type navigationModuleType = <span style=\"color: blue;\">typeof</span>(NavigationModule);\r\n\r\n            ModuleCatalog moduleCatalog = <span style=\"color: blue;\">new</span> ModuleCatalog().AddModule(contactModuleType).AddModule(navigationModuleType, <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">string</span>[] {<span style=\"color: #a31515;\">\"ContactModule\"</span>});\r\n            \r\n<span style=\"color: blue;\">            return</span> moduleCatalog;\r\n\r\n}\r\n</pre>\r\n</div>\r\n<br /></pre>\r\n</pre>\r\n<pre>Surprisingly, <span>this one works. No exception anymore. However it only shows my NavigationModule on the display.  The ContactModule is never showing up. Have I set the dependency correctly?</span></pre>\r\n<pre><span>I even tried without setting the dependency and it didn't affect anything.</span></pre>\r\n<pre><span><br /></span></pre>\r\n<pre><span>Many Thanks,</span></pre>\r\n<p>Houman</p>",
    "PostedDate": "2011-08-06T04:45:15.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "654365",
    "ThreadId": "267850",
    "Html": "<p><strong>Update:</strong></p>\r\n<p>Since I could find a solution for Unity, I ended up to convert my project to use MEF.</p>\r\n<p>It was a huge pain. MEF is indeed a very difficult technology to begin with. I found Unity much easier. &nbsp;But at the end it was worth the effort and now I am understanding MEF also much better.</p>\r\n<p>The result was that I can now strong name my assemblies thanks to MEF and run the app without any problem. &nbsp; &nbsp;Whatever it was, Unity didn't work very well after all in my scenario. &nbsp;&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Houman<br /><br />&nbsp;</p>\r\n<p><strong><br /></strong></p>",
    "PostedDate": "2011-08-08T02:13:16.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]