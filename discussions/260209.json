[
  {
    "Id": "623031",
    "ThreadId": "260209",
    "Html": "\r\n<p>Is the SCSF discussions there is a topic that discusses loading workitems into a treeview and being able to display the view with the associated workitem when it is selected.&nbsp; The link to the discussion is:</p>\r\n<p>&#65279;&#65279;<a href=\"http://smartclient.codeplex.com/discussions/21470\">http://smartclient.codeplex.com/discussions/21470</a></p>\r\n<p>What is the best way to do this using WPF &amp; PRISM?</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-06-04T16:09:49.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "623657",
    "ThreadId": "260209",
    "Html": "<p>Hi,</p>\r\n<p>One possible way to achieve your scenario in Prism could be using <strong>Regions</strong> and <strong>Navigation</strong>. A <strong>region</strong> represents a container that can hold dynamic data that is presented in a UI. It allows the Prism Library to place dynamic content contained in modules in predefined placeholders in a UI container.</p>\r\n<p>As Prism documentation shows: &ldquo;<strong><em>Navigation</em></strong><em>is defined as the process by which the application coordinates changes to its UI as a result of the user's interaction with the application or internal application state changes. </em><em>UI updates can be accomplished by adding or removing elements from the application's visual tree, or by applying state changes to existing elements within the visual tree. (&hellip;) </em><em>Prism differentiates between the two styles of navigation described earlier. <strong>Navigation</strong> accomplished via state changes to existing controls in the visual tree is referred to as state-based navigation. <strong>Navigation</strong> accomplished via the addition or removal of elements from the visual tree is referred to as view-based navigation. Prism provides guidance on implementing both styles of navigation, focusing on the case where the application is using the Model-View-ViewModel (MVVM) pattern to separate the UI (encapsulated in the view) from the presentation logic and data (encapsulated in the view model).</em>&rdquo;</p>\r\n<p>You can read the following chapters of Prism documentation where these topics are covered and will help you to achieve your desire scenario:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921098(PandP.40).aspx\">Chapter 7: Composing the User Inteface</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430861(PandP.40).aspx\">Chapter 8: Navigation</a><span style=\"text-decoration: underline;\">&nbsp;</span></li>\r\n</ul>\r\n<p>Additionally you could find the following resources handy:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921174(PandP.40).aspx\">UI Composition QuickStart</a></li>\r\n<li>UI Composition and Navigation Hands-On-Lab from <a href=\"http://prismtk.codeplex.com/\">Prism Training Kit</a></li>\r\n</ul>\r\n<p>I hope you find this information useful.</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-06-06T11:45:55.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]