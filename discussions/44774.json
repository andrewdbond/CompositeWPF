[
  {
    "Id": "149081",
    "ThreadId": "44774",
    "Html": "Hi,<br>\r\nIs there a way to use commands with custom routed events? for example, this is my user control code:<br>\r\n<br>\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> readonly RoutedEvent AvailableItemSelectedEvent = EventManager.RegisterRoutedEvent(<br>\r\n        <span style=\"color:maroon\">&quot;AvailableItemSelected&quot;</span>, RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(DblListSelector));<br>\r\n<br>\r\n    <span style=\"color:green\">// CLR accessors</span><br>\r\n    <span style=\"color:blue\">public</span> event RoutedEventHandler AvailableItemSelected<br>\r\n    {<br>\r\n            add { AddHandler(AvailableItemSelectedEvent, value); } <br>\r\n            remove { RemoveHandler(AvailableItemSelectedEvent, value); }<br>\r\n    }<br>\r\n<br>\r\n     <span style=\"color:blue\">void</span> RaiseAvailableItemSelectedEvent()<br>\r\n    {<br>\r\n            RoutedEventArgs newEventArgs = <span style=\"color:blue\">new</span> RoutedEventArgs(DblListSelector.AvailableItemSelectedEvent);<br>\r\n            RaiseEvent(newEventArgs);<br>\r\n    }<br>\r\n<br>\r\n    <span style=\"color:blue\">private </span><span style=\"color:blue\">void</span> avialableListBox_SelectionChanged(<span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">SelectionChangedEventArgs</span><span style=\"font-size:13px\"> e</span>)<br>\r\n    {<br>\r\n        RaiseAvailableItemSelectedEvent();<br>\r\n    }<br>\r\n<br>\r\nAnd then in the View that uses the control:<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">cust</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">blListSelector </span><span style=\"font-size:13px;color:#ff0000\">x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Name</span><span style=\"font-size:13px;color:#0000ff\">=&quot;resolutionSelector&quot;</span><span style=\"font-size:13px;color:#ff0000\"> </span><span style=\"font-size:13px;color:#ff0000\"> AvailableItemSelected</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> AvailableSourceSelectedCommand</span><span style=\"font-size:13px;color:#0000ff\">}&quot;/&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\nBut then we get the following error:<br>\r\nAvailableItemSelected=&quot;{Binding AvailableSourceSelectedCommand}&quot; is not valid. '{Binding AvailableSourceSelectedCommand}' is not a valid event handler method name. Only instance methods on the generated or code-behind class are valid.<br>\r\nIs there a way to work around this? Does using custom events means avoiding commands and using the events aggragator?<br>\r\nThank you,<br>\r\nKen<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-20T23:56:25.183-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149401",
    "ThreadId": "44774",
    "Html": "<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Hi Ken,</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">To bind a command to a control by XAML, the control must have a <b>Command</b> dependency property. For example, the <b>Button</b> class allows your bind a command to the Click event through its Command property:</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">&lt;Button Name=&quot;MyCommandButton&quot; Command=&quot;{Binding MyCommand}&quot;&gt;Execute MyCommand&lt;/Button&gt;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">However, if your control does not contain a <b>Command</b> dependency property to bind a command with the <b>AvailableItemSelected</b> event, you could use instead an attached property with attached behaviors. This approach is being followed by the Prism-v2 team to hook buttons to commands via XAML in Silverlight (because they are not natively supported). Check the <b>Click</b> and <b>ButtonBaseClickCommandBehavior</b> classes inside the Command folder of the Composite.Presentation.Desktop project in the </span><a href=\"http://www.codeplex.com/CompositeWPF/Release/ProjectReleases.aspx?ReleaseId=21912\"><span style=\"font-family:calibri\">Prism V2 – Drop 9</span></a><span style=\"font-family:calibri\">.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">You can review the implementation of those classes to create similar classes (like <b>AvailableItemSelected</b> and <b>ListSelectorAvailableItemSelectedCommandBehavior</b>) to meet your requirements (instead of executing the command on Button’s Click event, you can execute it on SelectionChanged).</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">You could also find useful the following related article by </span><a href=\"http://blogs.southworks.net/jdominguez/\"><span style=\"font-family:calibri\">Julian Dominguez</span></a><span style=\"font-family:calibri\"> explaining how to use Commands in Silverlight using attached behaviors:</span></p>\r\n<p style=\"margin:0in 0in 0pt 52.2pt\"><span style=\"font-family:symbol\">·<span style=\"font:7pt 'times new roman'\">         </span><a href=\"http://blogs.southworks.net/jdominguez/2008/08/icommand-for-silverlight-with-attached-behaviors/\"><span style=\"font-family:calibri\">ICommand for Silverlight with Attached Behaviors</span></a>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:calibri\">Mariano Converti</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><a href=\"http://blogs.southworks.net/mconverti\"><span style=\"font-family:calibri\">http://blogs.southworks.net/mconverti</span></a> </p>\r\n</span></p>\r\n",
    "PostedDate": "2009-01-21T11:37:09.897-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149513",
    "ThreadId": "44774",
    "Html": "Hi Mario,<br>\r\nThank you for your answer. I understand now why my approach didn't work (Dah...).<br>\r\nThank you,<br>\r\nKen\r\n",
    "PostedDate": "2009-01-21T17:33:27.967-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]