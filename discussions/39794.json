[
  {
    "Id": "132068",
    "ThreadId": "39794",
    "Html": "Hi<br>\r\n<br>\r\nI have created a command like:<br>\r\n<br>\r\nDelegateCommand&lt;string&gt; myCommand = new DelegateCommand&lt;string&gt;(OnMyCommandExecute, OnMyCommandCanExecute)<br>\r\n<br>\r\nmyCommand is bound to a Button.<br>\r\n<br>\r\nI can see that OnMyCommandExecute and OnMyCommandCanExecute is executed,,, <br>\r\nI expected that the button should be disabled when the OnMyCommandCanExecute returned false,,, but the button is enabled regardless of what OnMyCommandCanExecute returns...<br>\r\n<br>\r\nAny tip how to debug this,, or what to think about,,, will make me happy..  :)<br>\r\n<br>\r\n//lasse\r\n",
    "PostedDate": "2008-11-12T10:58:11.697-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133143",
    "ThreadId": "39794",
    "Html": "Thoughts: <br>\r\n<br>\r\nCheck that the Command links through to the Execute method correctly so you know the link from button to Command is complete.<br>\r\nBreakpoint the CanExecute method to ensure it's being called.<br>\r\nRemember you need to call myCommand.RaiseCanExecuteChanged()  if you want the button to requery the CanExecute method for a new value.<br>\r\nCheck there's no styles with triggers which might be overriding your enabled value?<br>\r\n<br>\r\nMartin <span id=UniqueID1226938755790> </span>\r\n",
    "PostedDate": "2008-11-17T08:19:55.323-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137201",
    "ThreadId": "39794",
    "Html": "Hi,<br>\r\n<br>\r\nThe big problem is that <em>DelegateCommand&lt;T&gt;</em> doesn't invokes the <em>canExecuteMethod</em> handler after executed!<br>\r\nIMHO this is a must behavior. It is not reasonable to call <em>RaiseCanExecuteChanged</em> after executing every command,<br>\r\nAlso, <em>RaiseCanExecuteChanged</em> should be executed again for all other command based on the state that was changed.<br>\r\n<br>\r\nUsing routed commands, WPF automatically invalidates the visual tree commands on every <span style=\"text-decoration:underline\">input event</span>. This is a great mechanism, and I think that it should be added to Prism.<br>\r\n<br>\r\nTomer \r\n",
    "PostedDate": "2008-12-03T02:38:11.75-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149542",
    "ThreadId": "39794",
    "Html": "Tomer,<br>\r\n  I'm running into this same exact issue when trying to setup some menuitems with DelegateCommand commands.<br>\r\n  I think that you nailed the issue, and hope that they look into this for drop 10, as this is a must.<br>\r\n  I think in my case, I'm going to revert to a regular WPF RoutedCommand, handling it in the view code behind and then the calling a method on the presenter to do the actual handling. Little bit of extra code, but can't see any reason it won't work for now.<br>\r\nJeff<br>\r\n",
    "PostedDate": "2009-01-21T20:05:08.173-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149697",
    "ThreadId": "39794",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span><span style=\"font-family:calibri\">Perhaps you might find these </span><a href=\"http://www.codeplex.com/CompositeWPF/Thread/View.aspx?ThreadId=44750\"><span style=\"color:#0000ff;font-family:calibri\">thread</span></a><span style=\"font-family:calibri\"> by </span><a href=\"http://blogs.southworks.net/jdominguez/\"><span style=\"color:#0000ff;font-family:calibri\">Julian Dominguez</span></a><span style=\"font-family:calibri\">, developer of the Prism-v1 &amp; Prism-v2 projects, useful. In it, he explains the reason for this <i>behavior</i> of Delegate Commands.</span></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Having considered this, if routed commands do suite your needs you should use them.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span>\r\n",
    "PostedDate": "2009-01-22T04:28:01.26-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151161",
    "ThreadId": "39794",
    "Html": "For whatever it's worth to anyone who comes across this thread, I noticed <span style=\"text-decoration:underline\">inconsistent</span> results using the following:<br>\r\n<br>\r\n         <span style=\"font-size:13px;color:#008000\">CommandManager.RequerySuggested += (s, e) =&gt; FileNewCommand.RaiseCanExecuteChanged();</span><br>\r\n<br>\r\nOn the other hand, I noticed very consistent results calling RaiseCanExecuteChanged() on the DelegateCommand instance at the appropriate time\r\n",
    "PostedDate": "2009-01-26T18:27:53.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151208",
    "ThreadId": "39794",
    "Html": "Hi Kona,<div><br></div><div>  I have the same problem, at first I thought I did something wrong and rechecked all code.</div><div> But it looks like <span style=\"color:rgb(0, 128, 0);font-family:'segoe ui';font-size:13px\">CommandManager.RequerySuggested += (s, e) =&gt; FileNewCommand.RaiseCanExecuteChanged(); </span>does not work all the time.</div><div><br></div><div> Maybe someone can share some light on this ?</div><div><br></div><div>Regards,</div><div>Calin</div><div><br></div>",
    "PostedDate": "2009-01-26T21:49:17.227-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151334",
    "ThreadId": "39794",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Kona/Calin,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Are you having issues with the <i>timing</i> of the command’s execution? If so, that could be because unless the commands are in the <b>UI Thread</b> they will be <b>enqueued and executed asynchronously</b>.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">If this is not your scenario, please send some more information so we can look further into this.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Hope this helps,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span>\r\n",
    "PostedDate": "2009-01-27T06:26:30.647-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151577",
    "ThreadId": "39794",
    "Html": "well, my particular issue was that even though the CanExecute method was being called, the UI elements didn't seem to be getting the property enabling / disabling to reflect it. <br>\r\nI would literally run the application one time, and it worked as expected, then run it again without any code changes, and it didn't work as expected (menu items didn't enable / disable consistent with the CanExecute method return value).<br>\r\n<br>\r\nI might be missing something, but the whole &quot;Suggested&quot; part of the event name gave me some doubt as to its consistency as well (like I'm suggesting you update the element, but you don't have to if you are busy with something else).\r\n",
    "PostedDate": "2009-01-27T17:40:21.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "153380",
    "ThreadId": "39794",
    "Html": "seems to work fine for me, raising the &quot;<span style=\"font-size:13px\">\r\n<p>RaiseCanExecuteChanged</p>\r\n</span>&quot;<br>\r\n<br>\r\n, didnt try the other solution as I couldnt make out what it was!!\r\n",
    "PostedDate": "2009-02-02T09:17:03.303-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]