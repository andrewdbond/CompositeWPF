[
  {
    "Id": "162922",
    "ThreadId": "48788",
    "Html": "The DelayedRegionCreationBehavior CreateRegion method gets called infinite times. <br>\r\n<br>\r\nMy application structure is a simples shell with<br>\r\n<br>\r\n<p>&lt;ContentControl Regions:RegionManager.RegionName=&quot;MainRegion&quot; /&gt;<br>\r\n<br>\r\nHas anyone experienced this behaviour? Any suggestions on how I could troubleshoot this further?<br>\r\n<br>\r\nThank you,<br>\r\n<br>\r\nPavel<br>\r\n<br>\r\n<br>\r\n<br>\r\nThe call stack shows that it is gets called at least twice and fails on the second call.<br>\r\n<br>\r\n&gt; Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(System.Windows.DependencyObject targetElement = {System.Windows.Controls.ContentControl}, string regionName = &quot;MainRegion&quot;) Line 143 + 0x79 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion() Line 119 + 0xe bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(object sender = null, System.EventArgs e = {System.EventArgs}) Line 100 + 0x8 bytes C#<br>\r\n  [Native to Managed Transition] <br>\r\n  [Managed to Native Transition] <br>\r\n  mscorlib.dll!System.Delegate.DynamicInvokeImpl(object[] args = {object[2]}) + 0xb4 bytes <br>\r\n  mscorlib.dll!System.Delegate.DynamicInvoke(object[] args = {object[2]}) + 0x2a bytes <br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Events.WeakDelegatesManager.Raise(object[] args = {object[2]}) Line 49 + 0xe bytes C#<br>\r\n  <strong>Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionManager.UpdateRegions() Line 217 + 0x40 bytes C#</strong><br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionManager.RegionCollection.Add(Microsoft.Practices.Composite.Regions.IRegion region = {Microsoft.Practices.Composite.Presentation.Regions.SingleActiveRegion}) Line 306 + 0x5 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.RegionManagerRegistrationBehavior.TryRegisterRegion() Line 127 + 0x23 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.RegionManagerRegistrationBehavior.StartMonitoringRegionManager() Line 103 + 0x8 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.RegionManagerRegistrationBehavior.OnAttach() Line 87 + 0x8 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionBehavior.Attach() Line 66 + 0x8 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionBehaviorCollection.Add(string key = &quot;RegionManagerRegistration&quot;, Microsoft.Practices.Composite.Regions.IRegionBehavior regionBehavior = {Microsoft.Practices.Composite.Presentation.Regions.Behaviors.RegionManagerRegistrationBehavior}) Line 74 + 0x9 bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionAdapterBase&lt;System.Windows.Controls.ContentControl&gt;.AttachDefaultBehaviors(Microsoft.Practices.Composite.Regions.IRegion region = {Microsoft.Practices.Composite.Presentation.Regions.SingleActiveRegion}, System.Windows.Controls.ContentControl regionTarget = {System.Windows.Controls.ContentControl}) Line 112 + 0x1b bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionAdapterBase&lt;System.Windows.Controls.ContentControl&gt;.Initialize(System.Windows.Controls.ContentControl regionTarget = {System.Windows.Controls.ContentControl}, string regionName = &quot;MainRegion&quot;) Line 66 + 0xe bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionAdapterBase&lt;System.Windows.Controls.ContentControl&gt;.Microsoft.Practices.Composite.Regions.IRegionAdapter.Initialize(object regionTarget = {System.Windows.Controls.ContentControl}, string regionName = &quot;MainRegion&quot;) Line 82 + 0x5d bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.CreateRegion(System.Windows.DependencyObject targetElement = {System.Windows.Controls.ContentControl}, string regionName = &quot;MainRegion&quot;) Line 137 + 0xf bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.TryCreateRegion() Line 119 + 0xe bytes C#<br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.Behaviors.DelayedRegionCreationBehavior.OnUpdatingRegions(object sender = null, System.EventArgs e = {System.EventArgs}) Line 100 + 0x8 bytes C#<br>\r\n  [Native to Managed Transition] <br>\r\n  [Managed to Native Transition] <br>\r\n  mscorlib.dll!System.Delegate.DynamicInvokeImpl(object[] args = {object[2]}) + 0xb4 bytes <br>\r\n  mscorlib.dll!System.Delegate.DynamicInvoke(object[] args = {object[2]}) + 0x2a bytes <br>\r\n  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Events.WeakDelegatesManager.Raise(object[] args = {object[2]}) Line 49 + 0xe bytes C#<br>\r\n<strong>  Microsoft.Practices.Composite.Presentation!Microsoft.Practices.Composite.Presentation.Regions.RegionManager.UpdateRegions() Line 217 + 0x40 bytes C#</strong><br>\r\n  CoPallet.Infrastructure!CoPallet.Infrastructure.Ioc.NinjectBootstrapper.Run(bool useDefaultConfiguration = true) Line 88 + 0x5 bytes C#<br>\r\n  CoPallet.Infrastructure!CoPallet.Infrastructure.Ioc.NinjectBootstrapper.Run() Line 51 + 0xd bytes C#<br>\r\n  CoPallet.Shell!CoPallet.Shell.App.Application_Startup(object sender = {CoPallet.Shell.App}, System.Windows.StartupEventArgs e = {System.Windows.StartupEventArgs}) Line 32 + 0xa bytes C#<br>\r\n  System.Windows.dll!System.Windows.CoreInvokeHandler.InvokeEventHandler(int typeIndex = 167, System.Delegate handlerDelegate = {System.Windows.StartupEventHandler}, object sender = {CoPallet.Shell.App}, object args = {System.Windows.StartupEventArgs}) + 0x8c3 bytes <br>\r\n  System.Windows.dll!MS.Internal.JoltHelper.FireEvent(System.IntPtr unmanagedObj = 144677232, System.IntPtr unmanagedObjArgs = 144698424, int argsTypeIndex = 167, string eventName = &quot;<a href=\"mailto:M@1\">M@1</a>&quot;) + 0x336 bytes <br>\r\n  [Appdomain Transition] <br>\r\n  [Native to Managed Transition] <br>\r\n<br>\r\n<br>\r\n<br>\r\nThe exceptions details.<br>\r\n<br>\r\nMicrosoft.Practices.Composite.Presentation.Regions.Behaviors.RegionCreationException was unhandled by user code Message=&quot;An exception occurred while creating a region with name 'MainRegion'. The exception was: System.InvalidOperationException: The Region property cannot be set after Attach method has been called.<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionBehavior</span>.set_Region</span>(<span style=\"color:#00008b\">IRegion</span> <span style=\"color:#000000\">value</span>)<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionBehaviorCollection</span>.Add</span>(<span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">key</span>, <span style=\"color:#00008b\">IRegionBehavior</span> <span style=\"color:#000000\">regionBehavior</span>)<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.AttachDefaultBehaviors</span>(<span style=\"color:#00008b\">IRegion</span> <span style=\"color:#000000\">region</span>, <span style=\"color:#00008b\">T</span> <span style=\"color:#000000\">regionTarget</span>)<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.Initialize</span>(<span style=\"color:#00008b\">T</span> <span style=\"color:#000000\">regionTarget</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>)<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.Microsoft</span>.Practices</span>.Composite</span>.Regions</span>.IRegionAdapter</span>.Initialize</span>(<span style=\"color:#00008b\">Object</span> <span style=\"color:#000000\">regionTarget</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>)<br>\r\nat <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.Behaviors</span>.DelayedRegionCreationBehavior</span>.CreateRegion</span>(<span style=\"color:#00008b\">DependencyObject</span> <span style=\"color:#000000\">targetElement</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>). &quot; StackTrace: at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.Behaviors</span>.DelayedRegionCreationBehavior</span>.CreateRegion</span>(<span style=\"color:#00008b\">DependencyObject</span> <span style=\"color:#000000\">targetElement</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.Behaviors</span>.DelayedRegionCreationBehavior</span>.TryCreateRegion</span>() at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.Behaviors</span>.DelayedRegionCreationBehavior</span>.OnUpdatingRegions</span>(<span style=\"color:#00008b\">Object</span> <span style=\"color:#000000\">sender</span>, <span style=\"color:#00008b\">EventArgs</span> <span style=\"color:#000000\">e</span>) InnerException: System.InvalidOperationException Message=&quot;The Region property cannot be set after Attach method has been called.&quot; StackTrace: at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionBehavior</span>.set_Region</span>(<span style=\"color:#00008b\">IRegion</span> <span style=\"color:#000000\">value</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionBehaviorCollection</span>.Add</span>(<span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">key</span>, <span style=\"color:#00008b\">IRegionBehavior</span> <span style=\"color:#000000\">regionBehavior</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.AttachDefaultBehaviors</span>(<span style=\"color:#00008b\">IRegion</span> <span style=\"color:#000000\">region</span>, <span style=\"color:#00008b\">T</span> <span style=\"color:#000000\">regionTarget</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.Initialize</span>(<span style=\"color:#00008b\">T</span> <span style=\"color:#000000\">regionTarget</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.RegionAdapterBase`1</span>.Microsoft</span>.Practices</span>.Composite</span>.Regions</span>.IRegionAdapter</span>.Initialize</span>(<span style=\"color:#00008b\">Object</span> <span style=\"color:#000000\">regionTarget</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>) at <span style=\"color:#008b8b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\"><span style=\"color:#00008b\">Microsoft</span>.Practices</span>.Composite</span>.Presentation</span>.Regions</span>.Behaviors</span>.DelayedRegionCreationBehavior</span>.CreateRegion</span>(<span style=\"color:#00008b\">DependencyObject</span> <span style=\"color:#000000\">targetElement</span>, <span style=\"color:#00008b\">String</span> <span style=\"color:#000000\">regionName</span>) InnerException: </p>\r\n",
    "PostedDate": "2009-02-27T14:02:40.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164380",
    "ThreadId": "48788",
    "Html": "Obviously it shouldn't do that. Can you send me a repro? erwinvd (at) microsoft dot com. I can have a look at it and see what's wrong. <br>\r\n<br>\r\nThanks,<br>\r\nErwin\r\n",
    "PostedDate": "2009-03-04T08:56:36.1-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200650",
    "ThreadId": "48788",
    "Html": "<p>holbil,</p>\r\n<p>&nbsp;</p>\r\n<p>I have seen this to, actually recently, while trying to work with Prism&nbsp;and a custom container. I had to do my own bootstrapping, which lead me to having to register types that Prism services needed. As far as you encounter, I ran into this same issue in that the RegionManagerRegistrationBehavior calls Add on the IRegionManager. The first line in the RegionManager implementation of Add is UpdateRegions(); this cirlcles back to TryCreateRegion. My solution was to create a CustomRegionManagerRegistrationBehavior and in its constructor I inject IRegionManager. I assign this value to my private member _manager and use this value when FindRegionManager is called.</p>\r\n<p>I do not know if this the exact solutions to your issue. I had a lot of things going on, but it did resolve my issue of observing orphaned regions.</p>\r\n<p>Hope this helps.</p>\r\n<p>&nbsp;</p>\r\n<p>Andres Olivares</p>",
    "PostedDate": "2009-06-11T18:02:25.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242446",
    "ThreadId": "48788",
    "Html": "<p>I had the same problem. I am using Autofac instead of Unity and created my own bootstrapper just like Andres did.</p>\r\n<p>A solution other than yours that might be a bit ugly is to set this.regionCreated = true before calling CreateRegion. That way the next time TryCreateRegion is called it never calls CreateRegion.</p>\r\n<p>It would be nice with some a proper fix for this so we who use own containers don't have to do workarounds like this.</p>\r\n<p>-Linus</p>",
    "PostedDate": "2009-10-06T00:59:45.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "416063",
    "ThreadId": "48788",
    "Html": "<p>I have to say, this is a lot more difficult than is necessary to utilize my own Container.&nbsp; I am trying to create a WindsorContainer and I am have a tremendous amount of difficulty.&nbsp; I know that I am not adding much to this thread, just venting...</p>",
    "PostedDate": "2010-03-09T12:04:12.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]