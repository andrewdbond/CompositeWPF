[
  {
    "Id": "854743",
    "ThreadId": "361221",
    "Html": "\r\n<p>Hi all,</p>\r\n<p>I am creating my first non-trivial Prism-based WPF app and generally I am quite liking it.</p>\r\n<p>The kind of apps I work on are generally touch-screen Kiosk based applications which may not be exactly what Prism is geared towards but I have one question I would like some advice on.</p>\r\n<p>I was quite confused when I got a null reference exception in one of my view models. Turned out that a resource I create on my constructor was null. A little further investigation lead me to the discovery that my view (and subsequently viewmodel) was only\r\n created the first time.</p>\r\n<p>Turns out this is a feature of Prism and if I Implement INavigationAware I can revert this behaviour so that a new instance is created each time. All well and good - just set my base usercontrol/viewmodel to IsNavigationTarget=false.</p>\r\n<p>My question is - am I doing it wrong doing it like this. if I want my application to create a new viewmodel each time the view is loaded am I missing a fundamental part of Prism?</p>\r\n<p>For me not-sharing these makes it much easier to develop and manage resources etc. on my view models (which are the main repository of code in my app) as the lifecycle of the object and this is associated properties is quite clear.</p>\r\n<p>I understand re-using the view/model will be 'faster' but I doubt it would make much difference really - is this singleton approach perhaps designed to alleviate the common issues of memory leaking etc in WPF apps?</p>\r\n<p>What are people's thoughts on this matter?</p>\r\n<p>cheers,</p>\r\n<p>Robert</p>\r\n",
    "PostedDate": "2012-06-27T22:41:45.3-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "855125",
    "ThreadId": "361221",
    "Html": "<p>Hi Robert,</p>\r\n<p>As far as I know, this is a normal behavior in <strong>Prism</strong>. When using view-based navigation, you might have an scenario where you want to navigate to an existing view in the region or to a new instance of a view. In order to support both scenarios, <strong>Prism </strong>defines the <strong>INavigationAware </strong>which provides the <strong>IsNavigationTarget </strong>method.</p>\r\n<p>Although <strong>Prism</strong>'s default behavior is to navigate to existing views in the region, as far as I know, this is not associated with any specific \"aspects\" like performance or memory leaks. What is more, implementing the <strong>INavigationAware </strong>interface and its <strong>IsNavigationTarget </strong>method is a common approach in <strong>Prism</strong>.</p>\r\n<p>However, take into account that, when performing a navigation request, <strong>Prism </strong>does not <em><strong>remove </strong></em>the previous view from the region by default, it only <em><strong>deactivates </strong></em>it. Thus, your previous used views wouldn't be disposed and garbage collected by default. In order to change this default behavior, you can implement the <strong>IRegionMemberLifetime</strong> interface in your views or view models and set its <strong>KeepAlive </strong>property to <em><strong>false</strong></em>. Doing so, the views / view models will be removed from the region when deactivated.</p>\r\n<p>You can find more information about this in the following chapter of the Prism documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430861%28v=pandp.40%29\">Chapter 8: Navigation on MSDN</a></li>\r\n</ul>\r\n<p>I hope you find this useful,</p>\r\n<p>Damian Cherubini<br /> <a href=\"http://blogs.southworks.net/dcherubini\">http://blogs.southworks.net/dcherubini</a></p>",
    "PostedDate": "2012-06-28T11:34:44.317-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]