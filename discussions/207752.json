[
  {
    "Id": "425343",
    "ThreadId": "207752",
    "Html": "<p>Hi All,</p>\r\n<p>Firstly, lets agree on definitions:</p>\r\n<ul>\r\n<li>My definition of assembly is based on the book &quot;CLR via Csharp, 3rd edition&quot; by Jeffrey Richter:</li>\r\n</ul>\r\n<p><em>&quot;To summarize, an assembly is a unit of reuse, versioning, and security&nbsp; It allows you <br>to partition your types and resources into separate fles so that you, and consumers of your assembly, get to determine which fles to package together and deploy&nbsp; Once the CLR loads the fle <br>containing the manifest, it can determine which of the assembly&rsquo;s other fles contain the types and <br>resources the application is referencing&nbsp; Anyone consuming the assembly is required to know only <br>the name of the fle containing the manifest; the fle partitioning is then abstracted away from the <br>consumer and can change in the future without breaking the application&rsquo;s behavior <br>If you have multiple types that can share a single version number and security settings, it is&nbsp; <br>recommended that you place all of the types in a single fle rather than spread the types out&nbsp; <br>over separate fles, let alone separate assemblies&nbsp; The reason is performance&nbsp; Loading a&nbsp; <br>fle/assembly takes the CLR and Windows time to fnd the assembly, load it, and initialize it&nbsp;&nbsp; <br>The fewer fles/assemblies loaded the better, because loading fewer assemblies helps reduce <br>working set and also reduces fragmentation of a process&rsquo;s address space&nbsp; Finally, nGen exe&nbsp; <br>can perform better optimizations when processing larger fles&quot;</em></p>\r\n<p>In short assembly is a physical unit of reuse.</p>\r\n<ul>\r\n<li>Definition of module is from &quot;Composite Application Guidance for WPF and Silverlight&quot; - October 2009:</li>\r\n</ul>\r\n<p><em>&quot;A module in the Composite Application Library is a logical unit in your application.&quot;</em></p>\r\n<hr>\r\n<p><em></em>\r\n<p>I'm developing an application based on Prism V2 - WPF. Suddenly in the middle of the project I realized that deployment structure of the project becomes too complex about 10 different assemblies is used to deploy application(8 of them are modules).</p>\r\n<p>So my question is:</p>\r\n<p><strong>For what reason the guidance recommends to use one module per assembly ? (at least it used in for reference implementation).</strong></p>\r\n<p>I'm wondering why there is an indirect recommendation to mix physical and logical units of application or I misunderstood something?</p>\r\n<p>Thanks in advance for answering and taking the time to read the post,</p>\r\n<p>Yours sincerely,</p>\r\n<p>Maxim Filimonov</p>\r\n</p>\r\n<hr>",
    "PostedDate": "2010-03-30T02:02:42.577-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "425559",
    "ThreadId": "207752",
    "Html": "<p id=2a6e9c90-1e2d-012d-f8e2-12313b071df1>Hi Maxim,</p>\r\n<p id=2a6ebb20-1e2d-012d-f8e3-12313b071df1>Some of the benefits that lead  from developing modules in separate assemblies are:</p>\r\n<div>\r\n<div id=e95ecaf1-2ecc-8add-eae1-e795c3bc9865 style=\"border-bottom:medium none\">\r\n<div style=\"border-left-color:#db5800\"></div>\r\n</div>\r\n</div>\r\n<ul>\r\n<li>It contributes to decoupling, as  it avoids the possibility of executing code of a module directly from  another one.</li>\r\n<li>It makes it possible for different teams to  work on different modules, make modifications and recompile each module  without affecting the others.</li>\r\n<li>It allows reusing a module in  another application without having to load the entire assembly with  other modules that the other application may not need.</li>\r\n</ul>\r\n<p id=2a6edb20-1e2d-012d-f8e4-12313b071df1>However, if you  consider putting several modules in the same assembly better suits your  application&rsquo;s needs, Prism allows you to do it.</p>\r\n<p id=2a6f1090-1e2d-012d-f8e5-12313b071df1>I hope you find this helpful.</p>\r\n<p id=2a6f3fe0-1e2d-012d-f8e6-12313b071df1>Guido Leandro  Maliandi    <br><a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2010-03-30T09:21:32.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]