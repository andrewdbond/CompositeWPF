[
  {
    "Id": "568742",
    "ThreadId": "246675",
    "Html": "\r\n<p>1.&nbsp;Why isn&rsquo;t contentDialog set to null in CloseContentDialog()?</p>\r\n<p><br>\r\n2.&nbsp;Why is CloseContentDialog() being called in&nbsp;ContentDialogClosed(object, EventArgs)?</p>\r\n<p>When deactivating the region it will call ActiveViews_CollectionChanged(object, NotifyCollectionChangedEventArgs) with e.Action equaling Remove.</p>\r\n<p><br>\r\n3.&nbsp;Is it a bug that contentDialog.Close() is being called twice every time you close a dialog window?</p>\r\n<p>I believe that adding null to my question 1 or removing CloseContentDialog() in my question 2 will fix this issue.</p>\r\n",
    "PostedDate": "2011-02-18T13:10:21.26-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "569763",
    "ThreadId": "246675",
    "Html": "<p>Hi,</p>\r\n<p>I modify the code as you suggests (remove the <em>this.CloseContentDialog</em>() in the ContentDialogClose event), and the application still works (also unit tests).</p>\r\n<p>However, in my opinion I don&acute;t know exactly the reason why this method is called on the <em>ContentDialogClose</em> event.</p>\r\n<p>As MSDN documentation shows, \"<em>(...)&nbsp;is an application that illustrates the baseline architecture (...) When looking at this application, it may seem inappropriate to implement it in the way it was implemented. For example, you might question why there are so many modules, and it may seem overly complex. The focus of Prism is to address challenges around building composite applications. For this reason, certain scenarios are used in the reference implementation to emphasize those challenges.</em>\"</p>\r\n<p>Thanks,</p>\r\n<p>Miguel Bronzovic<br /><a href=\"http://blogs.southworks.net/mbronzovic\">http://blogs.southworks.net/mbronzovic</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-02-21T11:27:27.83-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]