[
  {
    "Id": "607497",
    "ThreadId": "256413",
    "Html": "\r\n<p>Just wondering what code I'd use to inject IEventAggregator into the Shell? ie in the bootstrapper</p>\r\n<p>&nbsp;</p>\r\n<p>thanks</p>\r\n",
    "PostedDate": "2011-05-04T17:39:50.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "607788",
    "ThreadId": "256413",
    "Html": "<p>Hi,</p>\n<p>In order to obtain a reference of the Event Aggregator (or any other service that has been made available through a dependency injection container), you should resolve it through the dependency injection mechanism you're using. For example, supposing you  use constructor injection, if you're using unity you should do something like this:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> Shell(IEventAggregator eventAggregator)\n\n{\n\n(...)\n\neventAggregator.GetEvent&lt;SomeEvent&gt;().Subscribe(Handler);\n\n(...)\n\n}\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>And if you're using MEF, it would look like this:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre>[ImportingConstructor]\n<span style=\"color: blue;\">public</span> Shell(IEventAggregator eventAggregator)\n\n{\n\n(...)\n\neventAggregator.GetEvent&lt;SomeEvent&gt;().Subscribe(Handler);\n\n(...)\n\n}\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>Note that this is possible only if you compose your shell in the <strong>CreateShell</strong> or <strong>InitializeShell</strong> method through the container (which is the default case in Prism applications). The following code from the Bootstrapper in the HelloWorld QuickStart (and it's MEF equivalent) might help illustrate this:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">class</span> Bootstrapper : UnityBootstrapper\n    {\n\n(...)\n       <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> DependencyObject CreateShell()\n        {\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">this</span>.Container.Resolve&lt;Shell&gt;();\n        }\n\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\n        {\n            <span style=\"color: blue;\">base</span>.InitializeShell();\n\n            App.Current.MainWindow = (Window)<span style=\"color: blue;\">this</span>.Shell;\n            App.Current.MainWindow.Show();\n        }   \n\n(...)\n\n    }\n</pre>\n</div>\n<p>and with MEF:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">class</span> Bootstrapper : MefBootstrapper\n    {\n\n(...)\n       <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> DependencyObject CreateShell()\n        {\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">this</span>.Container.GetExportedValue&lt;Shell&gt;();\n        }\n\n        <span style=\"color: blue;\">protected</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> InitializeShell()\n        {\n            <span style=\"color: blue;\">base</span>.InitializeShell();\n\n            App.Current.MainWindow = (Window)<span style=\"color: blue;\">this</span>.Shell;\n            App.Current.MainWindow.Show();\n        }   \n\n(...)\n\n    }\n</pre>\n</div>\n<p>You might find the following chapter from the Prism MSDN documentation useful:</p>\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ff921140%28PandP.40%29.aspx\">Chapter 3: Managing Dependencies Between Components</a></p>\n<p>I hope you find this helpful.</p>\n<p>Guido Leandro Maliandi<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-05-05T06:57:03.873-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "608279",
    "ThreadId": "256413",
    "Html": "<p>this works perfectly, thanks!</p>",
    "PostedDate": "2011-05-05T22:42:13.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]