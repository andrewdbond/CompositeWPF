[
  {
    "Id": "464232",
    "ThreadId": "218589",
    "Html": "<p>Hello</p>\r\n<p>&nbsp;</p>\r\n<p>I am having some problems with understanding how the region manager works</p>\r\n<p>We are building a modular application, where some of the views can be dynamically shown or hidden by the user. To achieve this we have created a number of regions which we behind the scenes activate or de-activate, according to the user's choices in a menu.</p>\r\n<p>The regions with the views are being dynamically created through a data template in xaml, and looks something like this:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">UserControl</span> <span style=\"color:red\">x:Class</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Overview</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns:x</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns:cal</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://www.codeplex.com/CompositeWPF</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">UserControl.Resources</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Style</span> <span style=\"color:red\">TargetType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{x:Type ItemsControl}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">x:Key</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">OverViewItems</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Setter</span> <span style=\"color:red\">Property</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ItemTemplate</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Setter.Value</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ContentControl</span> <span style=\"color:red\">cal:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding RegionName}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Setter.Value</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Setter</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Style</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">UserControl.Resources</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ItemsControl</span> <span style=\"color:red\">Style</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource OverViewItems}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">ItemsSource</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Views}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Grid</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">UserControl</span><span style=\"color:blue\">&gt;</span></pre>\r\n</div>\r\n<p>The ItemsSource is an ObservableCollection &ldquo;Views&rdquo;, where each items has the property &ldquo;RegionName&rdquo; (a GUID).<br>All this seems to work just fine (ie. the controls are being displayed correctly) - however, when I later ask the RegionManager for one of the regions, it responds that it does not contain the region.</p>\r\n<p>We have created a view model to achive the goal of activating or de-activating the regions, using the following event handler code:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> PortletChanged(Portlet changedPortlet)\r\n{\r\n    <span style=\"color:blue\">if</span> (m_RegionManager.Regions.ContainsRegionWithName(changedPortlet.RegionName))\r\n    {\r\n        <span style=\"color:blue\">if</span> (changedPortlet.Enabled == <span style=\"color:blue\">false</span>)\r\n        {\r\n            <span style=\"color:blue\">var</span> views = m_RegionManager.Regions[changedPortlet.RegionName].Views;\r\n            m_RegionManager.Regions[changedPortlet.RegionName].Deactivate(views.FirstOrDefault());\r\n        }\r\n        <span style=\"color:blue\">else</span>\r\n        {\r\n            <span style=\"color:blue\">var</span> views = m_RegionManager.Regions[changedPortlet.RegionName].Views;\r\n            m_RegionManager.Regions[changedPortlet.RegionName].Activate(views.FirstOrDefault());\r\n        }\r\n    }\r\n}<br><br>Do anyone have an idea on how to solve this problem, or even how to proceed with debugging it. Despite having spent quite a lot of time with breakpoints deep in the Prism code, I haven't been able to fully get an overview of what is going on underneath the Prism covers. It looks to me like a new RegionManager is being created when the Overview user control is being created and the data binding occurs, instead of just using the default RegionManager.<br>We have tried doing the same thing in code, and in that case we have no problems finding the regions again, when calling the m_RegionManager.Regions.ContainsRegionWithName(changedPortlet.RegionName) method.<br>If I'm correct in my assumptions that a new region manager is being created, is there any way to prevent this from happening? Or should I go in a different direction with achieving the problem I'm trying to solve?<br><br>Any help at all will be greatly appreciated<br><br>Thanks<br></pre>\r\n</div>",
    "PostedDate": "2010-07-07T05:58:49.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "464887",
    "ThreadId": "218589",
    "Html": "<p id=bf537200-6c32-012d-5b6b-1231390ee8f1>Hi,</p>\r\n<p id=bf5384b0-6c32-012d-5b6c-1231390ee8f1>I checked this and found the behavior you described as well. As it seems to be an issue, I would suggest to you for posting it in <a href=\"http://compositewpf.codeplex.com/workitem/list/basic\">the issue tracker</a>, so the Prism team will be notified.</p>\r\n<p>Based on this <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=59360\">forum thread</a>, the <strong>RegionManager</strong> can&rsquo;t find the region you&rsquo;ve defined because it&rsquo;s located inside a DataTemplate, and the <strong>FindRegionManager </strong>method inside the <strong>RegionManagerRegistrationBehavior</strong> cannot find regions inside DataTemplates.</p>\r\n<p id=bf539730-6c32-012d-5b6d-1231390ee8f1>I do not know your exact scenario, but I think you could manage it by adding/removing views from a particular region. You could achieve such thing by using:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff647269.aspx\">View Injection</a> allows to you to programmatically add views to a region.&nbsp; More information: <a href=\"http://msdn.microsoft.com/en-us/library/ff647669.aspx\">View Injection Composition QuickStart</a>. </li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff649543.aspx\">View Discovery</a>, allows to you to automatically add views when a region is created. More information: <a href=\"http://msdn.microsoft.com/en-us/library/ff649543.aspx\">View Discovery Composition Quickstart</a>. </li>\r\n</ul>\r\n<p id=bf53aab0-6c32-012d-5b6e-1231390ee8f1>Both options could allow to you to dynamically add views depending on the users&rsquo; choices.&nbsp;&nbsp;</p>\r\n<p id=bf53bd80-6c32-012d-5b6f-1231390ee8f1>Please let me know if this helps.</p>\r\n<p id=bf53d190-6c32-012d-5b70-1231390ee8f1>Fernando Antivero <br><a href=\"http://blogs.southworks.net/fantivero\">http://blogs.southworks.net/fantivero</a></p>",
    "PostedDate": "2010-07-08T08:21:33.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "465315",
    "ThreadId": "218589",
    "Html": "<p>Hi Fernando</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you for your reply.</p>\r\n<p>I have already considered using both options, and have had injection up and running in prototypes. But using the activate / de-activate features of the regions seemed like a much cleaner design to me.</p>\r\n<p>(Aside from generally making your applications a nightmare to debug when you use databinding like this, I really love the powerful databinding features of WPF)</p>\r\n<p>&nbsp;</p>\r\n<p>You suggest that I create a new issue in the issue tracker - But if I read the thread you are linking to correct, it seems to me like the behavior I'm seeing is actually intended (last post in the Thread, from Matias)?</p>\r\n<p>Although, as it looks like it's not exactly the same issue (my view are being displayed just fine on the screen, and thus the regions must be there, somewhere, just not in the RegionManager I'm looking in :), <br> I'll go ahead and create the issue as you suggest.</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you very much for your help :-)</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-07-09T03:45:40.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]