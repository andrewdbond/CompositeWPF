[
  {
    "Id": "669385",
    "ThreadId": "271991",
    "Html": "\r\n<p>Dear all,</p>\r\n<p>recently began to study the Prism. There was a problem with EventAggregator. After subscribing to an event (ea.GetEvent&lt;Events&gt;().Subscribe (eh)) in plugin silverlight library, and after an event is published in Shell.xaml (Method Publish), the event\r\n is not generated (is not execute, the error also does not occur). <span id=\"result_box\" lang=\"en\">\r\n<span>I need to</span> <span>organize the</span> <span>relationship</span> <span>\r\nbetween</span> <span>Shell and the</span> <span>plugin</span></span> Control. W<span id=\"result_box\" lang=\"en\"><span>here</span>\r\n<span>am I wrong? </span></span></p>\r\n<p><span id=\"result_box\" lang=\"en\"><span>Thank you.<br>\r\n</span></span></p>\r\n<p>Bootstrapper.cs:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Bootstrapper : MefBootstrapper\r\n    {\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> IModuleCatalog CreateModuleCatalog()\r\n        {\r\n            <span style=\"color:blue\">return</span> Microsoft.Practices.Prism.Modularity.ModuleCatalog.CreateFromXaml(<span style=\"color:blue\">new</span> Uri(<span style=\"color:#a31515\">&quot;/SilverlightApplication1;component/</span>ConfigModules.xaml<span style=\"color:#a31515\">&quot;</span>, UriKind.Relative));\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> ConfigureAggregateCatalog()\r\n        {\r\n            <span style=\"color:blue\">base</span>.ConfigureAggregateCatalog();\r\n            AggregateCatalog.Catalogs.Add(<span style=\"color:blue\">new</span> AssemblyCatalog(<span style=\"color:blue\">this</span>.GetType().Assembly));\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> DependencyObject CreateShell()\r\n        {\r\n            <span style=\"color:blue\">return</span> Container.GetExportedValue&lt;Shell&gt;();\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> InitializeShell()\r\n        {\r\n            <span style=\"color:blue\">base</span>.InitializeShell();\r\n            Application.Current.RootVisual = (Shell)<span style=\"color:blue\">this</span>.Shell;\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>ConfigModules.xaml:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleCatalog</span>\r\n    <span style=\"color:red\">xmlns</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns:x</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns:sys</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">clr-namespace:System;assembly=mscorlib</span><span style=\"color:black\">&quot;</span>\r\n    <span style=\"color:red\">xmlns:Modularity</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">clr-namespace:Microsoft.Practices.Prism.Modularity;assembly=Microsoft.Practices.Prism</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleInfo</span>\r\n        <span style=\"color:red\">Ref</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">SilverlightApplication2.xap</span><span style=\"color:black\">&quot;</span>\r\n        <span style=\"color:red\">ModuleName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleQuiz</span><span style=\"color:black\">&quot;</span>\r\n        <span style=\"color:red\">ModuleType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">SilverlightApplication2.ModuleQuiz, SilverlightApplication2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Modularity</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ModuleCatalog</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><br>Container in Shell.xaml:<br><div style=\"color:black; background-color:white\"><pre>  <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ContentControl</span> <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MainRegion</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">prism:RegionManager.RegionName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MainRegion</span><span style=\"color:black\">&quot;</span> \r\n                        <span style=\"color:red\">VerticalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">HorizontalContentAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\r\n                        <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">HorizontalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ContentControl</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Button</span> <span style=\"color:red\">Content</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Button</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Height</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">23</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">button1</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Width</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">75</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Click</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">button1_Click</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n<br></pre>\r\n</div>\r\nShell.cs:<br>[Export]     <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Shell : UserControl     {         <span style=\"color:blue\">public</span> Shell()         {             InitializeComponent();         }          [Import(AllowRecomposition = <span style=\"color:blue\">false</span>)]         <span style=\"color:blue\">public</span> IModuleManager ModuleManager;          [Import(AllowRecomposition = <span style=\"color:blue\">false</span>)]         <span style=\"color:blue\">public</span> IRegionManager RegionManager;          [Import]         <span style=\"color:blue\">public</span> IEventAggregator ea { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }          <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)         {             ea.GetEvent&lt;Events&gt;().Publish(<span style=\"color:#a31515\">&quot;temp string&quot;</span>);         }<br> } <br></pre>\r\n</div>\r\n<p></p>\r\n<p>EventArgs class:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Events:CompositePresentationEvent&lt;<span style=\"color:blue\">string</span>&gt;\r\n    {\r\n\r\n    }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p></p>\r\n<hr>\r\nPlugin side:\r\n<p></p>\r\n<p>Boot plugin:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>  [ModuleExport(<span style=\"color:blue\">typeof</span>(ModuleQuiz))]\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> ModuleQuiz : IModule\r\n        {\r\n            [Import(AllowRecomposition = <span style=\"color:blue\">false</span>)]\r\n            <span style=\"color:blue\">public</span> IRegionManager regionManager;\r\n\r\n            <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Initialize()\r\n            {\r\n                <span style=\"color:blue\">this</span>.regionManager.RegisterViewWithRegion(<span style=\"color:#a31515\">&quot;MainRegion&quot;</span>, <span style=\"color:blue\">typeof</span>(UC));\r\n            }\r\n        }\r\n\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Eventargs class on plugin side:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> Events : CompositePresentationEvent&lt;<span style=\"color:blue\">string</span>&gt;\r\n        {\r\n\r\n        }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Plugin control:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[Export]\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> UC : UserControl\r\n    {\r\n        [ImportingConstructor]\r\n        <span style=\"color:blue\">public</span> UC(IEventAggregator a)\r\n        {\r\n            InitializeComponent();\r\n\r\n            <span style=\"color:blue\">this</span>.ea = a;\r\n            ea.GetEvent&lt;Events&gt;().Subscribe(eh);\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> eh(<span style=\"color:blue\">string</span> str)\r\n        {\r\n        }\r\n\r\n        [Import]\r\n        <span style=\"color:blue\">public</span> IEventAggregator ea { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n    }\r\n</pre>\r\n</div>\r\n<hr>\r\n* method eh is not executed.\r\n<p></p>\r\n",
    "PostedDate": "2011-09-08T14:58:43.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "669797",
    "ThreadId": "271991",
    "Html": "<p>Hi,</p>\r\n<p>It is likely that the problem you're experiencing could be related to the fact that you are declaring your <strong>Events </strong>class twice. The class that inherits from <strong>CompositePresentationEvent </strong>is responsible for identifying an event (so that when you publish and subcribe events using that class as the type parameter in the <strong>GetEvent </strong>method, it is clear that you are referring to the same event).</p>\r\n<p>Therefore you could try declaring a unique <strong>Events </strong>class in an <strong>Infrastructure </strong>project (which would be referenced in both your shell and your \"<strong>plugin</strong>\" modules).</p>\r\n<p>You might find the <a href=\"http://prismtk.codeplex.com/releases/56048/download/169718\">Prism Training Kit</a> useful, specially the <strong>Communication Lab Exercise 2</strong> which shows how to implement <strong>Event Aggregator</strong>.</p>\r\n<p>Also you will find more information regarding that in the Prism documentation:</p>\r\n<ul>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ff921122(v=PandP.40).aspx#sec8\">Chapter 9: Communicating Between Loosely Coupled Components, Event Aggregation</a></li>\r\n<li><a href=\"http://msdn.microsoft.com/en-us/library/gg430879%28v=PandP.40%29.aspx\">Modularity Quickstart for WPF / Silverlight</a> </li>\r\n</ul>\r\n<p>I hope you find this useful</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2011-09-09T10:38:58.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]