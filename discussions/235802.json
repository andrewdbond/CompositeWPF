[
  {
    "Id": "526182",
    "ThreadId": "235802",
    "Html": "\r\n<p>ViewModel 1:<br>\r\n<br>\r\n&nbsp;[Export(typeof(AssessSchemeListViewModel))]<br>\r\npublic class AssessSchemeListViewModel : NotificationObject<br>\r\n{<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; private void Add(object para)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; var builder = new StringBuilder();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; builder.Append(&quot;AssessSchemeView&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._regionManager.RequestNavigate(&quot;AssessSchemeListRegion&quot;, new Uri(builder.ToString(),UriKind.Relative));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nViewModel 2:<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; [Export]<br>\r\n&nbsp;&nbsp;&nbsp; [PartCreationPolicy(CreationPolicy.NonShared)]<br>\r\n&nbsp;&nbsp;&nbsp; [RegionMemberLifetime(KeepAlive = false)]<br>\r\n&nbsp;&nbsp;&nbsp; public class AssessSchemeViewModel : NotificationObject,IConfirmNavigationRequest<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; private void Ok()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.navigationJournal != null)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.navigationJournal.GoBack();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; void IConfirmNavigationRequest.ConfirmNavigationRequest(NavigationContext navigationContext, Action&lt;bool&gt; continuationCallback)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continuationCallback(true);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool INavigationAware.IsNavigationTarget(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void INavigationAware.OnNavigatedFrom(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void INavigationAware.OnNavigatedTo(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.navigationJournal = navigationContext.NavigationService.Journal;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n}<br>\r\n<br>\r\neverything is ok.&nbsp; but when i change the ViewModel 1:<br>\r\n<br>\r\n&nbsp;[Export(typeof(AssessSchemeListViewModel))]<br>\r\npublic class AssessSchemeListViewModel : NotificationObject, INavigationAware<br>\r\n{<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; private void Add(object para)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; var builder = new StringBuilder();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; builder.Append(&quot;AssessSchemeView&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this._regionManager.RequestNavigate(&quot;AssessSchemeListRegion&quot;, new Uri(builder.ToString(),UriKind.Relative));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool INavigationAware.IsNavigationTarget(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void INavigationAware.OnNavigatedFrom(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void INavigationAware.OnNavigatedTo(NavigationContext navigationContext)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nnow when i navigation to View 2, it can't go back to View1. where is the problem?</p>\r\n",
    "PostedDate": "2010-11-23T17:56:00.74-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "526246",
    "ThreadId": "235802",
    "Html": "\r\n<p>I think the proble is here</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">bool</span> INavigationAware.IsNavigationTarget(NavigationContext navigationContext)\r\n        {\r\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>;\r\n        }\r\n\r\n\r\n</pre>\r\n</div>\r\n<p>You are telling it not to participate in navigation. Try setting it to true. I think it should work.</p>\r\n",
    "PostedDate": "2010-11-23T22:38:51.407-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "527168",
    "ThreadId": "235802",
    "Html": "\r\n<p>Did this get resolved for you?</p>\r\n",
    "PostedDate": "2010-11-25T19:21:07.583-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]