[
  {
    "Id": "936307",
    "ThreadId": "401827",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I'm trying to place some Resources in a separate assembly and use it globally in all my modules.</p>\r\n<p>Here I post&nbsp; a sample piece and sample source code which will point to my exact problem.</p>\r\n<p>Project Name is : <strong>Resources</strong></p>\r\n<p>What is wrong with this ?</p>\r\n<p><span style=\"text-decoration:underline\"><strong>&nbsp;Sample Piece :</strong></span></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">UserControl.Resources</span><span style=\"color:blue\">&gt;</span>\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ResourceDictionary</span><span style=\"color:blue\">&gt;</span>\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ResourceDictionary.MergedDictionaries</span><span style=\"color:blue\">&gt;</span>\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ResourceDictionary</span> <span style=\"color:red\">Source</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">pack://application:,,,/Resources;component/Themes/Generic.xaml</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ResourceDictionary.MergedDictionaries</span><span style=\"color:blue\">&gt;</span>\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ResourceDictionary</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">UserControl.Resources</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p><span style=\"text-decoration:underline\"><strong>Download Link</strong></span></p>\r\n<pre><em>http://sdrv.ms/YEmFQW   (Editable)</em><br><em>http://sdrv.ms/R4UZBn   (Alternative- Not-Editable)</em></pre>\r\n<p><span style=\"text-decoration:underline\"><strong>More Explanation :</strong></span></p>\r\n<p>On Design-Time it doesn't show any parsing error and seems to be correct.</p>\r\n<p>Should I define it as a module, Do any registration and initialization via the Container ?</p>\r\n<p>I saw the great sample you provided earlier doing this via attributes, I like the strategy, but here What I want is in addition to Module-Specific Resources want to have some global Cross-Module Resources, Which could be used in my modules.</p>\r\n<p><span style=\"text-decoration:underline\"><strong>The Given Error :</strong></span></p>\r\n<p><em>{&quot;'Set property 'System.Windows.ResourceDictionary.Source' threw an exception.' Line number '10' and line position '18'.&quot;}</em><br>\r\n<em>Inner Exception : </em><br>\r\n<em>{&quot;Could not load file or assembly 'Resources, Culture=neutral' or one of its dependencies. The system cannot find the file specified.&quot;:&quot;Resources, Culture=neutral&quot;}</em></p>\r\n",
    "PostedDate": "2012-11-04T06:21:19.9-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "936754",
    "ThreadId": "401827",
    "Html": "<p>Hi,</p>\r\n<p>After analyzing your sample, I found that in order to avoid the error you mentioned you will have to change the <strong>Build Action</strong> property of the <strong>xaml </strong>files where your <strong>ResourceDictionary </strong>are defined. For example you could try changing these properties to <strong>Resource </strong>or <strong>Page</strong>.</p>\r\n<p>Also, you will have to ensure that the <strong>Resources.dll </strong>file will be copied to the main project folder as currently this is not the case. This behavior can be seen in <strong>WPF</strong> applications when only defining and using a referenced assembly only in <strong>XAML</strong>, and a result this assembly won't be loaded if it's not present in the main applications folder.</p>\r\n<p>When following these considerations, I could load the view properly.</p>\r\n<p>Regarding how to share global resources across your different modules, I believe you could achieve this by defining application-wide resources, as once these resources are available in the main application <strong>App.xaml</strong> file, will be available to be consumed by your different modules.</p>\r\n<p>For more information about this, you could check the following related work items:</p>\r\n<ul>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/3020\">ResourceDictionary in a Module</a></li>\r\n<li><a href=\"http://compositewpf.codeplex.com/workitem/3504\">Add ability to create resource dictionaries shared between all modules</a></li>\r\n</ul>\r\n<p>I hope you find this handy,</p>\r\n<p>Agustin Adami<a href=\"http://blogs.southworks.net/aadami\"><br /> http://blogs.southworks.net/aadami</a></p>",
    "PostedDate": "2012-11-05T07:25:58.483-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "936912",
    "ThreadId": "401827",
    "Html": "<p>Hi Mr Adami</p>\r\n<p>you were right,</p>\r\n<p>at first the resources were defined as page. and during playing around to find the solution I changed them.</p>\r\n<p>The problem was about not finding the assembly and it was easier than the way I thought I should go with Prism.</p>\r\n<p>Now there are 2 cases to think/talk about, 1st is I think that could be a disability of the .Net that it can't find a referenced assembly !</p>\r\n<p>Isn't it ?</p>\r\n<p>the 2nd part which I wanted to say was that I prefer to make a utility class which could help doing this in code.</p>\r\n<p>Thanks for the help</p>",
    "PostedDate": "2012-11-05T12:35:58.523-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]