[
  {
    "Id": "582108",
    "ThreadId": "250115",
    "Html": "\r\n<p>Hi there,</p>\r\n<p>We are using a moduleCatalog and it is working just fine but the problem is, in order to have it work we need to set the properties on the file like so</p>\r\n<p>(from the .csproj file)</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Resource</span> <span style=\"color:red\">Include</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ModuleCatalog.xaml</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">SubType</span><span style=\"color:blue\">&gt;</span>Designer<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">SubType</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">CopyToOutputDirectory</span><span style=\"color:blue\">&gt;</span>Always<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">CopyToOutputDirectory</span><span style=\"color:blue\">&gt;</span>\r\n      <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Generator</span><span style=\"color:blue\">&gt;</span>MSBuild:Compile<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Generator</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Resource</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Basically what this means is that the &quot;Build Action&quot; is set to &quot;resource&quot;, I want to set it to &quot;content&quot; so that it will get copied to the output directory and we can edit it, removing some modules for certain users. Despite the fact that Copy To Output\r\n Directory is set to always it doesn't do it (you can change it to Never and it works just fine).</p>\r\n<p>Here is how I am creating the URI.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">return</span> ModuleCatalog.CreateFromXaml(<span style=\"color:blue\">new</span> Uri(<span style=\"color:#a31515\">&quot;/PartsFinder;component/ModuleCatalog.xaml&quot;</span>, UriKind.Relative));</pre>\r\n</div>\r\n<p></p>\r\n<p>I have tried a bunch of options and can't get this to work in such a way that the ModuleCatalog gets copied to the bin dir (and read from there) and we can edit it - anyone got any suggestions?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks!</p>\r\n",
    "PostedDate": "2011-03-17T07:48:39.577-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "582176",
    "ThreadId": "250115",
    "Html": "<p>Hi,</p>\r\n<p>The recommended approach in Prism to achieve the requirement of being able to specify the modules in a file that isn't compiled into the application is to use the <strong>App.config</strong> file.</p>\r\n<p>From the <a href=\"http://msdn.microsoft.com/en-us/library/gg405479%28PandP.40%29.aspx\">Modularity Chapter</a> of the Prism MSDN documentation (specifically in the <strong>Registering Modules Using a Configuration File</strong> section):</p>\r\n<p><em>\"In WPF, it is possible to specify the module information in the  App.config file. The advantage of this approach is that this file is not  compiled into the application. This makes it very easy to add or remove  modules at run time without recompiling the application.\"</em></p>\r\n<p>I hope you find this helpful.</p>\r\n<p>Guido Leandro Maliandi&nbsp;<br /> <a href=\"http://blogs.southworks.net/gmaliandi\">http://blogs.southworks.net/gmaliandi</a></p>",
    "PostedDate": "2011-03-17T09:21:18.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]