{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": "",
    "Description": "I've started using the Enterprise Library Silverlight Integration Pack with Prism and implemented an ILoggerFacade that logs to the Enterprise Library LogWriter. The ILoggerFacade.Log method has message category and priority parameters. I looked at http://blogs.msdn.com/b/bobbrum/archive/2008/11/23/prism-and-custom-enterprise-library-trace-listeners.aspx for an example implementation. However, the Prism Category Enum with values Debug, Exception, Info and Warn is not what Enterprise Library would call a Category. Enterprise Library calls that a Severity. An EntLib Category would be a string, not an enum, something like \"UnhandledException\", \"ServiceLayer\", \"BusinessLogicLayer\" or in Prism's case \"Prism\". I could interpret the Prism Category as an EntLib Severity but then I'll still be missing an EntLib Category. Could the ILoggerFacade.Log method be changed to have message, category, severity and priority parameters instead?",
    "LastUpdatedDate": "2013-02-21T18:38:03.5-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2012-02-06T06:50:34.893-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "ILoggerFacade Category should be Severity",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9155
  },
  "FileAttachments": [],
  "Comments": []
}