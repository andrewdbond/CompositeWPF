{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": " Hi,\r\n\r\nIt seems that the problem when setting the Foreground property happens because the explicit style is not overriding the inherited value of this property in the control. We modified your sample to isolate this behavior, and found that this problem only seems to appear when adding content to an ItemsControl using its ItemsSource property (i.e., when using the Items property, the Foreground is correctly set).  This is also true when removing every Prism component in the sample.\r\n\r\nWe also found that a similar discussion was started in WPF, MSDN forums (http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/3501ed19-ab40-4064-81b5-e9b7b9d35b56). In this thread the user Paul Brown provided another workaround, based on setting the inheritance behavior in the control as follows:\r\n\r\nthis.InheritanceBehavior = InheritanceBehavior.SkipToAppNext;\r\n\r\nWe attached the aforementioned sample (ForegroundIssueTestIsolated), and applied this workaround successfully (TextBlockView.xaml.cs file, Line 16).\r\n\r\nBased on this, we are closing this work item as this is not an issue in Prism. You might therefore find better support on the subject in WPF, MSDN forums.\r\n\r\nRegards,\r\nAgustin Adami\r\n",
    "ClosedDate": "2011-11-03T06:42:07.243-07:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "Sorry I originally posted this in the discussions, but I believe it may be a bug.  The discussion ID is 257596.\n \nHello,\n \nI have run into a very strange behavior with WPF .NET 4 and PRISM v4.  When one of our modules adds its view to an ItemsControl region in the shell, the Foreground value of TextBlocks within that view are all set to the default inherited value of the window (Black).  All of the other values set in the TextBlock style are applied correctly, and if I change the region to be a ContentControl (for example) then the issue goes away - and the TextBlocks receive the correct Foreground color from the style.  I'm setting the style on the TextBlock using a DynamicResource markup and the style is defined in a resource dictionary in a separate assembly, which gets loaded at runtime (so no reference to the skin assembly from the other projects).\n \nI did some debugging and found that the style's value is set initially on the TextBlock, however after that the foreground is set a second time to the inherited default value (the ValueSource in the dependency property changed handler indicated \"Inherited\" and the value was Black).\n \nI was able to strip down our application and reproduce the issue.  Here is a link to download the .zip file from MediaFire:  http://www.mediafire.com/?cn918gi15uph1xe (I also uploaded it here)\n \nI am not sure if this has anything to do with the ItemsControlRegionAdapter and the fact that the ItemsSource is pointing to a list containing the view UserControl?  I am completely stumped, to be honest, and I need to resolve this issue ASAP.\n \nIf you are able to try out the sample project, look at line 20 in ShellView.xaml of the Shell project.  Run the app and verify that at the top of the screen is black text (it's difficult to read, sorry - forgot to change the background to a lighter color), and in the center is white text.  Then go back to the ShellView and change the region on line 20 to a ContentControl.  Run the app again, and you will see that both the text at the top and bottom are white - as the style specifies.\n \nValerie",
    "LastUpdatedDate": "2013-05-16T05:28:42.913-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2011-05-13T16:21:06.97-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "itemscontrol, dynamicresource style setter for textblock foreground property",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 8248
  },
  "FileAttachments": [
    {
      "FileId": 897985,
      "FileName": "Test_TextBlockForegroundProblem.zip",
      "DownloadUrl": ".\\897985"
    },
    {
      "FileId": 897986,
      "FileName": "ForegroundIssueTestIsolated.zip",
      "DownloadUrl": ".\\897986"
    }
  ],
  "Comments": [
    {
      "Message": "Hi,\r\nI attached an application sample that isolates this behavior without any Prism component.\r\n\r\nAgustin Adami\r\nhttp://blogs.southworks.net/aadami﻿",
      "PostedDate": "2011-11-03T06:38:20.7-07:00",
      "Id": 156456
    }
  ]
}