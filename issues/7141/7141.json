{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": "",
    "Description": "Is there a specific thread to raise issues around the documentation? \n \nInstalling/finding information in PRISM v2 was a nightmare, partially solved by the folks at Sparkling Client posting a much cleaner set of instructions to help folk track down the appropriate bits. My initial perceptions are that for v4 things have got worse instead of better, with instructions (often incomplete) spread across the main .chm file, the documentation and discussion threads on CodePlex and various readme files scattered liberally throughout the folder installation. Life's too short for most developers to spend on this and they'll soon go elsewhere without clear, concise guidance that ties up with the real install experience.\n \nFor example: the PRISM help file (\"Chapter 1: Introduction (updated)\" tells me that if I build the solution the dlls will be found in PrismLibrary\\Silverlight\\Prism.UnityExtensions\\bin\\debug  This is not true and contradicts the information given on the Codeplex page for the Drop 6 download.\n \nInstructions like \"add the unit testing framework dlls\" are meaningless if you don't tell us what the dlls are as there is nothing I can see on the Toolkit site which identifies which dlls pertain to SLUT and which pertain to all the other stuff that ships with it.  The specifically required dlls should be named, as they have been for the Moq folder. If you guys don't know them, who does?! It just adds to wasted time and frustration trying to find out. (By the way, the user should also be warned that if they want the solution to build they need to copy the Moq dlls to both the Silverlight folder AND the Desktop folder)\n \nOn a separate note, the information as to the release status of Prism v4 is extremely confusing. On 2nd August we were a \"beta\" but on the 18th August we're an \"alpha\". Did things really go backwards?\n \nIssues like the above may seem trivial but it's obvious a lot of hard work has gone into PRISM. However most developers I speak to regard it as \"too complex, too over-engineered and too difficult to master in the timescales we have\" (that's the polite version!).  Time wasted on getting the basic installation to build only helps confirm the negative rumours around \"Pattern and Practices CAB\".  In all honesty, returning to PRISM in its v4 incarnation (at insistence of client) after having used PRISM v2 and then MVVM Light my initial reaction is \"They've learnt nothing from the nightmare that was v2 installation, and in fact appear to have got worse\".  If you want real take-up of PRISM you really need to fix this.\n \nIan",
    "LastUpdatedDate": "2013-02-21T18:38:32.313-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2010-08-20T10:37:01.797-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "PRISM Documentation Issues",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 2,
    "Id": 7141
  },
  "FileAttachments": [],
  "Comments": []
}