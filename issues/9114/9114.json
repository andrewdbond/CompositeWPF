{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 3,
    "Custom": "",
    "Description": "It would be nice to have a built in way of viewing all of the Event Aggregator actions as they occur during run time.  A way of hooking or viewing all message traffic, and looking at the current state ( subscriptions, etc. ) of the Event Aggregator in the application.  There was something like this in the old CAB days that came in handy while trying to debug the application.  \nÂ \nWhile we can add this code to the Prism source ourselves, it would be nice to have it built in as something we can enable during debug.",
    "LastUpdatedDate": "2013-02-21T18:38:04.207-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2012-01-11T04:21:49.39-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Event Aggregator Viewer",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 9114
  },
  "FileAttachments": [
    {
      "FileId": 898001,
      "FileName": "EventAggregatorMonitorSample.zip",
      "DownloadUrl": ".\\898001"
    }
  ],
  "Comments": [
    {
      "Message": "I am proposing this as a new feature in the .net 4.5 and WinRT versions of prism, not as an issue in todays versions.  ",
      "PostedDate": "2012-01-11T04:24:01.187-08:00",
      "Id": 156566
    },
    {
      "Message": "http://compositewpf.codeplex.com/discussions/281517  was the discussion that started this feature request",
      "PostedDate": "2012-01-11T04:38:15.61-08:00",
      "Id": 156567
    },
    {
      "Message": "Hi,\r\n\r\nI attached the sample proposed in the aforementioned related discussion to this work item (EventAggregatorMonitorSample.zip) as an example of a possible approach to achieve this kind of scenarios. In particular this sample shows how to be notified in the Debug Output Window, when an event is being published, the payload used and the number of handlers. Also, you will be notified when events are being subscribed and the corresponding handlers for them. In order to achieve this, it was necessary to modify two classes of the Prism library, the EventBase class and the CompositePresentationEvent class.\r\n\r\nI'm leaving this work item open as a suggestion, so that the Prism team can analyze adding this kind of functionality for future releases.\r\n\r\nRegards,\r\n  \r\nAgustin Adami\r\nhttp://blogs.southworks.net/aadami",
      "PostedDate": "2012-06-14T12:04:43.95-07:00",
      "Id": 156568
    }
  ]
}