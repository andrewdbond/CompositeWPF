{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Hi,\r\n\r\nI'm closing this issue so as to centralize the discussion on this subject, as well as the votes, in this other work item, which portrays the same problem:\r\nRegion Registration Fails w/ Templated Controls (http://compositewpf.codeplex.com/workitem/3612)\r\n\r\nAlso, you might find the following blog post useful where a possible approach for this problem is proposed:\r\nRegions inside DataTemplates in Prism v4 using a region behavior (http://blogs.southworks.net/dcherubini/2011/11/10/regions-inside-datatemplates-in-prism-v4-using-a-region-behavior/)\r\n\r\nRegards,\r\n\r\nDamian Cherubini\r\nhttp://blogs.southworks.net/dcherubini ",
    "ClosedDate": "2011-11-10T10:35:12.85-08:00",
    "CommentCount": 4,
    "Custom": "",
    "Description": "As posted in my thread \"Prism 2.2, Some regions are MIA in RegionManager when using databinding\" (http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=218589), I think there is a bug with the RegionManager.\n \nWhenever I use databinding to dynamically create regions and add views to them, it looks like a new RegionManager is being created, instead of using the exisiting RegionManager. \nIn the thread I have outlined how I use a data template in xaml to create my regions and views, and when using this approach, the view as displayed just fine. However, it is not possible for me to programatically find them again when calling m_RegionManager.Regions.ContainsRegionWithName(<myRegionname>).\n \nThe code needed to reproduce the issue is outlined in the thread, and thus I did not want to copy all text over here to the issue. But if you need me to copy the complete text to the issue, please let me know",
    "LastUpdatedDate": "2013-05-16T05:28:51.793-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2010-07-09T03:59:51.917-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Using databinding to create regions creates a new RegionManager",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 6970
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\r\nAs explained in the related thread where you posted this, the FindRegionManager method inside the RegionManagerRegistrationBehavior cannot find regions inside DataTemplates. You might find this work item useful, as it deals with a similar scenario, and it proposes a workaround for that:\r\nhttp://compositewpf.codeplex.com/workitem/3612\r\n\r\nHope this helps.\r\n",
      "PostedDate": "2011-02-11T07:39:29.063-08:00",
      "Id": 156254
    },
    {
      "Message": "Thank you diegopoza\r\n\r\nThe link you posted looks promising. I will certainly look into it.\r\nFor now I have used a workaround of just writing the stuff in code, instead of using a template - but it certainly is not as pretty as I would have liked it to be.\r\n\r\nBut \"my\" issue and the linked one (workitem:3612) are as of yet unassigned. Do you have any plans for looking further into the issue, or may include the workaround from 3612 into the code?\r\n\r\nThanks for you help :-)",
      "PostedDate": "2011-02-12T02:58:30.103-08:00",
      "Id": 156255
    },
    {
      "Message": "Hi,\r\n\r\nThere are no official announcements regarding this issue. However, the product team has been notified of this, and might tackle the issue in a future release.\r\n\r\nThanks,\r\n\r\n",
      "PostedDate": "2011-03-30T13:41:52.48-07:00",
      "Id": 156256
    },
    {
      "Message": "Hi,\r\n\r\nYou might find the following blog post (http://blogs.southworks.net/dcherubini/2011/09/23/regions-inside-control-templates-in-prism-v4/), as well as the following discussion (http://compositewpf.codeplex.com/discussions/273120) useful, as they deal with this subject.\r\n\r\nIf you have further concerns about this, we could continue the debate in the aforementioned discussion thread.\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-10-14T13:23:40.553-07:00",
      "Id": 156257
    }
  ]
}