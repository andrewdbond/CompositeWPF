{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As of Prism v4, there is guidance on Navigation. There is a chapter in the documentation and two QuickStarts, which can be found here:\r\n\r\nNavigation Chapter (http://msdn.microsoft.com/en-us/library/gg430861%28PandP.40%29.aspx)\r\nView-Switching Navigation QuickStart (http://msdn.microsoft.com/en-us/library/gg430881%28PandP.40%29.aspx)\r\nState-Based navigation QuickStart (http://msdn.microsoft.com/en-us/library/gg405495%28PandP.40%29.aspx)\r\n\r\nThanks for your feedback.\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
    "ClosedDate": "2010-12-30T11:31:46.857-08:00",
    "CommentCount": 7,
    "Custom": "",
    "Description": "Please provide us with a QS for building an application with the following characteristics:\n1) Main shell displaying main region (a tab control) and menu bar region\n2) Display menu items according to available modules in a directory\n3) As the user selects menu item of ModuleA, display main view of Module A's on a new TAB ITEM in the main region\n4) Selecting ModuleB would load ModuleB in a new tab. Selecting Module A would also load another instance of ModuleA in a new tab\n5) Ability to close tabs/close Modules from within their own views (\"close me\" button)",
    "LastUpdatedDate": "2013-05-16T05:29:00.783-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2009-01-28T08:10:14.227-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Navigation Guidance/QuickStart",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 13,
    "Id": 3716
  },
  "FileAttachments": [
    {
      "FileId": 897960,
      "FileName": "PRISM_DynamicMenu_TabViews.zip",
      "DownloadUrl": ".\\897960"
    }
  ],
  "Comments": [
    {
      "Message": "Please vote!!! :)\r\n",
      "PostedDate": "2009-01-28T08:10:40.443-08:00",
      "Id": 156094
    },
    {
      "Message": "Would really like to see something like this...",
      "PostedDate": "2009-06-15T15:06:20.963-07:00",
      "Id": 156095
    },
    {
      "Message": "This is exactly what I am looking for!!!!!!!",
      "PostedDate": "2009-11-12T20:23:13.277-08:00",
      "Id": 156096
    },
    {
      "Message": "Ok it's late so forgive me if some of the attached demo app doesn't make since.  I played with this a little bit tonight and have something that is working, but could be better.  It does not have all the capabilities you listed here, but hopefully it is a good starting point.  Also, I have it activating the view if it is already present (in my app I only need one instance of each view), but it could be changed so that it adds a new tab each time even if the view already exists.  \r\n\r\nI'm posting this in hopes that someone else looking for this may have some thougths to add.\r\n\r\nJust a short explanation, the app is loading modules from a directory.  The modules being loaded are actually adding a view (to the MenuRegion) which contains a simple menu item.  When the menu item is clicked, it will then add a new tab to the TabRegion for the associated view that needs to be displayed.\r\n\r\nAny thoughts/comments would be greatly appreciated.",
      "PostedDate": "2009-11-12T22:27:17.147-08:00",
      "Id": 156097
    },
    {
      "Message": "I just noticec another glitch in my app...as mentioned in this discussion (\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=60489\"), when the menu item is created from  UserControl it actually gets wrapped inside another MenuItem.  Their work-around is to actually create the MenuItem with code in your ViewModel.",
      "PostedDate": "2009-11-13T06:24:58.267-08:00",
      "Id": 156098
    },
    {
      "Message": "Hi,\r\n\r\nIt could be useful to know that, as of prism v4, there is guidance on Navigation. There is a chapter in the MSDN documentation (http://msdn.microsoft.com/en-us/library/gg430861%28PandP.40%29.aspx) and two QuickStarts:\r\n\r\nView-Switching Navigation (http://msdn.microsoft.com/en-us/library/gg430881%28PandP.40%29.aspx)\r\nState-Based navigation (http://msdn.microsoft.com/en-us/library/gg405495%28PandP.40%29.aspx)\r\n\r\nI hope you find this helpful.\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2010-12-22T10:32:17.527-08:00",
      "Id": 156099
    },
    {
      "Message": "Thanks for the info GuidoMaliandi!  Great stuff!",
      "PostedDate": "2010-12-30T06:14:44.057-08:00",
      "Id": 156100
    }
  ]
}