using System;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using Microsoft.Practices.Prism.Regions;
using Microsoft.Practices.Unity;
using Microsoft.Practices.ServiceLocation;
using System.Collections.Generic;
using System.Linq;

namespace HelloWorld
{
    public class UnityRegionNavigationContentLoader : RegionNavigationContentLoader
    {
        private readonly IUnityContainer container;
        
        public UnityRegionNavigationContentLoader(IServiceLocator serviceLocator, IUnityContainer container) : 
            base(serviceLocator)
        {
            this.container = container;
        }

        protected override IEnumerable<object> GetCandidatesFromRegion(IRegion region, string candidateNavigationContract)
        {
            IEnumerable<object> contractCandidates = base.GetCandidatesFromRegion(region, candidateNavigationContract);

            if (contractCandidates.Count() <= 0)
            {
                string typeCandidateName = this.container.Registrations.Where(rt => candidateNavigationContract.Equals(rt.Name, StringComparison.Ordinal)).FirstOrDefault().MappedToType.FullName;

                contractCandidates = base.GetCandidatesFromRegion(region, typeCandidateName);
            }

            return contractCandidates;
        }
    }
}
