{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Hi,\r\n\r\nI'm closing the issue, as this issue has been solved in Prism v4.\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
    "ClosedDate": "2011-08-19T10:55:09.077-07:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "With a very simple change in the DelegateCommand<T> class it would be possible to avoid null reference exceptions when using value types as T.\nSee below:\n  ///<summary> \n        ///Defines the method that determines whether the command can execute in its current state.\n        ///</summary>\n        ///<param name=\"parameter\">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>\n        ///<returns>\n        ///true if this command can be executed; otherwise, false.\n        ///</returns>\n        bool ICommand.CanExecute(object parameter)\n        {\n            // The original CAL code below can result in a null ref exception in case of a value type objects\n            // return CanExecute((T)parameter);\n \n            return CanExecute(parameter == null ? default(T) : (T)parameter);\n        }\nÂ \nThe workaround is at the moment to use a Nullable type (bool?, int?, etc.).",
    "LastUpdatedDate": "2013-05-16T05:29:02.143-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2008-10-09T04:57:12.483-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Null ref exception when a value type is used as T in DelegateCommand<T>",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 5,
    "Id": 3222
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\r\n\r\nIt could be helpful to know that, as of Prism v4, there is a constraint in the constructor of the DelegateCommand class that specifies that the payload for the event must be either of a reference type or nullable type.\r\n\r\nFrom the DelegateCommand class:\r\n// DelegateCommand allows object or Nullable.  \r\n// note: Nullable is a struct so we cannot use a class constraint.\r\n\r\nIf a non-nullable value type is usede as the payload, the following exception is thrown:\r\n\r\n\"T for DelegateCommand is not an object nor Nullable.\"\r\n\r\nThank you for your feedback.\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-02-24T11:30:18.587-08:00",
      "Id": 156051
    }
  ]
}