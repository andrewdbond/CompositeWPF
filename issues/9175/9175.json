{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Hi,\r\n\r\nWe are closing this work item, as this is probably not an issue in Prism. For additional support regarding any other subject, you could create a thread in the discussions section, where we will help you with your concerns.\r\n\r\nRegards,\r\n\r\nAgustin Adami\r\nhttp://blogs.southworks.net/aadami",
    "ClosedDate": "2012-09-07T11:13:07.67-07:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "ListDictionary.cs [line 197]\n \nPossible Minor issue in handling of null arguments:\n \nRemove(TKey key) throws ArgumentNullException if key == null\nRemove(TKey key, Tvalue value) throws ArgumentNullException if key == null or value == null\nRemove(TValue value) does not throw ArgumentNullException if value == null\n \nUnit Test:\n \n        [ExpectedException(typeof(ArgumentNullException))]\n        [TestMethod]\n        public void Remove_TValue_ThrowsIfValueNull()\n        {\n            List<object> value = null;\n \n            try\n            {\n                list.Remove(value);\n            }\n            catch (ArgumentNullException e)\n            {\n                Assert.AreEqual(\"value\", e.ParamName);\n                throw e;\n            }\n        }\n \nSuggested Fix:\n \n        public void Remove(TValue value)\n        {\n            if (value == null)\n                throw new ArgumentNullException(\"value\");\n \n            foreach (KeyValuePair<TKey, IList<TValue>> pair in innerValues)\n            {\n                Remove(pair.Key, value);\n            }\n        }",
    "LastUpdatedDate": "2013-05-16T05:28:38.637-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2012-02-18T01:48:44.893-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Minor issue with null checking in Remove(TValue value)",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9175
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\r\n\r\nNote that although the null checking is not done at the beginning of the Remove(TValue value) method, the exception will be thrown in the Remove(pair.Key, value) method with the first KeyValuePair inside the foreach statement unless the list is empty.\r\n\r\nSo far we haven't found an scenario where this could cause an undesired behavior. Please let us know if this caused you any problem.\r\n\r\nThanks,\r\n\r\nAgustin Adami\r\nhttp://blogs.southworks.net/aadami",
      "PostedDate": "2012-03-01T10:25:49.043-08:00",
      "Id": 156584
    }
  ]
}