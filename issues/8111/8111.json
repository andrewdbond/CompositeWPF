{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Issue closed as the user has solved the problem reported.\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
    "ClosedDate": "2011-04-13T06:52:07.11-07:00",
    "CommentCount": 4,
    "Custom": "",
    "Description": "Hi All,\n          I am using the following code\n \n            _regionManager = pContainer.Resolve<IRegionManager>();\n            RegionManager.SetRegionManager(this, _regionManager);            \n            \n            _toolbarControl = pContainer.Resolve<IToolbarControl>();\n            _regionManager.Regions[\"FormTopRegion\"].Add(_toolbarControl);\n            _regionManager.Regions[\"FormTopRegion\"].Activate(_toolbarControl);\n \nHere pContainer is a unity container. And this code is in the code behind of a silverlight 4 xaml page (it is in the constructor of the class).  The container is a child container to the main container of UnityBootstrapper and we are adding the region manager in the child and then we are using this child container to display a popup window in siverlight. The popup window contains the \"FormTopRegion\". And when we are closing the form we are explicity removing all the regions from region manager and tearing the region manager down. \n  But in random cases sometimes it is saying the \"FormTopRegion\" is already exists. It would be really nice if someone could give us any idea on this issue. Hope I was been clear on explaining my problem.\n \nRegards\nTiklu",
    "LastUpdatedDate": "2013-05-16T05:28:44.283-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2011-04-12T04:25:02.293-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Region manager sometimes throws exception saying region already exists",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 8111
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi Tiklu,\r\n\r\nThe cause for the exception you're mentioning could be that the FormTopRegion is added to the default RegionManager before you set the child RegionManager to it. One possible way to avoid this would be to use scoped regions, so that a new RegionManager is created when you create the popup window. Then you could store that region manager in your child container.\r\n\r\nIf you keep experiencing this problem, it could be helpful if you could provide us with a repro sample of this scenario, so that we can help you find the cause of the undesired behavior you're experiencing.\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-04-12T07:33:34.41-07:00",
      "Id": 156430
    },
    {
      "Message": "You can read more about scoped regions in the UI Composition chapter of the Prism MSDN documentation:\r\n\r\nhttp://msdn.microsoft.com/en-us/library/ff921098%28PandP.40%29.aspx\r\n\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-04-12T07:34:44.737-07:00",
      "Id": 156431
    },
    {
      "Message": "Hi Guido,\r\n\r\n         Thank you for your reply. I found out the problem was coming because when I was closing the main form I was using UnityContainer.Teardown() on child container. Which was actually not clearly tearing down the child container thus sometimes keeping the RegionManager with itself.  I am now using childContainer.Dispose() instead. And it seems this has solved the problem. \r\n        Thanks once more for your hint. \r\n\r\nRegards\r\nTiklu",
      "PostedDate": "2011-04-13T00:42:06.197-07:00",
      "Id": 156432
    },
    {
      "Message": "I'm glad to hear that you've solved your issue.\r\n\r\nThanks,\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi ",
      "PostedDate": "2011-04-13T06:51:37.7-07:00",
      "Id": 156433
    }
  ]
}