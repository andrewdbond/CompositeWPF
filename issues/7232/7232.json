{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 1,
    "Custom": "",
    "Description": "Hello to the prism Team.\n \nI would like to ask whether you consider the possibility of creating a region manager implementation using MEF as well as some base classes for Export/Import attributes and metadata. I believe that this would make possible that views could register regions in a strongly typed manner and thus facilitate the extensibility. I have developed a codebase for delivering RIA applications through Silverlight and it is heavily based upon Prism. I could be looking in the wrong direction but it seems that MEF by its own needs heavy glue code to be written, the kind of code that Prism provides.\n \nWhat are your thoughts towards this direction?\n \nBest regards,\n \nConstantinos",
    "LastUpdatedDate": "2013-02-21T18:38:30.7-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "High",
      "Severity": 150,
      "Id": 3
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2010-09-08T10:32:29.457-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "MEF Import/Export Attributes & strongly Typed Regions",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 7,
    "Id": 7232
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "We have had thoughts in this direction as well, but didn't have time to explore this in depth.  However, in the StockTraderRI we demonstrate using a region behavior that loads views into regions based on exported metdata from the views (or view models).  Let us know what you think about the approach and where else you would like to see this go.  This may be something we can formalize and roll into the Prism binaries.",
      "PostedDate": "2010-10-14T15:40:52.023-07:00",
      "Id": 156304
    }
  ]
}