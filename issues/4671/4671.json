{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Hi,\r\n\r\nWe're closing this work item as it seems that it's not an issue in Prism v4.\r\n\r\nIf you need further support about this, you could create a thread in the discussions (http://compositewpf.codeplex.com/discussions).\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
    "ClosedDate": "2011-10-04T06:42:59.687-07:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "When bounding a DelegateCommand<T> to a button in ListBoxItem template with Silverlight 3 ListBox, an exception is thrown on ICommand.CanExecute with the incorrect parameter datatype coming in.\n \nSetup: a ViewModel, having an ObservableCollection<MyItem>, which is bound to the ListBox's ItemsSource.\n \nNow, with ICommand.CanExecute - instead of the parameter being of type MyItem, the owning ViewModel is passed in as the parameter, resulting in the \"Unable to cast object of type ...\"  exception on conversion ((T)parameter).\nDisabling the UI virtualization by setting VirtualizingStackPanel.VirtualizationMode to \"Standard\" (\"SL2 mode\") solves the issue.\nAnother workaround (if virtualization is required) is using a DelegateCommand with generic parameter type of object and safe casting it to MyItem in the command handler.",
    "LastUpdatedDate": "2013-05-16T05:28:56.343-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2009-07-29T03:21:35.237-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DelegateCommand, bound in Silverlight 3 virtualized ListBoxItem template; ICommand.CanExecute calling to early?",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 4671
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\r\n\r\nWe've tried to reproduce the issue you're experiencing, and we've found that as of Prism v4 it seems that this has been fixed.\r\n\r\nYou can find the repro sample we've created here:\r\nhttp://cid-12a8b70137345033.office.live.com/self.aspx/p^0p%20Samples/CommandInVirtualizedItemsSample.zip\r\n\r\nPlease let us know if we've misunderstood your scenario. In that case, it would be helpful if you could provide us with a repro sample demonstrating the issue.\r\n\r\nThank you for your feedback.\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-04-04T11:37:18.283-07:00",
      "Id": 156168
    }
  ]
}