{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 1,
    "Custom": "",
    "Description": "If View is implementing INavigationAware and the dataContext for the view is itself, OnNavigatedTo is getting called twice. I am using RequestNavition api to navigate to the view.\n \nFollowing threads can be referenced where this question is also inquired:\nhttp://compositewpf.codeplex.com/discussions/393632\nhttp://compositewpf.codeplex.com/discussions/280670\nhttp://compositewpf.codeplex.com/discussions/347486\n \nThanks,\nImad.",
    "LastUpdatedDate": "2013-02-21T18:37:58.033-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2012-08-31T06:14:09.87-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "INaviagtionAware issue when DataContext of View is itself",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9615
  },
  "FileAttachments": [
    {
      "FileId": 898010,
      "FileName": "MefCustomRegionNavigationService.cs",
      "DownloadUrl": ".\\898010"
    }
  ],
  "Comments": [
    {
      "Message": "Hi,\r\n\r\nAs mentioned in this thread (http://compositewpf.codeplex.com/discussions/393632), I believe a possible work around for this behavior could be replacing the default RegionNavigationService with a custom implementation that avoids the second call when the DataContext of the View is set to itself. \r\n\r\nAs an example you can find the MefCustomRegionNavigationService class I implemented, attached to this work item. \r\n\r\nI hope you find this useful,\r\n\r\nAgustin Adami\r\nhttp://blogs.southworks.net/aadami",
      "PostedDate": "2012-08-31T10:59:01.163-07:00",
      "Id": 156614
    }
  ]
}