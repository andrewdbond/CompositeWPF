{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We changed the MefModuleManager to compare everything consistently on ModuleName.  Let us know if you encounter any further problems.",
    "ClosedDate": "2010-10-14T15:37:16.157-07:00",
    "CommentCount": 2,
    "Custom": "",
    "Description": "In ModuleNeedsRetrieval it is checking to see if a module exists:\n              // It is important that the Metadata.ModuleType is used here. \n                // Using GetType().Name would cause the Module to be constructed here rather than lazily when the module is needed.\n                Lazy<IModule, IModuleExport> module =\n                    this.ImportedModules.FirstOrDefault(\n                        lazyModule => (lazyModule.Metadata.ModuleType.Name == moduleInfo.ModuleName));\n \nBut it does its check using the type name which assumes that ModuleName == TypeName and this is not always the case.\nIt should instead use Metadata.ModuleName:\n  // It is important that the Metadata.ModuleType is used here. \n                // Using GetType().Name would cause the Module to be constructed here rather than lazily when the module is needed.\n                Lazy<IModule, IModuleExport> module =\n                    this.ImportedModules.FirstOrDefault(\n                        lazyModule => (lazyModule.Metadata.ModuleName == moduleInfo.ModuleName));\n \nThanks",
    "LastUpdatedDate": "2013-05-16T05:28:48.443-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2010-09-22T06:18:44.88-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Bug in MefModuleManager.ModuleNeedsRetrieval",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 7274
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I just found the same problem. My module's name is set explicitly and it is not the name of the type. It is also noted at the end of this thread. \r\n\r\nhttp://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=58512",
      "PostedDate": "2010-09-29T11:40:10.37-07:00",
      "Id": 156317
    },
    {
      "Message": "Thanks, we'll be addressing this in the next drop.",
      "PostedDate": "2010-10-08T14:18:33.677-07:00",
      "Id": 156318
    }
  ]
}