{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Hi,\r\n\r\nI'm closing this issue, as it seems that the problem reported is not present anymore as of Prism v4. For further support about this, you could create a thread in the discussions section (http://compositewpf.codeplex.com/discussions).\r\n\r\nThanks,\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
    "ClosedDate": "2011-11-18T09:51:16.84-08:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "I have a detailed description of the problem here: http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=60108&ANCHOR#Post203484\n \nBasically, inside the Silverlight implementation of DelegateCommand<T>.OnCanExecuteChanged, it throws when testing if Deployment.Current exists.  Instead of moving on without Deployment.Current, the throw happens, which keeps me from validating in my test that the event was fired.\n \nI use NUnit for my tests, and the Silverlight runtime does not get initialized in that environment... it doesn't run in a browser.\n \nMy suggestion is that we wrap the block with an exception and set the dispatcher to null when Deployment.Current is null.  See my link at the top of this request for the full solution.\n \nNote: This is also the case for CompositeCommand.",
    "LastUpdatedDate": "2013-05-16T05:28:57.41-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2009-06-19T18:21:04.54-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DelegateCommand<T>.OnCanExecuteChanged throws exception under test",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 4230
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi Brian,\r\n\r\nAs of Prism v4, the implementation of the Delegate Command has been modified, so the issue you were experiencing might have been fixed. Please let us know if you continue experiencing that.\r\n\r\nYou can check the DelegateCommandBase class for more information about this.\r\n\r\nI hope you find this helpful.\r\n\r\nGuido Leandro Maliandi\r\nhttp://blogs.southworks.net/gmaliandi",
      "PostedDate": "2011-01-13T09:32:03.513-08:00",
      "Id": 156148
    }
  ]
}