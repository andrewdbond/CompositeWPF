{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "InvokeCommandAction uses GetDeclaredProperty to get the desired member of the EventArgs when the TriggerParameterPath property is set. The problem with this is that GetDeclaredProperty doesn't check parent types for the property. \r\n\r\nThis is a problem, for example, with the DatePicker class. If you want to handle the SelectedDateChanged event and pass the AddedItems property to the bound command, you can't because the type of the event args for SelectedDateChanged is \"CalendarSelectionChangedEventArgs\" which doesn't declare a property name of AddedItems. If GetProperty was used instead, it would find the AddedItems property in the parent type, SelectionChangedEventArgs, and all would be well",
    "LastUpdatedDate": "2014-10-28T06:49:42.73-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "CompositeWPF",
    "ReportedDate": "2014-10-28T06:49:42.73-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "InvokeCommandAction doesn't find property in parent type",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 10716
  },
  "FileAttachments": [],
  "Comments": []
}